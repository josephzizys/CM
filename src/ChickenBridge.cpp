/* Generated from ChickenBridge.scm by the CHICKEN compiler
   http://www.call-with-current-continuation.org
   2009-01-04 11:30
   Version 3.0.0 - macosx-unix-gnu-x86	[ manyargs dload ptables applyhook ]
   (c)2000-2008 Felix L. Winkelmann	compiled 2008-04-21 on dhcp218a.music.uiuc.edu (Darwin)
   command line: ChickenBridge.scm -output-file ChickenBridge.cpp -quiet
   unit: cm
*/

#include "chicken.h"


#include "juce.h"
#include "CmSupport.h"


static C_PTABLE_ENTRY *create_ptable(void);
C_noret_decl(C_library_toplevel)
C_externimport void C_ccall C_library_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_eval_toplevel)
C_externimport void C_ccall C_eval_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;

static C_TLS C_word lf[1037];
static double C_possibly_force_alignment;
static C_char C_TLS li0[] C_aligned={C_lihdr(0,0,15),40,108,111,103,116,101,115,116,32,97,48,32,98,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li1[] C_aligned={C_lihdr(0,0,26),40,108,105,115,116,45,115,101,116,33,32,108,105,115,50,32,112,111,115,51,32,118,97,108,52,41,0,0};
static C_char C_TLS li2[] C_aligned={C_lihdr(0,0,23),40,109,97,107,101,45,101,113,117,97,108,45,104,97,115,104,45,116,97,98,108,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li3[] C_aligned={C_lihdr(0,0,20),40,109,97,107,101,45,101,113,45,104,97,115,104,45,116,97,98,108,101,41,0,0,0,0};
static C_char C_TLS li4[] C_aligned={C_lihdr(0,0,20),40,104,97,115,104,45,114,101,102,32,116,97,98,54,32,118,97,108,55,41,0,0,0,0};
static C_char C_TLS li5[] C_aligned={C_lihdr(0,0,23),40,114,101,97,100,45,102,114,111,109,45,115,116,114,105,110,103,32,115,116,114,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li6[] C_aligned={C_lihdr(0,0,30),40,102,102,105,95,112,114,105,110,116,95,111,117,116,112,117,116,32,97,51,51,51,55,32,97,51,50,51,56,41,0,0,0,0,0,0};
static C_char C_TLS li7[] C_aligned={C_lihdr(0,0,49),40,102,102,105,95,114,101,115,99,97,108,101,32,97,54,51,54,54,32,97,54,50,54,55,32,97,54,49,54,56,32,97,54,48,54,57,32,97,53,57,55,48,32,97,53,56,55,49,41,0};
static C_char C_TLS li8[] C_aligned={C_lihdr(0,0,27),40,102,102,105,95,102,108,111,97,116,95,116,111,95,102,105,120,110,117,109,32,97,56,55,57,48,41,0,0,0};
static C_char C_TLS li9[] C_aligned={C_lihdr(0,0,26),40,102,102,105,95,113,117,97,110,116,105,122,101,32,97,57,50,57,53,32,97,57,49,57,54,41,0,0};
static C_char C_TLS li10[] C_aligned={C_lihdr(0,0,45),40,102,102,105,95,114,104,121,116,104,109,95,116,111,95,115,101,99,111,110,100,115,32,97,49,48,48,49,48,51,32,97,57,57,49,48,52,32,97,57,56,49,48,53,41,0,0,0,0,0};
static C_char C_TLS li11[] C_aligned={C_lihdr(0,0,29),40,102,102,105,95,99,101,110,116,115,95,116,111,95,115,99,97,108,101,114,32,97,49,48,55,49,49,48,41,0,0,0,0,0};
static C_char C_TLS li12[] C_aligned={C_lihdr(0,0,29),40,102,102,105,95,115,99,97,108,101,114,95,116,111,95,99,101,110,116,115,32,97,49,49,50,49,49,53,41,0,0,0,0,0};
static C_char C_TLS li13[] C_aligned={C_lihdr(0,0,45),40,102,102,105,95,101,120,112,108,115,101,103,32,97,49,49,57,49,50,50,32,97,49,49,56,49,50,51,32,97,49,49,55,49,50,52,32,97,49,49,54,49,50,53,41,0,0,0,0,0};
static C_char C_TLS li14[] C_aligned={C_lihdr(0,0,44),40,102,102,105,95,103,101,111,115,101,103,32,97,49,51,48,49,51,51,32,97,49,50,57,49,51,52,32,97,49,50,56,49,51,53,32,97,49,50,55,49,51,54,41,0,0,0,0};
static C_char C_TLS li15[] C_aligned={C_lihdr(0,0,29),40,102,102,105,95,107,101,121,110,117,109,95,116,111,95,104,101,114,116,122,32,97,49,51,56,49,52,49,41,0,0,0,0,0};
static C_char C_TLS li16[] C_aligned={C_lihdr(0,0,21),40,102,102,105,95,114,97,110,115,101,101,100,32,97,49,53,50,49,53,53,41,0,0,0,0,0};
static C_char C_TLS li17[] C_aligned={C_lihdr(0,0,20),40,102,102,105,95,114,97,110,105,110,116,32,97,49,53,54,49,53,57,41,0,0,0,0};
static C_char C_TLS li18[] C_aligned={C_lihdr(0,0,22),40,102,102,105,95,114,97,110,102,108,111,97,116,32,97,49,54,48,49,54,51,41,0,0,0,0,0,0};
static C_char C_TLS li19[] C_aligned={C_lihdr(0,0,12),40,102,102,105,95,114,97,110,108,111,119,41,0,0,0,0};
static C_char C_TLS li20[] C_aligned={C_lihdr(0,0,13),40,102,102,105,95,114,97,110,104,105,103,104,41,0,0,0,0,0};
static C_char C_TLS li21[] C_aligned={C_lihdr(0,0,15),40,102,102,105,95,114,97,110,109,105,100,100,108,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li22[] C_aligned={C_lihdr(0,0,30),40,102,102,105,95,114,97,110,103,97,117,115,115,32,97,49,56,56,49,57,49,32,97,49,56,55,49,57,50,41,0,0,0,0,0,0};
static C_char C_TLS li23[] C_aligned={C_lihdr(0,0,20),40,102,102,105,95,114,97,110,101,120,112,32,97,49,57,52,49,57,55,41,0,0,0,0};
static C_char C_TLS li24[] C_aligned={C_lihdr(0,0,22),40,102,102,105,95,114,97,110,103,97,109,109,97,32,97,50,48,54,50,48,57,41,0,0,0,0,0,0};
static C_char C_TLS li25[] C_aligned={C_lihdr(0,0,15),40,102,102,105,95,114,97,110,99,97,117,99,104,121,41,0,0,0,0,0,0,0};
static C_char C_TLS li26[] C_aligned={C_lihdr(0,0,24),40,102,102,105,95,114,97,110,112,111,105,115,115,111,110,32,97,50,49,52,50,49,55,41};
static C_char C_TLS li27[] C_aligned={C_lihdr(0,0,13),40,102,102,105,95,114,97,110,112,105,110,107,41,0,0,0,0,0};
static C_char C_TLS li28[] C_aligned={C_lihdr(0,0,14),40,102,102,105,95,114,97,110,98,114,111,119,110,41,0,0,0,0,0,0};
static C_char C_TLS li29[] C_aligned={C_lihdr(0,0,42),40,102,102,105,95,115,99,104,101,100,95,115,112,114,111,117,116,32,97,50,52,54,50,52,57,32,97,50,52,53,50,53,48,32,97,50,52,52,50,53,49,41,0,0};
static C_char C_TLS li30[] C_aligned={C_lihdr(0,0,24),40,102,102,105,95,115,99,104,101,100,95,115,116,111,112,32,97,50,53,56,50,54,49,41};
static C_char C_TLS li31[] C_aligned={C_lihdr(0,0,27),40,102,102,105,95,112,97,116,104,110,97,109,101,95,116,121,112,101,32,97,51,48,54,51,49,48,41,0,0,0};
static C_char C_TLS li32[] C_aligned={C_lihdr(0,0,58),40,102,102,105,95,109,112,95,115,101,110,100,95,100,97,116,97,32,97,51,55,57,51,56,50,32,97,51,55,56,51,56,51,32,97,51,55,55,51,56,52,32,97,51,55,54,51,56,53,32,97,51,55,53,51,56,54,41,0,0};
static C_char C_TLS li33[] C_aligned={C_lihdr(0,0,6),40,113,117,105,116,41,0,0,0,0,0,0};
static C_char C_TLS li34[] C_aligned={C_lihdr(0,0,20),40,112,114,105,110,116,45,101,114,114,111,114,32,109,115,103,53,49,49,41,0,0,0,0};
static C_char C_TLS li35[] C_aligned={C_lihdr(0,0,30),40,112,114,105,110,116,45,111,117,116,112,117,116,32,109,115,103,53,49,50,32,46,32,113,117,111,53,49,51,41,0,0,0,0,0,0};
static C_char C_TLS li36[] C_aligned={C_lihdr(0,0,14),40,115,104,101,108,108,32,115,116,114,53,49,55,41,0,0,0,0,0,0};
static C_char C_TLS li37[] C_aligned={C_lihdr(0,0,12),40,102,105,102,116,104,32,108,53,49,56,41,0,0,0,0};
static C_char C_TLS li38[] C_aligned={C_lihdr(0,0,12),40,115,105,120,116,104,32,108,53,49,57,41,0,0,0,0};
static C_char C_TLS li39[] C_aligned={C_lihdr(0,0,14),40,115,101,118,101,110,116,104,32,108,53,50,48,41,0,0,0,0,0,0};
static C_char C_TLS li40[] C_aligned={C_lihdr(0,0,13),40,101,105,103,104,116,104,32,108,53,50,49,41,0,0,0,0,0};
static C_char C_TLS li41[] C_aligned={C_lihdr(0,0,12),40,110,105,110,116,104,32,108,53,50,50,41,0,0,0,0};
static C_char C_TLS li42[] C_aligned={C_lihdr(0,0,12),40,116,101,110,116,104,32,108,53,50,51,41,0,0,0,0};
static C_char C_TLS li43[] C_aligned={C_lihdr(0,0,11),40,114,101,115,116,32,108,53,50,52,41,0,0,0};
static C_char C_TLS li44[] C_aligned={C_lihdr(0,0,11),40,108,97,115,116,32,108,53,50,53,41,0,0,0};
static C_char C_TLS li45[] C_aligned={C_lihdr(0,0,14),40,98,117,116,108,97,115,116,32,108,53,50,54,41,0,0,0,0,0,0};
static C_char C_TLS li46[] C_aligned={C_lihdr(0,0,11),40,116,97,105,108,32,108,53,50,55,41,0,0,0};
static C_char C_TLS li47[] C_aligned={C_lihdr(0,0,12),40,100,111,53,52,53,32,116,53,52,55,41,0,0,0,0};
static C_char C_TLS li48[] C_aligned={C_lihdr(0,0,12),40,100,111,53,52,48,32,97,53,52,50,41,0,0,0,0};
static C_char C_TLS li49[] C_aligned={C_lihdr(0,0,18),40,99,111,110,99,97,116,32,46,32,97,114,103,115,53,51,55,41,0,0};
static C_char C_TLS li50[] C_aligned={C_lihdr(0,0,14),40,108,49,32,97,53,55,48,32,98,53,55,49,41,0,0,0,0,0,0};
static C_char C_TLS li51[] C_aligned={C_lihdr(0,0,14),40,108,50,32,97,53,55,50,32,98,53,55,51,41,0,0,0,0,0,0};
static C_char C_TLS li52[] C_aligned={C_lihdr(0,0,25),40,109,97,107,101,45,108,105,115,116,32,110,53,54,54,32,46,32,111,98,106,53,54,55,41,0};
static C_char C_TLS li53[] C_aligned={C_lihdr(0,0,25),40,100,111,53,55,57,32,116,97,105,108,53,56,49,32,105,53,56,50,32,102,53,56,51,41,0};
static C_char C_TLS li54[] C_aligned={C_lihdr(0,0,22),40,108,105,115,116,45,105,110,100,101,120,32,112,53,55,55,32,108,53,55,56,41,0,0,0,0,0,0};
static C_char C_TLS li55[] C_aligned={C_lihdr(0,0,35),40,108,105,115,116,45,112,114,111,112,32,108,105,115,54,48,57,32,112,114,111,112,54,49,48,32,46,32,100,101,102,54,49,49,41,0,0,0};
static C_char C_TLS li56[] C_aligned={C_lihdr(0,0,32),40,100,111,54,50,53,32,105,54,50,55,32,108,54,50,56,32,101,54,50,57,32,102,54,51,48,32,114,54,51,49,41};
static C_char C_TLS li57[] C_aligned={C_lihdr(0,0,53),40,37,109,97,112,115,101,113,32,102,117,110,99,54,49,53,32,115,101,113,54,49,54,32,101,108,101,109,101,110,116,115,63,54,49,55,32,115,116,97,114,116,54,49,56,32,101,110,100,54,49,57,41,0,0,0,0,0};
static C_char C_TLS li58[] C_aligned={C_lihdr(0,0,13),40,102,95,56,52,54,49,32,97,54,52,52,41,0,0,0,0,0};
static C_char C_TLS li59[] C_aligned={C_lihdr(0,0,13),40,102,95,56,52,55,48,32,97,54,52,53,41,0,0,0,0,0};
static C_char C_TLS li60[] C_aligned={C_lihdr(0,0,28),40,102,105,110,100,32,120,54,52,49,32,115,101,113,54,52,50,32,46,32,97,114,103,115,54,52,51,41,0,0,0,0};
static C_char C_TLS li61[] C_aligned={C_lihdr(0,0,13),40,102,95,56,53,48,53,32,97,54,52,57,41,0,0,0,0,0};
static C_char C_TLS li62[] C_aligned={C_lihdr(0,0,13),40,102,95,56,53,49,52,32,97,54,53,48,41,0,0,0,0,0};
static C_char C_TLS li63[] C_aligned={C_lihdr(0,0,32),40,112,111,115,105,116,105,111,110,32,120,54,52,54,32,115,101,113,54,52,55,32,46,32,97,114,103,115,54,52,56,41};
static C_char C_TLS li64[] C_aligned={C_lihdr(0,0,30),40,108,111,111,112,45,111,112,101,114,97,116,111,114,45,115,101,116,33,32,99,54,56,52,32,120,54,56,53,41,0,0,0,0,0,0};
static C_char C_TLS li65[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,98,105,110,100,105,110,103,115,32,99,54,56,54,41,0,0,0,0};
static C_char C_TLS li66[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,99,111,108,108,101,99,116,111,114,115,32,99,54,56,57,41,0,0,0,0,0,0};
static C_char C_TLS li67[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,105,110,105,116,105,97,108,108,121,32,99,54,57,50,41,0,0,0,0,0};
static C_char C_TLS li68[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,101,110,100,45,116,101,115,116,115,32,99,54,57,53,41,0,0,0,0,0};
static C_char C_TLS li69[] C_aligned={C_lihdr(0,0,19),40,108,111,111,112,45,108,111,111,112,105,110,103,32,99,54,57,56,41,0,0,0};
static C_char C_TLS li70[] C_aligned={C_lihdr(0,0,29),40,108,111,111,112,45,108,111,111,112,105,110,103,45,115,101,116,33,32,99,54,57,57,32,120,55,48,48,41,0,0,0,0,0};
static C_char C_TLS li71[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,115,116,101,112,112,105,110,103,32,99,55,48,49,41,0,0,0,0};
static C_char C_TLS li72[] C_aligned={C_lihdr(0,0,19),40,108,111,111,112,45,102,105,110,97,108,108,121,32,99,55,48,52,41,0,0,0};
static C_char C_TLS li73[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,114,101,116,117,114,110,105,110,103,32,99,55,48,55,41,0,0,0,0,0};
static C_char C_TLS li74[] C_aligned={C_lihdr(0,0,12),40,100,111,55,49,50,32,97,55,49,52,41,0,0,0,0};
static C_char C_TLS li75[] C_aligned={C_lihdr(0,0,26),40,109,97,107,101,45,108,111,111,112,45,99,108,97,117,115,101,32,97,114,103,115,55,49,48,41,0,0};
static C_char C_TLS li76[] C_aligned={C_lihdr(0,0,12),40,100,111,55,50,52,32,108,55,50,54,41,0,0,0,0};
static C_char C_TLS li77[] C_aligned={C_lihdr(0,0,38),40,103,97,116,104,101,114,45,99,108,97,117,115,101,32,99,108,97,117,115,101,115,55,50,50,32,97,99,99,101,115,115,111,114,55,50,51,41,0,0,0,0,0,0};
static C_char C_TLS li78[] C_aligned={C_lihdr(0,0,37),40,103,97,116,104,101,114,45,99,108,97,117,115,101,115,32,99,97,108,108,101,114,55,49,57,32,99,108,97,117,115,101,115,55,50,48,41,0,0,0,0,0};
static C_char C_TLS li79[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,111,112,63,32,120,55,51,48,32,111,112,115,55,51,49,41,0,0,0,0,0,0};
static C_char C_TLS li80[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,118,97,114,105,97,98,108,101,63,32,120,55,51,50,41,0,0,0,0,0};
static C_char C_TLS li81[] C_aligned={C_lihdr(0,0,28),40,109,97,107,101,45,98,105,110,100,105,110,103,32,118,97,114,55,51,51,32,118,97,108,55,51,52,41,0,0,0,0};
static C_char C_TLS li82[] C_aligned={C_lihdr(0,0,15),40,100,111,55,53,54,32,116,97,105,108,55,53,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li83[] C_aligned={C_lihdr(0,0,15),40,100,111,55,53,49,32,116,97,105,108,55,53,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li84[] C_aligned={C_lihdr(0,0,17),40,100,111,55,52,49,32,104,55,52,51,32,108,55,52,52,41,0};
static C_char C_TLS li85[] C_aligned={C_lihdr(0,0,36),40,108,111,111,112,45,101,114,114,111,114,32,111,112,115,55,51,53,32,102,111,114,109,115,55,51,54,32,97,114,103,115,55,51,55,41,0,0,0,0};
static C_char C_TLS li86[] C_aligned={C_lihdr(0,0,38),40,112,97,114,115,101,45,102,111,114,32,102,111,114,109,115,55,55,48,32,99,108,97,117,115,101,115,55,55,49,32,111,112,115,55,55,50,41,0,0,0,0,0,0};
static C_char C_TLS li87[] C_aligned={C_lihdr(0,0,15),40,100,111,55,57,48,32,110,101,120,116,55,57,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li88[] C_aligned={C_lihdr(0,0,48),40,112,97,114,115,101,45,110,117,109,101,114,105,99,97,108,45,102,111,114,32,102,111,114,109,115,55,55,54,32,99,108,97,117,115,101,115,55,55,55,32,111,112,115,55,55,56,41};
static C_char C_TLS li89[] C_aligned={C_lihdr(0,0,7),40,97,57,53,49,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li90[] C_aligned={C_lihdr(0,0,27),40,97,57,53,51,54,32,99,108,97,117,115,101,56,55,49,32,105,103,110,111,114,101,56,55,50,41,0,0,0};
static C_char C_TLS li91[] C_aligned={C_lihdr(0,0,41),40,112,97,114,115,101,45,114,101,112,101,97,116,32,102,111,114,109,115,56,54,56,32,99,108,97,117,115,101,115,56,54,57,32,111,112,115,56,55,48,41,0};
static C_char C_TLS li92[] C_aligned={C_lihdr(0,0,15),40,100,111,56,56,57,32,110,101,120,116,56,57,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li93[] C_aligned={C_lihdr(0,0,53),40,112,97,114,115,101,45,115,101,113,117,101,110,99,101,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,56,55,52,32,99,108,97,117,115,101,115,56,55,53,32,111,112,115,56,55,54,41,0,0,0,0,0};
static C_char C_TLS li94[] C_aligned={C_lihdr(0,0,15),40,100,111,57,53,54,32,110,101,120,116,57,53,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li95[] C_aligned={C_lihdr(0,0,52),40,112,97,114,115,101,45,103,101,110,101,114,97,108,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,57,52,54,32,99,108,97,117,115,101,115,57,52,55,32,111,112,115,57,52,56,41,0,0,0,0};
static C_char C_TLS li96[] C_aligned={C_lihdr(0,0,23),40,100,111,57,57,52,32,110,101,101,100,57,57,54,32,110,101,120,116,57,57,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li97[] C_aligned={C_lihdr(0,0,39),40,112,97,114,115,101,45,119,105,116,104,32,102,111,114,109,115,57,56,52,32,99,108,97,117,115,101,115,57,56,53,32,111,112,115,57,56,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li98[] C_aligned={C_lihdr(0,0,8),40,100,111,49,48,51,56,41};
static C_char C_TLS li99[] C_aligned={C_lihdr(0,0,40),40,112,97,114,115,101,45,100,111,32,102,111,114,109,115,49,48,50,57,32,99,108,97,117,115,101,115,49,48,51,48,32,111,112,115,49,48,51,49,41};
static C_char C_TLS li100[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,102,105,110,97,108,108,121,32,102,111,114,109,115,49,48,52,56,32,99,108,97,117,115,101,115,49,48,52,57,32,111,112,115,49,48,53,48,41,0,0,0,0,0};
static C_char C_TLS li101[] C_aligned={C_lihdr(0,0,47),40,112,97,114,115,101,45,105,110,105,116,105,97,108,108,121,32,102,111,114,109,115,49,48,54,50,32,99,108,97,117,115,101,115,49,48,54,51,32,111,112,115,49,48,54,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li102[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,99,111,108,108,101,99,116,111,114,32,118,97,114,49,49,50,57,32,116,121,112,101,49,49,51,48,32,97,99,99,49,49,51,49,32,104,101,97,100,49,49,51,50,41,0,0};
static C_char C_TLS li103[] C_aligned={C_lihdr(0,0,24),40,99,111,108,108,101,99,116,111,114,45,116,121,112,101,32,99,111,108,49,49,51,51,41};
static C_char C_TLS li104[] C_aligned={C_lihdr(0,0,23),40,99,111,108,108,101,99,116,111,114,45,97,99,99,32,99,111,108,49,49,51,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li105[] C_aligned={C_lihdr(0,0,14),40,100,111,49,48,56,49,32,97,49,48,56,51,41,0,0,0,0,0,0};
static C_char C_TLS li106[] C_aligned={C_lihdr(0,0,14),40,100,111,49,48,56,57,32,99,49,48,57,49,41,0,0,0,0,0,0};
static C_char C_TLS li107[] C_aligned={C_lihdr(0,0,50),40,112,97,114,115,101,45,97,99,99,117,109,117,108,97,116,105,111,110,32,102,111,114,109,115,49,49,48,56,32,99,108,97,117,115,101,115,49,49,48,57,32,111,112,115,49,49,49,48,41,0,0};
static C_char C_TLS li108[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,32,101,120,112,114,49,50,48,57,41,0,0,0,0,0,0};
static C_char C_TLS li109[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,49,50,49,48,32,99,108,97,117,115,101,115,49,50,49,49,32,111,112,115,49,50,49,50,41,0};
static C_char C_TLS li110[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,116,104,101,114,101,105,115,32,102,111,114,109,115,49,50,51,49,32,99,108,97,117,115,101,115,49,50,51,50,32,111,112,115,49,50,51,51,41,0,0,0,0,0};
static C_char C_TLS li111[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,116,117,114,110,32,102,111,114,109,115,49,50,52,55,32,99,108,97,117,115,101,115,49,50,52,56,32,111,112,115,49,50,52,57,41,0,0,0,0};
static C_char C_TLS li112[] C_aligned={C_lihdr(0,0,8),40,97,49,49,52,48,57,41};
static C_char C_TLS li113[] C_aligned={C_lihdr(0,0,20),40,97,49,49,52,50,50,32,97,49,50,55,52,32,98,49,50,55,53,41,0,0,0,0};
static C_char C_TLS li114[] C_aligned={C_lihdr(0,0,38),40,100,111,49,50,54,55,32,111,112,49,50,54,57,32,99,108,97,117,115,101,49,50,55,48,32,114,101,109,97,105,110,115,49,50,55,49,41,0,0,0,0,0,0};
static C_char C_TLS li115[] C_aligned={C_lihdr(0,0,58),40,112,97,114,115,101,45,116,104,101,110,45,101,108,115,101,45,100,101,112,101,110,100,101,110,116,115,32,102,111,114,109,115,49,50,54,49,32,99,108,97,117,115,101,115,49,50,54,50,32,111,112,115,49,50,54,51,41,0,0};
static C_char C_TLS li116[] C_aligned={C_lihdr(0,0,8),40,97,49,49,53,55,51,41};
static C_char C_TLS li117[] C_aligned={C_lihdr(0,0,20),40,97,49,49,53,56,55,32,97,49,51,48,51,32,98,49,51,48,52,41,0,0,0,0};
static C_char C_TLS li118[] C_aligned={C_lihdr(0,0,8),40,97,49,49,54,53,49,41};
static C_char C_TLS li119[] C_aligned={C_lihdr(0,0,20),40,97,49,49,54,53,55,32,97,49,51,48,48,32,98,49,51,48,49,41,0,0,0,0};
static C_char C_TLS li120[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,99,111,110,100,105,116,105,111,110,97,108,32,102,111,114,109,115,49,50,56,55,32,99,108,97,117,115,101,115,49,50,56,56,32,111,112,115,49,50,56,57,41,0};
static C_char C_TLS li121[] C_aligned={C_lihdr(0,0,75),40,109,97,107,101,45,112,101,114,105,111,100,32,99,111,117,110,116,49,52,50,48,32,108,101,110,103,116,104,49,52,50,49,32,115,116,114,101,97,109,49,52,50,50,32,100,101,102,97,117,108,116,49,52,50,51,32,111,109,105,116,49,52,50,52,32,114,101,112,115,49,52,50,53,41,0,0,0};
static C_char C_TLS li122[] C_aligned={C_lihdr(0,0,33),40,112,101,114,105,111,100,45,99,111,117,110,116,45,115,101,116,33,32,120,49,52,50,55,32,118,97,108,49,52,50,56,41,0};
static C_char C_TLS li123[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,99,111,117,110,116,32,120,49,52,51,48,41,0,0,0,0};
static C_char C_TLS li124[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,108,101,110,103,116,104,32,120,49,52,51,54,41,0,0,0,0,0};
static C_char C_TLS li125[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,115,116,114,101,97,109,32,120,49,52,52,50,41,0,0,0,0,0};
static C_char C_TLS li126[] C_aligned={C_lihdr(0,0,32),40,112,101,114,105,111,100,45,111,109,105,116,45,115,101,116,33,32,120,49,52,53,49,32,118,97,108,49,52,53,50,41};
static C_char C_TLS li127[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,111,109,105,116,32,120,49,52,53,52,41,0,0,0};
static C_char C_TLS li128[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,114,101,112,115,32,120,49,52,54,48,41,0,0,0};
static C_char C_TLS li129[] C_aligned={C_lihdr(0,0,16),40,112,97,116,116,101,114,110,63,32,120,49,52,56,53,41};
static C_char C_TLS li130[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,102,108,97,103,115,32,120,49,52,56,57,41,0,0,0,0,0};
static C_char C_TLS li131[] C_aligned={C_lihdr(0,0,33),40,112,97,116,116,101,114,110,45,100,97,116,97,45,115,101,116,33,32,120,49,52,57,50,32,118,97,108,49,52,57,51,41,0};
static C_char C_TLS li132[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,100,97,116,97,32,120,49,52,57,53,41,0,0,0,0};
static C_char C_TLS li133[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,108,101,110,103,116,104,32,120,49,53,48,49,41,0,0,0,0,0,0};
static C_char C_TLS li134[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,100,97,116,117,109,45,115,101,116,33,32,120,49,53,48,52,32,118,97,108,49,53,48,53,41,0,0};
static C_char C_TLS li135[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,100,97,116,117,109,32,120,49,53,48,55,41,0,0,0,0,0};
static C_char C_TLS li136[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,112,101,114,105,111,100,32,120,49,53,49,51,41,0,0,0,0,0,0};
static C_char C_TLS li137[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,118,97,108,117,101,45,115,101,116,33,32,120,49,53,49,54,32,118,97,108,49,53,49,55,41,0,0};
static C_char C_TLS li138[] C_aligned={C_lihdr(0,0,15),40,102,95,49,50,52,53,50,32,120,49,53,49,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li139[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,115,116,97,116,101,45,115,101,116,33,32,120,49,53,50,50,32,118,97,108,49,53,50,51,41,0,0};
static C_char C_TLS li140[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,115,116,97,116,101,32,120,49,53,50,53,41,0,0,0,0,0};
static C_char C_TLS li141[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,99,97,99,104,101,45,115,101,116,33,32,120,49,53,54,52,32,118,97,108,49,53,54,53,41,0,0};
static C_char C_TLS li142[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,99,97,99,104,101,32,120,49,53,54,55,41,0,0,0,0,0};
static C_char C_TLS li143[] C_aligned={C_lihdr(0,0,16),40,37,97,108,108,111,99,45,112,97,116,116,101,114,110,41};
static C_char C_TLS li144[] C_aligned={C_lihdr(0,0,14),40,97,49,50,56,51,52,32,120,49,53,57,54,41,0,0,0,0,0,0};
static C_char C_TLS li145[] C_aligned={C_lihdr(0,0,98),40,105,110,105,116,105,97,108,105,122,101,45,112,97,116,116,101,114,110,32,111,98,106,49,53,56,54,32,100,97,116,97,49,53,56,55,32,102,111,114,49,53,56,56,32,114,101,112,49,53,56,57,32,102,108,97,103,115,49,53,57,48,32,108,101,110,49,53,57,49,32,100,112,101,114,49,53,57,50,32,103,101,116,114,49,53,57,51,32,109,97,112,114,49,53,57,52,41,0,0};
static C_char C_TLS li146[] C_aligned={C_lihdr(0,0,12),40,101,111,112,63,32,120,49,54,50,49,41,0,0,0,0};
static C_char C_TLS li147[] C_aligned={C_lihdr(0,0,12),40,101,111,100,63,32,120,49,54,50,50,41,0,0,0,0};
static C_char C_TLS li148[] C_aligned={C_lihdr(0,0,20),40,100,111,49,54,50,55,32,105,49,54,50,57,32,101,49,54,51,48,41,0,0,0,0};
static C_char C_TLS li149[] C_aligned={C_lihdr(0,0,26),40,100,111,49,54,51,52,32,110,49,54,51,54,32,101,49,54,51,55,32,102,49,54,51,56,41,0,0};
static C_char C_TLS li150[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,32,111,98,106,49,54,50,51,32,46,32,97,114,103,115,49,54,50,52,41,0};
static C_char C_TLS li151[] C_aligned={C_lihdr(0,0,8),40,100,111,49,54,54,50,41};
static C_char C_TLS li152[] C_aligned={C_lihdr(0,0,26),40,100,111,49,54,53,56,32,100,121,110,63,49,54,54,48,32,115,116,111,112,49,54,54,49,41,0,0};
static C_char C_TLS li153[] C_aligned={C_lihdr(0,0,16),40,110,101,120,116,45,49,32,111,98,106,49,54,52,52,41};
static C_char C_TLS li154[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,45,105,110,45,112,97,116,116,101,114,110,32,111,98,106,49,54,56,50,41,0};
static C_char C_TLS li155[] C_aligned={C_lihdr(0,0,33),40,109,97,112,45,112,97,116,116,101,114,110,45,100,97,116,97,32,102,110,49,54,56,51,32,111,98,106,49,54,56,52,41,0};
static C_char C_TLS li156[] C_aligned={C_lihdr(0,0,14),40,97,49,51,52,48,49,32,120,49,54,57,51,41,0,0,0,0,0,0};
static C_char C_TLS li157[] C_aligned={C_lihdr(0,0,22),40,114,101,115,101,116,45,112,101,114,105,111,100,32,111,98,106,49,54,56,56,41,0,0,0,0,0,0};
static C_char C_TLS li158[] C_aligned={C_lihdr(0,0,23),40,97,49,51,52,57,53,32,102,110,49,55,52,53,32,111,98,106,49,55,52,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li159[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,99,121,99,108,101,32,100,97,116,97,49,55,48,50,32,46,32,97,114,103,115,49,55,48,51,41};
static C_char C_TLS li160[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,99,121,99,108,101,32,111,98,106,49,55,53,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li161[] C_aligned={C_lihdr(0,0,17),40,112,97,108,105,110,45,108,101,110,32,120,49,55,55,50,41,0};
static C_char C_TLS li162[] C_aligned={C_lihdr(0,0,30),40,112,97,108,105,110,45,105,110,99,45,115,101,116,33,32,120,49,55,55,53,32,118,97,108,49,55,55,54,41,0,0,0,0,0,0};
static C_char C_TLS li163[] C_aligned={C_lihdr(0,0,23),40,97,49,51,57,50,53,32,102,110,49,56,55,51,32,111,98,106,49,56,55,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li164[] C_aligned={C_lihdr(0,0,37),40,109,97,107,101,45,112,97,108,105,110,100,114,111,109,101,32,100,97,116,97,49,56,48,49,32,46,32,97,114,103,115,49,56,48,50,41,0,0,0,0,0};
static C_char C_TLS li165[] C_aligned={C_lihdr(0,0,28),40,110,101,120,116,45,105,110,45,112,97,108,105,110,100,114,111,109,101,32,111,98,106,49,56,56,50,41,0,0,0,0};
static C_char C_TLS li166[] C_aligned={C_lihdr(0,0,23),40,97,49,52,53,57,50,32,102,110,49,57,52,52,32,111,98,106,49,57,52,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li167[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,108,105,110,101,32,100,97,116,97,49,57,48,49,32,46,32,97,114,103,115,49,57,48,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li168[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,108,105,110,101,32,111,98,106,49,57,53,49,41,0,0,0,0,0,0};
static C_char C_TLS li169[] C_aligned={C_lihdr(0,0,23),40,97,49,52,56,55,57,32,102,110,49,57,57,57,32,111,98,106,50,48,48,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li170[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,104,101,97,112,32,100,97,116,97,49,57,53,54,32,46,32,97,114,103,115,49,57,53,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li171[] C_aligned={C_lihdr(0,0,26),40,100,111,50,48,49,48,32,105,50,48,49,50,32,106,50,48,49,51,32,118,50,48,49,52,41,0,0};
static C_char C_TLS li172[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,104,101,97,112,32,111,98,106,50,48,48,54,41,0,0,0,0,0,0};
static C_char C_TLS li173[] C_aligned={C_lihdr(0,0,23),40,97,49,53,50,50,52,32,102,110,50,48,57,52,32,111,98,106,50,48,57,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li174[] C_aligned={C_lihdr(0,0,35),40,109,97,107,101,45,114,111,116,97,116,105,111,110,32,100,97,116,97,50,48,50,50,32,46,32,97,114,103,115,50,48,50,51,41,0,0,0};
static C_char C_TLS li175[] C_aligned={C_lihdr(0,0,14),40,100,111,50,49,49,48,32,105,50,49,49,50,41,0,0,0,0,0,0};
static C_char C_TLS li176[] C_aligned={C_lihdr(0,0,61),40,114,111,116,97,116,101,45,105,116,101,109,115,32,105,116,101,109,115,50,49,48,53,32,115,116,97,114,116,50,49,48,54,32,115,116,101,112,50,49,48,55,32,119,105,100,116,104,50,49,48,56,32,101,110,100,50,49,48,57,41,0,0,0,0,0};
static C_char C_TLS li177[] C_aligned={C_lihdr(0,0,26),40,110,101,120,116,45,105,110,45,114,111,116,97,116,105,111,110,32,111,98,106,50,49,48,51,41,0,0};
static C_char C_TLS li178[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,100,97,116,117,109,32,120,50,49,51,55,41,0};
static C_char C_TLS li179[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,45,115,101,116,33,32,120,50,49,52,48,32,118,97,108,50,49,52,49,41,0,0,0,0,0,0};
static C_char C_TLS li180[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,32,120,50,49,52,51,41,0};
static C_char C_TLS li181[] C_aligned={C_lihdr(0,0,26),40,114,97,110,100,111,109,45,105,116,101,109,45,119,101,105,103,104,116,32,120,50,49,52,57,41,0,0};
static C_char C_TLS li182[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,105,110,32,120,50,49,53,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li183[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,97,120,32,120,50,49,54,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li184[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,45,115,101,116,33,32,120,50,49,54,52,32,118,97,108,50,49,54,53,41,0,0,0,0,0,0};
static C_char C_TLS li185[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,32,120,50,49,54,55,41,0};
static C_char C_TLS li186[] C_aligned={C_lihdr(0,0,14),40,97,49,54,49,48,57,32,105,50,50,52,57,41,0,0,0,0,0,0};
static C_char C_TLS li187[] C_aligned={C_lihdr(0,0,23),40,97,49,54,49,48,51,32,102,110,50,50,52,55,32,111,98,106,50,50,52,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li188[] C_aligned={C_lihdr(0,0,17),40,97,49,54,51,52,48,32,105,116,101,109,50,50,48,50,41,0};
static C_char C_TLS li189[] C_aligned={C_lihdr(0,0,25),40,37,109,97,107,101,45,114,97,110,100,111,109,45,105,116,101,109,32,119,50,50,54,48,41,0};
static C_char C_TLS li190[] C_aligned={C_lihdr(0,0,36),40,109,97,107,101,45,119,101,105,103,104,116,105,110,103,32,100,97,116,97,50,49,57,50,32,46,32,97,114,103,115,50,49,57,51,41,0,0,0,0};
static C_char C_TLS li191[] C_aligned={C_lihdr(0,0,37),40,100,111,50,51,52,55,32,116,97,105,108,50,51,52,57,32,105,110,100,101,120,50,51,53,48,32,116,111,116,97,108,50,51,53,49,41,0,0,0,0,0};
static C_char C_TLS li192[] C_aligned={C_lihdr(0,0,17),40,100,111,50,51,52,49,32,116,97,105,108,50,51,52,51,41,0};
static C_char C_TLS li193[] C_aligned={C_lihdr(0,0,36),40,114,101,99,97,108,99,45,119,101,105,103,104,116,105,110,103,115,32,111,98,106,50,51,51,55,32,102,105,120,63,50,51,51,56,41,0,0,0,0};
static C_char C_TLS li194[] C_aligned={C_lihdr(0,0,27),40,100,111,50,51,54,57,32,116,97,105,108,50,51,55,49,32,105,110,100,101,120,50,51,55,50,41,0,0,0};
static C_char C_TLS li195[] C_aligned={C_lihdr(0,0,18),40,112,105,99,107,32,99,50,51,54,55,32,114,50,51,54,56,41,0,0};
static C_char C_TLS li196[] C_aligned={C_lihdr(0,0,17),40,100,111,50,51,55,56,32,116,97,105,108,50,51,56,48,41,0};
static C_char C_TLS li197[] C_aligned={C_lihdr(0,0,17),40,100,111,50,51,55,52,32,105,116,101,109,50,51,55,54,41,0};
static C_char C_TLS li198[] C_aligned={C_lihdr(0,0,27),40,110,101,120,116,45,105,110,45,119,101,105,103,104,116,105,110,103,32,111,98,106,50,51,53,55,41,0,0,0};
static C_char C_TLS li199[] C_aligned={C_lihdr(0,0,23),40,97,49,55,52,49,49,32,102,110,50,53,48,54,32,111,98,106,50,53,48,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li200[] C_aligned={C_lihdr(0,0,14),40,97,49,55,49,54,53,32,115,50,52,48,55,41,0,0,0,0,0,0};
static C_char C_TLS li201[] C_aligned={C_lihdr(0,0,8),40,100,111,50,52,48,48,41};
static C_char C_TLS li202[] C_aligned={C_lihdr(0,0,41),40,100,111,50,52,50,50,32,116,97,105,108,50,52,50,52,32,111,114,100,101,114,50,52,50,53,32,108,105,115,50,52,50,54,32,112,50,52,50,55,41,0};
static C_char C_TLS li203[] C_aligned={C_lihdr(0,0,33),40,109,97,107,101,45,109,97,114,107,111,118,32,100,97,116,97,50,52,51,52,32,46,32,97,114,103,115,50,52,51,53,41,0};
static C_char C_TLS li204[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,51,49,32,116,97,105,108,50,53,51,51,41,0};
static C_char C_TLS li205[] C_aligned={C_lihdr(0,0,33),40,100,111,50,53,50,49,32,116,97,105,108,50,53,50,51,32,111,117,116,50,53,50,52,32,115,117,109,50,53,50,53,41,0};
static C_char C_TLS li206[] C_aligned={C_lihdr(0,0,37),40,115,101,108,101,99,116,45,111,117,116,112,117,116,32,114,97,110,103,101,50,53,49,57,32,111,117,116,112,117,116,115,50,53,50,48,41,0,0,0,0,0};
static C_char C_TLS li207[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,54,49,32,108,97,115,116,50,53,54,51,41,0};
static C_char C_TLS li208[] C_aligned={C_lihdr(0,0,26),40,100,111,50,53,51,55,32,105,50,53,51,57,32,106,50,53,52,48,32,102,50,53,52,49,41,0,0};
static C_char C_TLS li209[] C_aligned={C_lihdr(0,0,35),40,100,111,50,53,53,50,32,116,97,105,108,50,53,53,52,32,112,97,115,116,50,53,53,53,32,105,116,101,109,50,53,53,54,41,0,0,0};
static C_char C_TLS li210[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,109,97,114,107,111,118,32,111,98,106,50,53,49,54,41};
static C_char C_TLS li211[] C_aligned={C_lihdr(0,0,24),40,103,114,97,112,104,45,110,111,100,101,45,100,97,116,117,109,32,120,50,53,56,49,41};
static C_char C_TLS li212[] C_aligned={C_lihdr(0,0,14),40,97,49,56,50,56,51,32,110,50,54,52,55,41,0,0,0,0,0,0};
static C_char C_TLS li213[] C_aligned={C_lihdr(0,0,23),40,97,49,56,50,55,55,32,102,110,50,54,52,53,32,111,98,106,50,54,52,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li214[] C_aligned={C_lihdr(0,0,28),40,97,49,56,53,50,57,32,105,116,101,109,50,54,53,55,32,46,32,97,114,103,115,50,54,53,56,41,0,0,0,0};
static C_char C_TLS li215[] C_aligned={C_lihdr(0,0,29),40,112,97,114,115,101,45,103,114,97,112,104,45,105,116,101,109,32,101,120,116,101,114,110,50,54,53,54,41,0,0,0,0,0};
static C_char C_TLS li216[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,103,114,97,112,104,32,100,97,116,97,50,54,48,50,32,46,32,97,114,103,115,50,54,48,51,41};
static C_char C_TLS li217[] C_aligned={C_lihdr(0,0,17),40,100,111,50,55,49,49,32,116,97,105,108,50,55,49,51,41,0};
static C_char C_TLS li218[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,103,114,97,112,104,32,111,98,106,50,55,48,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li219[] C_aligned={C_lihdr(0,0,14),40,97,49,56,57,53,54,32,120,50,55,55,55,41,0,0,0,0,0,0};
static C_char C_TLS li220[] C_aligned={C_lihdr(0,0,25),40,100,111,53,57,48,32,116,97,105,108,53,57,50,32,120,53,57,51,32,102,53,57,52,41,0};
static C_char C_TLS li221[] C_aligned={C_lihdr(0,0,31),40,97,100,100,45,111,117,116,99,111,109,101,32,112,114,101,118,50,55,55,52,32,110,101,120,116,50,55,55,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li222[] C_aligned={C_lihdr(0,0,14),40,97,49,57,48,48,52,32,122,50,55,56,53,41,0,0,0,0,0,0};
static C_char C_TLS li223[] C_aligned={C_lihdr(0,0,14),40,97,49,57,48,49,52,32,122,50,55,56,52,41,0,0,0,0,0,0};
static C_char C_TLS li224[] C_aligned={C_lihdr(0,0,27),40,98,101,102,111,114,101,63,32,120,50,55,55,57,32,121,50,55,56,48,32,108,50,55,56,49,41,0,0,0};
static C_char C_TLS li225[] C_aligned={C_lihdr(0,0,16),40,97,49,57,49,49,50,32,114,111,119,50,57,49,49,41};
static C_char C_TLS li226[] C_aligned={C_lihdr(0,0,20),40,100,111,50,56,56,52,32,105,50,56,56,54,32,109,50,56,56,55,41,0,0,0,0};
static C_char C_TLS li227[] C_aligned={C_lihdr(0,0,14),40,100,111,50,56,55,53,32,108,50,56,55,55,41,0,0,0,0,0,0};
static C_char C_TLS li228[] C_aligned={C_lihdr(0,0,20),40,100,111,50,56,54,56,32,105,50,56,55,48,32,109,50,56,55,49,41,0,0,0,0};
static C_char C_TLS li229[] C_aligned={C_lihdr(0,0,20),40,100,111,50,56,54,50,32,105,50,56,54,52,32,109,50,56,54,53,41,0,0,0,0};
static C_char C_TLS li230[] C_aligned={C_lihdr(0,0,14),40,100,111,50,55,56,56,32,120,50,55,57,48,41,0,0,0,0,0,0};
static C_char C_TLS li231[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,53,54,32,116,97,105,108,50,56,53,56,41,0};
static C_char C_TLS li232[] C_aligned={C_lihdr(0,0,20),40,100,111,50,56,52,54,32,105,50,56,52,56,32,109,50,56,52,57,41,0,0,0,0};
static C_char C_TLS li233[] C_aligned={C_lihdr(0,0,14),40,100,111,50,56,52,49,32,108,50,56,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li234[] C_aligned={C_lihdr(0,0,14),40,100,111,50,56,51,54,32,105,50,56,51,56,41,0,0,0,0,0,0};
static C_char C_TLS li235[] C_aligned={C_lihdr(0,0,20),40,97,49,57,52,51,51,32,120,50,56,51,50,32,121,50,56,51,51,41,0,0,0,0};
static C_char C_TLS li236[] C_aligned={C_lihdr(0,0,14),40,100,111,50,56,50,51,32,101,50,56,50,53,41,0,0,0,0,0,0};
static C_char C_TLS li237[] C_aligned={C_lihdr(0,0,20),40,100,111,50,56,49,55,32,101,50,56,49,57,32,115,50,56,50,48,41,0,0,0,0};
static C_char C_TLS li238[] C_aligned={C_lihdr(0,0,25),40,100,111,50,56,48,57,32,116,97,105,108,50,56,49,49,32,108,101,110,50,56,49,50,41,0};
static C_char C_TLS li239[] C_aligned={C_lihdr(0,0,20),40,97,49,57,53,56,50,32,120,50,56,48,55,32,121,50,56,48,56,41,0,0,0,0};
static C_char C_TLS li240[] C_aligned={C_lihdr(0,0,29),40,100,111,50,55,57,54,32,112,114,101,118,50,55,57,56,32,106,50,55,57,57,32,120,50,56,48,48,41,0,0,0,0,0};
static C_char C_TLS li241[] C_aligned={C_lihdr(0,0,14),40,100,111,50,55,57,51,32,105,50,55,57,53,41,0,0,0,0,0,0};
static C_char C_TLS li242[] C_aligned={C_lihdr(0,0,35),40,109,97,114,107,111,118,45,97,110,97,108,121,122,101,32,115,101,113,50,55,49,57,32,46,32,97,114,103,115,50,55,50,48,41,0,0,0};
static C_char C_TLS li243[] C_aligned={C_lihdr(0,0,14),40,97,49,57,57,50,48,32,122,50,57,54,49,41,0,0,0,0,0,0};
static C_char C_TLS li244[] C_aligned={C_lihdr(0,0,51),40,114,101,115,99,97,108,101,32,120,50,57,53,53,32,120,49,50,57,53,54,32,120,50,50,57,53,55,32,121,49,50,57,53,56,32,121,50,50,57,53,57,32,46,32,98,50,57,54,48,41,0,0,0};
static C_char C_TLS li245[] C_aligned={C_lihdr(0,0,14),40,97,49,57,57,54,48,32,122,50,57,55,51,41,0,0,0,0,0,0};
static C_char C_TLS li246[] C_aligned={C_lihdr(0,0,14),40,97,49,57,57,56,54,32,122,50,57,55,52,41,0,0,0,0,0,0};
static C_char C_TLS li247[] C_aligned={C_lihdr(0,0,48),40,100,105,115,99,114,101,116,101,32,120,50,57,54,50,32,120,49,50,57,54,51,32,120,50,50,57,54,52,32,105,49,50,57,54,53,32,46,32,97,114,103,115,50,57,54,54,41};
static C_char C_TLS li248[] C_aligned={C_lihdr(0,0,11),40,105,110,116,32,102,50,57,55,54,41,0,0,0};
static C_char C_TLS li249[] C_aligned={C_lihdr(0,0,14),40,97,50,48,48,56,48,32,120,50,57,55,56,41,0,0,0,0,0,0};
static C_char C_TLS li250[] C_aligned={C_lihdr(0,0,13),40,102,108,111,97,116,32,110,50,57,55,55,41,0,0,0,0,0};
static C_char C_TLS li251[] C_aligned={C_lihdr(0,0,13),40,108,111,103,49,48,32,110,50,57,55,57,41,0,0,0,0,0};
static C_char C_TLS li252[] C_aligned={C_lihdr(0,0,12),40,108,111,103,50,32,110,50,57,56,48,41,0,0,0,0};
static C_char C_TLS li253[] C_aligned={C_lihdr(0,0,14),40,97,50,48,49,52,53,32,120,50,57,56,50,41,0,0,0,0,0,0};
static C_char C_TLS li254[] C_aligned={C_lihdr(0,0,17),40,112,108,117,115,32,46,32,97,114,103,115,50,57,56,49,41,0};
static C_char C_TLS li255[] C_aligned={C_lihdr(0,0,14),40,97,50,48,50,49,52,32,120,50,57,56,52,41,0,0,0,0,0,0};
static C_char C_TLS li256[] C_aligned={C_lihdr(0,0,18),40,116,105,109,101,115,32,46,32,97,114,103,115,50,57,56,51,41,0,0};
static C_char C_TLS li257[] C_aligned={C_lihdr(0,0,14),40,97,50,48,50,54,57,32,120,50,57,56,55,41,0,0,0,0,0,0};
static C_char C_TLS li258[] C_aligned={C_lihdr(0,0,26),40,109,105,110,117,115,32,97,114,103,50,57,56,53,32,46,32,97,114,103,115,50,57,56,54,41,0,0};
static C_char C_TLS li259[] C_aligned={C_lihdr(0,0,14),40,97,50,48,51,49,50,32,120,50,57,57,48,41,0,0,0,0,0,0};
static C_char C_TLS li260[] C_aligned={C_lihdr(0,0,27),40,100,105,118,105,100,101,32,97,114,103,50,57,56,56,32,46,32,97,114,103,115,50,57,56,57,41,0,0,0};
static C_char C_TLS li261[] C_aligned={C_lihdr(0,0,14),40,97,50,48,51,51,55,32,110,50,57,57,51,41,0,0,0,0,0,0};
static C_char C_TLS li262[] C_aligned={C_lihdr(0,0,28),40,113,117,97,110,116,105,122,101,32,110,117,109,50,57,57,49,32,115,116,101,112,115,50,57,57,50,41,0,0,0,0};
static C_char C_TLS li263[] C_aligned={C_lihdr(0,0,14),40,97,50,48,51,54,49,32,118,50,57,57,55,41,0,0,0,0,0,0};
static C_char C_TLS li264[] C_aligned={C_lihdr(0,0,31),40,100,101,99,105,109,97,108,115,32,118,97,108,117,101,50,57,57,52,32,112,108,97,99,101,115,50,57,57,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li265[] C_aligned={C_lihdr(0,0,14),40,97,50,48,52,48,55,32,120,51,48,51,56,41,0,0,0,0,0,0};
static C_char C_TLS li266[] C_aligned={C_lihdr(0,0,38),40,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,98,101,97,116,115,50,57,57,56,32,46,32,97,114,103,115,50,57,57,57,41,0,0,0,0,0,0};
static C_char C_TLS li267[] C_aligned={C_lihdr(0,0,24),40,99,101,110,116,115,45,62,114,97,116,105,111,32,99,101,110,116,115,51,48,52,50,41};
static C_char C_TLS li268[] C_aligned={C_lihdr(0,0,22),40,114,97,116,105,111,45,62,99,101,110,116,115,32,110,117,109,51,48,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li269[] C_aligned={C_lihdr(0,0,17),40,100,111,51,48,53,50,32,116,97,105,108,51,48,53,52,41,0};
static C_char C_TLS li270[] C_aligned={C_lihdr(0,0,35),40,105,110,116,101,114,112,49,32,120,51,48,52,52,32,99,111,111,114,100,115,51,48,52,53,32,98,97,115,101,51,48,52,54,41,0,0,0};
static C_char C_TLS li271[] C_aligned={C_lihdr(0,0,25),40,105,110,116,101,114,112,32,120,51,48,54,50,32,46,32,97,114,103,115,51,48,54,51,41,0};
static C_char C_TLS li272[] C_aligned={C_lihdr(0,0,44),40,116,101,110,100,101,110,99,121,32,120,51,48,54,53,32,108,111,119,51,48,54,54,32,104,105,103,104,51,48,54,55,32,46,32,97,114,103,115,51,48,54,56,41,0,0,0,0};
static C_char C_TLS li273[] C_aligned={C_lihdr(0,0,37),40,102,105,116,49,32,110,117,109,51,48,56,49,32,108,98,51,48,56,50,32,117,98,51,48,56,51,32,109,111,100,101,51,48,56,52,41,0,0,0,0,0};
static C_char C_TLS li274[] C_aligned={C_lihdr(0,0,14),40,97,50,48,57,54,50,32,110,51,48,56,57,41,0,0,0,0,0,0};
static C_char C_TLS li275[] C_aligned={C_lihdr(0,0,38),40,102,105,116,32,110,117,109,51,48,55,52,32,108,98,51,48,55,53,32,117,98,51,48,55,54,32,46,32,109,111,100,101,51,48,55,55,41,0,0,0,0,0,0};
static C_char C_TLS li276[] C_aligned={C_lihdr(0,0,32),40,100,111,51,49,48,49,32,105,51,49,48,51,32,107,51,49,48,52,32,108,51,49,48,53,32,116,51,49,48,54,41};
static C_char C_TLS li277[] C_aligned={C_lihdr(0,0,37),40,115,99,97,108,101,32,108,101,110,51,48,57,51,32,107,101,121,110,117,109,51,48,57,52,32,46,32,97,114,103,115,51,48,57,53,41,0,0,0,0,0};
static C_char C_TLS li278[] C_aligned={C_lihdr(0,0,14),40,100,111,51,49,50,52,32,105,51,49,50,54,41,0,0,0,0,0,0};
static C_char C_TLS li279[] C_aligned={C_lihdr(0,0,17),40,100,111,51,49,52,48,32,116,97,105,108,51,49,52,50,41,0};
static C_char C_TLS li280[] C_aligned={C_lihdr(0,0,20),40,100,111,51,49,51,54,32,105,51,49,51,56,32,110,51,49,51,57,41,0,0,0,0};
static C_char C_TLS li281[] C_aligned={C_lihdr(0,0,33),40,115,101,103,115,32,110,117,109,51,49,49,51,32,115,117,109,51,49,49,52,32,46,32,97,114,103,115,51,49,49,53,41,0};
static C_char C_TLS li282[] C_aligned={C_lihdr(0,0,15),40,114,97,110,32,46,32,110,117,109,51,49,53,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li283[] C_aligned={C_lihdr(0,0,21),40,98,101,116,119,101,101,110,32,97,51,49,53,52,32,98,51,49,53,53,41,0,0,0,0,0};
static C_char C_TLS li284[] C_aligned={C_lihdr(0,0,17),40,112,105,99,107,32,46,32,97,114,103,115,51,49,53,54,41,0};
static C_char C_TLS li285[] C_aligned={C_lihdr(0,0,33),40,118,97,114,121,49,32,118,97,108,51,50,48,52,32,118,97,114,105,51,50,48,53,32,109,111,100,101,51,50,48,54,41,0};
static C_char C_TLS li286[] C_aligned={C_lihdr(0,0,14),40,97,50,49,54,57,56,32,118,51,50,49,49,41,0,0,0,0,0,0};
static C_char C_TLS li287[] C_aligned={C_lihdr(0,0,34),40,118,97,114,121,32,118,97,108,51,50,48,48,32,118,97,114,105,51,50,48,49,32,46,32,109,111,100,101,51,50,48,50,41,0,0};
static C_char C_TLS li288[] C_aligned={C_lihdr(0,0,26),40,100,111,51,50,49,55,32,105,51,50,49,57,32,106,51,50,50,48,32,118,51,50,50,49,41,0,0};
static C_char C_TLS li289[] C_aligned={C_lihdr(0,0,16),40,115,104,117,102,102,108,101,33,32,108,51,50,49,53,41};
static C_char C_TLS li290[] C_aligned={C_lihdr(0,0,20),40,115,104,117,102,102,108,101,32,46,32,97,114,103,115,51,50,50,54,41,0,0,0,0};
static C_char C_TLS li291[] C_aligned={C_lihdr(0,0,20),40,114,97,110,98,101,116,97,32,46,32,97,114,103,115,51,50,50,55,41,0,0,0,0};
static C_char C_TLS li292[] C_aligned={C_lihdr(0,0,19),40,114,97,110,101,120,112,32,46,32,97,114,103,115,51,50,55,48,41,0,0,0};
static C_char C_TLS li293[] C_aligned={C_lihdr(0,0,21),40,114,97,110,103,97,117,115,115,32,46,32,97,114,103,115,51,50,55,49,41,0,0,0,0,0};
static C_char C_TLS li294[] C_aligned={C_lihdr(0,0,23),40,114,97,110,112,111,105,115,115,111,110,32,46,32,97,114,103,115,51,50,55,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li295[] C_aligned={C_lihdr(0,0,21),40,114,97,110,103,97,109,109,97,32,46,32,97,114,103,115,51,50,55,51,41,0,0,0,0,0};
static C_char C_TLS li296[] C_aligned={C_lihdr(0,0,44),40,115,116,114,105,110,103,45,62,110,111,116,101,45,101,110,116,114,121,32,115,116,114,51,51,49,53,32,111,99,116,51,51,49,54,32,101,114,114,51,51,49,55,41,0,0,0,0};
static C_char C_TLS li297[] C_aligned={C_lihdr(0,0,37),40,110,111,116,101,45,97,117,120,32,102,114,101,113,51,51,50,57,32,100,111,99,116,51,51,51,48,32,101,114,114,63,51,51,51,49,41,0,0,0,0,0};
static C_char C_TLS li298[] C_aligned={C_lihdr(0,0,44),40,100,111,51,51,51,52,32,116,97,105,108,51,51,51,54,32,100,101,102,111,51,51,51,55,32,116,104,105,115,51,51,51,56,32,114,101,115,108,51,51,51,57,41,0,0,0,0};
static C_char C_TLS li299[] C_aligned={C_lihdr(0,0,15),40,110,111,116,101,32,102,114,101,113,51,51,51,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li300[] C_aligned={C_lihdr(0,0,44),40,100,111,51,51,52,56,32,116,97,105,108,51,51,53,48,32,100,101,102,111,51,51,53,49,32,116,104,105,115,51,51,53,50,32,114,101,115,108,51,51,53,51,41,0,0,0,0};
static C_char C_TLS li301[] C_aligned={C_lihdr(0,0,14),40,107,101,121,32,102,114,101,113,51,51,52,54,41,0,0,0,0,0,0};
static C_char C_TLS li302[] C_aligned={C_lihdr(0,0,44),40,100,111,51,51,54,52,32,116,97,105,108,51,51,54,54,32,100,101,102,111,51,51,54,55,32,116,104,105,115,51,51,54,56,32,114,101,115,108,51,51,54,57,41,0,0,0,0};
static C_char C_TLS li303[] C_aligned={C_lihdr(0,0,13),40,104,122,32,102,114,101,113,51,51,54,50,41,0,0,0,0,0};
static C_char C_TLS li304[] C_aligned={C_lihdr(0,0,10),40,112,99,32,120,51,51,55,56,41,0,0};
static C_char C_TLS li305[] C_aligned={C_lihdr(0,0,26),40,100,111,51,51,56,52,32,116,97,105,108,51,51,56,54,32,108,97,115,116,51,51,56,55,41,0,0};
static C_char C_TLS li306[] C_aligned={C_lihdr(0,0,18),40,105,110,118,107,101,121,115,32,107,101,121,115,51,51,56,49,41,0,0};
static C_char C_TLS li307[] C_aligned={C_lihdr(0,0,14),40,97,50,50,55,56,57,32,122,51,51,57,49,41,0,0,0,0,0,0};
static C_char C_TLS li308[] C_aligned={C_lihdr(0,0,14),40,105,110,118,101,114,116,32,120,51,51,55,57,41,0,0,0,0,0,0};
static C_char C_TLS li309[] C_aligned={C_lihdr(0,0,26),40,100,111,51,51,57,57,32,116,97,105,108,51,52,48,49,32,108,97,115,116,51,52,48,50,41,0,0};
static C_char C_TLS li310[] C_aligned={C_lihdr(0,0,30),40,116,114,97,110,115,112,107,101,121,115,32,107,101,121,115,51,51,57,54,32,111,114,105,103,51,51,57,55,41,0,0,0,0,0,0};
static C_char C_TLS li311[] C_aligned={C_lihdr(0,0,14),40,97,50,50,57,52,50,32,122,51,52,48,54,41,0,0,0,0,0,0};
static C_char C_TLS li312[] C_aligned={C_lihdr(0,0,23),40,116,114,97,110,115,112,111,115,101,32,120,51,51,57,50,32,121,51,51,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li313[] C_aligned={C_lihdr(0,0,20),40,97,50,51,48,48,53,32,97,51,52,48,57,32,98,51,52,49,48,41,0,0,0,0};
static C_char C_TLS li314[] C_aligned={C_lihdr(0,0,20),40,97,50,51,48,54,51,32,97,51,52,49,49,32,98,51,52,49,50,41,0,0,0,0};
static C_char C_TLS li315[] C_aligned={C_lihdr(0,0,34),40,115,99,97,108,101,45,111,114,100,101,114,32,115,99,97,108,101,51,52,48,55,32,46,32,109,111,100,101,51,52,48,56,41,0,0};
static C_char C_TLS li316[] C_aligned={C_lihdr(0,0,31),40,114,115,121,109,32,112,114,101,51,52,49,56,32,114,97,119,51,52,49,57,32,112,111,115,116,51,52,50,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li317[] C_aligned={C_lihdr(0,0,25),40,97,100,100,114,121,116,104,32,115,116,114,51,52,50,49,32,118,97,108,51,52,50,50,41,0};
static C_char C_TLS li318[] C_aligned={C_lihdr(0,0,22),40,100,111,51,52,54,48,32,111,112,115,51,52,54,50,32,105,51,52,54,51,41,0,0,0,0,0,0};
static C_char C_TLS li319[] C_aligned={C_lihdr(0,0,41),40,110,101,120,116,45,116,111,107,101,110,45,115,116,97,114,116,32,115,116,114,51,52,53,55,32,108,98,51,52,53,56,32,108,101,110,51,52,53,57,41,0};
static C_char C_TLS li320[] C_aligned={C_lihdr(0,0,45),40,100,111,51,52,55,48,32,110,117,109,51,52,55,50,32,118,97,108,51,52,55,51,32,116,111,107,51,52,55,52,32,111,112,51,52,55,53,32,105,51,52,55,54,41,0,0,0,0,0};
static C_char C_TLS li321[] C_aligned={C_lihdr(0,0,14),40,97,50,51,50,49,57,32,120,51,52,53,48,41,0,0,0,0,0,0};
static C_char C_TLS li322[] C_aligned={C_lihdr(0,0,27),40,114,104,121,116,104,109,32,118,97,108,51,52,52,50,32,46,32,97,114,103,115,51,52,52,51,41,0,0,0};
static C_char C_TLS li323[] C_aligned={C_lihdr(0,0,26),40,105,110,45,116,101,109,112,111,32,110,51,52,57,54,32,116,101,109,112,111,51,52,57,55,41,0,0};
static C_char C_TLS li324[] C_aligned={C_lihdr(0,0,5),40,99,119,100,41,0,0,0,0,0};
static C_char C_TLS li325[] C_aligned={C_lihdr(0,0,15),40,99,104,100,105,114,32,115,116,114,51,52,57,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li326[] C_aligned={C_lihdr(0,0,24),40,112,97,116,104,110,97,109,101,45,116,121,112,101,32,112,97,116,104,51,54,51,48,41};
static C_char C_TLS li327[] C_aligned={C_lihdr(0,0,24),40,102,117,108,108,45,112,97,116,104,110,97,109,101,32,112,97,116,104,51,54,51,52,41};
static C_char C_TLS li328[] C_aligned={C_lihdr(0,0,52),40,109,97,107,101,45,115,112,101,99,116,114,117,109,32,116,105,109,101,51,55,48,55,32,115,105,122,101,51,55,48,56,32,102,114,101,113,115,51,55,48,57,32,97,109,112,115,51,55,49,48,41,0,0,0,0};
static C_char C_TLS li329[] C_aligned={C_lihdr(0,0,17),40,115,112,101,99,116,114,117,109,63,32,120,51,55,49,49,41,0};
static C_char C_TLS li330[] C_aligned={C_lihdr(0,0,21),40,115,112,101,99,116,114,117,109,45,116,105,109,101,32,120,51,55,49,53,41,0,0,0,0,0};
static C_char C_TLS li331[] C_aligned={C_lihdr(0,0,34),40,115,112,101,99,116,114,117,109,45,115,105,122,101,45,115,101,116,33,32,120,51,55,49,56,32,118,97,108,51,55,49,57,41,0,0};
static C_char C_TLS li332[] C_aligned={C_lihdr(0,0,21),40,115,112,101,99,116,114,117,109,45,115,105,122,101,32,120,51,55,50,49,41,0,0,0,0,0};
static C_char C_TLS li333[] C_aligned={C_lihdr(0,0,35),40,115,112,101,99,116,114,117,109,45,102,114,101,113,115,45,115,101,116,33,32,120,51,55,50,52,32,118,97,108,51,55,50,53,41,0,0,0};
static C_char C_TLS li334[] C_aligned={C_lihdr(0,0,22),40,115,112,101,99,116,114,117,109,45,102,114,101,113,115,32,120,51,55,50,55,41,0,0,0,0,0,0};
static C_char C_TLS li335[] C_aligned={C_lihdr(0,0,34),40,115,112,101,99,116,114,117,109,45,97,109,112,115,45,115,101,116,33,32,120,51,55,51,48,32,118,97,108,51,55,51,49,41,0,0};
static C_char C_TLS li336[] C_aligned={C_lihdr(0,0,21),40,115,112,101,99,116,114,117,109,45,97,109,112,115,32,120,51,55,51,51,41,0,0,0,0,0};
static C_char C_TLS li337[] C_aligned={C_lihdr(0,0,28),40,115,112,101,99,116,114,117,109,45,99,111,112,121,32,115,112,101,99,116,114,117,109,51,55,52,49,41,0,0,0,0};
static C_char C_TLS li338[] C_aligned={C_lihdr(0,0,14),40,100,111,51,55,52,56,32,105,51,55,53,48,41,0,0,0,0,0,0};
static C_char C_TLS li339[] C_aligned={C_lihdr(0,0,29),40,115,112,101,99,116,114,117,109,45,112,97,105,114,115,32,115,112,101,99,116,114,117,109,51,55,52,50,41,0,0,0,0,0};
static C_char C_TLS li340[] C_aligned={C_lihdr(0,0,31),40,115,112,101,99,116,114,117,109,45,109,105,110,102,114,101,113,32,115,112,101,99,116,114,117,109,51,55,53,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li341[] C_aligned={C_lihdr(0,0,31),40,115,112,101,99,116,114,117,109,45,109,97,120,102,114,101,113,32,115,112,101,99,116,114,117,109,51,55,53,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li342[] C_aligned={C_lihdr(0,0,14),40,97,50,52,54,54,49,32,97,51,55,53,57,41,0,0,0,0,0,0};
static C_char C_TLS li343[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,105,110,97,109,112,32,115,112,101,99,116,114,117,109,51,55,53,54,41,0,0,0,0,0,0};
static C_char C_TLS li344[] C_aligned={C_lihdr(0,0,14),40,97,50,52,54,57,50,32,97,51,55,54,54,41,0,0,0,0,0,0};
static C_char C_TLS li345[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,97,120,97,109,112,32,115,112,101,99,116,114,117,109,51,55,54,51,41,0,0,0,0,0,0};
static C_char C_TLS li346[] C_aligned={C_lihdr(0,0,8),40,100,111,51,55,56,54,41};
static C_char C_TLS li347[] C_aligned={C_lihdr(0,0,8),40,100,111,51,55,57,49,41};
static C_char C_TLS li348[] C_aligned={C_lihdr(0,0,14),40,103,101,116,107,101,121,32,104,51,55,56,52,41,0,0,0,0,0,0};
static C_char C_TLS li349[] C_aligned={C_lihdr(0,0,11),40,97,100,100,32,107,51,55,57,54,41,0,0,0};
static C_char C_TLS li350[] C_aligned={C_lihdr(0,0,14),40,97,100,100,107,101,121,32,104,51,55,57,56,41,0,0,0,0,0,0};
static C_char C_TLS li351[] C_aligned={C_lihdr(0,0,20),40,97,100,100,117,110,105,113,117,101,107,101,121,32,104,51,55,57,57,41,0,0,0,0};
static C_char C_TLS li352[] C_aligned={C_lihdr(0,0,22),40,100,111,53,53,54,32,105,53,53,56,32,106,53,53,57,32,116,53,54,48,41,0,0,0,0,0,0};
static C_char C_TLS li353[] C_aligned={C_lihdr(0,0,20),40,97,50,52,57,48,52,32,97,51,56,48,51,32,98,51,56,48,52,41,0,0,0,0};
static C_char C_TLS li354[] C_aligned={C_lihdr(0,0,20),40,97,50,52,57,49,57,32,97,51,56,48,53,32,98,51,56,48,54,41,0,0,0,0};
static C_char C_TLS li355[] C_aligned={C_lihdr(0,0,39),40,115,112,101,99,116,114,117,109,45,107,101,121,115,32,115,112,101,99,116,114,117,109,51,56,49,52,32,46,32,97,114,103,115,51,56,49,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li356[] C_aligned={C_lihdr(0,0,35),40,100,111,52,48,55,51,32,116,97,105,108,52,48,55,53,32,115,105,122,101,52,48,55,54,32,97,109,112,108,52,48,55,55,41,0,0,0};
static C_char C_TLS li357[] C_aligned={C_lihdr(0,0,26),40,100,111,52,48,53,49,32,105,52,48,53,51,32,102,52,48,53,52,32,120,52,48,53,53,41,0,0};
static C_char C_TLS li358[] C_aligned={C_lihdr(0,0,24),40,100,111,52,48,52,53,32,110,101,103,52,48,52,55,32,112,111,115,52,48,52,56,41};
static C_char C_TLS li359[] C_aligned={C_lihdr(0,0,26),40,100,111,52,48,51,51,32,107,52,48,51,53,32,102,52,48,51,54,32,97,52,48,51,55,41,0,0};
static C_char C_TLS li360[] C_aligned={C_lihdr(0,0,46),40,102,109,45,115,112,101,99,116,114,117,109,32,99,97,114,114,105,101,114,52,48,50,53,32,109,114,97,116,105,111,52,48,50,54,32,105,110,100,101,120,52,48,50,55,41,0,0,0,0,0,0};
static C_char C_TLS li361[] C_aligned={C_lihdr(0,0,47),40,100,111,52,49,49,49,32,102,114,101,113,115,52,49,49,51,32,97,109,112,115,52,49,49,52,32,108,97,115,116,102,52,49,49,53,32,108,97,115,116,97,52,49,49,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li362[] C_aligned={C_lihdr(0,0,41),40,115,112,101,99,116,114,117,109,45,97,100,100,33,32,115,112,101,99,52,49,48,56,32,102,114,101,113,52,49,48,57,32,97,109,112,52,49,49,48,41,0};
static C_char C_TLS li363[] C_aligned={C_lihdr(0,0,16),40,103,101,116,102,114,101,113,115,32,115,52,49,51,56,41};
static C_char C_TLS li364[] C_aligned={C_lihdr(0,0,15),40,103,101,116,97,109,112,115,32,115,52,49,51,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li365[] C_aligned={C_lihdr(0,0,36),40,115,117,109,115,45,97,110,100,45,100,105,102,102,115,32,115,52,49,52,48,32,102,49,52,49,52,49,32,102,50,52,49,52,51,41,0,0,0,0};
static C_char C_TLS li366[] C_aligned={C_lihdr(0,0,15),40,100,111,52,49,53,52,32,108,49,52,49,53,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li367[] C_aligned={C_lihdr(0,0,15),40,100,111,52,49,53,49,32,108,50,52,49,53,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li368[] C_aligned={C_lihdr(0,0,15),40,100,111,52,49,54,49,32,108,49,52,49,54,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li369[] C_aligned={C_lihdr(0,0,15),40,100,111,52,49,54,54,32,115,50,52,49,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li370[] C_aligned={C_lihdr(0,0,33),40,114,109,45,115,112,101,99,116,114,117,109,32,115,112,101,99,49,52,49,51,51,32,115,112,101,99,50,52,49,51,52,41,0};
static C_char C_TLS li371[] C_aligned={C_lihdr(0,0,44),40,100,111,52,49,55,51,32,109,97,120,102,52,49,55,53,32,109,105,110,102,52,49,55,54,32,116,97,105,108,52,49,55,55,32,102,108,105,112,52,49,55,56,41,0,0,0,0};
static C_char C_TLS li372[] C_aligned={C_lihdr(0,0,25),40,115,112,101,99,116,114,117,109,45,102,108,105,112,33,32,115,112,101,99,52,49,55,50,41,0};
static C_char C_TLS li373[] C_aligned={C_lihdr(0,0,17),40,100,111,52,49,57,50,32,116,97,105,108,52,49,57,52,41,0};
static C_char C_TLS li374[] C_aligned={C_lihdr(0,0,17),40,100,111,52,49,57,55,32,116,97,105,108,52,49,57,57,41,0};
static C_char C_TLS li375[] C_aligned={C_lihdr(0,0,26),40,100,111,52,48,57,53,32,116,97,105,108,52,48,57,55,32,97,109,112,108,52,48,57,56,41,0,0};
static C_char C_TLS li376[] C_aligned={C_lihdr(0,0,20),40,97,50,54,55,56,57,32,97,52,48,57,49,32,98,52,48,57,50,41,0,0,0,0};
static C_char C_TLS li377[] C_aligned={C_lihdr(0,0,20),40,97,50,54,56,48,51,32,97,52,48,56,57,32,98,52,48,57,48,41,0,0,0,0};
static C_char C_TLS li378[] C_aligned={C_lihdr(0,0,17),40,100,111,52,50,49,57,32,116,97,105,108,52,50,50,49,41,0};
static C_char C_TLS li379[] C_aligned={C_lihdr(0,0,17),40,100,111,52,50,50,52,32,116,97,105,108,52,50,50,54,41,0};
static C_char C_TLS li380[] C_aligned={C_lihdr(0,0,17),40,100,111,52,50,49,48,32,116,97,105,108,52,50,49,50,41,0};
static C_char C_TLS li381[] C_aligned={C_lihdr(0,0,23),40,100,111,54,48,49,32,116,97,105,108,54,48,51,32,102,108,97,103,54,48,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li382[] C_aligned={C_lihdr(0,0,48),40,115,112,101,99,116,114,117,109,45,114,101,115,99,97,108,101,33,32,115,112,101,99,52,49,56,50,32,109,111,100,101,52,49,56,51,32,46,32,97,114,103,115,52,49,56,52,41};
static C_char C_TLS li383[] C_aligned={C_lihdr(0,0,12),40,114,104,100,114,32,112,52,50,54,53,41,0,0,0,0};
static C_char C_TLS li384[] C_aligned={C_lihdr(0,0,12),40,114,100,97,116,32,112,52,50,52,52,41,0,0,0,0};
static C_char C_TLS li385[] C_aligned={C_lihdr(0,0,26),40,100,111,52,50,52,55,32,105,52,50,52,57,32,97,52,50,53,48,32,102,52,50,53,49,41,0,0};
static C_char C_TLS li386[] C_aligned={C_lihdr(0,0,26),40,100,111,52,50,55,56,32,108,105,110,101,52,50,56,48,32,115,112,101,99,52,50,56,49,41,0,0};
static C_char C_TLS li387[] C_aligned={C_lihdr(0,0,8),40,100,111,52,50,54,56,41};
static C_char C_TLS li388[] C_aligned={C_lihdr(0,0,8),40,97,50,55,55,56,52,41};
static C_char C_TLS li389[] C_aligned={C_lihdr(0,0,30),40,105,109,112,111,114,116,45,115,112,101,97,114,45,102,114,97,109,101,115,32,102,105,108,101,52,50,54,49,41,0,0,0,0,0,0};
static C_char C_TLS li390[] C_aligned={C_lihdr(0,0,36),40,100,111,52,51,48,51,32,102,114,101,113,115,52,51,48,53,32,97,109,112,115,52,51,48,54,32,115,105,122,101,52,51,48,55,41,0,0,0,0};
static C_char C_TLS li391[] C_aligned={C_lihdr(0,0,27),40,100,111,52,50,57,55,32,116,97,105,108,52,50,57,57,32,99,111,117,110,116,52,51,48,48,41,0,0,0};
static C_char C_TLS li392[] C_aligned={C_lihdr(0,0,8),40,97,50,55,57,49,57,41};
static C_char C_TLS li393[] C_aligned={C_lihdr(0,0,17),40,100,111,52,50,57,49,32,116,97,105,108,52,50,57,51,41,0};
static C_char C_TLS li394[] C_aligned={C_lihdr(0,0,41),40,101,120,112,111,114,116,45,115,112,101,97,114,45,102,114,97,109,101,115,32,102,114,97,109,101,115,52,50,56,55,32,102,105,108,101,52,50,56,56,41,0};
static C_char C_TLS li395[] C_aligned={C_lihdr(0,0,45),40,109,97,107,101,45,116,111,107,101,110,32,116,121,112,101,52,51,51,56,32,115,116,114,105,110,103,52,51,51,57,32,112,111,115,105,116,105,111,110,52,51,52,48,41,0,0,0,0,0};
static C_char C_TLS li396[] C_aligned={C_lihdr(0,0,18),40,116,111,107,101,110,45,116,121,112,101,32,120,52,51,52,53,41,0,0};
static C_char C_TLS li397[] C_aligned={C_lihdr(0,0,22),40,116,111,107,101,110,45,112,111,115,105,116,105,111,110,32,120,52,51,53,55,41,0,0,0,0,0,0};
static C_char C_TLS li398[] C_aligned={C_lihdr(0,0,19),40,108,105,115,116,45,62,116,111,107,101,110,32,108,52,51,54,52,41,0,0,0};
static C_char C_TLS li399[] C_aligned={C_lihdr(0,0,22),40,102,105,114,115,116,45,116,111,107,101,110,32,116,111,107,115,52,51,54,53,41,0,0,0,0,0,0};
static C_char C_TLS li400[] C_aligned={C_lihdr(0,0,23),40,110,117,108,108,45,116,111,107,101,110,115,63,32,116,111,107,115,52,51,54,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li401[] C_aligned={C_lihdr(0,0,63),40,109,97,107,101,45,114,117,108,101,32,110,97,109,101,52,51,54,56,32,116,121,112,101,52,51,54,57,32,112,97,116,116,101,114,110,52,51,55,48,32,112,97,114,115,101,114,52,51,55,49,32,101,109,105,116,101,114,52,51,55,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li402[] C_aligned={C_lihdr(0,0,18),40,103,101,116,45,114,117,108,101,32,116,121,112,52,52,49,49,41,0,0};
static C_char C_TLS li403[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,118,97,108,117,101,32,120,52,52,49,54,41,0,0,0,0,0};
static C_char C_TLS li404[] C_aligned={C_lihdr(0,0,23),40,112,97,116,116,101,114,110,45,99,108,97,117,115,101,63,32,120,52,52,49,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li405[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,117,98,115,32,120,52,52,49,57,41,0,0,0,0};
static C_char C_TLS li406[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,110,115,117,98,115,32,120,52,52,50,48,41,0,0,0,0,0};
static C_char C_TLS li407[] C_aligned={C_lihdr(0,0,25),40,112,97,116,116,101,114,110,45,115,117,98,32,120,52,52,50,49,32,105,52,52,50,50,41,0};
static C_char C_TLS li408[] C_aligned={C_lihdr(0,0,29),40,112,97,116,116,101,114,110,45,122,101,114,111,45,111,114,45,109,111,114,101,63,32,120,52,52,50,54,41,0,0,0,0,0};
static C_char C_TLS li409[] C_aligned={C_lihdr(0,0,42),40,109,97,107,101,45,112,97,114,115,101,45,101,114,114,111,114,32,115,116,114,105,110,103,52,52,50,56,32,112,111,115,105,116,105,111,110,52,52,50,57,41,0,0};
static C_char C_TLS li410[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,112,97,114,115,101,45,117,110,105,116,32,116,121,112,101,52,52,52,54,32,112,97,114,115,101,100,52,52,52,55,32,112,111,115,105,116,105,111,110,52,52,52,56,41,0,0};
static C_char C_TLS li411[] C_aligned={C_lihdr(0,0,19),40,112,97,114,115,101,45,117,110,105,116,63,32,120,52,52,52,57,41,0,0,0};
static C_char C_TLS li412[] C_aligned={C_lihdr(0,0,23),40,112,97,114,115,101,45,117,110,105,116,45,116,121,112,101,32,120,52,52,53,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li413[] C_aligned={C_lihdr(0,0,25),40,112,97,114,115,101,45,117,110,105,116,45,112,97,114,115,101,100,32,120,52,52,53,57,41,0};
static C_char C_TLS li414[] C_aligned={C_lihdr(0,0,27),40,112,97,114,115,101,45,117,110,105,116,45,112,111,115,105,116,105,111,110,32,120,52,52,54,53,41,0,0,0};
static C_char C_TLS li415[] C_aligned={C_lihdr(0,0,19),40,116,111,107,101,110,45,117,110,105,116,63,32,120,52,52,55,50,41,0,0,0};
static C_char C_TLS li416[] C_aligned={C_lihdr(0,0,33),40,116,111,107,101,110,45,117,110,105,116,45,116,121,112,101,61,63,32,120,52,52,55,51,32,116,121,112,52,52,55,52,41,0};
static C_char C_TLS li417[] C_aligned={C_lihdr(0,0,33),40,103,101,116,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,52,52,55,54,32,105,110,102,111,52,52,55,55,41,0};
static C_char C_TLS li418[] C_aligned={C_lihdr(0,0,42),40,97,100,100,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,52,52,55,57,32,100,97,116,97,52,52,56,48,32,105,110,102,111,52,52,56,49,41,0,0};
static C_char C_TLS li419[] C_aligned={C_lihdr(0,0,43),40,115,101,116,45,101,109,105,116,45,105,110,102,111,33,32,110,97,109,101,52,52,57,50,32,100,97,116,97,52,52,57,51,32,105,110,102,111,52,52,57,52,41,0,0,0};
static C_char C_TLS li420[] C_aligned={C_lihdr(0,0,30),40,101,109,105,116,32,120,52,52,57,55,32,105,110,102,111,52,52,57,56,32,101,114,114,102,52,52,57,57,41,0,0,0,0,0,0};
static C_char C_TLS li421[] C_aligned={C_lihdr(0,0,37),40,101,109,105,116,45,108,105,115,116,32,108,105,115,52,53,48,48,32,105,110,102,111,52,53,48,49,32,101,114,114,102,52,53,48,50,41,0,0,0,0,0};
static C_char C_TLS li422[] C_aligned={C_lihdr(0,0,15),40,33,61,32,46,32,110,117,109,115,52,53,48,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li423[] C_aligned={C_lihdr(0,0,27),40,102,95,50,56,57,53,53,32,97,114,103,115,52,53,49,53,32,101,114,114,102,52,53,49,54,41,0,0,0};
static C_char C_TLS li424[] C_aligned={C_lihdr(0,0,29),40,115,105,109,112,108,101,45,117,110,105,116,45,112,97,114,115,101,114,32,116,121,112,101,52,53,49,52,41,0,0,0,0,0};
static C_char C_TLS li425[] C_aligned={C_lihdr(0,0,17),40,100,111,52,53,50,52,32,116,97,105,108,52,53,50,54,41,0};
static C_char C_TLS li426[] C_aligned={C_lihdr(0,0,36),40,102,95,50,56,57,54,51,32,117,110,105,116,52,53,49,56,32,105,110,102,111,52,53,49,57,32,101,114,114,102,52,53,50,48,41,0,0,0,0};
static C_char C_TLS li427[] C_aligned={C_lihdr(0,0,30),40,115,105,109,112,108,101,45,117,110,105,116,45,101,109,105,116,116,101,114,32,102,117,110,99,52,53,49,55,41,0,0,0,0,0,0};
static C_char C_TLS li428[] C_aligned={C_lihdr(0,0,8),40,97,50,57,49,54,49,41};
static C_char C_TLS li429[] C_aligned={C_lihdr(0,0,26),40,97,50,57,49,55,49,32,97,52,53,53,54,32,98,52,53,53,55,32,99,52,53,53,56,41,0,0};
static C_char C_TLS li430[] C_aligned={C_lihdr(0,0,8),40,97,50,57,50,54,55,41};
static C_char C_TLS li431[] C_aligned={C_lihdr(0,0,26),40,97,50,57,50,56,49,32,97,52,53,55,50,32,98,52,53,55,51,32,99,52,53,55,52,41,0,0};
static C_char C_TLS li432[] C_aligned={C_lihdr(0,0,14),40,100,111,52,53,54,55,32,105,52,53,54,57,41,0,0,0,0,0,0};
static C_char C_TLS li433[] C_aligned={C_lihdr(0,0,8),40,97,50,57,51,51,52,41};
static C_char C_TLS li434[] C_aligned={C_lihdr(0,0,26),40,97,50,57,51,52,56,32,97,52,53,57,52,32,98,52,53,57,53,32,99,52,53,57,54,41,0,0};
static C_char C_TLS li435[] C_aligned={C_lihdr(0,0,14),40,100,111,52,53,56,57,32,105,52,53,57,49,41,0,0,0,0,0,0};
static C_char C_TLS li436[] C_aligned={C_lihdr(0,0,8),40,97,50,57,52,50,51,41};
static C_char C_TLS li437[] C_aligned={C_lihdr(0,0,26),40,97,50,57,52,50,57,32,97,52,54,49,51,32,98,52,54,49,52,32,99,52,54,49,53,41,0,0};
static C_char C_TLS li438[] C_aligned={C_lihdr(0,0,8),40,100,111,52,54,48,57,41};
static C_char C_TLS li439[] C_aligned={C_lihdr(0,0,8),40,97,50,57,52,54,50,41};
static C_char C_TLS li440[] C_aligned={C_lihdr(0,0,26),40,97,50,57,52,54,56,32,97,52,54,51,49,32,98,52,54,51,50,32,99,52,54,51,51,41,0,0};
static C_char C_TLS li441[] C_aligned={C_lihdr(0,0,70),40,112,97,114,115,101,114,32,112,97,116,52,53,52,51,32,116,111,107,101,110,115,52,53,52,52,32,102,111,114,99,101,45,97,110,100,52,53,52,53,32,108,101,118,101,108,52,53,52,54,32,116,114,97,99,101,52,53,52,55,32,101,114,114,102,52,53,52,56,41,0,0,0,0,0,0};
static C_char C_TLS li442[] C_aligned={C_lihdr(0,0,21),40,83,97,108,84,111,107,101,110,84,121,112,101,63,32,105,52,56,48,56,41,0,0,0,0,0};
static C_char C_TLS li443[] C_aligned={C_lihdr(0,0,18),40,83,97,108,79,112,84,121,112,101,63,32,105,52,56,49,50,41,0,0};
static C_char C_TLS li444[] C_aligned={C_lihdr(0,0,20),40,83,97,108,82,117,108,101,84,121,112,101,63,32,105,52,56,50,49,41,0,0,0,0};
static C_char C_TLS li445[] C_aligned={C_lihdr(0,0,29),40,83,97,108,84,121,112,101,61,63,32,116,121,112,49,52,56,50,50,32,116,121,112,50,52,56,50,51,41,0,0,0,0,0};
static C_char C_TLS li446[] C_aligned={C_lihdr(0,0,17),40,100,111,52,56,55,50,32,116,111,107,115,52,56,55,52,41,0};
static C_char C_TLS li447[] C_aligned={C_lihdr(0,0,36),40,114,101,109,111,118,101,45,116,111,107,101,110,45,116,121,112,101,32,116,111,107,115,52,56,54,56,32,116,121,112,52,56,54,57,41,0,0,0,0};
static C_char C_TLS li448[] C_aligned={C_lihdr(0,0,14),40,105,115,45,111,112,63,32,120,52,56,57,57,41,0,0,0,0,0,0};
static C_char C_TLS li449[] C_aligned={C_lihdr(0,0,29),40,100,111,52,57,48,56,32,119,50,52,57,49,48,32,111,107,52,57,49,49,32,108,105,52,57,49,50,41,0,0,0,0,0};
static C_char C_TLS li450[] C_aligned={C_lihdr(0,0,8),40,100,111,52,57,48,54,41};
static C_char C_TLS li451[] C_aligned={C_lihdr(0,0,18),40,105,110,102,45,62,112,114,101,32,105,110,102,52,57,48,49,41,0,0};
static C_char C_TLS li452[] C_aligned={C_lihdr(0,0,38),40,115,97,108,45,112,97,114,115,101,45,115,116,101,112,112,105,110,103,32,97,114,103,115,53,48,54,54,32,101,114,114,102,53,48,54,55,41,0,0,0,0,0,0};
static C_char C_TLS li453[] C_aligned={C_lihdr(0,0,14),40,100,111,53,51,52,57,32,102,53,51,53,49,41,0,0,0,0,0,0};
static C_char C_TLS li454[] C_aligned={C_lihdr(0,0,14),40,100,111,53,51,52,50,32,102,53,51,52,52,41,0,0,0,0,0,0};
static C_char C_TLS li455[] C_aligned={C_lihdr(0,0,8),40,97,50,57,48,51,50,41};
static C_char C_TLS li456[] C_aligned={C_lihdr(0,0,44),40,97,50,57,48,51,57,32,115,117,99,99,101,115,115,52,53,51,56,32,114,101,115,117,108,116,115,52,53,51,57,32,114,101,109,97,105,110,115,52,53,52,48,41,0,0,0,0};
static C_char C_TLS li457[] C_aligned={C_lihdr(0,0,17),40,97,50,57,48,50,54,32,101,114,114,102,52,53,51,54,41,0};
static C_char C_TLS li458[] C_aligned={C_lihdr(0,0,24),40,115,97,108,32,115,116,114,53,50,53,53,32,46,32,97,114,103,115,53,50,53,54,41};
static C_char C_TLS li459[] C_aligned={C_lihdr(0,0,20),40,116,111,107,101,110,105,122,101,32,105,110,112,117,116,53,51,51,51,41,0,0,0,0};
static C_char C_TLS li460[] C_aligned={C_lihdr(0,0,17),40,100,111,53,51,55,48,32,116,97,105,108,53,51,55,50,41,0};
static C_char C_TLS li461[] C_aligned={C_lihdr(0,0,35),40,112,114,105,110,116,101,114,32,116,104,105,110,103,53,51,54,55,32,108,101,118,53,51,54,56,32,113,117,111,53,51,54,57,41,0,0,0};
static C_char C_TLS li462[] C_aligned={C_lihdr(0,0,17),40,100,111,53,51,55,56,32,116,97,105,108,53,51,56,48,41,0};
static C_char C_TLS li463[] C_aligned={C_lihdr(0,0,22),40,115,97,108,58,112,114,105,110,116,32,46,32,97,114,103,115,53,51,54,53,41,0,0,0,0,0,0};
static C_char C_TLS li464[] C_aligned={C_lihdr(0,0,20),40,115,97,108,58,99,104,100,105,114,32,112,97,116,104,53,51,56,53,41,0,0,0,0};
static C_char C_TLS li465[] C_aligned={C_lihdr(0,0,19),40,115,97,108,58,108,111,97,100,32,102,105,108,101,53,51,56,55,41,0,0,0};
static C_char C_TLS li466[] C_aligned={C_lihdr(0,0,21),40,115,97,108,58,111,112,101,110,32,46,32,97,114,103,115,53,51,57,49,41,0,0,0,0,0};
static C_char C_TLS li467[] C_aligned={C_lihdr(0,0,7),40,112,111,114,116,115,41,0,0,0,0,0,0,0};
static C_char C_TLS li468[] C_aligned={C_lihdr(0,0,30),40,111,112,101,110,45,102,105,108,101,32,115,116,114,53,53,49,48,32,46,32,97,114,103,115,53,53,49,49,41,0,0,0,0,0,0};
static C_char C_TLS li469[] C_aligned={C_lihdr(0,0,20),40,109,112,58,111,112,101,110,32,46,32,97,114,103,115,53,53,50,49,41,0,0,0,0};
static C_char C_TLS li470[] C_aligned={C_lihdr(0,0,24),40,109,112,58,111,112,101,110,45,111,117,116,112,117,116,32,100,101,118,53,53,54,51,41};
static C_char C_TLS li471[] C_aligned={C_lihdr(0,0,23),40,109,112,58,111,112,101,110,45,105,110,112,117,116,32,100,101,118,53,53,54,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li472[] C_aligned={C_lihdr(0,0,41),40,109,112,58,111,112,101,110,45,111,117,116,112,117,116,45,102,105,108,101,32,112,97,116,104,53,53,54,55,32,46,32,97,114,103,115,53,53,54,56,41,0};
static C_char C_TLS li473[] C_aligned={C_lihdr(0,0,20),40,109,112,58,109,105,100,105,32,46,32,97,114,103,115,53,53,54,57,41,0,0,0,0};
static C_char C_TLS li474[] C_aligned={C_lihdr(0,0,19),40,109,112,58,111,102,102,32,46,32,97,114,103,115,53,55,50,53,41,0,0,0};
static C_char C_TLS li475[] C_aligned={C_lihdr(0,0,18),40,109,112,58,111,110,32,46,32,97,114,103,115,53,55,57,55,41,0,0};
static C_char C_TLS li476[] C_aligned={C_lihdr(0,0,21),40,109,112,58,116,111,117,99,104,32,46,32,97,114,103,115,53,57,48,55,41,0,0,0,0,0};
static C_char C_TLS li477[] C_aligned={C_lihdr(0,0,20),40,109,112,58,99,116,114,108,32,46,32,97,114,103,115,54,48,49,55,41,0,0,0,0};
static C_char C_TLS li478[] C_aligned={C_lihdr(0,0,20),40,109,112,58,112,114,111,103,32,46,32,97,114,103,115,54,49,50,55,41,0,0,0,0};
static C_char C_TLS li479[] C_aligned={C_lihdr(0,0,21),40,109,112,58,112,114,101,115,115,32,46,32,97,114,103,115,54,49,57,57,41,0,0,0,0,0};
static C_char C_TLS li480[] C_aligned={C_lihdr(0,0,20),40,109,112,58,98,101,110,100,32,46,32,97,114,103,115,54,50,55,49,41,0,0,0,0};
static C_char C_TLS li481[] C_aligned={C_lihdr(0,0,22),40,109,112,58,116,117,110,105,110,103,32,46,32,97,114,103,115,54,51,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li482[] C_aligned={C_lihdr(0,0,12),40,109,112,58,112,108,97,121,115,101,113,41,0,0,0,0};
static C_char C_TLS li483[] C_aligned={C_lihdr(0,0,12),40,109,112,58,115,97,118,101,115,101,113,41,0,0,0,0};
static C_char C_TLS li484[] C_aligned={C_lihdr(0,0,12),40,109,112,58,99,111,112,121,115,101,113,41,0,0,0,0};
static C_char C_TLS li485[] C_aligned={C_lihdr(0,0,12),40,109,112,58,112,108,111,116,115,101,113,41,0,0,0,0};
static C_char C_TLS li486[] C_aligned={C_lihdr(0,0,13),40,109,112,58,99,108,101,97,114,115,101,113,41,0,0,0,0,0};
static C_char C_TLS li487[] C_aligned={C_lihdr(0,0,25),40,109,112,58,114,101,99,111,114,100,115,101,113,32,46,32,97,114,103,115,54,51,52,53,41,0};
static C_char C_TLS li488[] C_aligned={C_lihdr(0,0,21),40,109,112,58,105,110,104,111,111,107,32,37,104,111,111,107,54,51,52,55,41,0,0,0,0,0};
static C_char C_TLS li489[] C_aligned={C_lihdr(0,0,14),40,100,111,54,51,53,48,32,97,54,51,53,50,41,0,0,0,0,0,0};
static C_char C_TLS li490[] C_aligned={C_lihdr(0,0,23),40,109,112,58,105,110,99,104,97,110,115,32,46,32,97,114,103,115,54,51,52,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li491[] C_aligned={C_lihdr(0,0,14),40,100,111,54,51,53,56,32,97,54,51,54,48,41,0,0,0,0,0,0};
static C_char C_TLS li492[] C_aligned={C_lihdr(0,0,23),40,109,112,58,105,110,116,121,112,101,115,32,46,32,97,114,103,115,54,51,53,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li493[] C_aligned={C_lihdr(0,0,15),40,109,112,58,109,109,32,112,116,114,54,51,54,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li494[] C_aligned={C_lihdr(0,0,42),40,115,110,100,58,111,112,101,110,45,111,117,116,112,117,116,45,102,105,108,101,32,102,105,108,101,54,51,54,55,32,46,32,97,114,103,115,54,51,54,56,41,0,0};
static C_char C_TLS li495[] C_aligned={C_lihdr(0,0,26),40,100,111,54,51,56,52,32,116,97,105,108,54,51,56,54,32,97,114,103,110,54,51,56,55,41,0,0};
static C_char C_TLS li496[] C_aligned={C_lihdr(0,0,41),40,99,115,58,111,112,101,110,45,111,117,116,112,117,116,45,102,105,108,101,32,112,97,116,104,54,51,56,49,32,46,32,97,114,103,115,54,51,56,50,41,0};
static C_char C_TLS li497[] C_aligned={C_lihdr(0,0,26),40,100,111,54,52,48,52,32,116,97,105,108,54,52,48,54,32,100,101,108,109,54,52,48,55,41,0,0};
static C_char C_TLS li498[] C_aligned={C_lihdr(0,0,27),40,99,115,58,115,101,110,100,32,116,121,112,101,54,51,57,55,32,97,114,103,115,54,51,57,56,41,0,0,0};
static C_char C_TLS li499[] C_aligned={C_lihdr(0,0,17),40,99,115,58,105,32,46,32,97,114,103,115,54,52,49,51,41,0};
static C_char C_TLS li500[] C_aligned={C_lihdr(0,0,17),40,99,115,58,102,32,46,32,97,114,103,115,54,52,49,52,41,0};
static C_char C_TLS li501[] C_aligned={C_lihdr(0,0,18),40,100,111,54,52,54,52,32,99,104,101,99,107,54,52,54,54,41,0,0};
static C_char C_TLS li502[] C_aligned={C_lihdr(0,0,8),40,100,111,54,52,53,54,41};
static C_char C_TLS li503[] C_aligned={C_lihdr(0,0,8),40,100,111,54,52,53,48,41};
static C_char C_TLS li504[] C_aligned={C_lihdr(0,0,17),40,100,111,54,52,52,50,32,116,97,105,108,54,52,52,52,41,0};
static C_char C_TLS li505[] C_aligned={C_lihdr(0,0,19),40,97,51,56,53,52,56,32,114,101,116,117,114,110,54,52,51,57,41,0,0,0};
static C_char C_TLS li506[] C_aligned={C_lihdr(0,0,18),40,102,95,51,56,53,52,51,32,97,114,103,115,54,52,51,56,41,0,0};
static C_char C_TLS li507[] C_aligned={C_lihdr(0,0,26),40,100,111,54,52,51,49,32,116,97,105,108,54,52,51,51,32,109,111,100,101,54,52,51,52,41,0,0};
static C_char C_TLS li508[] C_aligned={C_lihdr(0,0,34),40,109,97,107,101,45,109,101,115,115,97,103,101,45,112,97,114,115,101,114,32,116,101,109,112,108,97,116,101,54,52,50,53,41,0,0};
static C_char C_TLS li509[] C_aligned={C_lihdr(0,0,47),40,114,117,110,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,54,54,48,49,32,99,108,97,117,115,101,115,54,54,48,50,32,111,112,115,54,54,48,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li510[] C_aligned={C_lihdr(0,0,44),40,112,114,111,99,101,115,115,45,99,111,100,101,45,116,101,114,109,105,110,97,116,101,115,63,32,99,111,100,101,54,54,51,49,32,115,116,111,112,54,54,51,50,41,0,0,0,0};
static C_char C_TLS li511[] C_aligned={C_lihdr(0,0,11),40,110,101,120,116,115,116,97,114,116,41,0,0,0};
static C_char C_TLS li512[] C_aligned={C_lihdr(0,0,8),40,110,101,120,116,105,100,41};
static C_char C_TLS li513[] C_aligned={C_lihdr(0,0,14),40,100,111,54,54,57,54,32,112,54,54,57,56,41,0,0,0,0,0,0};
static C_char C_TLS li514[] C_aligned={C_lihdr(0,0,17),40,100,111,54,54,56,53,32,116,97,105,108,54,54,56,55,41,0};
static C_char C_TLS li515[] C_aligned={C_lihdr(0,0,17),40,100,111,54,54,55,52,32,116,97,105,108,54,54,55,54,41,0};
static C_char C_TLS li516[] C_aligned={C_lihdr(0,0,26),40,100,111,54,54,54,50,32,116,97,105,108,54,54,54,52,32,97,114,103,110,54,54,54,53,41,0,0};
static C_char C_TLS li517[] C_aligned={C_lihdr(0,0,17),40,100,111,54,54,53,55,32,116,97,105,108,54,54,53,57,41,0};
static C_char C_TLS li518[] C_aligned={C_lihdr(0,0,28),40,115,112,114,111,117,116,32,112,114,111,99,54,54,52,56,32,46,32,97,114,103,115,54,54,52,57,41,0,0,0,0};
static C_char C_TLS li519[] C_aligned={C_lihdr(0,0,5),40,110,111,119,41,0,0,0,0,0};
static C_char C_TLS li520[] C_aligned={C_lihdr(0,0,7),40,112,97,117,115,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li521[] C_aligned={C_lihdr(0,0,9),40,112,97,117,115,101,100,63,41,0};
static C_char C_TLS li522[] C_aligned={C_lihdr(0,0,10),40,99,111,110,116,105,110,117,101,41,0,0};
static C_char C_TLS li523[] C_aligned={C_lihdr(0,0,17),40,100,111,54,55,48,56,32,116,97,105,108,54,55,49,48,41,0};
static C_char C_TLS li524[] C_aligned={C_lihdr(0,0,19),40,115,116,111,112,32,46,32,112,114,111,99,105,100,54,55,48,55,41,0,0,0};
static C_char C_TLS li525[] C_aligned={C_lihdr(0,0,6),40,104,117,115,104,41,0,0,0,0,0,0};
static C_char C_TLS li526[] C_aligned={C_lihdr(0,0,16),40,100,111,54,54,50,52,32,111,112,115,54,54,50,54,41};
static C_char C_TLS li527[] C_aligned={C_lihdr(0,0,26),40,97,52,48,49,50,56,32,97,114,103,115,53,50,53,48,32,101,114,114,102,53,50,53,49,41,0,0};
static C_char C_TLS li528[] C_aligned={C_lihdr(0,0,35),40,97,52,48,49,52,50,32,117,110,105,116,53,50,53,50,32,105,110,102,111,53,50,53,51,32,101,114,114,102,53,50,53,52,41,0,0,0};
static C_char C_TLS li529[] C_aligned={C_lihdr(0,0,26),40,97,52,48,50,52,56,32,97,114,103,115,53,49,57,57,32,101,114,114,102,53,50,48,48,41,0,0};
static C_char C_TLS li530[] C_aligned={C_lihdr(0,0,17),40,100,111,53,50,49,49,32,114,101,115,116,53,50,49,51,41,0};
static C_char C_TLS li531[] C_aligned={C_lihdr(0,0,26),40,100,111,53,50,51,55,32,97,114,103,115,53,50,51,57,32,116,97,105,108,53,50,52,48,41,0,0};
static C_char C_TLS li532[] C_aligned={C_lihdr(0,0,35),40,97,52,48,50,56,55,32,117,110,105,116,53,50,48,52,32,105,110,102,111,53,50,48,53,32,101,114,114,102,53,50,48,54,41,0,0,0};
static C_char C_TLS li533[] C_aligned={C_lihdr(0,0,26),40,97,52,48,55,48,53,32,97,114,103,115,53,49,57,50,32,101,114,114,102,53,49,57,51,41,0,0};
static C_char C_TLS li534[] C_aligned={C_lihdr(0,0,26),40,97,52,48,56,53,48,32,97,114,103,115,53,49,55,56,32,101,114,114,102,53,49,55,57,41,0,0};
static C_char C_TLS li535[] C_aligned={C_lihdr(0,0,26),40,111,112,45,116,121,112,101,63,32,111,112,49,51,51,48,32,116,121,112,101,49,51,51,49,41,0,0};
static C_char C_TLS li536[] C_aligned={C_lihdr(0,0,8),40,97,49,49,55,57,57,41};
static C_char C_TLS li537[] C_aligned={C_lihdr(0,0,20),40,97,49,49,56,48,56,32,97,49,51,52,51,32,98,49,51,52,52,41,0,0,0,0};
static C_char C_TLS li538[] C_aligned={C_lihdr(0,0,47),40,100,111,49,51,51,52,32,111,112,49,51,51,54,32,99,108,97,117,115,101,49,51,51,55,32,114,101,109,97,105,110,115,49,51,51,56,32,98,111,100,121,49,51,51,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li539[] C_aligned={C_lihdr(0,0,17),40,100,111,53,49,53,55,32,116,97,105,108,53,49,53,57,41,0};
static C_char C_TLS li540[] C_aligned={C_lihdr(0,0,17),40,100,111,53,49,53,48,32,116,97,105,108,53,49,53,50,41,0};
static C_char C_TLS li541[] C_aligned={C_lihdr(0,0,20),40,100,111,53,49,51,57,32,99,108,97,117,115,101,115,53,49,52,49,41,0,0,0,0};
static C_char C_TLS li542[] C_aligned={C_lihdr(0,0,17),40,100,111,53,49,51,54,32,116,97,105,108,53,49,51,56,41,0};
static C_char C_TLS li543[] C_aligned={C_lihdr(0,0,35),40,97,52,48,56,57,54,32,117,110,105,116,53,49,56,56,32,105,110,102,111,53,49,56,57,32,101,114,114,102,53,49,57,48,41,0,0,0};
static C_char C_TLS li544[] C_aligned={C_lihdr(0,0,26),40,97,52,49,51,53,48,32,97,114,103,115,53,48,53,48,32,101,114,114,102,53,48,53,49,41,0,0};
static C_char C_TLS li545[] C_aligned={C_lihdr(0,0,35),40,97,52,49,52,49,56,32,117,110,105,116,53,48,54,50,32,105,110,102,111,53,48,54,51,32,101,114,114,102,53,48,54,52,41,0,0,0};
static C_char C_TLS li546[] C_aligned={C_lihdr(0,0,26),40,97,52,49,54,48,57,32,97,114,103,115,53,48,51,56,32,101,114,114,102,53,48,51,57,41,0,0};
static C_char C_TLS li547[] C_aligned={C_lihdr(0,0,35),40,97,52,49,54,51,53,32,117,110,105,116,53,48,52,51,32,105,110,102,111,53,48,52,52,32,101,114,114,102,53,48,52,53,41,0,0,0};
static C_char C_TLS li548[] C_aligned={C_lihdr(0,0,26),40,97,52,49,55,50,51,32,97,114,103,115,53,48,49,54,32,101,114,114,102,53,48,49,55,41,0,0};
static C_char C_TLS li549[] C_aligned={C_lihdr(0,0,17),40,100,111,53,48,50,52,32,105,116,101,114,53,48,50,54,41,0};
static C_char C_TLS li550[] C_aligned={C_lihdr(0,0,35),40,97,52,49,55,54,54,32,117,110,105,116,53,48,49,56,32,105,110,102,111,53,48,49,57,32,101,114,114,102,53,48,50,48,41,0,0,0};
static C_char C_TLS li551[] C_aligned={C_lihdr(0,0,26),40,97,52,50,48,48,51,32,97,114,103,115,53,48,49,51,32,101,114,114,102,53,48,49,52,41,0,0};
static C_char C_TLS li552[] C_aligned={C_lihdr(0,0,26),40,97,52,50,48,56,57,32,97,114,103,115,53,48,48,53,32,101,114,114,102,53,48,48,54,41,0,0};
static C_char C_TLS li553[] C_aligned={C_lihdr(0,0,14),40,97,52,50,49,52,49,32,101,53,48,49,49,41,0,0,0,0,0,0};
static C_char C_TLS li554[] C_aligned={C_lihdr(0,0,35),40,97,52,50,49,51,50,32,117,110,105,116,53,48,48,55,32,105,110,102,111,53,48,48,56,32,101,114,114,102,53,48,48,57,41,0,0,0};
static C_char C_TLS li555[] C_aligned={C_lihdr(0,0,26),40,97,52,50,49,57,49,32,97,114,103,115,52,57,57,56,32,101,114,114,102,52,57,57,57,41,0,0};
static C_char C_TLS li556[] C_aligned={C_lihdr(0,0,14),40,97,52,50,50,51,50,32,101,53,48,48,51,41,0,0,0,0,0,0};
static C_char C_TLS li557[] C_aligned={C_lihdr(0,0,35),40,97,52,50,50,50,54,32,117,110,105,116,53,48,48,48,32,105,110,102,111,53,48,48,49,32,101,114,114,102,53,48,48,50,41,0,0,0};
static C_char C_TLS li558[] C_aligned={C_lihdr(0,0,35),40,97,52,50,50,56,54,32,117,110,105,116,52,57,57,49,32,105,110,102,111,52,57,57,50,32,101,114,114,102,52,57,57,51,41,0,0,0};
static C_char C_TLS li559[] C_aligned={C_lihdr(0,0,35),40,97,52,50,51,52,55,32,117,110,105,116,52,57,56,53,32,105,110,102,111,52,57,56,54,32,101,114,114,102,52,57,56,55,41,0,0,0};
static C_char C_TLS li560[] C_aligned={C_lihdr(0,0,26),40,97,52,50,52,48,49,32,97,114,103,115,52,57,55,57,32,101,114,114,102,52,57,56,48,41,0,0};
static C_char C_TLS li561[] C_aligned={C_lihdr(0,0,35),40,97,52,50,52,51,49,32,117,110,105,116,52,57,56,49,32,105,110,102,111,52,57,56,50,32,101,114,114,102,52,57,56,51,41,0,0,0};
static C_char C_TLS li562[] C_aligned={C_lihdr(0,0,26),40,97,52,50,54,53,48,32,97,114,103,115,52,57,55,50,32,101,114,114,102,52,57,55,51,41,0,0};
static C_char C_TLS li563[] C_aligned={C_lihdr(0,0,26),40,97,52,50,54,55,54,32,97,114,103,115,52,57,54,48,32,101,114,114,102,52,57,54,49,41,0,0};
static C_char C_TLS li564[] C_aligned={C_lihdr(0,0,16),40,97,52,50,55,55,49,32,115,116,114,52,57,55,48,41};
static C_char C_TLS li565[] C_aligned={C_lihdr(0,0,35),40,97,52,50,55,53,49,32,117,110,105,116,52,57,54,53,32,105,110,102,111,52,57,54,54,32,101,114,114,102,52,57,54,55,41,0,0,0};
static C_char C_TLS li566[] C_aligned={C_lihdr(0,0,26),40,97,52,50,56,56,53,32,97,114,103,115,52,57,53,51,32,101,114,114,102,52,57,53,52,41,0,0};
static C_char C_TLS li567[] C_aligned={C_lihdr(0,0,35),40,97,52,50,57,49,57,32,117,110,105,116,52,57,53,53,32,105,110,102,111,52,57,53,54,32,101,114,114,102,52,57,53,55,41,0,0,0};
static C_char C_TLS li568[] C_aligned={C_lihdr(0,0,26),40,97,52,50,57,57,54,32,97,114,103,115,52,57,51,57,32,101,114,114,102,52,57,52,48,41,0,0};
static C_char C_TLS li569[] C_aligned={C_lihdr(0,0,17),40,100,111,52,57,52,54,32,97,114,103,115,52,57,52,56,41,0};
static C_char C_TLS li570[] C_aligned={C_lihdr(0,0,35),40,97,52,51,48,49,56,32,117,110,105,116,52,57,52,49,32,105,110,102,111,52,57,52,50,32,101,114,114,102,52,57,52,51,41,0,0,0};
static C_char C_TLS li571[] C_aligned={C_lihdr(0,0,26),40,97,52,51,49,53,48,32,97,114,103,115,52,57,51,50,32,101,114,114,102,52,57,51,51,41,0,0};
static C_char C_TLS li572[] C_aligned={C_lihdr(0,0,35),40,97,52,51,49,55,54,32,117,110,105,116,52,57,51,52,32,105,110,102,111,52,57,51,53,32,101,114,114,102,52,57,51,54,41,0,0,0};
static C_char C_TLS li573[] C_aligned={C_lihdr(0,0,26),40,97,52,51,50,56,54,32,97,114,103,115,52,57,50,56,32,101,114,114,102,52,57,50,57,41,0,0};
static C_char C_TLS li574[] C_aligned={C_lihdr(0,0,26),40,97,52,51,52,52,50,32,97,114,103,115,52,56,57,49,32,101,114,114,102,52,56,57,50,41,0,0};
static C_char C_TLS li575[] C_aligned={C_lihdr(0,0,35),40,97,52,51,52,54,48,32,117,110,105,116,52,56,57,51,32,105,110,102,111,52,56,57,52,32,101,114,114,102,52,56,57,53,41,0,0,0};
static C_char C_TLS li576[] C_aligned={C_lihdr(0,0,26),40,97,52,51,53,49,51,32,97,114,103,115,52,56,56,53,32,101,114,114,102,52,56,56,54,41,0,0};
static C_char C_TLS li577[] C_aligned={C_lihdr(0,0,26),40,97,52,51,54,54,53,32,97,114,103,115,52,56,56,50,32,101,114,114,102,52,56,56,51,41,0,0};
static C_char C_TLS li578[] C_aligned={C_lihdr(0,0,26),40,97,52,51,56,48,52,32,97,114,103,115,52,56,55,57,32,101,114,114,102,52,56,56,48,41,0,0};
static C_char C_TLS li579[] C_aligned={C_lihdr(0,0,26),40,97,52,51,57,50,52,32,97,114,103,115,52,56,53,56,32,101,114,114,102,52,56,53,57,41,0,0};
static C_char C_TLS li580[] C_aligned={C_lihdr(0,0,35),40,97,52,51,57,53,53,32,117,110,105,116,52,56,54,49,32,105,110,102,111,52,56,54,50,32,101,114,114,102,52,56,54,51,41,0,0,0};
static C_char C_TLS li581[] C_aligned={C_lihdr(0,0,26),40,97,52,52,48,52,55,32,97,114,103,115,52,56,53,50,32,101,114,114,102,52,56,53,51,41,0,0};
static C_char C_TLS li582[] C_aligned={C_lihdr(0,0,35),40,97,52,52,48,54,53,32,117,110,105,116,52,56,53,52,32,105,110,102,111,52,56,53,53,32,101,114,114,102,52,56,53,54,41,0,0,0};
static C_char C_TLS li583[] C_aligned={C_lihdr(0,0,17),40,100,111,52,52,56,54,32,100,97,116,97,52,52,56,56,41,0};
static C_char C_TLS li584[] C_aligned={C_lihdr(0,0,35),40,97,52,52,49,51,57,32,117,110,105,116,52,56,52,49,32,105,110,102,111,52,56,52,50,32,101,114,114,102,52,56,52,51,41,0,0,0};
static C_char C_TLS li585[] C_aligned={C_lihdr(0,0,26),40,97,52,52,50,51,57,32,97,114,103,115,52,56,50,57,32,101,114,114,102,52,56,51,48,41,0,0};
static C_char C_TLS li586[] C_aligned={C_lihdr(0,0,35),40,97,52,52,50,52,57,32,117,110,105,116,52,56,51,49,32,105,110,102,111,52,56,51,50,32,101,114,114,102,52,56,51,51,41,0,0,0};
static C_char C_TLS li587[] C_aligned={C_lihdr(0,0,32),40,100,111,51,52,50,56,32,105,51,52,51,48,32,120,51,52,51,49,32,100,51,52,51,50,32,114,51,52,51,51,41};
static C_char C_TLS li588[] C_aligned={C_lihdr(0,0,14),40,97,52,52,52,50,53,32,101,51,52,50,52,41,0,0,0,0,0,0};
static C_char C_TLS li589[] C_aligned={C_lihdr(0,0,84),40,100,111,51,50,56,51,32,100,51,50,56,53,32,107,51,50,56,54,32,112,51,50,56,55,32,107,60,51,50,56,56,32,107,62,51,50,56,57,32,102,51,50,57,48,32,102,62,51,50,57,49,32,102,60,51,50,57,50,32,111,51,50,57,51,32,120,51,50,57,52,32,110,51,50,57,53,32,101,51,50,57,54,41,0,0,0,0};
static C_char C_TLS li590[] C_aligned={C_lihdr(0,0,16),40,100,111,51,50,55,55,32,107,101,121,51,50,55,57,41};
static C_char C_TLS li591[] C_aligned={C_lihdr(0,0,10),40,116,111,112,108,101,118,101,108,41,0,0};


/* from k7605 in tokenize in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static C_word C_fcall stub428(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub428(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mpointer(&C_a,(void*)sal_tokenize(t0));
return C_r;}

/* from k7587 in do6404 in k38214 in k38211 in k38208 in cs:send in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static C_word C_fcall stub419(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub419(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
double t2=(double )C_c_double(C_a2);
char * t3=(char * )C_string_or_null(C_a3);
cs_send_score(t0,t1,t2,t3);
return C_r;}

/* from k7561 in do6384 in k38039 in k38036 in cs:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static C_word C_fcall stub410(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub410(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
cs_init_score(t0);
return C_r;}

/* from ffi_mp_clear_seq */
static C_word C_fcall stub407(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub407(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_clear_seq();
return C_r;}

/* from ffi_mp_plot_seq */
static C_word C_fcall stub405(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub405(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_plot_seq();
return C_r;}

/* from ffi_mp_copy_seq */
static C_word C_fcall stub403(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub403(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_copy_seq();
return C_r;}

/* from ffi_mp_save_seq */
static C_word C_fcall stub401(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub401(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_save_seq();
return C_r;}

/* from ffi_mp_play_seq */
static C_word C_fcall stub399(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub399(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_play_seq();
return C_r;}

/* from k7539 */
static C_word C_fcall stub396(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub396(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_set_tuning(t0);
return C_r;}

/* from k7532 */
static C_word C_fcall stub392(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub392(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_set_message_mask(t0);
return C_r;}

/* from k7525 */
static C_word C_fcall stub388(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub388(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_set_channel_mask(t0);
return C_r;}

/* from k7518 */
static C_word C_fcall stub380(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub380(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_send_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k7495 */
static C_word C_fcall stub368(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub368(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_send_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k7465 in mp:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static C_word C_fcall stub358(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub358(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
mp_set_output_file(t0);
return C_r;}

/* from k7458 */
static C_word C_fcall stub354(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub354(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_close_input(t0);
return C_r;}

/* from k7451 */
static C_word C_fcall stub350(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub350(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_close_output(t0);
return C_r;}

/* from k7444 */
static C_word C_fcall stub346(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub346(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_mk_bool(mp_open_input(t0));
return C_r;}

/* from k7437 */
static C_word C_fcall stub342(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub342(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_mk_bool(mp_open_output(t0));
return C_r;}

/* from ffi_port_info */
static C_word C_fcall stub338(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub338(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)cm_port_info());
return C_r;}

/* from k7417 */
static C_word C_fcall stub333(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub333(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mk_bool(cm_pathname_directory_p(t0));
return C_r;}

/* from k7403 in k32134 in k32131 in open-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static C_word C_fcall stub327(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub327(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mk_bool(cm_pathname_writable_p(t0));
return C_r;}

/* from k7389 in sal:load in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static C_word C_fcall stub321(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub321(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mk_bool(cm_pathname_exists_p(t0));
return C_r;}

/* from k7375 in full-pathname in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static C_word C_fcall stub314(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub314(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mpointer(&C_a,(void*)cm_full_pathname(t0));
return C_r;}

/* from k7357 in ffi_pathname_type in k6871 in k6758 in k6755 in k6752 in k6749 */
static C_word C_fcall stub307(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub307(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mpointer(&C_a,(void*)cm_pathname_type(t0));
return C_r;}

/* from k7339 */
static C_word C_fcall stub300(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub300(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mpointer(&C_a,(void*)cm_pathname_name(t0));
return C_r;}

/* from k7321 */
static C_word C_fcall stub293(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub293(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mpointer(&C_a,(void*)cm_pathname_directory(t0));
return C_r;}

/* from k7303 in chdir in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static C_word C_fcall stub287(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub287(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mk_bool(cm_set_current_directory(t0));
return C_r;}

/* from ffi_current_directory */
static C_word C_fcall stub283(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub283(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)cm_current_directory());
return C_r;}

/* from ffi_temp_directory */
static C_word C_fcall stub280(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub280(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)cm_temp_directory());
return C_r;}

/* from ffi_user_home_directory */
static C_word C_fcall stub277(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub277(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)cm_user_home_directory());
return C_r;}

/* from ffi_set_inhook */
static C_word C_fcall stub274(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub274(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
cm_sched_set_inhook(t0);
return C_r;}

/* from ffi_sched_score_time */
static C_word C_fcall stub270(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub270(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_sched_score_time());
return C_r;}

/* from k7272 */
static C_word C_fcall stub267(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub267(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
cm_sched_set_score_mode(t0);
return C_r;}

/* from ffi_sched_score_mode_p */
static C_word C_fcall stub264(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub264(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mk_bool(cm_sched_score_mode_p());
return C_r;}

/* from ffi_sched_busy_p */
static C_word C_fcall stub262(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub262(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mk_bool(cm_sched_busy_p());
return C_r;}

/* from k7259 */
static C_word C_fcall stub259(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub259(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
cm_sched_stop(t0);
return C_r;}

/* from ffi_sched_continue */
static C_word C_fcall stub256(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub256(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cm_sched_continue();
return C_r;}

/* from ffi_sched_pause */
static C_word C_fcall stub254(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub254(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cm_sched_pause();
return C_r;}

/* from ffi_sched_paused_p */
static C_word C_fcall stub252(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub252(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mk_bool(cm_sched_paused_p());
return C_r;}

/* from k7243 */
static C_word C_fcall stub247(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub247(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
cm_sched_sprout(t0,t1,t2);
return C_r;}

/* from ffi_now */
static C_word C_fcall stub241(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub241(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_now());
return C_r;}

/* from k7229 */
static C_word C_fcall stub237(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub237(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_log_two(t0));
return C_r;}

/* from k7222 */
static C_word C_fcall stub232(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub232(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_log_ten(t0));
return C_r;}

/* from k7215 */
static C_word C_fcall stub226(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub226(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
C_r=C_flonum(&C_a,cm_bes_jn(t0,t1));
return C_r;}

/* from ffi_ranbrown in k6871 in k6758 in k6755 in k6752 in k6749 */
static C_word C_fcall stub221(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub221(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_ranbrown());
return C_r;}

/* from ffi_ranpink in k6871 in k6758 in k6755 in k6752 in k6749 */
static C_word C_fcall stub218(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub218(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_ranpink());
return C_r;}

/* from k7198 */
static C_word C_fcall stub215(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub215(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)cm_ranpoisson(t0));
return C_r;}

/* from ffi_rancauchy in k6871 in k6758 in k6755 in k6752 in k6749 */
static C_word C_fcall stub211(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub211(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_rancauchy());
return C_r;}

/* from k7188 */
static C_word C_fcall stub207(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub207(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_rangamma(t0));
return C_r;}

/* from k7181 */
static C_word C_fcall stub201(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub201(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,cm_ranbeta(t0,t1));
return C_r;}

/* from k7170 */
static C_word C_fcall stub195(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub195(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_ranexp(t0));
return C_r;}

/* from k7163 */
static C_word C_fcall stub189(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub189(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,cm_rangauss(t0,t1));
return C_r;}

/* from ffi_ranmiddle in k6871 in k6758 in k6755 in k6752 in k6749 */
static C_word C_fcall stub184(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub184(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_ranmiddle());
return C_r;}

/* from ffi_ranhigh in k6871 in k6758 in k6755 in k6752 in k6749 */
static C_word C_fcall stub181(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub181(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_ranhigh());
return C_r;}

/* from ffi_ranlow in k6871 in k6758 in k6755 in k6752 in k6749 */
static C_word C_fcall stub178(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub178(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_ranlow());
return C_r;}

/* from k7143 */
static C_word C_fcall stub173(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub173(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,cm_ranfloat2(t0,t1));
return C_r;}

/* from k7132 */
static C_word C_fcall stub167(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub167(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)cm_ranint2(t0,t1));
return C_r;}

/* from k7121 */
static C_word C_fcall stub161(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub161(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_ranfloat(t0));
return C_r;}

/* from k7114 */
static C_word C_fcall stub157(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub157(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_fix((C_word)cm_ranint(t0));
return C_r;}

/* from ffi_ranseed in k6871 in k6758 in k6755 in k6752 in k6749 */
static C_word C_fcall stub153(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub153(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_s64 t0=(C_s64 )C_num_to_int64(C_a0);
cm_ranseed(t0);
return C_r;}

/* from k7104 */
static C_word C_fcall stub148(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub148(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_hertz_to_keynum(t0));
return C_r;}

/* from k7097 */
static C_word C_fcall stub144(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub144(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)cm_keynum_to_pc(t0));
return C_r;}

/* from k7090 */
static C_word C_fcall stub139(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub139(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_keynum_to_hertz(t0));
return C_r;}

/* from k7083 */
static C_word C_fcall stub131(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub131(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
C_r=C_flonum(&C_a,cm_geoseg(t0,t1,t2,t3));
return C_r;}

/* from k7064 */
static C_word C_fcall stub120(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub120(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
C_r=C_flonum(&C_a,cm_explseg(t0,t1,t2,t3));
return C_r;}

/* from k7045 */
static C_word C_fcall stub113(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub113(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)cm_scaler_to_cents(t0));
return C_r;}

/* from k7038 */
static C_word C_fcall stub108(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub108(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_flonum(&C_a,cm_cents_to_scaler(t0));
return C_r;}

/* from k7031 */
static C_word C_fcall stub101(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub101(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
C_r=C_flonum(&C_a,cm_rhythm_to_seconds(t0,t1,t2));
return C_r;}

/* from k7016 */
static C_word C_fcall stub93(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub93(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,cm_quantize(t0,t1));
return C_r;}

/* from k7005 */
static C_word C_fcall stub88(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub88(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)cm_float_to_fixnum(t0));
return C_r;}

/* from k6998 */
static C_word C_fcall stub79(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub79(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_fix((C_word)cm_discrete(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k6971 */
static C_word C_fcall stub64(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub64(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_flonum(&C_a,cm_rescale(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k6937 */
static C_word C_fcall stub53(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub53(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
cm_play(t0);
return C_r;}

/* from k6923 in shell in k6871 in k6758 in k6755 in k6752 in k6749 */
static C_word C_fcall stub47(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub47(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
cm_shell(t0);
return C_r;}

/* from k6909 */
static C_word C_fcall stub41(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub41(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
cm_print_values(t0);
return C_r;}

/* from k6895 in ffi_print_output in k6871 in k6758 in k6755 in k6752 in k6749 */
static C_word C_fcall stub34(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub34(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
int t1=(int )C_truep(C_a1);
cm_print_output(t0,t1);
return C_r;}

/* from k6881 in print-error in k6871 in k6758 in k6755 in k6752 in k6749 */
static C_word C_fcall stub27(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub27(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
cm_print_error(t0);
return C_r;}

/* from ffi_quit */
static C_word C_fcall stub24(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub24(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cm_quit();
return C_r;}

C_noret_decl(C_cm_toplevel)
C_externexport void C_ccall C_cm_toplevel(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6751)
static void C_ccall f_6751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6754)
static void C_ccall f_6754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6757)
static void C_ccall f_6757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6760)
static void C_ccall f_6760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6873)
static void C_ccall f_6873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22153)
static void C_ccall f_22153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44521)
static void C_fcall f_44521(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_44747)
static void C_ccall f_44747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44555)
static void C_ccall f_44555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44567)
static void C_ccall f_44567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44571)
static void C_ccall f_44571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44575)
static void C_ccall f_44575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44731)
static void C_ccall f_44731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44581)
static void C_fcall f_44581(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13) C_noret;
C_noret_decl(f_44601)
static void C_fcall f_44601(C_word t0,C_word t1) C_noret;
C_noret_decl(f_44604)
static void C_fcall f_44604(C_word t0,C_word t1) C_noret;
C_noret_decl(f_44612)
static void C_ccall f_44612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44619)
static void C_ccall f_44619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44622)
static void C_ccall f_44622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44626)
static void C_ccall f_44626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44633)
static void C_ccall f_44633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44636)
static void C_ccall f_44636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44640)
static void C_ccall f_44640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44647)
static void C_ccall f_44647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44591)
static void C_ccall f_44591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44544)
static void C_ccall f_44544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44534)
static void C_ccall f_44534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44537)
static void C_ccall f_44537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22156)
static void C_ccall f_22156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23137)
static void C_ccall f_23137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44426)
static void C_ccall f_44426(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_44439)
static void C_ccall f_44439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44515)
static void C_ccall f_44515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44442)
static void C_ccall f_44442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44447)
static void C_fcall f_44447(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_44499)
static void C_ccall f_44499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44469)
static void C_ccall f_44469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44483)
static void C_ccall f_44483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44495)
static void C_ccall f_44495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44472)
static void C_ccall f_44472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23157)
static void C_ccall f_23157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28210)
static void C_ccall f_28210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44404)
static void C_ccall f_44404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29867)
static void C_ccall f_29867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44384)
static void C_ccall f_44384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29870)
static void C_ccall f_29870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44344)
static void C_ccall f_44344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29873)
static void C_ccall f_29873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44250)
static void C_ccall f_44250(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_44254)
static void C_ccall f_44254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44257)
static void C_ccall f_44257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44275)
static void C_ccall f_44275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44278)
static void C_ccall f_44278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44309)
static void C_ccall f_44309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44281)
static void C_fcall f_44281(C_word t0,C_word t1) C_noret;
C_noret_decl(f_44287)
static void C_ccall f_44287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44240)
static void C_ccall f_44240(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_44234)
static void C_ccall f_44234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29876)
static void C_ccall f_29876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44138)
static void C_ccall f_44138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44140)
static void C_ccall f_44140(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_44144)
static void C_ccall f_44144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44147)
static void C_ccall f_44147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44150)
static void C_ccall f_44150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44194)
static void C_ccall f_44194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44186)
static void C_ccall f_44186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44153)
static void C_ccall f_44153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28646)
static void C_fcall f_28646(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28692)
static void C_ccall f_28692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28659)
static void C_fcall f_28659(C_word t0,C_word t1) C_noret;
C_noret_decl(f_44176)
static void C_ccall f_44176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44156)
static void C_ccall f_44156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44159)
static void C_ccall f_44159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44130)
static void C_ccall f_44130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29879)
static void C_ccall f_29879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44102)
static void C_ccall f_44102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29882)
static void C_ccall f_29882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44066)
static void C_ccall f_44066(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_44078)
static void C_ccall f_44078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44074)
static void C_ccall f_44074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44048)
static void C_ccall f_44048(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_44042)
static void C_ccall f_44042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29885)
static void C_ccall f_29885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43956)
static void C_ccall f_43956(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_43960)
static void C_ccall f_43960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43963)
static void C_ccall f_43963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43966)
static void C_ccall f_43966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43979)
static void C_ccall f_43979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43925)
static void C_ccall f_43925(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43929)
static void C_ccall f_43929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43944)
static void C_ccall f_43944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43919)
static void C_ccall f_43919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29888)
static void C_ccall f_29888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43805)
static void C_ccall f_43805(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43821)
static void C_ccall f_43821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43832)
static void C_ccall f_43832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43799)
static void C_ccall f_43799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29944)
static void C_ccall f_29944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43666)
static void C_ccall f_43666(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43689)
static void C_ccall f_43689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43686)
static void C_ccall f_43686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43660)
static void C_ccall f_43660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29947)
static void C_ccall f_29947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43514)
static void C_ccall f_43514(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43532)
static void C_ccall f_43532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43541)
static void C_ccall f_43541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43508)
static void C_ccall f_43508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29950)
static void C_ccall f_29950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43461)
static void C_ccall f_43461(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_43465)
static void C_ccall f_43465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43468)
static void C_ccall f_43468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43484)
static void C_ccall f_43484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43443)
static void C_ccall f_43443(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43437)
static void C_ccall f_43437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29953)
static void C_ccall f_29953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43361)
static void C_ccall f_43361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30092)
static void C_ccall f_30092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43287)
static void C_ccall f_43287(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43294)
static void C_ccall f_43294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43281)
static void C_ccall f_43281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30095)
static void C_ccall f_30095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43177)
static void C_ccall f_43177(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_43185)
static void C_ccall f_43185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43151)
static void C_ccall f_43151(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43168)
static void C_ccall f_43168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43159)
static void C_fcall f_43159(C_word t0,C_word t1) C_noret;
C_noret_decl(f_43145)
static void C_ccall f_43145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30098)
static void C_ccall f_30098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43101)
static void C_ccall f_43101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30101)
static void C_ccall f_30101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43019)
static void C_ccall f_43019(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_43030)
static void C_ccall f_43030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43032)
static void C_fcall f_43032(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_43061)
static void C_ccall f_43061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42997)
static void C_ccall f_42997(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43013)
static void C_ccall f_43013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42991)
static void C_ccall f_42991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30104)
static void C_ccall f_30104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42920)
static void C_ccall f_42920(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_42924)
static void C_ccall f_42924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42931)
static void C_ccall f_42931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42886)
static void C_ccall f_42886(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42906)
static void C_ccall f_42906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42910)
static void C_ccall f_42910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42902)
static void C_ccall f_42902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42880)
static void C_ccall f_42880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30107)
static void C_ccall f_30107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42752)
static void C_ccall f_42752(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_42788)
static void C_ccall f_42788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42756)
static void C_ccall f_42756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38452)
static void C_fcall f_38452(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38461)
static void C_ccall f_38461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38474)
static void C_ccall f_38474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38477)
static void C_ccall f_38477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38493)
static void C_ccall f_38493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42772)
static void C_ccall f_42772(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_42784)
static void C_ccall f_42784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42780)
static void C_ccall f_42780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42677)
static void C_ccall f_42677(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42720)
static void C_ccall f_42720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42724)
static void C_ccall f_42724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42684)
static void C_fcall f_42684(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42695)
static void C_ccall f_42695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42671)
static void C_ccall f_42671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30110)
static void C_ccall f_30110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42651)
static void C_ccall f_42651(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42645)
static void C_ccall f_42645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30113)
static void C_ccall f_30113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42625)
static void C_ccall f_42625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42629)
static void C_ccall f_42629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42617)
static void C_ccall f_42617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30116)
static void C_ccall f_30116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42597)
static void C_ccall f_42597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42601)
static void C_ccall f_42601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42589)
static void C_ccall f_42589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30119)
static void C_ccall f_30119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42569)
static void C_ccall f_42569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42573)
static void C_ccall f_42573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42561)
static void C_ccall f_42561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30122)
static void C_ccall f_30122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42541)
static void C_ccall f_42541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42545)
static void C_ccall f_42545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42533)
static void C_ccall f_42533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30125)
static void C_ccall f_30125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42432)
static void C_ccall f_42432(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_42402)
static void C_ccall f_42402(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42426)
static void C_ccall f_42426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42396)
static void C_ccall f_42396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30128)
static void C_ccall f_30128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42346)
static void C_ccall f_42346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42348)
static void C_ccall f_42348(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_42352)
static void C_ccall f_42352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42380)
static void C_ccall f_42380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42372)
static void C_ccall f_42372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42368)
static void C_ccall f_42368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42355)
static void C_ccall f_42355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42338)
static void C_ccall f_42338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30131)
static void C_ccall f_30131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42285)
static void C_ccall f_42285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42287)
static void C_ccall f_42287(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_42291)
static void C_ccall f_42291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42322)
static void C_ccall f_42322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42314)
static void C_ccall f_42314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42310)
static void C_ccall f_42310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42294)
static void C_ccall f_42294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42297)
static void C_ccall f_42297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42277)
static void C_ccall f_42277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30134)
static void C_ccall f_30134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42227)
static void C_ccall f_42227(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_42241)
static void C_ccall f_42241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42233)
static void C_ccall f_42233(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_42192)
static void C_ccall f_42192(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42225)
static void C_ccall f_42225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42186)
static void C_ccall f_42186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30137)
static void C_ccall f_30137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42133)
static void C_ccall f_42133(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_42137)
static void C_ccall f_42137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42150)
static void C_ccall f_42150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42142)
static void C_ccall f_42142(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_42090)
static void C_ccall f_42090(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42123)
static void C_ccall f_42123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42084)
static void C_ccall f_42084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30140)
static void C_ccall f_30140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42004)
static void C_ccall f_42004(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41998)
static void C_ccall f_41998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30143)
static void C_ccall f_30143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41767)
static void C_ccall f_41767(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_41771)
static void C_ccall f_41771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41779)
static void C_fcall f_41779(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_41802)
static void C_ccall f_41802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41805)
static void C_ccall f_41805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41808)
static void C_ccall f_41808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41811)
static void C_ccall f_41811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41871)
static void C_ccall f_41871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41878)
static void C_ccall f_41878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41888)
static void C_ccall f_41888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41898)
static void C_ccall f_41898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41912)
static void C_ccall f_41912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41922)
static void C_ccall f_41922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41932)
static void C_ccall f_41932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41942)
static void C_ccall f_41942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41814)
static void C_fcall f_41814(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41838)
static void C_fcall f_41838(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41817)
static void C_fcall f_41817(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41724)
static void C_ccall f_41724(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41757)
static void C_ccall f_41757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41718)
static void C_ccall f_41718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30146)
static void C_ccall f_30146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41636)
static void C_ccall f_41636(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_41640)
static void C_ccall f_41640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41646)
static void C_ccall f_41646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41666)
static void C_ccall f_41666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41610)
static void C_ccall f_41610(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41620)
static void C_fcall f_41620(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41604)
static void C_ccall f_41604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30149)
static void C_ccall f_30149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41419)
static void C_ccall f_41419(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_41423)
static void C_ccall f_41423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41429)
static void C_ccall f_41429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41438)
static void C_ccall f_41438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41476)
static void C_ccall f_41476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41468)
static void C_ccall f_41468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41445)
static void C_ccall f_41445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41449)
static void C_ccall f_41449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41351)
static void C_ccall f_41351(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41370)
static void C_ccall f_41370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41405)
static void C_ccall f_41405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41376)
static void C_fcall f_41376(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41380)
static void C_ccall f_41380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41394)
static void C_ccall f_41394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41383)
static void C_fcall f_41383(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41364)
static void C_fcall f_41364(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41345)
static void C_ccall f_41345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30152)
static void C_ccall f_30152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41073)
static void C_ccall f_41073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30675)
static void C_ccall f_30675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41025)
static void C_ccall f_41025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41017)
static void C_ccall f_41017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30678)
static void C_ccall f_30678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40897)
static void C_ccall f_40897(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30684)
static void C_ccall f_30684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31168)
static void C_ccall f_31168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31202)
static void C_ccall f_31202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31194)
static void C_ccall f_31194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31190)
static void C_ccall f_31190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31175)
static void C_ccall f_31175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31179)
static void C_ccall f_31179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31172)
static void C_ccall f_31172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30708)
static void C_fcall f_30708(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31161)
static void C_ccall f_31161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31157)
static void C_ccall f_31157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30715)
static void C_fcall f_30715(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31032)
static void C_fcall f_31032(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31053)
static void C_ccall f_31053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31055)
static void C_fcall f_31055(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31069)
static void C_ccall f_31069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31122)
static void C_ccall f_31122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31072)
static void C_fcall f_31072(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31107)
static void C_ccall f_31107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31075)
static void C_fcall f_31075(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31088)
static void C_ccall f_31088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31100)
static void C_ccall f_31100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31092)
static void C_ccall f_31092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31078)
static void C_fcall f_31078(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31042)
static void C_ccall f_31042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30718)
static void C_ccall f_30718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30996)
static void C_fcall f_30996(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31022)
static void C_ccall f_31022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31007)
static void C_ccall f_31007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30721)
static void C_ccall f_30721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30936)
static void C_fcall f_30936(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30946)
static void C_ccall f_30946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30949)
static void C_ccall f_30949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30970)
static void C_ccall f_30970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30952)
static void C_fcall f_30952(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30956)
static void C_ccall f_30956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30904)
static void C_ccall f_30904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30907)
static void C_fcall f_30907(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30724)
static void C_fcall f_30724(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30727)
static void C_fcall f_30727(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30861)
static void C_ccall f_30861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30869)
static void C_ccall f_30869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30865)
static void C_ccall f_30865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30730)
static void C_fcall f_30730(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30824)
static void C_ccall f_30824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30820)
static void C_ccall f_30820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30816)
static void C_ccall f_30816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30769)
static void C_ccall f_30769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30765)
static void C_ccall f_30765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30847)
static void C_ccall f_30847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30831)
static void C_ccall f_30831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11696)
static void C_fcall f_11696(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11731)
static void C_fcall f_11731(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_11741)
static void C_fcall f_11741(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11745)
static void C_ccall f_11745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11748)
static void C_ccall f_11748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11809)
static void C_ccall f_11809(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11800)
static void C_ccall f_11800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11751)
static void C_ccall f_11751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11770)
static void C_ccall f_11770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11777)
static void C_ccall f_11777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11754)
static void C_ccall f_11754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11760)
static void C_ccall f_11760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11729)
static void C_ccall f_11729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11704)
static void C_fcall f_11704(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11703)
static void C_ccall f_11703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11864)
static void C_fcall f_11864(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39178)
static void C_ccall f_39178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39181)
static void C_ccall f_39181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39184)
static void C_ccall f_39184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39188)
static void C_ccall f_39188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39402)
static void C_ccall f_39402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39390)
static void C_ccall f_39390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39386)
static void C_ccall f_39386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39191)
static void C_fcall f_39191(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39335)
static void C_fcall f_39335(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39371)
static void C_ccall f_39371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39364)
static void C_ccall f_39364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39194)
static void C_ccall f_39194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39265)
static void C_ccall f_39265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39269)
static void C_ccall f_39269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39261)
static void C_ccall f_39261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6827)
static void C_ccall f_6827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39241)
static void C_ccall f_39241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39237)
static void C_ccall f_39237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39204)
static void C_fcall f_39204(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39215)
static void C_ccall f_39215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39223)
static void C_ccall f_39223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39219)
static void C_ccall f_39219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40851)
static void C_ccall f_40851(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40867)
static void C_ccall f_40867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40870)
static void C_ccall f_40870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40873)
static void C_fcall f_40873(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40876)
static void C_fcall f_40876(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40887)
static void C_ccall f_40887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40845)
static void C_ccall f_40845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31209)
static void C_ccall f_31209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40706)
static void C_ccall f_40706(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40745)
static void C_ccall f_40745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40719)
static void C_fcall f_40719(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40700)
static void C_ccall f_40700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31212)
static void C_ccall f_31212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40288)
static void C_ccall f_40288(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_40292)
static void C_ccall f_40292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40304)
static void C_ccall f_40304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40362)
static void C_ccall f_40362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40365)
static void C_ccall f_40365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40368)
static void C_ccall f_40368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40580)
static void C_ccall f_40580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40518)
static void C_ccall f_40518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40552)
static void C_ccall f_40552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40527)
static void C_fcall f_40527(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40538)
static void C_ccall f_40538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40534)
static void C_ccall f_40534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40377)
static void C_fcall f_40377(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40455)
static void C_ccall f_40455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40496)
static void C_ccall f_40496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40500)
static void C_ccall f_40500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40504)
static void C_ccall f_40504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40459)
static void C_ccall f_40459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40463)
static void C_ccall f_40463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40490)
static void C_ccall f_40490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40466)
static void C_fcall f_40466(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40380)
static void C_fcall f_40380(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40452)
static void C_ccall f_40452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40394)
static void C_ccall f_40394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40396)
static void C_fcall f_40396(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40444)
static void C_ccall f_40444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40415)
static void C_ccall f_40415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40432)
static void C_ccall f_40432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40418)
static void C_fcall f_40418(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40411)
static void C_ccall f_40411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40383)
static void C_ccall f_40383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40313)
static void C_fcall f_40313(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_40323)
static void C_ccall f_40323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40329)
static void C_ccall f_40329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40301)
static void C_ccall f_40301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40249)
static void C_ccall f_40249(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40266)
static void C_ccall f_40266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40282)
static void C_ccall f_40282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40260)
static void C_fcall f_40260(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40243)
static void C_ccall f_40243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31215)
static void C_ccall f_31215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40167)
static void C_ccall f_40167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31218)
static void C_ccall f_31218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40143)
static void C_ccall f_40143(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_40155)
static void C_ccall f_40155(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40151)
static void C_ccall f_40151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40129)
static void C_ccall f_40129(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40137)
static void C_ccall f_40137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40123)
static void C_ccall f_40123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31221)
static void C_ccall f_31221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38446)
static void C_ccall f_38446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40119)
static void C_ccall f_40119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38996)
static void C_ccall f_38996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40111)
static void C_ccall f_40111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38999)
static void C_ccall f_38999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40103)
static void C_ccall f_40103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39002)
static void C_ccall f_39002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40095)
static void C_ccall f_40095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39005)
static void C_ccall f_39005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40087)
static void C_ccall f_40087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39008)
static void C_ccall f_39008(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40079)
static void C_ccall f_40079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39011)
static void C_ccall f_39011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40071)
static void C_ccall f_40071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39014)
static void C_ccall f_39014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40063)
static void C_ccall f_40063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39017)
static void C_ccall f_39017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40055)
static void C_ccall f_40055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39020)
static void C_ccall f_39020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40047)
static void C_ccall f_40047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39023)
static void C_ccall f_39023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40039)
static void C_ccall f_40039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39026)
static void C_ccall f_39026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40031)
static void C_ccall f_40031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39029)
static void C_ccall f_39029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40023)
static void C_ccall f_40023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39032)
static void C_ccall f_39032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40015)
static void C_ccall f_40015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39035)
static void C_ccall f_39035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40007)
static void C_ccall f_40007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39038)
static void C_ccall f_39038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39999)
static void C_ccall f_39999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39041)
static void C_ccall f_39041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39991)
static void C_ccall f_39991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39044)
static void C_ccall f_39044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39983)
static void C_ccall f_39983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39047)
static void C_ccall f_39047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39975)
static void C_ccall f_39975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39050)
static void C_ccall f_39050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39967)
static void C_ccall f_39967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39053)
static void C_ccall f_39053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39959)
static void C_ccall f_39959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39056)
static void C_ccall f_39056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39951)
static void C_ccall f_39951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39059)
static void C_ccall f_39059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39882)
static void C_fcall f_39882(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39910)
static void C_fcall f_39910(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39133)
static void C_ccall f_39133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39880)
static void C_ccall f_39880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39862)
static void C_ccall f_39862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39804)
static void C_ccall f_39804(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_39804)
static void C_ccall f_39804r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_39822)
static void C_fcall f_39822(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39832)
static void C_ccall f_39832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39808)
static void C_ccall f_39808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39798)
static void C_ccall f_39798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39792)
static void C_ccall f_39792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39786)
static void C_ccall f_39786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39780)
static void C_ccall f_39780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39410)
static void C_ccall f_39410(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_39410)
static void C_ccall f_39410r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_39747)
static void C_fcall f_39747(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39757)
static void C_ccall f_39757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39733)
static void C_ccall f_39733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39417)
static void C_ccall f_39417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39671)
static void C_fcall f_39671(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39685)
static void C_ccall f_39685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39420)
static void C_ccall f_39420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39618)
static void C_fcall f_39618(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39641)
static void C_fcall f_39641(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39628)
static void C_ccall f_39628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39604)
static void C_ccall f_39604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39426)
static void C_ccall f_39426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39566)
static void C_fcall f_39566(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39576)
static void C_ccall f_39576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39552)
static void C_ccall f_39552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39432)
static void C_ccall f_39432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39549)
static void C_ccall f_39549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39435)
static void C_fcall f_39435(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39541)
static void C_ccall f_39541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39545)
static void C_ccall f_39545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39505)
static void C_fcall f_39505(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39530)
static void C_ccall f_39530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39534)
static void C_ccall f_39534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39515)
static void C_ccall f_39515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39494)
static void C_ccall f_39494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39464)
static void C_fcall f_39464(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39436)
static void C_fcall f_39436(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39135)
static void C_fcall f_39135(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39151)
static void C_ccall f_39151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39062)
static void C_ccall f_39062(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39073)
static void C_ccall f_39073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39076)
static void C_fcall f_39076(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39083)
static void C_ccall f_39083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38522)
static void C_fcall f_38522(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38855)
static void C_fcall f_38855(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38875)
static void C_ccall f_38875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38944)
static void C_ccall f_38944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38940)
static void C_ccall f_38940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38901)
static void C_ccall f_38901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38913)
static void C_ccall f_38913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38909)
static void C_ccall f_38909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38865)
static void C_ccall f_38865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38526)
static void C_ccall f_38526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38530)
static void C_ccall f_38530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38534)
static void C_ccall f_38534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38538)
static void C_ccall f_38538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38542)
static void C_ccall f_38542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38543)
static void C_ccall f_38543(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_38549)
static void C_ccall f_38549(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_38553)
static void C_ccall f_38553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38782)
static void C_fcall f_38782(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_38829)
static void C_ccall f_38829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38819)
static void C_fcall f_38819(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38826)
static void C_ccall f_38826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38813)
static void C_ccall f_38813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38792)
static void C_ccall f_38792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38556)
static void C_ccall f_38556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38737)
static void C_fcall f_38737(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38742)
static void C_fcall f_38742(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38752)
static void C_ccall f_38752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38559)
static void C_ccall f_38559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38691)
static void C_fcall f_38691(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38696)
static void C_fcall f_38696(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38706)
static void C_ccall f_38706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38562)
static void C_ccall f_38562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38588)
static void C_fcall f_38588(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38597)
static void C_fcall f_38597(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_38613)
static void C_ccall f_38613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38666)
static void C_ccall f_38666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38647)
static void C_ccall f_38647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38616)
static void C_ccall f_38616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38637)
static void C_ccall f_38637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38623)
static void C_ccall f_38623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38607)
static void C_ccall f_38607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38565)
static void C_ccall f_38565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38578)
static void C_ccall f_38578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38405)
static void C_ccall f_38405(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_38405)
static void C_ccall f_38405r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_38399)
static void C_ccall f_38399(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_38399)
static void C_ccall f_38399r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_38206)
static void C_fcall f_38206(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_38379)
static void C_fcall f_38379(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38210)
static void C_ccall f_38210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38213)
static void C_ccall f_38213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38216)
static void C_ccall f_38216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38221)
static void C_fcall f_38221(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38291)
static void C_ccall f_38291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38287)
static void C_ccall f_38287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38273)
static void C_ccall f_38273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38259)
static void C_ccall f_38259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38255)
static void C_ccall f_38255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38241)
static void C_ccall f_38241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7589)
static void C_ccall f_7589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38034)
static void C_ccall f_38034(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_38034)
static void C_ccall f_38034r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_38038)
static void C_ccall f_38038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38041)
static void C_ccall f_38041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38046)
static void C_fcall f_38046(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38167)
static void C_ccall f_38167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38171)
static void C_ccall f_38171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38140)
static void C_ccall f_38140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38144)
static void C_ccall f_38144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38113)
static void C_ccall f_38113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38117)
static void C_ccall f_38117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38097)
static void C_ccall f_38097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38080)
static void C_ccall f_38080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38066)
static void C_ccall f_38066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7563)
static void C_ccall f_7563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37921)
static void C_ccall f_37921(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_37921)
static void C_ccall f_37921r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_37926)
static void C_ccall f_37926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37930)
static void C_ccall f_37930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37981)
static void C_ccall f_37981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37977)
static void C_fcall f_37977(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37973)
static void C_ccall f_37973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37933)
static void C_fcall f_37933(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37966)
static void C_ccall f_37966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37962)
static void C_fcall f_37962(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37958)
static void C_ccall f_37958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37936)
static void C_fcall f_37936(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37939)
static void C_ccall f_37939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37951)
static void C_ccall f_37951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37943)
static void C_ccall f_37943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37848)
static void C_ccall f_37848(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37739)
static void C_ccall f_37739(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_37739)
static void C_ccall f_37739r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_37758)
static void C_fcall f_37758(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37765)
static void C_fcall f_37765(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37771)
static void C_fcall f_37771(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37791)
static void C_ccall f_37791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37799)
static void C_ccall f_37799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37795)
static void C_ccall f_37795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37781)
static void C_ccall f_37781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37743)
static void C_ccall f_37743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37634)
static void C_ccall f_37634(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_37634)
static void C_ccall f_37634r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_37653)
static void C_fcall f_37653(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37660)
static void C_fcall f_37660(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37666)
static void C_fcall f_37666(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37686)
static void C_ccall f_37686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37694)
static void C_ccall f_37694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37690)
static void C_ccall f_37690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37676)
static void C_ccall f_37676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37638)
static void C_ccall f_37638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37628)
static void C_ccall f_37628(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37613)
static void C_ccall f_37613(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_37613)
static void C_ccall f_37613r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_37607)
static void C_ccall f_37607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37601)
static void C_ccall f_37601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37595)
static void C_ccall f_37595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37589)
static void C_ccall f_37589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37583)
static void C_ccall f_37583(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37553)
static void C_ccall f_37553(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_37553)
static void C_ccall f_37553r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_37563)
static void C_ccall f_37563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37124)
static void C_ccall f_37124(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_37124)
static void C_ccall f_37124r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_37530)
static void C_ccall f_37530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37545)
static void C_ccall f_37545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37537)
static void C_ccall f_37537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37501)
static void C_ccall f_37501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37505)
static void C_ccall f_37505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37466)
static void C_ccall f_37466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37470)
static void C_ccall f_37470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37431)
static void C_ccall f_37431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37435)
static void C_ccall f_37435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37128)
static void C_fcall f_37128(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37395)
static void C_ccall f_37395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37410)
static void C_ccall f_37410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37402)
static void C_ccall f_37402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37366)
static void C_ccall f_37366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37370)
static void C_ccall f_37370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37331)
static void C_ccall f_37331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37335)
static void C_ccall f_37335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37296)
static void C_ccall f_37296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37300)
static void C_ccall f_37300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37131)
static void C_fcall f_37131(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37260)
static void C_ccall f_37260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37275)
static void C_ccall f_37275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37267)
static void C_ccall f_37267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37231)
static void C_ccall f_37231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37235)
static void C_ccall f_37235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37196)
static void C_ccall f_37196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37200)
static void C_ccall f_37200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37161)
static void C_ccall f_37161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37165)
static void C_ccall f_37165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37134)
static void C_fcall f_37134(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37137)
static void C_ccall f_37137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36695)
static void C_ccall f_36695(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_36695)
static void C_ccall f_36695r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_37101)
static void C_ccall f_37101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37116)
static void C_ccall f_37116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37108)
static void C_ccall f_37108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37072)
static void C_ccall f_37072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37076)
static void C_ccall f_37076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37037)
static void C_ccall f_37037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37041)
static void C_ccall f_37041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37002)
static void C_ccall f_37002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37006)
static void C_ccall f_37006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36699)
static void C_fcall f_36699(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36966)
static void C_ccall f_36966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36981)
static void C_ccall f_36981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36973)
static void C_ccall f_36973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36937)
static void C_ccall f_36937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36941)
static void C_ccall f_36941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36902)
static void C_ccall f_36902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36906)
static void C_ccall f_36906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36867)
static void C_ccall f_36867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36871)
static void C_ccall f_36871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36702)
static void C_fcall f_36702(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36831)
static void C_ccall f_36831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36846)
static void C_ccall f_36846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36838)
static void C_ccall f_36838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36802)
static void C_ccall f_36802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36806)
static void C_ccall f_36806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36767)
static void C_ccall f_36767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36771)
static void C_ccall f_36771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36732)
static void C_ccall f_36732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36736)
static void C_ccall f_36736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36705)
static void C_fcall f_36705(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36708)
static void C_ccall f_36708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36266)
static void C_ccall f_36266(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_36266)
static void C_ccall f_36266r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_36672)
static void C_ccall f_36672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36687)
static void C_ccall f_36687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36679)
static void C_ccall f_36679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36643)
static void C_ccall f_36643(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36647)
static void C_ccall f_36647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36608)
static void C_ccall f_36608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36612)
static void C_ccall f_36612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36573)
static void C_ccall f_36573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36577)
static void C_ccall f_36577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36270)
static void C_fcall f_36270(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36537)
static void C_ccall f_36537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36552)
static void C_ccall f_36552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36544)
static void C_ccall f_36544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36508)
static void C_ccall f_36508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36512)
static void C_ccall f_36512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36473)
static void C_ccall f_36473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36477)
static void C_ccall f_36477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36438)
static void C_ccall f_36438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36442)
static void C_ccall f_36442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36273)
static void C_fcall f_36273(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36402)
static void C_ccall f_36402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36417)
static void C_ccall f_36417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36409)
static void C_ccall f_36409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36373)
static void C_ccall f_36373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36377)
static void C_ccall f_36377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36338)
static void C_ccall f_36338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36342)
static void C_ccall f_36342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36303)
static void C_ccall f_36303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36307)
static void C_ccall f_36307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36276)
static void C_fcall f_36276(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36279)
static void C_ccall f_36279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35559)
static void C_ccall f_35559(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_35559)
static void C_ccall f_35559r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_36243)
static void C_ccall f_36243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36258)
static void C_ccall f_36258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36250)
static void C_ccall f_36250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36214)
static void C_ccall f_36214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36218)
static void C_ccall f_36218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36179)
static void C_ccall f_36179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36183)
static void C_ccall f_36183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36144)
static void C_ccall f_36144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36148)
static void C_ccall f_36148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36109)
static void C_ccall f_36109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36113)
static void C_ccall f_36113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35563)
static void C_fcall f_35563(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36073)
static void C_ccall f_36073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36088)
static void C_ccall f_36088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36080)
static void C_ccall f_36080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36044)
static void C_ccall f_36044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36048)
static void C_ccall f_36048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36009)
static void C_ccall f_36009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36013)
static void C_ccall f_36013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35974)
static void C_ccall f_35974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35978)
static void C_ccall f_35978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35939)
static void C_ccall f_35939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35943)
static void C_ccall f_35943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35566)
static void C_fcall f_35566(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35903)
static void C_ccall f_35903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35918)
static void C_ccall f_35918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35910)
static void C_ccall f_35910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35874)
static void C_ccall f_35874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35878)
static void C_ccall f_35878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35839)
static void C_ccall f_35839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35843)
static void C_ccall f_35843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35804)
static void C_ccall f_35804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35808)
static void C_ccall f_35808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35769)
static void C_ccall f_35769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35773)
static void C_ccall f_35773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35569)
static void C_fcall f_35569(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35733)
static void C_ccall f_35733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35748)
static void C_ccall f_35748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35740)
static void C_ccall f_35740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35704)
static void C_ccall f_35704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35708)
static void C_ccall f_35708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35669)
static void C_ccall f_35669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35673)
static void C_ccall f_35673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35634)
static void C_ccall f_35634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35638)
static void C_ccall f_35638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35599)
static void C_ccall f_35599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35603)
static void C_ccall f_35603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35572)
static void C_fcall f_35572(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35575)
static void C_ccall f_35575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34852)
static void C_ccall f_34852(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34852)
static void C_ccall f_34852r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_35536)
static void C_ccall f_35536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35551)
static void C_ccall f_35551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35543)
static void C_ccall f_35543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35507)
static void C_ccall f_35507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35511)
static void C_ccall f_35511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35472)
static void C_ccall f_35472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35476)
static void C_ccall f_35476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35437)
static void C_ccall f_35437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35441)
static void C_ccall f_35441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35402)
static void C_ccall f_35402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35406)
static void C_ccall f_35406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34856)
static void C_fcall f_34856(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35366)
static void C_ccall f_35366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35381)
static void C_ccall f_35381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35373)
static void C_ccall f_35373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35337)
static void C_ccall f_35337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35341)
static void C_ccall f_35341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35302)
static void C_ccall f_35302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35306)
static void C_ccall f_35306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35267)
static void C_ccall f_35267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35271)
static void C_ccall f_35271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35232)
static void C_ccall f_35232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35236)
static void C_ccall f_35236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34859)
static void C_fcall f_34859(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35196)
static void C_ccall f_35196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35211)
static void C_ccall f_35211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35203)
static void C_ccall f_35203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35167)
static void C_ccall f_35167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35171)
static void C_ccall f_35171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35132)
static void C_ccall f_35132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35136)
static void C_ccall f_35136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35097)
static void C_ccall f_35097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35101)
static void C_ccall f_35101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35062)
static void C_ccall f_35062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35066)
static void C_ccall f_35066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34862)
static void C_fcall f_34862(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35026)
static void C_ccall f_35026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35041)
static void C_ccall f_35041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35033)
static void C_ccall f_35033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34997)
static void C_ccall f_34997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35001)
static void C_ccall f_35001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34962)
static void C_ccall f_34962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34966)
static void C_ccall f_34966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34927)
static void C_ccall f_34927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34931)
static void C_ccall f_34931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34892)
static void C_ccall f_34892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34896)
static void C_ccall f_34896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34865)
static void C_fcall f_34865(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34868)
static void C_ccall f_34868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34145)
static void C_ccall f_34145(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34145)
static void C_ccall f_34145r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_34829)
static void C_ccall f_34829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34844)
static void C_ccall f_34844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34836)
static void C_ccall f_34836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34800)
static void C_ccall f_34800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34804)
static void C_ccall f_34804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34765)
static void C_ccall f_34765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34769)
static void C_ccall f_34769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34730)
static void C_ccall f_34730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34734)
static void C_ccall f_34734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34695)
static void C_ccall f_34695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34699)
static void C_ccall f_34699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34149)
static void C_fcall f_34149(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34659)
static void C_ccall f_34659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34674)
static void C_ccall f_34674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34666)
static void C_ccall f_34666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34630)
static void C_ccall f_34630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34634)
static void C_ccall f_34634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34595)
static void C_ccall f_34595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34599)
static void C_ccall f_34599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34560)
static void C_ccall f_34560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34564)
static void C_ccall f_34564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34525)
static void C_ccall f_34525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34529)
static void C_ccall f_34529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34152)
static void C_fcall f_34152(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34489)
static void C_ccall f_34489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34504)
static void C_ccall f_34504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34496)
static void C_ccall f_34496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34460)
static void C_ccall f_34460(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34464)
static void C_ccall f_34464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34425)
static void C_ccall f_34425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34429)
static void C_ccall f_34429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34390)
static void C_ccall f_34390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34394)
static void C_ccall f_34394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34355)
static void C_ccall f_34355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34359)
static void C_ccall f_34359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34155)
static void C_fcall f_34155(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34319)
static void C_ccall f_34319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34334)
static void C_ccall f_34334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34326)
static void C_ccall f_34326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34290)
static void C_ccall f_34290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34294)
static void C_ccall f_34294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34255)
static void C_ccall f_34255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34259)
static void C_ccall f_34259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34220)
static void C_ccall f_34220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34224)
static void C_ccall f_34224(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34185)
static void C_ccall f_34185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34189)
static void C_ccall f_34189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34158)
static void C_fcall f_34158(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34161)
static void C_ccall f_34161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33716)
static void C_ccall f_33716(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_33716)
static void C_ccall f_33716r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_34122)
static void C_ccall f_34122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34137)
static void C_ccall f_34137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34129)
static void C_ccall f_34129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34093)
static void C_ccall f_34093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34097)
static void C_ccall f_34097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34058)
static void C_ccall f_34058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34062)
static void C_ccall f_34062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34023)
static void C_ccall f_34023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34027)
static void C_ccall f_34027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33720)
static void C_fcall f_33720(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33987)
static void C_ccall f_33987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34002)
static void C_ccall f_34002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33994)
static void C_ccall f_33994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33958)
static void C_ccall f_33958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33962)
static void C_ccall f_33962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33923)
static void C_ccall f_33923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33927)
static void C_ccall f_33927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33888)
static void C_ccall f_33888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33892)
static void C_ccall f_33892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33723)
static void C_fcall f_33723(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33852)
static void C_ccall f_33852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33867)
static void C_ccall f_33867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33859)
static void C_ccall f_33859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33823)
static void C_ccall f_33823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33827)
static void C_ccall f_33827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33788)
static void C_ccall f_33788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33792)
static void C_ccall f_33792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33753)
static void C_ccall f_33753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33757)
static void C_ccall f_33757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33726)
static void C_fcall f_33726(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33729)
static void C_ccall f_33729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32661)
static void C_ccall f_32661(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32661)
static void C_ccall f_32661r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_33693)
static void C_ccall f_33693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33708)
static void C_ccall f_33708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33700)
static void C_ccall f_33700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33664)
static void C_ccall f_33664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33668)
static void C_ccall f_33668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33629)
static void C_ccall f_33629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33633)
static void C_ccall f_33633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33594)
static void C_ccall f_33594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33598)
static void C_ccall f_33598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33559)
static void C_ccall f_33559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33563)
static void C_ccall f_33563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33524)
static void C_ccall f_33524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33528)
static void C_ccall f_33528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32665)
static void C_fcall f_32665(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33488)
static void C_ccall f_33488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33503)
static void C_ccall f_33503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33495)
static void C_ccall f_33495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33459)
static void C_ccall f_33459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33463)
static void C_ccall f_33463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33424)
static void C_ccall f_33424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33428)
static void C_ccall f_33428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33389)
static void C_ccall f_33389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33393)
static void C_ccall f_33393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33354)
static void C_ccall f_33354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33358)
static void C_ccall f_33358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33319)
static void C_ccall f_33319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33323)
static void C_ccall f_33323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32668)
static void C_fcall f_32668(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33283)
static void C_ccall f_33283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33298)
static void C_ccall f_33298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33290)
static void C_ccall f_33290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33254)
static void C_ccall f_33254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33258)
static void C_ccall f_33258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33219)
static void C_ccall f_33219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33223)
static void C_ccall f_33223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33184)
static void C_ccall f_33184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33188)
static void C_ccall f_33188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33149)
static void C_ccall f_33149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33153)
static void C_ccall f_33153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33114)
static void C_ccall f_33114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33118)
static void C_ccall f_33118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32671)
static void C_fcall f_32671(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33078)
static void C_ccall f_33078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33093)
static void C_ccall f_33093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33085)
static void C_ccall f_33085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33049)
static void C_ccall f_33049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33053)
static void C_ccall f_33053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33014)
static void C_ccall f_33014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33018)
static void C_ccall f_33018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32979)
static void C_ccall f_32979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32983)
static void C_ccall f_32983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32944)
static void C_ccall f_32944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32948)
static void C_ccall f_32948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32909)
static void C_ccall f_32909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32913)
static void C_ccall f_32913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32674)
static void C_fcall f_32674(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32873)
static void C_ccall f_32873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32888)
static void C_ccall f_32888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32880)
static void C_ccall f_32880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32844)
static void C_ccall f_32844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32848)
static void C_ccall f_32848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32809)
static void C_ccall f_32809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32813)
static void C_ccall f_32813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32774)
static void C_ccall f_32774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32778)
static void C_ccall f_32778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32739)
static void C_ccall f_32739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32743)
static void C_ccall f_32743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32704)
static void C_ccall f_32704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32708)
static void C_ccall f_32708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32677)
static void C_fcall f_32677(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32680)
static void C_ccall f_32680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32655)
static void C_ccall f_32655(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7467)
static void C_ccall f_7467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32502)
static void C_fcall f_32502(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32509)
static void C_fcall f_32509(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32447)
static void C_fcall f_32447(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32454)
static void C_fcall f_32454(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32200)
static void C_ccall f_32200(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32200)
static void C_ccall f_32200r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_32424)
static void C_ccall f_32424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32439)
static void C_ccall f_32439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32431)
static void C_ccall f_32431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32395)
static void C_ccall f_32395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32399)
static void C_ccall f_32399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32360)
static void C_ccall f_32360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32364)
static void C_ccall f_32364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32204)
static void C_fcall f_32204(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32324)
static void C_ccall f_32324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32339)
static void C_ccall f_32339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32331)
static void C_ccall f_32331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32295)
static void C_ccall f_32295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32299)
static void C_ccall f_32299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32260)
static void C_ccall f_32260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32264)
static void C_ccall f_32264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32207)
static void C_fcall f_32207(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32210)
static void C_ccall f_32210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32223)
static void C_ccall f_32223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32227)
static void C_ccall f_32227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32129)
static void C_ccall f_32129(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_32129)
static void C_ccall f_32129r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_32133)
static void C_ccall f_32133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32136)
static void C_ccall f_32136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7405)
static void C_ccall f_7405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32139)
static void C_ccall f_32139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32171)
static void C_ccall f_32171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32161)
static void C_ccall f_32161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32151)
static void C_ccall f_32151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32142)
static void C_ccall f_32142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32101)
static void C_ccall f_32101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32105)
static void C_ccall f_32105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32077)
static void C_ccall f_32077(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32028)
static void C_ccall f_32028(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7391)
static void C_ccall f_7391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32032)
static void C_ccall f_32032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32048)
static void C_ccall f_32048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32075)
static void C_ccall f_32075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32051)
static void C_ccall f_32051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32071)
static void C_ccall f_32071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32067)
static void C_ccall f_32067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32035)
static void C_ccall f_32035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32019)
static void C_ccall f_32019(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32023)
static void C_ccall f_32023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31866)
static void C_ccall f_31866(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_31866)
static void C_ccall f_31866r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_31993)
static void C_fcall f_31993(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32006)
static void C_ccall f_32006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31988)
static void C_ccall f_31988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31869)
static void C_fcall f_31869(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31985)
static void C_ccall f_31985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31969)
static void C_ccall f_31969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31897)
static void C_ccall f_31897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31905)
static void C_fcall f_31905(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31915)
static void C_ccall f_31915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31918)
static void C_ccall f_31918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31900)
static void C_ccall f_31900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31707)
static void C_fcall f_31707(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7607)
static void C_ccall f_7607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31729)
static void C_ccall f_31729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31733)
static void C_ccall f_31733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31711)
static void C_fcall f_31711(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31223)
static void C_ccall f_31223(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_31223)
static void C_ccall f_31223r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_31684)
static void C_ccall f_31684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31699)
static void C_ccall f_31699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31691)
static void C_ccall f_31691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31655)
static void C_ccall f_31655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31659)
static void C_ccall f_31659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31620)
static void C_ccall f_31620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31624)
static void C_ccall f_31624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31585)
static void C_ccall f_31585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31589)
static void C_ccall f_31589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31227)
static void C_fcall f_31227(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31549)
static void C_ccall f_31549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31564)
static void C_ccall f_31564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31556)
static void C_ccall f_31556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31520)
static void C_ccall f_31520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31524)
static void C_ccall f_31524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31485)
static void C_ccall f_31485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31489)
static void C_ccall f_31489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31450)
static void C_ccall f_31450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31454)
static void C_ccall f_31454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31230)
static void C_fcall f_31230(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31414)
static void C_ccall f_31414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31429)
static void C_ccall f_31429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31421)
static void C_ccall f_31421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31385)
static void C_ccall f_31385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31389)
static void C_ccall f_31389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31350)
static void C_ccall f_31350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31354)
static void C_ccall f_31354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31315)
static void C_ccall f_31315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31319)
static void C_ccall f_31319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31233)
static void C_fcall f_31233(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31236)
static void C_ccall f_31236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31291)
static void C_ccall f_31291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31287)
static void C_ccall f_31287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31239)
static void C_fcall f_31239(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29027)
static void C_ccall f_29027(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29040)
static void C_ccall f_29040(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29047)
static void C_fcall f_29047(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29054)
static void C_ccall f_29054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29033)
static void C_ccall f_29033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31251)
static void C_ccall f_31251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31273)
static void C_ccall f_31273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31835)
static void C_fcall f_31835(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31845)
static void C_fcall f_31845(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31748)
static void C_ccall f_31748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31805)
static void C_fcall f_31805(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31815)
static void C_fcall f_31815(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31756)
static void C_ccall f_31756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31774)
static void C_ccall f_31774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31778)
static void C_ccall f_31778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31782)
static void C_ccall f_31782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31789)
static void C_ccall f_31789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31766)
static void C_ccall f_31766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31759)
static void C_ccall f_31759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31242)
static void C_ccall f_31242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30154)
static void C_ccall f_30154(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30167)
static void C_ccall f_30167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30217)
static void C_ccall f_30217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30314)
static void C_ccall f_30314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30382)
static void C_ccall f_30382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30639)
static void C_ccall f_30639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30389)
static void C_fcall f_30389(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30627)
static void C_ccall f_30627(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30578)
static void C_ccall f_30578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30584)
static void C_ccall f_30584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30608)
static void C_ccall f_30608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30604)
static void C_ccall f_30604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30592)
static void C_ccall f_30592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30392)
static void C_fcall f_30392(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30554)
static void C_ccall f_30554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30558)
static void C_ccall f_30558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30395)
static void C_fcall f_30395(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30531)
static void C_ccall f_30531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30535)
static void C_ccall f_30535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30398)
static void C_fcall f_30398(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30508)
static void C_ccall f_30508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30512)
static void C_ccall f_30512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30401)
static void C_fcall f_30401(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30433)
static void C_ccall f_30433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30451)
static void C_ccall f_30451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30469)
static void C_ccall f_30469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30487)
static void C_ccall f_30487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30404)
static void C_fcall f_30404(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30408)
static void C_ccall f_30408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30318)
static void C_ccall f_30318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30322)
static void C_ccall f_30322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30326)
static void C_ccall f_30326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30221)
static void C_ccall f_30221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30225)
static void C_ccall f_30225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30229)
static void C_ccall f_30229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30248)
static void C_ccall f_30248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30252)
static void C_ccall f_30252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30232)
static void C_fcall f_30232(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30236)
static void C_ccall f_30236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30171)
static void C_ccall f_30171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30175)
static void C_ccall f_30175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30179)
static void C_ccall f_30179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30161)
static void C_fcall f_30161(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29976)
static void C_fcall f_29976(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29988)
static void C_fcall f_29988(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30007)
static void C_ccall f_30007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30025)
static void C_fcall f_30025(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30057)
static void C_ccall f_30057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30060)
static void C_fcall f_30060(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30053)
static void C_ccall f_30053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30039)
static void C_ccall f_30039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30010)
static void C_ccall f_30010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29955)
static void C_fcall f_29955(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29962)
static void C_ccall f_29962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29965)
static void C_ccall f_29965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29971)
static void C_ccall f_29971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29890)
static void C_fcall f_29890(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29899)
static void C_fcall f_29899(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29922)
static void C_ccall f_29922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29912)
static void C_fcall f_29912(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29846)
static void C_fcall f_29846(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29854)
static void C_ccall f_29854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29858)
static void C_ccall f_29858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29834)
static void C_fcall f_29834(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29732)
static void C_fcall f_29732(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29684)
static void C_fcall f_29684(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29065)
static void C_fcall f_29065(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_29069)
static void C_ccall f_29069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29072)
static void C_ccall f_29072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29498)
static void C_ccall f_29498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29494)
static void C_ccall f_29494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29490)
static void C_ccall f_29490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29075)
static void C_fcall f_29075(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29198)
static void C_ccall f_29198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28380)
static void C_ccall f_28380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29204)
static void C_fcall f_29204(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28396)
static void C_ccall f_28396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29292)
static void C_fcall f_29292(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29362)
static void C_ccall f_29362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28412)
static void C_ccall f_28412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29365)
static void C_fcall f_29365(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28444)
static void C_ccall f_28444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29443)
static void C_fcall f_29443(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29469)
static void C_ccall f_29469(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29463)
static void C_ccall f_29463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29452)
static void C_ccall f_29452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29394)
static void C_fcall f_29394(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29404)
static void C_ccall f_29404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29430)
static void C_ccall f_29430(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29424)
static void C_ccall f_29424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29407)
static void C_ccall f_29407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29417)
static void C_ccall f_29417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29410)
static void C_fcall f_29410(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29371)
static void C_ccall f_29371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29380)
static void C_ccall f_29380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29374)
static void C_fcall f_29374(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29298)
static void C_ccall f_29298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29316)
static void C_fcall f_29316(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29349)
static void C_ccall f_29349(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29335)
static void C_ccall f_29335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29343)
static void C_ccall f_29343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29326)
static void C_ccall f_29326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29301)
static void C_ccall f_29301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29213)
static void C_ccall f_29213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29235)
static void C_fcall f_29235(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29282)
static void C_ccall f_29282(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29268)
static void C_ccall f_29268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29276)
static void C_ccall f_29276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29248)
static void C_ccall f_29248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29251)
static void C_fcall f_29251(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29216)
static void C_ccall f_29216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29233)
static void C_ccall f_29233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29219)
static void C_fcall f_29219(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29084)
static void C_ccall f_29084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29090)
static void C_ccall f_29090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29148)
static void C_ccall f_29148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29151)
static void C_ccall f_29151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29172)
static void C_ccall f_29172(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29183)
static void C_ccall f_29183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29162)
static void C_ccall f_29162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29096)
static void C_ccall f_29096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29106)
static void C_ccall f_29106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29142)
static void C_ccall f_29142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29112)
static void C_ccall f_29112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29127)
static void C_ccall f_29127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29135)
static void C_ccall f_29135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29119)
static void C_ccall f_29119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28961)
static void C_fcall f_28961(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28963)
static void C_ccall f_28963(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29011)
static void C_ccall f_29011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28967)
static void C_ccall f_28967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28970)
static void C_fcall f_28970(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28975)
static void C_fcall f_28975(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28996)
static void C_ccall f_28996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28953)
static void C_fcall f_28953(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28955)
static void C_ccall f_28955(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28776)
static void C_ccall f_28776(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_28776)
static void C_ccall f_28776r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_28784)
static void C_ccall f_28784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28745)
static void C_fcall f_28745(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28762)
static void C_ccall f_28762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28766)
static void C_ccall f_28766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28712)
static void C_fcall f_28712(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28719)
static void C_ccall f_28719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28606)
static void C_ccall f_28606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28613)
static void C_ccall f_28613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28728)
static void C_ccall f_28728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28951)
static void C_ccall f_28951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28928)
static void C_ccall f_28928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28944)
static void C_ccall f_28944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28790)
static void C_ccall f_28790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28793)
static void C_ccall f_28793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28817)
static void C_ccall f_28817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28874)
static void C_ccall f_28874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28880)
static void C_ccall f_28880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28889)
static void C_ccall f_28889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28898)
static void C_ccall f_28898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28907)
static void C_ccall f_28907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28916)
static void C_ccall f_28916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28868)
static void C_ccall f_28868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28823)
static void C_ccall f_28823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28829)
static void C_ccall f_28829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28835)
static void C_ccall f_28835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28841)
static void C_ccall f_28841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28847)
static void C_ccall f_28847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28853)
static void C_ccall f_28853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28694)
static void C_fcall f_28694(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28701)
static void C_ccall f_28701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28627)
static void C_fcall f_28627(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28615)
static void C_fcall f_28615(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28583)
static void C_fcall f_28583(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28590)
static void C_ccall f_28590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28597)
static void C_ccall f_28597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28567)
static void C_fcall f_28567(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28574)
static void C_ccall f_28574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28581)
static void C_ccall f_28581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28558)
static void C_fcall f_28558(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28540)
static void C_fcall f_28540(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28522)
static void C_fcall f_28522(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28507)
static void C_fcall f_28507(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28501)
static void C_fcall f_28501(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28453)
static void C_fcall f_28453(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28421)
static void C_fcall f_28421(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28428)
static void C_ccall f_28428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28363)
static void C_fcall f_28363(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28371)
static void C_ccall f_28371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28353)
static void C_fcall f_28353(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28361)
static void C_ccall f_28361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28347)
static void C_fcall f_28347(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28335)
static void C_fcall f_28335(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28332)
static void C_ccall f_28332(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28314)
static void C_fcall f_28314(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28318)
static void C_ccall f_28318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28212)
static void C_fcall f_28212(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_28202)
static void C_fcall f_28202(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28190)
static void C_fcall f_28190(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28167)
static void C_ccall f_28167(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28158)
static void C_fcall f_28158(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28122)
static void C_fcall f_28122(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28101)
static void C_ccall f_28101(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27905)
static void C_ccall f_27905(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27909)
static void C_fcall f_27909(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28058)
static void C_fcall f_28058(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28084)
static void C_ccall f_28084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28069)
static void C_ccall f_28069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27915)
static void C_ccall f_27915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27920)
static void C_ccall f_27920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27924)
static void C_ccall f_27924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27927)
static void C_ccall f_27927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27930)
static void C_ccall f_27930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27933)
static void C_ccall f_27933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27936)
static void C_ccall f_27936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27939)
static void C_ccall f_27939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27944)
static void C_fcall f_27944(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28038)
static void C_ccall f_28038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28045)
static void C_ccall f_28045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27954)
static void C_ccall f_27954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27975)
static void C_ccall f_27975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27979)
static void C_ccall f_27979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27983)
static void C_ccall f_27983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27985)
static void C_fcall f_27985(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27995)
static void C_ccall f_27995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27957)
static void C_ccall f_27957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27960)
static void C_ccall f_27960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27779)
static void C_ccall f_27779(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27785)
static void C_ccall f_27785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27789)
static void C_ccall f_27789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27807)
static void C_ccall f_27807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27810)
static void C_ccall f_27810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27814)
static void C_ccall f_27814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27817)
static void C_ccall f_27817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27869)
static void C_fcall f_27869(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27880)
static void C_ccall f_27880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27820)
static void C_ccall f_27820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27830)
static void C_ccall f_27830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27832)
static void C_fcall f_27832(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27676)
static void C_ccall f_27676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27700)
static void C_ccall f_27700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27704)
static void C_ccall f_27704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27730)
static void C_fcall f_27730(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27740)
static void C_ccall f_27740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27777)
static void C_ccall f_27777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27769)
static void C_ccall f_27769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27707)
static void C_ccall f_27707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27677)
static void C_fcall f_27677(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27681)
static void C_ccall f_27681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27684)
static void C_ccall f_27684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27846)
static void C_ccall f_27846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27849)
static void C_fcall f_27849(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27856)
static void C_ccall f_27856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27790)
static void C_fcall f_27790(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27794)
static void C_ccall f_27794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27797)
static void C_ccall f_27797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27266)
static void C_ccall f_27266(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_27266)
static void C_ccall f_27266r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_27645)
static void C_fcall f_27645(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27639)
static void C_ccall f_27639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27270)
static void C_ccall f_27270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27623)
static void C_ccall f_27623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27273)
static void C_ccall f_27273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27609)
static void C_ccall f_27609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27605)
static void C_ccall f_27605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27276)
static void C_fcall f_27276(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27598)
static void C_ccall f_27598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27594)
static void C_ccall f_27594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27279)
static void C_fcall f_27279(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27282)
static void C_fcall f_27282(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8251)
static void C_fcall f_8251(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8274)
static void C_ccall f_8274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8264)
static void C_fcall f_8264(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27582)
static void C_ccall f_27582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27574)
static void C_ccall f_27574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27578)
static void C_ccall f_27578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27566)
static void C_ccall f_27566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27570)
static void C_ccall f_27570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27440)
static void C_fcall f_27440(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27555)
static void C_ccall f_27555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27559)
static void C_ccall f_27559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27547)
static void C_ccall f_27547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27551)
static void C_ccall f_27551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27443)
static void C_fcall f_27443(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27447)
static void C_ccall f_27447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27452)
static void C_fcall f_27452(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27462)
static void C_fcall f_27462(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27465)
static void C_ccall f_27465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27346)
static void C_ccall f_27346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27409)
static void C_fcall f_27409(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27430)
static void C_ccall f_27430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27371)
static void C_fcall f_27371(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27400)
static void C_ccall f_27400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27349)
static void C_ccall f_27349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27366)
static void C_ccall f_27366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27362)
static void C_ccall f_27362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26812)
static void C_ccall f_26812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26816)
static void C_ccall f_26816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26804)
static void C_ccall f_26804(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26732)
static void C_ccall f_26732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26790)
static void C_ccall f_26790(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26736)
static void C_ccall f_26736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26744)
static void C_fcall f_26744(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26754)
static void C_ccall f_26754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26757)
static void C_ccall f_26757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27326)
static void C_fcall f_27326(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27296)
static void C_fcall f_27296(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27285)
static void C_ccall f_27285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27209)
static void C_ccall f_27209(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27217)
static void C_ccall f_27217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27221)
static void C_ccall f_27221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27225)
static void C_ccall f_27225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27231)
static void C_fcall f_27231(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_27241)
static void C_ccall f_27241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26997)
static void C_ccall f_26997(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27065)
static void C_ccall f_27065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27068)
static void C_ccall f_27068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27071)
static void C_ccall f_27071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27074)
static void C_ccall f_27074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27077)
static void C_ccall f_27077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27175)
static void C_fcall f_27175(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27185)
static void C_ccall f_27185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27143)
static void C_fcall f_27143(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27153)
static void C_ccall f_27153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27094)
static void C_fcall f_27094(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27113)
static void C_fcall f_27113(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27123)
static void C_ccall f_27123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27104)
static void C_ccall f_27104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27080)
static void C_ccall f_27080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27033)
static void C_fcall f_27033(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27043)
static void C_ccall f_27043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27016)
static void C_fcall f_27016(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27023)
static void C_ccall f_27023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26999)
static void C_fcall f_26999(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27006)
static void C_ccall f_27006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26818)
static void C_ccall f_26818(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26826)
static void C_ccall f_26826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26830)
static void C_ccall f_26830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26832)
static void C_fcall f_26832(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_26842)
static void C_fcall f_26842(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26973)
static void C_ccall f_26973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26922)
static void C_ccall f_26922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26925)
static void C_ccall f_26925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26936)
static void C_ccall f_26936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26888)
static void C_ccall f_26888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26857)
static void C_ccall f_26857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26860)
static void C_ccall f_26860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26845)
static void C_ccall f_26845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26412)
static void C_ccall f_26412(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26726)
static void C_ccall f_26726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26655)
static void C_ccall f_26655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26657)
static void C_fcall f_26657(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26679)
static void C_fcall f_26679(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26425)
static void C_ccall f_26425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26498)
static void C_fcall f_26498(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26651)
static void C_ccall f_26651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26635)
static void C_ccall f_26635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26587)
static void C_fcall f_26587(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26601)
static void C_fcall f_26601(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26554)
static void C_ccall f_26554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26529)
static void C_fcall f_26529(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26428)
static void C_ccall f_26428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26436)
static void C_fcall f_26436(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24939)
static void C_ccall f_24939(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_24939)
static void C_ccall f_24939r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_26389)
static void C_ccall f_26389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26404)
static void C_ccall f_26404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26396)
static void C_ccall f_26396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26360)
static void C_ccall f_26360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26364)
static void C_ccall f_26364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26325)
static void C_ccall f_26325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26329)
static void C_ccall f_26329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26290)
static void C_ccall f_26290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26294)
static void C_ccall f_26294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26255)
static void C_ccall f_26255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26259)
static void C_ccall f_26259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26220)
static void C_ccall f_26220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26224)
static void C_ccall f_26224(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26185)
static void C_ccall f_26185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26189)
static void C_ccall f_26189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24943)
static void C_fcall f_24943(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26149)
static void C_ccall f_26149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26164)
static void C_ccall f_26164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26156)
static void C_ccall f_26156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26120)
static void C_ccall f_26120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26124)
static void C_ccall f_26124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26085)
static void C_ccall f_26085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26089)
static void C_ccall f_26089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26050)
static void C_ccall f_26050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26054)
static void C_ccall f_26054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26015)
static void C_ccall f_26015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26019)
static void C_ccall f_26019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25980)
static void C_ccall f_25980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25984)
static void C_ccall f_25984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25945)
static void C_ccall f_25945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25949)
static void C_ccall f_25949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24946)
static void C_fcall f_24946(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25909)
static void C_ccall f_25909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25924)
static void C_ccall f_25924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25916)
static void C_ccall f_25916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25880)
static void C_ccall f_25880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25884)
static void C_ccall f_25884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25845)
static void C_ccall f_25845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25849)
static void C_ccall f_25849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25810)
static void C_ccall f_25810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25814)
static void C_ccall f_25814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25775)
static void C_ccall f_25775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25779)
static void C_ccall f_25779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25740)
static void C_ccall f_25740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25744)
static void C_ccall f_25744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25705)
static void C_ccall f_25705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25709)
static void C_ccall f_25709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24949)
static void C_fcall f_24949(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25669)
static void C_ccall f_25669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25684)
static void C_ccall f_25684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25676)
static void C_ccall f_25676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25640)
static void C_ccall f_25640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25644)
static void C_ccall f_25644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25605)
static void C_ccall f_25605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25609)
static void C_ccall f_25609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25570)
static void C_ccall f_25570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25574)
static void C_ccall f_25574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25535)
static void C_ccall f_25535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25539)
static void C_ccall f_25539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25500)
static void C_ccall f_25500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25504)
static void C_ccall f_25504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25465)
static void C_ccall f_25465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25469)
static void C_ccall f_25469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24952)
static void C_fcall f_24952(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25429)
static void C_ccall f_25429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25444)
static void C_ccall f_25444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25436)
static void C_ccall f_25436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25400)
static void C_ccall f_25400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25404)
static void C_ccall f_25404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25365)
static void C_ccall f_25365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25369)
static void C_ccall f_25369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25330)
static void C_ccall f_25330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25334)
static void C_ccall f_25334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25295)
static void C_ccall f_25295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25299)
static void C_ccall f_25299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25260)
static void C_ccall f_25260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25264)
static void C_ccall f_25264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25225)
static void C_ccall f_25225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25229)
static void C_ccall f_25229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24955)
static void C_fcall f_24955(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25189)
static void C_ccall f_25189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25204)
static void C_ccall f_25204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25196)
static void C_ccall f_25196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25160)
static void C_ccall f_25160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25164)
static void C_ccall f_25164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25125)
static void C_ccall f_25125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25129)
static void C_ccall f_25129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25090)
static void C_ccall f_25090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25094)
static void C_ccall f_25094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25055)
static void C_ccall f_25055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25059)
static void C_ccall f_25059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25020)
static void C_ccall f_25020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25024)
static void C_ccall f_25024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24985)
static void C_ccall f_24985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24989)
static void C_ccall f_24989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24958)
static void C_fcall f_24958(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24961)
static void C_ccall f_24961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24707)
static void C_fcall f_24707(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24713)
static void C_ccall f_24713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24716)
static void C_ccall f_24716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24920)
static void C_ccall f_24920(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24905)
static void C_ccall f_24905(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24840)
static void C_ccall f_24840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8019)
static void C_fcall f_8019(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24816)
static void C_ccall f_24816(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24820)
static void C_ccall f_24820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24806)
static void C_ccall f_24806(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24814)
static void C_ccall f_24814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24792)
static void C_fcall f_24792(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24718)
static void C_fcall f_24718(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24787)
static void C_ccall f_24787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24722)
static void C_ccall f_24722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24759)
static void C_fcall f_24759(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24733)
static void C_fcall f_24733(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24678)
static void C_ccall f_24678(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24682)
static void C_ccall f_24682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24693)
static void C_ccall f_24693(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24691)
static void C_ccall f_24691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24647)
static void C_ccall f_24647(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24651)
static void C_ccall f_24651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24662)
static void C_ccall f_24662(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24660)
static void C_ccall f_24660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24629)
static void C_ccall f_24629(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24637)
static void C_ccall f_24637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24645)
static void C_ccall f_24645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24619)
static void C_ccall f_24619(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24627)
static void C_ccall f_24627(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24560)
static void C_ccall f_24560(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24567)
static void C_ccall f_24567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24570)
static void C_ccall f_24570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24573)
static void C_ccall f_24573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24578)
static void C_fcall f_24578(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24522)
static void C_ccall f_24522(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24530)
static void C_ccall f_24530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24534)
static void C_ccall f_24534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24554)
static void C_ccall f_24554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24538)
static void C_ccall f_24538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24546)
static void C_ccall f_24546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24542)
static void C_ccall f_24542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24513)
static void C_ccall f_24513(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24504)
static void C_fcall f_24504(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24495)
static void C_ccall f_24495(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24486)
static void C_fcall f_24486(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24477)
static void C_ccall f_24477(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24468)
static void C_fcall f_24468(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24459)
static void C_ccall f_24459(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24444)
static void C_fcall f_24444(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24438)
static void C_fcall f_24438(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24393)
static void C_fcall f_24393(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7377)
static void C_ccall f_7377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24351)
static void C_fcall f_24351(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24361)
static void C_ccall f_24361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23503)
static void C_ccall f_23503(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7305)
static void C_ccall f_7305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23497)
static void C_ccall f_23497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23475)
static void C_ccall f_23475(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23159)
static void C_ccall f_23159(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_23159)
static void C_ccall f_23159r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_23163)
static void C_fcall f_23163(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23220)
static void C_ccall f_23220(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23192)
static void C_ccall f_23192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23257)
static void C_ccall f_23257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23294)
static void C_ccall f_23294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23297)
static void C_ccall f_23297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23457)
static void C_ccall f_23457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23304)
static void C_ccall f_23304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23307)
static void C_ccall f_23307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23309)
static void C_fcall f_23309(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_23319)
static void C_ccall f_23319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23322)
static void C_ccall f_23322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23355)
static void C_ccall f_23355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23443)
static void C_ccall f_23443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23358)
static void C_ccall f_23358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23429)
static void C_ccall f_23429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23415)
static void C_ccall f_23415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23395)
static void C_ccall f_23395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23398)
static void C_ccall f_23398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23375)
static void C_ccall f_23375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23378)
static void C_ccall f_23378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23361)
static void C_ccall f_23361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23258)
static void C_fcall f_23258(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23264)
static void C_fcall f_23264(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23274)
static void C_fcall f_23274(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23143)
static void C_fcall f_23143(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23147)
static void C_ccall f_23147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23154)
static void C_ccall f_23154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23138)
static void C_fcall f_23138(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22991)
static void C_ccall f_22991(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_22991)
static void C_ccall f_22991r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_22995)
static void C_fcall f_22995(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23064)
static void C_ccall f_23064(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23107)
static void C_ccall f_23107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23111)
static void C_ccall f_23111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23100)
static void C_ccall f_23100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23087)
static void C_ccall f_23087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23006)
static void C_ccall f_23006(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23049)
static void C_ccall f_23049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23053)
static void C_ccall f_23053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23042)
static void C_ccall f_23042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23029)
static void C_ccall f_23029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22825)
static void C_ccall f_22825(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22926)
static void C_ccall f_22926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22975)
static void C_ccall f_22975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22971)
static void C_ccall f_22971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22943)
static void C_ccall f_22943(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22878)
static void C_fcall f_22878(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22887)
static void C_fcall f_22887(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22871)
static void C_ccall f_22871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22690)
static void C_ccall f_22690(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22816)
static void C_ccall f_22816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22812)
static void C_ccall f_22812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22790)
static void C_ccall f_22790(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22720)
static void C_fcall f_22720(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22736)
static void C_fcall f_22736(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22645)
static void C_ccall f_22645(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22688)
static void C_ccall f_22688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22677)
static void C_ccall f_22677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22529)
static void C_ccall f_22529(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22643)
static void C_ccall f_22643(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22544)
static void C_fcall f_22544(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_22574)
static void C_fcall f_22574(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22593)
static void C_ccall f_22593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22578)
static void C_ccall f_22578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22557)
static void C_fcall f_22557(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22407)
static void C_ccall f_22407(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22527)
static void C_ccall f_22527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22422)
static void C_fcall f_22422(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_22452)
static void C_fcall f_22452(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22471)
static void C_ccall f_22471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22456)
static void C_ccall f_22456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22435)
static void C_fcall f_22435(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22310)
static void C_ccall f_22310(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22405)
static void C_ccall f_22405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22325)
static void C_fcall f_22325(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_22371)
static void C_ccall f_22371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22356)
static void C_ccall f_22356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22338)
static void C_fcall f_22338(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22257)
static void C_fcall f_22257(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22295)
static void C_ccall f_22295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22302)
static void C_ccall f_22302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22280)
static void C_ccall f_22280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22255)
static void C_ccall f_22255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22236)
static void C_fcall f_22236(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22223)
static void C_ccall f_22223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22205)
static void C_ccall f_22205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22158)
static void C_fcall f_22158(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22162)
static void C_ccall f_22162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22187)
static void C_ccall f_22187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22174)
static void C_ccall f_22174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22130)
static void C_ccall f_22130(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22130)
static void C_ccall f_22130r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22111)
static void C_ccall f_22111(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22111)
static void C_ccall f_22111r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22070)
static void C_ccall f_22070(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22070)
static void C_ccall f_22070r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22051)
static void C_ccall f_22051(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22051)
static void C_ccall f_22051r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_21823)
static void C_ccall f_21823(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_21823)
static void C_ccall f_21823r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22028)
static void C_ccall f_22028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22043)
static void C_ccall f_22043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22035)
static void C_ccall f_22035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21999)
static void C_ccall f_21999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22003)
static void C_ccall f_22003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21964)
static void C_ccall f_21964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21968)
static void C_ccall f_21968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21827)
static void C_fcall f_21827(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21928)
static void C_ccall f_21928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21943)
static void C_ccall f_21943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21935)
static void C_ccall f_21935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21899)
static void C_ccall f_21899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21903)
static void C_ccall f_21903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21864)
static void C_ccall f_21864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21868)
static void C_ccall f_21868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21830)
static void C_fcall f_21830(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21833)
static void C_ccall f_21833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21836)
static void C_fcall f_21836(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21781)
static void C_ccall f_21781(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_21781)
static void C_ccall f_21781r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_21810)
static void C_ccall f_21810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21795)
static void C_ccall f_21795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21726)
static void C_ccall f_21726(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21737)
static void C_ccall f_21737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21739)
static void C_fcall f_21739(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21767)
static void C_ccall f_21767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21627)
static void C_ccall f_21627(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_21627)
static void C_ccall f_21627r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_21631)
static void C_fcall f_21631(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21634)
static void C_ccall f_21634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21699)
static void C_ccall f_21699(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21636)
static void C_fcall f_21636(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21652)
static void C_ccall f_21652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21356)
static void C_ccall f_21356(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_21356)
static void C_ccall f_21356r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_21389)
static void C_ccall f_21389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21374)
static void C_ccall f_21374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21335)
static void C_ccall f_21335(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21300)
static void C_ccall f_21300(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_21300)
static void C_ccall f_21300r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_21304)
static void C_fcall f_21304(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21092)
static void C_ccall f_21092(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_21092)
static void C_ccall f_21092r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_21105)
static void C_fcall f_21105(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21187)
static void C_fcall f_21187(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21190)
static void C_ccall f_21190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21198)
static void C_fcall f_21198(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21210)
static void C_fcall f_21210(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21231)
static void C_ccall f_21231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21239)
static void C_ccall f_21239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21126)
static void C_ccall f_21126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21131)
static void C_fcall f_21131(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21163)
static void C_ccall f_21163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20985)
static void C_ccall f_20985(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_20985)
static void C_ccall f_20985r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_21072)
static void C_ccall f_21072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20992)
static void C_fcall f_20992(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21001)
static void C_fcall f_21001(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_21048)
static void C_ccall f_21048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21014)
static void C_fcall f_21014(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21040)
static void C_ccall f_21040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20852)
static void C_ccall f_20852(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_20852)
static void C_ccall f_20852r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_20856)
static void C_fcall f_20856(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20859)
static void C_fcall f_20859(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20963)
static void C_ccall f_20963(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20861)
static void C_fcall f_20861(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20868)
static void C_ccall f_20868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20910)
static void C_ccall f_20910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20917)
static void C_ccall f_20917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20891)
static void C_ccall f_20891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20785)
static void C_ccall f_20785(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_20785)
static void C_ccall f_20785r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_20789)
static void C_fcall f_20789(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20835)
static void C_ccall f_20835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20792)
static void C_fcall f_20792(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20828)
static void C_ccall f_20828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20795)
static void C_fcall f_20795(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20808)
static void C_ccall f_20808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20739)
static void C_ccall f_20739(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_20739)
static void C_ccall f_20739r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_20743)
static void C_ccall f_20743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20653)
static void C_fcall f_20653(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20657)
static void C_ccall f_20657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20660)
static void C_ccall f_20660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20669)
static void C_fcall f_20669(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20691)
static void C_ccall f_20691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20638)
static void C_ccall f_20638(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20623)
static void C_ccall f_20623(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20387)
static void C_ccall f_20387(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_20387)
static void C_ccall f_20387r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_20600)
static void C_ccall f_20600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20615)
static void C_ccall f_20615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20607)
static void C_ccall f_20607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20571)
static void C_ccall f_20571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20575)
static void C_ccall f_20575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20536)
static void C_ccall f_20536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20540)
static void C_ccall f_20540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20391)
static void C_fcall f_20391(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20500)
static void C_ccall f_20500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20515)
static void C_ccall f_20515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20507)
static void C_ccall f_20507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20471)
static void C_ccall f_20471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20475)
static void C_ccall f_20475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20436)
static void C_ccall f_20436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20440)
static void C_ccall f_20440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20394)
static void C_fcall f_20394(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20397)
static void C_ccall f_20397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20408)
static void C_ccall f_20408(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20347)
static void C_ccall f_20347(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20351)
static void C_ccall f_20351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20381)
static void C_ccall f_20381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20362)
static void C_ccall f_20362(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20370)
static void C_ccall f_20370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20326)
static void C_ccall f_20326(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20338)
static void C_ccall f_20338(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20283)
static void C_ccall f_20283(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_20283)
static void C_ccall f_20283r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_20313)
static void C_ccall f_20313(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20240)
static void C_ccall f_20240(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_20240)
static void C_ccall f_20240r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_20270)
static void C_ccall f_20270(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20171)
static void C_ccall f_20171(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_20171)
static void C_ccall f_20171r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_20215)
static void C_ccall f_20215(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20102)
static void C_ccall f_20102(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_20102)
static void C_ccall f_20102r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_20146)
static void C_ccall f_20146(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20096)
static void C_ccall f_20096(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20090)
static void C_ccall f_20090(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20069)
static void C_ccall f_20069(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20081)
static void C_ccall f_20081(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20054)
static void C_ccall f_20054(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19943)
static void C_ccall f_19943(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...) C_noret;
C_noret_decl(f_19943)
static void C_ccall f_19943r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t7) C_noret;
C_noret_decl(f_20018)
static void C_ccall f_20018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19947)
static void C_fcall f_19947(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19987)
static void C_ccall f_19987(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19976)
static void C_ccall f_19976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19961)
static void C_ccall f_19961(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19969)
static void C_ccall f_19969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19909)
static void C_ccall f_19909(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...) C_noret;
C_noret_decl(f_19909)
static void C_ccall f_19909r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t8) C_noret;
C_noret_decl(f_19921)
static void C_ccall f_19921(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18862)
static void C_ccall f_18862(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18862)
static void C_ccall f_18862r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_19886)
static void C_ccall f_19886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19901)
static void C_ccall f_19901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19893)
static void C_ccall f_19893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19857)
static void C_ccall f_19857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19861)
static void C_ccall f_19861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19822)
static void C_ccall f_19822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19826)
static void C_ccall f_19826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18872)
static void C_fcall f_18872(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19786)
static void C_ccall f_19786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19801)
static void C_ccall f_19801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19793)
static void C_ccall f_19793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19757)
static void C_ccall f_19757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19761)
static void C_ccall f_19761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19722)
static void C_ccall f_19722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19726)
static void C_ccall f_19726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18875)
static void C_fcall f_18875(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18878)
static void C_ccall f_18878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18883)
static void C_ccall f_18883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19615)
static void C_fcall f_19615(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19638)
static void C_fcall f_19638(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19691)
static void C_ccall f_19691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19673)
static void C_fcall f_19673(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19666)
static void C_ccall f_19666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19648)
static void C_ccall f_19648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19625)
static void C_ccall f_19625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19077)
static void C_ccall f_19077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19577)
static void C_fcall f_19577(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19599)
static void C_ccall f_19599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19583)
static void C_ccall f_19583(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19591)
static void C_ccall f_19591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19595)
static void C_ccall f_19595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19581)
static void C_ccall f_19581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19571)
static void C_ccall f_19571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19080)
static void C_fcall f_19080(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19448)
static void C_fcall f_19448(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19472)
static void C_ccall f_19472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19534)
static void C_fcall f_19534(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19475)
static void C_ccall f_19475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19491)
static void C_fcall f_19491(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19516)
static void C_ccall f_19516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19482)
static void C_ccall f_19482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19459)
static void C_ccall f_19459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19083)
static void C_ccall f_19083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19434)
static void C_ccall f_19434(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19087)
static void C_ccall f_19087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19131)
static void C_ccall f_19131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19134)
static void C_ccall f_19134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19415)
static void C_fcall f_19415(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19425)
static void C_ccall f_19425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19137)
static void C_ccall f_19137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19353)
static void C_fcall f_19353(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19363)
static void C_ccall f_19363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19366)
static void C_ccall f_19366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19386)
static void C_ccall f_19386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19388)
static void C_fcall f_19388(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19398)
static void C_ccall f_19398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19372)
static void C_ccall f_19372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19375)
static void C_ccall f_19375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19140)
static void C_ccall f_19140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19148)
static void C_fcall f_19148(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19161)
static void C_ccall f_19161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19035)
static void C_ccall f_19035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19044)
static void C_fcall f_19044(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19066)
static void C_ccall f_19066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19055)
static void C_ccall f_19055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19164)
static void C_ccall f_19164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19324)
static void C_ccall f_19324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19326)
static void C_fcall f_19326(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19336)
static void C_ccall f_19336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19170)
static void C_ccall f_19170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19297)
static void C_ccall f_19297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19299)
static void C_fcall f_19299(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19309)
static void C_ccall f_19309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19173)
static void C_ccall f_19173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19185)
static void C_fcall f_19185(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19211)
static void C_ccall f_19211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19217)
static void C_ccall f_19217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19223)
static void C_ccall f_19223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19265)
static void C_ccall f_19265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19277)
static void C_ccall f_19277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19269)
static void C_ccall f_19269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19226)
static void C_fcall f_19226(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19236)
static void C_ccall f_19236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19238)
static void C_fcall f_19238(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19248)
static void C_ccall f_19248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19229)
static void C_ccall f_19229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19198)
static void C_ccall f_19198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19176)
static void C_ccall f_19176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19143)
static void C_ccall f_19143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19090)
static void C_ccall f_19090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19113)
static void C_ccall f_19113(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19102)
static void C_ccall f_19102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18967)
static void C_fcall f_18967(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19015)
static void C_ccall f_19015(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18977)
static void C_ccall f_18977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19005)
static void C_ccall f_19005(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18980)
static void C_ccall f_18980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18885)
static void C_fcall f_18885(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8212)
static void C_fcall f_8212(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8232)
static void C_ccall f_8232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8222)
static void C_fcall f_8222(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18957)
static void C_fcall f_18957(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18889)
static void C_ccall f_18889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18907)
static void C_ccall f_18907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18939)
static void C_ccall f_18939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18768)
static void C_ccall f_18768(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18772)
static void C_ccall f_18772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18801)
static void C_ccall f_18801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18806)
static void C_fcall f_18806(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18831)
static void C_fcall f_18831(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18816)
static void C_ccall f_18816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18250)
static void C_ccall f_18250(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18250)
static void C_ccall f_18250r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_18521)
static void C_ccall f_18521(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18525)
static void C_ccall f_18525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18530)
static void C_ccall f_18530(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18530)
static void C_ccall f_18530r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_18736)
static void C_ccall f_18736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18751)
static void C_ccall f_18751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18743)
static void C_ccall f_18743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18707)
static void C_ccall f_18707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18711)
static void C_ccall f_18711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18672)
static void C_ccall f_18672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18676)
static void C_ccall f_18676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18534)
static void C_fcall f_18534(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18636)
static void C_ccall f_18636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18651)
static void C_ccall f_18651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18643)
static void C_ccall f_18643(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18607)
static void C_ccall f_18607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18611)
static void C_ccall f_18611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18572)
static void C_ccall f_18572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18576)
static void C_ccall f_18576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18537)
static void C_fcall f_18537(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18540)
static void C_ccall f_18540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18543)
static void C_fcall f_18543(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18512)
static void C_ccall f_18512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18254)
static void C_ccall f_18254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18481)
static void C_ccall f_18481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18496)
static void C_ccall f_18496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18488)
static void C_ccall f_18488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18452)
static void C_ccall f_18452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18456)
static void C_ccall f_18456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18417)
static void C_ccall f_18417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18421)
static void C_ccall f_18421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18257)
static void C_fcall f_18257(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18381)
static void C_ccall f_18381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18396)
static void C_ccall f_18396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18388)
static void C_ccall f_18388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18352)
static void C_ccall f_18352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18356)
static void C_ccall f_18356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18317)
static void C_ccall f_18317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18321)
static void C_ccall f_18321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18260)
static void C_fcall f_18260(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18263)
static void C_ccall f_18263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18266)
static void C_ccall f_18266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18278)
static void C_ccall f_18278(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18296)
static void C_ccall f_18296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18284)
static void C_ccall f_18284(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18272)
static void C_ccall f_18272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18187)
static void C_fcall f_18187(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17847)
static void C_ccall f_17847(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18029)
static void C_ccall f_18029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18033)
static void C_ccall f_18033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18035)
static void C_fcall f_18035(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17960)
static void C_fcall f_17960(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17970)
static void C_fcall f_17970(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17977)
static void C_fcall f_17977(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18045)
static void C_ccall f_18045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18048)
static void C_ccall f_18048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18052)
static void C_ccall f_18052(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18072)
static void C_fcall f_18072(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18088)
static void C_ccall f_18088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18055)
static void C_ccall f_18055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17850)
static void C_fcall f_17850(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17862)
static void C_fcall f_17862(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17898)
static void C_ccall f_17898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17918)
static void C_ccall f_17918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17923)
static void C_fcall f_17923(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17360)
static void C_ccall f_17360(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_17360)
static void C_ccall f_17360r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_17287)
static void C_fcall f_17287(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_17132)
static void C_ccall f_17132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17138)
static void C_ccall f_17138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17223)
static void C_fcall f_17223(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17150)
static void C_ccall f_17150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17166)
static void C_ccall f_17166(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17170)
static void C_fcall f_17170(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17173)
static void C_fcall f_17173(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17153)
static void C_ccall f_17153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17164)
static void C_ccall f_17164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17304)
static void C_ccall f_17304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17841)
static void C_ccall f_17841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17364)
static void C_ccall f_17364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17810)
static void C_ccall f_17810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17825)
static void C_ccall f_17825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17817)
static void C_ccall f_17817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17781)
static void C_ccall f_17781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17785)
static void C_ccall f_17785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17746)
static void C_ccall f_17746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17750)
static void C_ccall f_17750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17711)
static void C_ccall f_17711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17715)
static void C_ccall f_17715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17367)
static void C_fcall f_17367(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17675)
static void C_ccall f_17675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17690)
static void C_ccall f_17690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17682)
static void C_ccall f_17682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17646)
static void C_ccall f_17646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17650)
static void C_ccall f_17650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17611)
static void C_ccall f_17611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17615)
static void C_ccall f_17615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17576)
static void C_ccall f_17576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17580)
static void C_ccall f_17580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17370)
static void C_fcall f_17370(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17540)
static void C_ccall f_17540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17555)
static void C_ccall f_17555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17547)
static void C_ccall f_17547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17511)
static void C_ccall f_17511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17515)
static void C_ccall f_17515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17476)
static void C_ccall f_17476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17480)
static void C_ccall f_17480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17441)
static void C_ccall f_17441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17445)
static void C_ccall f_17445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17373)
static void C_fcall f_17373(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17376)
static void C_ccall f_17376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17379)
static void C_ccall f_17379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17412)
static void C_ccall f_17412(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17420)
static void C_ccall f_17420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17385)
static void C_ccall f_17385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17398)
static void C_ccall f_17398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17388)
static void C_fcall f_17388(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17391)
static void C_ccall f_17391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16927)
static void C_ccall f_16927(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16931)
static void C_ccall f_16931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16934)
static void C_ccall f_16934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16937)
static void C_ccall f_16937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17106)
static void C_ccall f_17106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17119)
static void C_ccall f_17119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17123)
static void C_ccall f_17123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16943)
static void C_ccall f_16943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17099)
static void C_ccall f_17099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17080)
static void C_ccall f_17080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17087)
static void C_ccall f_17087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17091)
static void C_ccall f_17091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16949)
static void C_fcall f_16949(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16955)
static void C_ccall f_16955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17039)
static void C_ccall f_17039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17041)
static void C_fcall f_17041(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17063)
static void C_ccall f_17063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17070)
static void C_ccall f_17070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17074)
static void C_ccall f_17074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17060)
static void C_fcall f_17060(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17056)
static void C_ccall f_17056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16997)
static void C_ccall f_16997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17014)
static void C_fcall f_17014(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17024)
static void C_ccall f_17024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17000)
static void C_ccall f_17000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16959)
static void C_fcall f_16959(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16967)
static void C_ccall f_16967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16969)
static void C_fcall f_16969(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16990)
static void C_ccall f_16990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16827)
static void C_fcall f_16827(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16925)
static void C_ccall f_16925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16884)
static void C_fcall f_16884(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16917)
static void C_ccall f_16917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16913)
static void C_ccall f_16913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16898)
static void C_ccall f_16898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16834)
static void C_ccall f_16834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16842)
static void C_fcall f_16842(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16875)
static void C_ccall f_16875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16859)
static void C_ccall f_16859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16060)
static void C_ccall f_16060(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_16060)
static void C_ccall f_16060r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_16377)
static void C_ccall f_16377(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16384)
static void C_fcall f_16384(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16789)
static void C_ccall f_16789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16804)
static void C_ccall f_16804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16796)
static void C_ccall f_16796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16760)
static void C_ccall f_16760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16764)
static void C_ccall f_16764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16725)
static void C_ccall f_16725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16729)
static void C_ccall f_16729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16690)
static void C_ccall f_16690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16694)
static void C_ccall f_16694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16387)
static void C_fcall f_16387(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16654)
static void C_ccall f_16654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16669)
static void C_ccall f_16669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16661)
static void C_ccall f_16661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16625)
static void C_ccall f_16625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16629)
static void C_ccall f_16629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16590)
static void C_ccall f_16590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16594)
static void C_ccall f_16594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16555)
static void C_ccall f_16555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16559)
static void C_ccall f_16559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16390)
static void C_fcall f_16390(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16519)
static void C_ccall f_16519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16534)
static void C_ccall f_16534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16526)
static void C_ccall f_16526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16490)
static void C_ccall f_16490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16494)
static void C_ccall f_16494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16455)
static void C_ccall f_16455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16459)
static void C_ccall f_16459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16420)
static void C_ccall f_16420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16424)
static void C_ccall f_16424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16393)
static void C_fcall f_16393(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16396)
static void C_ccall f_16396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16064)
static void C_ccall f_16064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16067)
static void C_ccall f_16067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16341)
static void C_ccall f_16341(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16345)
static void C_ccall f_16345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16348)
static void C_ccall f_16348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16351)
static void C_ccall f_16351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16354)
static void C_ccall f_16354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16367)
static void C_ccall f_16367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16357)
static void C_fcall f_16357(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16073)
static void C_ccall f_16073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16336)
static void C_ccall f_16336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16080)
static void C_fcall f_16080(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16311)
static void C_ccall f_16311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16326)
static void C_ccall f_16326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16318)
static void C_ccall f_16318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16282)
static void C_ccall f_16282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16286)
static void C_ccall f_16286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16247)
static void C_ccall f_16247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16251)
static void C_ccall f_16251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16083)
static void C_fcall f_16083(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16211)
static void C_ccall f_16211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16226)
static void C_ccall f_16226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16218)
static void C_ccall f_16218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16182)
static void C_ccall f_16182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16186)
static void C_ccall f_16186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16147)
static void C_ccall f_16147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16151)
static void C_ccall f_16151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16086)
static void C_fcall f_16086(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16089)
static void C_ccall f_16089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16104)
static void C_ccall f_16104(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16126)
static void C_ccall f_16126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16110)
static void C_ccall f_16110(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16118)
static void C_ccall f_16118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16092)
static void C_ccall f_16092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16095)
static void C_ccall f_16095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15977)
static void C_fcall f_15977(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15968)
static void C_fcall f_15968(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15959)
static void C_fcall f_15959(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15941)
static void C_fcall f_15941(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15923)
static void C_fcall f_15923(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15905)
static void C_fcall f_15905(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15896)
static void C_fcall f_15896(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15887)
static void C_fcall f_15887(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15665)
static void C_ccall f_15665(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15715)
static void C_ccall f_15715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15860)
static void C_ccall f_15860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15741)
static void C_ccall f_15741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15856)
static void C_ccall f_15856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15841)
static void C_ccall f_15841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15822)
static void C_ccall f_15822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15795)
static void C_ccall f_15795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15748)
static void C_ccall f_15748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15718)
static void C_fcall f_15718(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15668)
static void C_ccall f_15668(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_15674)
static void C_fcall f_15674(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15690)
static void C_ccall f_15690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15693)
static void C_ccall f_15693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15191)
static void C_ccall f_15191(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15191)
static void C_ccall f_15191r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15655)
static void C_ccall f_15655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15195)
static void C_fcall f_15195(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15627)
static void C_ccall f_15627(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15642)
static void C_ccall f_15642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15634)
static void C_ccall f_15634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15598)
static void C_ccall f_15598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15602)
static void C_ccall f_15602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15563)
static void C_ccall f_15563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15567)
static void C_ccall f_15567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15528)
static void C_ccall f_15528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15532)
static void C_ccall f_15532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15198)
static void C_fcall f_15198(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15492)
static void C_ccall f_15492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15507)
static void C_ccall f_15507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15499)
static void C_ccall f_15499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15463)
static void C_ccall f_15463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15467)
static void C_ccall f_15467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15428)
static void C_ccall f_15428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15432)
static void C_ccall f_15432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15393)
static void C_ccall f_15393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15397)
static void C_ccall f_15397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15201)
static void C_fcall f_15201(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15357)
static void C_ccall f_15357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15372)
static void C_ccall f_15372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15364)
static void C_ccall f_15364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15328)
static void C_ccall f_15328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15332)
static void C_ccall f_15332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15293)
static void C_ccall f_15293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15297)
static void C_ccall f_15297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15258)
static void C_ccall f_15258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15262)
static void C_ccall f_15262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15204)
static void C_fcall f_15204(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15207)
static void C_ccall f_15207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15210)
static void C_ccall f_15210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15225)
static void C_ccall f_15225(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15237)
static void C_ccall f_15237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15216)
static void C_ccall f_15216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15219)
static void C_ccall f_15219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15115)
static void C_ccall f_15115(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15119)
static void C_ccall f_15119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15138)
static void C_ccall f_15138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15148)
static void C_ccall f_15148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15150)
static void C_fcall f_15150(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15167)
static void C_ccall f_15167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15170)
static void C_ccall f_15170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15181)
static void C_ccall f_15181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15122)
static void C_ccall f_15122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14852)
static void C_ccall f_14852(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_14852)
static void C_ccall f_14852r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15105)
static void C_ccall f_15105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14856)
static void C_fcall f_14856(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15077)
static void C_ccall f_15077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15092)
static void C_ccall f_15092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15084)
static void C_ccall f_15084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15048)
static void C_ccall f_15048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15052)
static void C_ccall f_15052(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15013)
static void C_ccall f_15013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15017)
static void C_ccall f_15017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14859)
static void C_fcall f_14859(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14977)
static void C_ccall f_14977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14992)
static void C_ccall f_14992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14984)
static void C_ccall f_14984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14948)
static void C_ccall f_14948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14952)
static void C_ccall f_14952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14913)
static void C_ccall f_14913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14917)
static void C_ccall f_14917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14862)
static void C_fcall f_14862(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14865)
static void C_ccall f_14865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14868)
static void C_ccall f_14868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14880)
static void C_ccall f_14880(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14892)
static void C_ccall f_14892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14874)
static void C_ccall f_14874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14816)
static void C_ccall f_14816(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14820)
static void C_ccall f_14820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14842)
static void C_ccall f_14842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14836)
static void C_ccall f_14836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14829)
static void C_ccall f_14829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14569)
static void C_ccall f_14569(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_14569)
static void C_ccall f_14569r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_14573)
static void C_fcall f_14573(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14786)
static void C_ccall f_14786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14801)
static void C_ccall f_14801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14793)
static void C_ccall f_14793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14757)
static void C_ccall f_14757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14761)
static void C_ccall f_14761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14722)
static void C_ccall f_14722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14726)
static void C_ccall f_14726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14576)
static void C_fcall f_14576(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14686)
static void C_ccall f_14686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14701)
static void C_ccall f_14701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14693)
static void C_ccall f_14693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14657)
static void C_ccall f_14657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14661)
static void C_ccall f_14661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14622)
static void C_ccall f_14622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14626)
static void C_ccall f_14626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14579)
static void C_fcall f_14579(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14582)
static void C_ccall f_14582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14585)
static void C_ccall f_14585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14593)
static void C_ccall f_14593(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14601)
static void C_ccall f_14601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14591)
static void C_ccall f_14591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14354)
static void C_ccall f_14354(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14358)
static void C_ccall f_14358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14567)
static void C_ccall f_14567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14520)
static void C_ccall f_14520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14532)
static void C_fcall f_14532(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14388)
static void C_ccall f_14388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14391)
static void C_ccall f_14391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14397)
static void C_ccall f_14397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14400)
static void C_ccall f_14400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14488)
static void C_fcall f_14488(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14403)
static void C_fcall f_14403(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14482)
static void C_ccall f_14482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14409)
static void C_ccall f_14409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14412)
static void C_ccall f_14412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14364)
static void C_ccall f_14364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14367)
static void C_ccall f_14367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14374)
static void C_ccall f_14374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13884)
static void C_ccall f_13884(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_13884)
static void C_ccall f_13884r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_13888)
static void C_fcall f_13888(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14324)
static void C_ccall f_14324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14339)
static void C_ccall f_14339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14331)
static void C_ccall f_14331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14295)
static void C_ccall f_14295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14299)
static void C_ccall f_14299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14260)
static void C_ccall f_14260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14264)
static void C_ccall f_14264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14225)
static void C_ccall f_14225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14229)
static void C_ccall f_14229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13891)
static void C_fcall f_13891(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14189)
static void C_ccall f_14189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14204)
static void C_ccall f_14204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14196)
static void C_ccall f_14196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14160)
static void C_ccall f_14160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14164)
static void C_ccall f_14164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14125)
static void C_ccall f_14125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14129)
static void C_ccall f_14129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14090)
static void C_ccall f_14090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14094)
static void C_ccall f_14094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13894)
static void C_fcall f_13894(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14054)
static void C_ccall f_14054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14069)
static void C_ccall f_14069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14061)
static void C_ccall f_14061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14025)
static void C_ccall f_14025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14029)
static void C_ccall f_14029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13990)
static void C_ccall f_13990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13994)
static void C_ccall f_13994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13955)
static void C_ccall f_13955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13959)
static void C_ccall f_13959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13897)
static void C_fcall f_13897(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13900)
static void C_ccall f_13900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13903)
static void C_ccall f_13903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13926)
static void C_ccall f_13926(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13934)
static void C_ccall f_13934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13909)
static void C_ccall f_13909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13912)
static void C_ccall f_13912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13804)
static void C_fcall f_13804(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13795)
static void C_fcall f_13795(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13723)
static void C_ccall f_13723(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13727)
static void C_ccall f_13727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13730)
static void C_fcall f_13730(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13468)
static void C_ccall f_13468(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_13468)
static void C_ccall f_13468r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_13472)
static void C_fcall f_13472(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13693)
static void C_ccall f_13693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13708)
static void C_ccall f_13708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13700)
static void C_ccall f_13700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13664)
static void C_ccall f_13664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13668)
static void C_ccall f_13668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13629)
static void C_ccall f_13629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13633)
static void C_ccall f_13633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13475)
static void C_fcall f_13475(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13593)
static void C_ccall f_13593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13608)
static void C_ccall f_13608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13600)
static void C_ccall f_13600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13564)
static void C_ccall f_13564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13568)
static void C_ccall f_13568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13529)
static void C_ccall f_13529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13533)
static void C_ccall f_13533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13478)
static void C_fcall f_13478(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13481)
static void C_ccall f_13481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13484)
static void C_ccall f_13484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13496)
static void C_ccall f_13496(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13508)
static void C_ccall f_13508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13490)
static void C_ccall f_13490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13353)
static void C_fcall f_13353(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13466)
static void C_ccall f_13466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13363)
static void C_ccall f_13363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13451)
static void C_ccall f_13451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13462)
static void C_ccall f_13462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13458)
static void C_ccall f_13458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13366)
static void C_ccall f_13366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13448)
static void C_ccall f_13448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13374)
static void C_ccall f_13374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13438)
static void C_ccall f_13438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13383)
static void C_ccall f_13383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13402)
static void C_ccall f_13402(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13431)
static void C_ccall f_13431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13412)
static void C_ccall f_13412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13427)
static void C_ccall f_13427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13415)
static void C_ccall f_13415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13386)
static void C_ccall f_13386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13396)
static void C_ccall f_13396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13377)
static void C_fcall f_13377(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13380)
static void C_ccall f_13380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13307)
static void C_fcall f_13307(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13298)
static void C_fcall f_13298(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13006)
static void C_fcall f_13006(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13013)
static void C_ccall f_13013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13016)
static void C_ccall f_13016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13287)
static void C_ccall f_13287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13279)
static void C_ccall f_13279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13271)
static void C_ccall f_13271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13274)
static void C_ccall f_13274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13242)
static void C_fcall f_13242(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13265)
static void C_ccall f_13265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13248)
static void C_fcall f_13248(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13252)
static void C_ccall f_13252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13019)
static void C_ccall f_13019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13025)
static void C_ccall f_13025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13117)
static void C_ccall f_13117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13229)
static void C_ccall f_13229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13236)
static void C_ccall f_13236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13140)
static void C_fcall f_13140(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13142)
static void C_fcall f_13142(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13191)
static void C_fcall f_13191(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13226)
static void C_ccall f_13226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13215)
static void C_ccall f_13215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13351)
static void C_ccall f_13351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13326)
static void C_ccall f_13326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13347)
static void C_ccall f_13347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13343)
static void C_ccall f_13343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13335)
static void C_ccall f_13335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13208)
static void C_ccall f_13208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13201)
static void C_ccall f_13201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13149)
static void C_ccall f_13149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13189)
static void C_ccall f_13189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13153)
static void C_ccall f_13153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13185)
static void C_ccall f_13185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13172)
static void C_ccall f_13172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13180)
static void C_ccall f_13180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13176)
static void C_ccall f_13176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13156)
static void C_fcall f_13156(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13159)
static void C_ccall f_13159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13133)
static void C_ccall f_13133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13120)
static void C_ccall f_13120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13129)
static void C_ccall f_13129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13124)
static void C_ccall f_13124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13031)
static void C_ccall f_13031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13111)
static void C_ccall f_13111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13091)
static void C_ccall f_13091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13097)
static void C_ccall f_13097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13108)
static void C_ccall f_13108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13088)
static void C_ccall f_13088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13076)
static void C_ccall f_13076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13079)
static void C_ccall f_13079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13034)
static void C_ccall f_13034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13070)
static void C_ccall f_13070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13065)
static void C_ccall f_13065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13037)
static void C_ccall f_13037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13050)
static void C_ccall f_13050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13040)
static void C_fcall f_13040(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13043)
static void C_ccall f_13043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13046)
static void C_ccall f_13046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12883)
static void C_ccall f_12883(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_12883)
static void C_ccall f_12883r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_12942)
static void C_ccall f_12942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12952)
static void C_ccall f_12952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12954)
static void C_fcall f_12954(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12983)
static void C_ccall f_12983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12988)
static void C_ccall f_12988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12973)
static void C_fcall f_12973(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12904)
static void C_fcall f_12904(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12936)
static void C_ccall f_12936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12864)
static void C_ccall f_12864(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12871)
static void C_ccall f_12871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12878)
static void C_ccall f_12878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12845)
static void C_ccall f_12845(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12852)
static void C_ccall f_12852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12859)
static void C_ccall f_12859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12665)
static void C_fcall f_12665(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9) C_noret;
C_noret_decl(f_12669)
static void C_ccall f_12669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12672)
static void C_ccall f_12672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12675)
static void C_ccall f_12675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12678)
static void C_ccall f_12678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12835)
static void C_ccall f_12835(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12842)
static void C_ccall f_12842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12681)
static void C_ccall f_12681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12833)
static void C_ccall f_12833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12684)
static void C_fcall f_12684(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12826)
static void C_ccall f_12826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12816)
static void C_ccall f_12816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12690)
static void C_ccall f_12690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12806)
static void C_ccall f_12806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12796)
static void C_ccall f_12796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12696)
static void C_ccall f_12696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12759)
static void C_ccall f_12759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12773)
static void C_ccall f_12773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12789)
static void C_ccall f_12789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12785)
static void C_ccall f_12785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12781)
static void C_ccall f_12781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12777)
static void C_ccall f_12777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12767)
static void C_ccall f_12767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12763)
static void C_ccall f_12763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12699)
static void C_fcall f_12699(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12702)
static void C_ccall f_12702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12743)
static void C_ccall f_12743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12708)
static void C_fcall f_12708(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12721)
static void C_ccall f_12721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12711)
static void C_ccall f_12711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12714)
static void C_ccall f_12714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12655)
static void C_fcall f_12655(C_word t0) C_noret;
C_noret_decl(f_12596)
static void C_fcall f_12596(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12587)
static void C_fcall f_12587(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12470)
static void C_fcall f_12470(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12461)
static void C_fcall f_12461(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12452)
static void C_ccall f_12452(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12443)
static void C_fcall f_12443(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12434)
static void C_fcall f_12434(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12416)
static void C_fcall f_12416(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12407)
static void C_fcall f_12407(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12398)
static void C_fcall f_12398(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12380)
static void C_fcall f_12380(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12371)
static void C_fcall f_12371(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12362)
static void C_fcall f_12362(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12347)
static void C_fcall f_12347(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12302)
static void C_fcall f_12302(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12284)
static void C_fcall f_12284(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12275)
static void C_fcall f_12275(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12248)
static void C_fcall f_12248(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12230)
static void C_fcall f_12230(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12212)
static void C_fcall f_12212(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12203)
static void C_fcall f_12203(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12191)
static void C_fcall f_12191(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_11442)
static void C_ccall f_11442(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11464)
static void C_ccall f_11464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11479)
static void C_ccall f_11479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11482)
static void C_fcall f_11482(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11658)
static void C_ccall f_11658(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11652)
static void C_ccall f_11652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11485)
static void C_ccall f_11485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11634)
static void C_ccall f_11634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11488)
static void C_fcall f_11488(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11491)
static void C_ccall f_11491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11627)
static void C_ccall f_11627(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11615)
static void C_ccall f_11615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11511)
static void C_fcall f_11511(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11518)
static void C_ccall f_11518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11588)
static void C_ccall f_11588(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11574)
static void C_ccall f_11574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11582)
static void C_ccall f_11582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11521)
static void C_ccall f_11521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11560)
static void C_ccall f_11560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11524)
static void C_fcall f_11524(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11553)
static void C_ccall f_11553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11530)
static void C_ccall f_11530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11533)
static void C_ccall f_11533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11537)
static void C_ccall f_11537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11498)
static void C_fcall f_11498(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11501)
static void C_ccall f_11501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11311)
static void C_fcall f_11311(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11320)
static void C_fcall f_11320(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11268)
static void C_ccall f_11268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11274)
static void C_fcall f_11274(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11337)
static void C_ccall f_11337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11423)
static void C_ccall f_11423(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11410)
static void C_ccall f_11410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11418)
static void C_ccall f_11418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11340)
static void C_ccall f_11340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11344)
static void C_ccall f_11344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11387)
static void C_ccall f_11387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11349)
static void C_ccall f_11349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11315)
static void C_ccall f_11315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11210)
static void C_ccall f_11210(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11217)
static void C_ccall f_11217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11248)
static void C_ccall f_11248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11244)
static void C_ccall f_11244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11236)
static void C_ccall f_11236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11119)
static void C_ccall f_11119(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11126)
static void C_ccall f_11126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11194)
static void C_ccall f_11194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11137)
static void C_fcall f_11137(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11164)
static void C_ccall f_11164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11148)
static void C_ccall f_11148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11053)
static void C_ccall f_11053(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11064)
static void C_ccall f_11064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11067)
static void C_fcall f_11067(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11074)
static void C_ccall f_11074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11047)
static void C_ccall f_11047(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10501)
static void C_ccall f_10501(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10532)
static void C_ccall f_10532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10996)
static void C_ccall f_10996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11002)
static void C_ccall f_11002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10543)
static void C_ccall f_10543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10428)
static void C_fcall f_10428(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10453)
static void C_ccall f_10453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10388)
static void C_fcall f_10388(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10401)
static void C_fcall f_10401(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10442)
static void C_ccall f_10442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10547)
static void C_ccall f_10547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10984)
static void C_ccall f_10984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10980)
static void C_fcall f_10980(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10976)
static void C_ccall f_10976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10550)
static void C_ccall f_10550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10770)
static void C_fcall f_10770(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10879)
static void C_ccall f_10879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10944)
static void C_ccall f_10944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10886)
static void C_fcall f_10886(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10890)
static void C_ccall f_10890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10894)
static void C_ccall f_10894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10936)
static void C_ccall f_10936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10932)
static void C_ccall f_10932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10910)
static void C_ccall f_10910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10773)
static void C_fcall f_10773(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10776)
static void C_fcall f_10776(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10675)
static void C_ccall f_10675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10758)
static void C_ccall f_10758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10725)
static void C_ccall f_10725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10751)
static void C_ccall f_10751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10733)
static void C_ccall f_10733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10681)
static void C_fcall f_10681(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10721)
static void C_ccall f_10721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10663)
static void C_ccall f_10663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10634)
static void C_ccall f_10634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10656)
static void C_ccall f_10656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10642)
static void C_ccall f_10642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10596)
static void C_fcall f_10596(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10553)
static void C_fcall f_10553(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10564)
static void C_ccall f_10564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10568)
static void C_ccall f_10568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10572)
static void C_ccall f_10572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10576)
static void C_ccall f_10576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10560)
static void C_ccall f_10560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10520)
static void C_fcall f_10520(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10515)
static void C_fcall f_10515(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10510)
static void C_fcall f_10510(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10342)
static void C_ccall f_10342(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10353)
static void C_ccall f_10353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10368)
static void C_ccall f_10368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10304)
static void C_ccall f_10304(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10315)
static void C_ccall f_10315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10330)
static void C_ccall f_10330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10237)
static void C_ccall f_10237(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10257)
static void C_fcall f_10257(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10267)
static void C_ccall f_10267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10280)
static void C_ccall f_10280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10248)
static void C_ccall f_10248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10255)
static void C_ccall f_10255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10044)
static void C_ccall f_10044(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10104)
static void C_fcall f_10104(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10114)
static void C_ccall f_10114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10228)
static void C_ccall f_10228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10193)
static void C_ccall f_10193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10185)
static void C_ccall f_10185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10156)
static void C_ccall f_10156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10134)
static void C_ccall f_10134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10137)
static void C_ccall f_10137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10125)
static void C_ccall f_10125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10051)
static void C_ccall f_10051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10102)
static void C_ccall f_10102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10094)
static void C_ccall f_10094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10054)
static void C_ccall f_10054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10065)
static void C_ccall f_10065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10069)
static void C_ccall f_10069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10061)
static void C_ccall f_10061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9902)
static void C_ccall f_9902(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9950)
static void C_fcall f_9950(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9960)
static void C_ccall f_9960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9971)
static void C_ccall f_9971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10008)
static void C_ccall f_10008(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9983)
static void C_ccall f_9983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9974)
static void C_ccall f_9974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9912)
static void C_ccall f_9912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9948)
static void C_ccall f_9948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9919)
static void C_ccall f_9919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9551)
static void C_ccall f_9551(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9558)
static void C_ccall f_9558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9792)
static void C_fcall f_9792(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9802)
static void C_ccall f_9802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9813)
static void C_ccall f_9813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9825)
static void C_fcall f_9825(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9828)
static void C_ccall f_9828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9816)
static void C_ccall f_9816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9564)
static void C_ccall f_9564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9790)
static void C_ccall f_9790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9786)
static void C_ccall f_9786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9732)
static void C_fcall f_9732(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9697)
static void C_fcall f_9697(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9713)
static void C_fcall f_9713(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9668)
static void C_fcall f_9668(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9592)
static void C_ccall f_9592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9595)
static void C_ccall f_9595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9659)
static void C_ccall f_9659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9655)
static void C_ccall f_9655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9575)
static void C_fcall f_9575(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9586)
static void C_ccall f_9586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9582)
static void C_ccall f_9582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9504)
static void C_ccall f_9504(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9537)
static void C_ccall f_9537(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9519)
static void C_ccall f_9519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9531)
static void C_ccall f_9531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9122)
static void C_ccall f_9122(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9331)
static void C_fcall f_9331(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9341)
static void C_ccall f_9341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9352)
static void C_ccall f_9352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9472)
static void C_ccall f_9472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9451)
static void C_ccall f_9451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9430)
static void C_ccall f_9430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9409)
static void C_ccall f_9409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9388)
static void C_ccall f_9388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9367)
static void C_ccall f_9367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9355)
static void C_ccall f_9355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9132)
static void C_ccall f_9132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9135)
static void C_fcall f_9135(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9298)
static void C_fcall f_9298(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9138)
static void C_fcall f_9138(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9289)
static void C_ccall f_9289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9269)
static void C_ccall f_9269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9141)
static void C_fcall f_9141(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9234)
static void C_ccall f_9234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9251)
static void C_ccall f_9251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9144)
static void C_fcall f_9144(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9183)
static void C_ccall f_9183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9217)
static void C_ccall f_9217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9201)
static void C_ccall f_9201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9186)
static void C_fcall f_9186(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9151)
static void C_fcall f_9151(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9162)
static void C_ccall f_9162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9166)
static void C_ccall f_9166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9158)
static void C_ccall f_9158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9040)
static void C_ccall f_9040(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9044)
static void C_ccall f_9044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9062)
static void C_ccall f_9062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8880)
static void C_fcall f_8880(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8888)
static void C_fcall f_8888(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8898)
static void C_ccall f_8898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8936)
static void C_ccall f_8936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8939)
static void C_ccall f_8939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8942)
static void C_ccall f_8942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9017)
static void C_fcall f_9017(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9027)
static void C_ccall f_9027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8945)
static void C_ccall f_8945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8948)
static void C_ccall f_8948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8951)
static void C_ccall f_8951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8971)
static void C_fcall f_8971(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8981)
static void C_ccall f_8981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8984)
static void C_ccall f_8984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8987)
static void C_ccall f_8987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8954)
static void C_ccall f_8954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8957)
static void C_ccall f_8957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8874)
static void C_fcall f_8874(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8868)
static void C_fcall f_8868(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8862)
static void C_fcall f_8862(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8791)
static void C_fcall f_8791(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8832)
static void C_ccall f_8832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8836)
static void C_ccall f_8836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8840)
static void C_ccall f_8840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8844)
static void C_ccall f_8844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8848)
static void C_ccall f_8848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8852)
static void C_ccall f_8852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8856)
static void C_ccall f_8856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8860)
static void C_ccall f_8860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8793)
static void C_fcall f_8793(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8799)
static void C_fcall f_8799(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8821)
static void C_ccall f_8821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8810)
static void C_ccall f_8810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8640)
static void C_fcall f_8640(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8655)
static void C_fcall f_8655(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8668)
static void C_ccall f_8668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8628)
static void C_ccall f_8628(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8616)
static void C_ccall f_8616(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8604)
static void C_ccall f_8604(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8598)
static void C_fcall f_8598(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8592)
static void C_ccall f_8592(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8580)
static void C_ccall f_8580(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8568)
static void C_ccall f_8568(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8556)
static void C_ccall f_8556(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8544)
static void C_ccall f_8544(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8538)
static void C_fcall f_8538(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8488)
static void C_ccall f_8488(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_8488)
static void C_ccall f_8488r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_8522)
static void C_ccall f_8522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8526)
static void C_ccall f_8526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8530)
static void C_ccall f_8530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8496)
static void C_ccall f_8496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8514)
static void C_ccall f_8514(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8505)
static void C_ccall f_8505(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8513)
static void C_ccall f_8513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8500)
static void C_ccall f_8500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8444)
static void C_ccall f_8444(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_8444)
static void C_ccall f_8444r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_8478)
static void C_ccall f_8478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8482)
static void C_ccall f_8482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8486)
static void C_ccall f_8486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8452)
static void C_ccall f_8452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8470)
static void C_ccall f_8470(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8461)
static void C_ccall f_8461(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8469)
static void C_ccall f_8469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8456)
static void C_ccall f_8456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8370)
static void C_fcall f_8370(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8374)
static void C_ccall f_8374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8381)
static void C_ccall f_8381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8383)
static void C_fcall f_8383(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_8397)
static void C_ccall f_8397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8410)
static void C_ccall f_8410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8400)
static void C_fcall f_8400(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8284)
static void C_ccall f_8284(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_8284)
static void C_ccall f_8284r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_8166)
static void C_fcall f_8166(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8172)
static void C_fcall f_8172(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8196)
static void C_ccall f_8196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8182)
static void C_fcall f_8182(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8067)
static void C_ccall f_8067(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8067)
static void C_ccall f_8067r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8071)
static void C_ccall f_8071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8096)
static void C_fcall f_8096(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8113)
static void C_ccall f_8113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8117)
static void C_ccall f_8117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8073)
static void C_fcall f_8073(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8090)
static void C_ccall f_8090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7905)
static void C_ccall f_7905(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7905)
static void C_ccall f_7905r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7914)
static void C_fcall f_7914(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7952)
static void C_fcall f_7952(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7930)
static void C_ccall f_7930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7815)
static void C_ccall f_7815(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7767)
static void C_ccall f_7767(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7801)
static void C_ccall f_7801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7744)
static void C_ccall f_7744(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7738)
static void C_ccall f_7738(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7723)
static void C_ccall f_7723(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7709)
static void C_ccall f_7709(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7699)
static void C_ccall f_7699(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7689)
static void C_ccall f_7689(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7679)
static void C_ccall f_7679(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7669)
static void C_ccall f_7669(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7659)
static void C_ccall f_7659(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6925)
static void C_ccall f_6925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7628)
static void C_ccall f_7628(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7628)
static void C_ccall f_7628r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7638)
static void C_fcall f_7638(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7622)
static void C_ccall f_7622(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6883)
static void C_ccall f_6883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7616)
static void C_ccall f_7616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7499)
static void C_fcall f_7499(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7350)
static void C_fcall f_7350(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7359)
static void C_ccall f_7359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7256)
static void C_fcall f_7256(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7236)
static void C_fcall f_7236(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7205)
static void C_ccall f_7205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7202)
static void C_ccall f_7202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7195)
static void C_fcall f_7195(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7192)
static void C_ccall f_7192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7185)
static void C_fcall f_7185(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7167)
static void C_fcall f_7167(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7156)
static void C_fcall f_7156(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7153)
static void C_ccall f_7153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7150)
static void C_ccall f_7150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7147)
static void C_ccall f_7147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7118)
static void C_fcall f_7118(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7111)
static void C_fcall f_7111(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7108)
static void C_ccall f_7108(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7087)
static void C_fcall f_7087(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7068)
static void C_ccall f_7068(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7049)
static void C_ccall f_7049(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7042)
static void C_ccall f_7042(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7035)
static void C_ccall f_7035(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7020)
static void C_fcall f_7020(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7009)
static void C_fcall f_7009(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7002)
static void C_ccall f_7002(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6948)
static void C_fcall f_6948(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_6892)
static void C_fcall f_6892(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6897)
static void C_ccall f_6897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6811)
static void C_fcall f_6811(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6805)
static void C_ccall f_6805(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6798)
static void C_ccall f_6798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6792)
static void C_ccall f_6792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6782)
static void C_ccall f_6782(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6762)
static void C_ccall f_6762(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6774)
static void C_ccall f_6774(C_word c,C_word t0,C_word t1) C_noret;

C_noret_decl(trf_44521)
static void C_fcall trf_44521(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_44521(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_44521(t0,t1,t2);}

C_noret_decl(trf_44581)
static void C_fcall trf_44581(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_44581(void *dummy){
C_word t13=C_pick(0);
C_word t12=C_pick(1);
C_word t11=C_pick(2);
C_word t10=C_pick(3);
C_word t9=C_pick(4);
C_word t8=C_pick(5);
C_word t7=C_pick(6);
C_word t6=C_pick(7);
C_word t5=C_pick(8);
C_word t4=C_pick(9);
C_word t3=C_pick(10);
C_word t2=C_pick(11);
C_word t1=C_pick(12);
C_word t0=C_pick(13);
C_adjust_stack(-14);
f_44581(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}

C_noret_decl(trf_44601)
static void C_fcall trf_44601(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_44601(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_44601(t0,t1);}

C_noret_decl(trf_44604)
static void C_fcall trf_44604(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_44604(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_44604(t0,t1);}

C_noret_decl(trf_44447)
static void C_fcall trf_44447(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_44447(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_44447(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_44281)
static void C_fcall trf_44281(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_44281(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_44281(t0,t1);}

C_noret_decl(trf_28646)
static void C_fcall trf_28646(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28646(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28646(t0,t1,t2);}

C_noret_decl(trf_28659)
static void C_fcall trf_28659(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28659(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28659(t0,t1);}

C_noret_decl(trf_43159)
static void C_fcall trf_43159(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_43159(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_43159(t0,t1);}

C_noret_decl(trf_43032)
static void C_fcall trf_43032(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_43032(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_43032(t0,t1,t2);}

C_noret_decl(trf_38452)
static void C_fcall trf_38452(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38452(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38452(t0,t1);}

C_noret_decl(trf_42684)
static void C_fcall trf_42684(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42684(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_42684(t0,t1);}

C_noret_decl(trf_41779)
static void C_fcall trf_41779(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41779(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_41779(t0,t1,t2);}

C_noret_decl(trf_41814)
static void C_fcall trf_41814(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41814(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41814(t0,t1);}

C_noret_decl(trf_41838)
static void C_fcall trf_41838(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41838(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41838(t0,t1);}

C_noret_decl(trf_41817)
static void C_fcall trf_41817(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41817(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41817(t0,t1);}

C_noret_decl(trf_41620)
static void C_fcall trf_41620(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41620(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41620(t0,t1);}

C_noret_decl(trf_41376)
static void C_fcall trf_41376(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41376(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41376(t0,t1);}

C_noret_decl(trf_41383)
static void C_fcall trf_41383(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41383(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41383(t0,t1);}

C_noret_decl(trf_41364)
static void C_fcall trf_41364(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41364(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41364(t0,t1);}

C_noret_decl(trf_30708)
static void C_fcall trf_30708(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30708(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30708(t0,t1);}

C_noret_decl(trf_30715)
static void C_fcall trf_30715(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30715(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30715(t0,t1);}

C_noret_decl(trf_31032)
static void C_fcall trf_31032(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31032(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31032(t0,t1,t2);}

C_noret_decl(trf_31055)
static void C_fcall trf_31055(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31055(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31055(t0,t1,t2);}

C_noret_decl(trf_31072)
static void C_fcall trf_31072(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31072(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31072(t0,t1);}

C_noret_decl(trf_31075)
static void C_fcall trf_31075(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31075(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31075(t0,t1);}

C_noret_decl(trf_31078)
static void C_fcall trf_31078(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31078(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31078(t0,t1);}

C_noret_decl(trf_30996)
static void C_fcall trf_30996(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30996(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30996(t0,t1,t2);}

C_noret_decl(trf_30936)
static void C_fcall trf_30936(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30936(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30936(t0,t1,t2);}

C_noret_decl(trf_30952)
static void C_fcall trf_30952(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30952(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30952(t0,t1);}

C_noret_decl(trf_30907)
static void C_fcall trf_30907(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30907(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30907(t0,t1);}

C_noret_decl(trf_30724)
static void C_fcall trf_30724(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30724(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30724(t0,t1);}

C_noret_decl(trf_30727)
static void C_fcall trf_30727(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30727(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30727(t0,t1);}

C_noret_decl(trf_30730)
static void C_fcall trf_30730(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30730(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30730(t0,t1);}

C_noret_decl(trf_11696)
static void C_fcall trf_11696(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11696(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11696(t0,t1);}

C_noret_decl(trf_11731)
static void C_fcall trf_11731(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11731(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_11731(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_11741)
static void C_fcall trf_11741(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11741(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11741(t0,t1);}

C_noret_decl(trf_11704)
static void C_fcall trf_11704(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11704(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11704(t0,t1,t2);}

C_noret_decl(trf_11864)
static void C_fcall trf_11864(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11864(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11864(t0,t1);}

C_noret_decl(trf_39191)
static void C_fcall trf_39191(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39191(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39191(t0,t1);}

C_noret_decl(trf_39335)
static void C_fcall trf_39335(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39335(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39335(t0,t1);}

C_noret_decl(trf_39204)
static void C_fcall trf_39204(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39204(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39204(t0,t1);}

C_noret_decl(trf_40873)
static void C_fcall trf_40873(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40873(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40873(t0,t1);}

C_noret_decl(trf_40876)
static void C_fcall trf_40876(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40876(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40876(t0,t1);}

C_noret_decl(trf_40719)
static void C_fcall trf_40719(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40719(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40719(t0,t1);}

C_noret_decl(trf_40527)
static void C_fcall trf_40527(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40527(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40527(t0,t1);}

C_noret_decl(trf_40377)
static void C_fcall trf_40377(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40377(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40377(t0,t1);}

C_noret_decl(trf_40466)
static void C_fcall trf_40466(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40466(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40466(t0,t1);}

C_noret_decl(trf_40380)
static void C_fcall trf_40380(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40380(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40380(t0,t1);}

C_noret_decl(trf_40396)
static void C_fcall trf_40396(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40396(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_40396(t0,t1,t2,t3);}

C_noret_decl(trf_40418)
static void C_fcall trf_40418(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40418(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40418(t0,t1);}

C_noret_decl(trf_40313)
static void C_fcall trf_40313(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40313(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_40313(t0,t1,t2);}

C_noret_decl(trf_40260)
static void C_fcall trf_40260(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40260(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40260(t0,t1);}

C_noret_decl(trf_39882)
static void C_fcall trf_39882(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39882(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39882(t0,t1,t2);}

C_noret_decl(trf_39910)
static void C_fcall trf_39910(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39910(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39910(t0,t1);}

C_noret_decl(trf_39822)
static void C_fcall trf_39822(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39822(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39822(t0,t1,t2);}

C_noret_decl(trf_39747)
static void C_fcall trf_39747(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39747(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39747(t0,t1,t2);}

C_noret_decl(trf_39671)
static void C_fcall trf_39671(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39671(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_39671(t0,t1,t2,t3);}

C_noret_decl(trf_39618)
static void C_fcall trf_39618(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39618(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39618(t0,t1,t2);}

C_noret_decl(trf_39641)
static void C_fcall trf_39641(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39641(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39641(t0,t1);}

C_noret_decl(trf_39566)
static void C_fcall trf_39566(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39566(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39566(t0,t1,t2);}

C_noret_decl(trf_39435)
static void C_fcall trf_39435(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39435(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39435(t0,t1);}

C_noret_decl(trf_39505)
static void C_fcall trf_39505(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39505(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39505(t0,t1,t2);}

C_noret_decl(trf_39464)
static void C_fcall trf_39464(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39464(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39464(t0,t1);}

C_noret_decl(trf_39436)
static void C_fcall trf_39436(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39436(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39436(t0,t1);}

C_noret_decl(trf_39135)
static void C_fcall trf_39135(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39135(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39135(t0,t1,t2);}

C_noret_decl(trf_39076)
static void C_fcall trf_39076(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39076(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39076(t0,t1);}

C_noret_decl(trf_38522)
static void C_fcall trf_38522(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38522(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38522(t0,t1);}

C_noret_decl(trf_38855)
static void C_fcall trf_38855(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38855(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_38855(t0,t1,t2,t3);}

C_noret_decl(trf_38782)
static void C_fcall trf_38782(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38782(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_38782(t0,t1,t2);}

C_noret_decl(trf_38819)
static void C_fcall trf_38819(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38819(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38819(t0,t1);}

C_noret_decl(trf_38737)
static void C_fcall trf_38737(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38737(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38737(t0,t1);}

C_noret_decl(trf_38742)
static void C_fcall trf_38742(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38742(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38742(t0,t1);}

C_noret_decl(trf_38691)
static void C_fcall trf_38691(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38691(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38691(t0,t1);}

C_noret_decl(trf_38696)
static void C_fcall trf_38696(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38696(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38696(t0,t1);}

C_noret_decl(trf_38588)
static void C_fcall trf_38588(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38588(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38588(t0,t1);}

C_noret_decl(trf_38597)
static void C_fcall trf_38597(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38597(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_38597(t0,t1,t2);}

C_noret_decl(trf_38206)
static void C_fcall trf_38206(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38206(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_38206(t0,t1,t2);}

C_noret_decl(trf_38379)
static void C_fcall trf_38379(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38379(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38379(t0,t1);}

C_noret_decl(trf_38221)
static void C_fcall trf_38221(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38221(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_38221(t0,t1,t2,t3);}

C_noret_decl(trf_38046)
static void C_fcall trf_38046(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38046(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_38046(t0,t1,t2,t3);}

C_noret_decl(trf_37977)
static void C_fcall trf_37977(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37977(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37977(t0,t1);}

C_noret_decl(trf_37933)
static void C_fcall trf_37933(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37933(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37933(t0,t1);}

C_noret_decl(trf_37962)
static void C_fcall trf_37962(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37962(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37962(t0,t1);}

C_noret_decl(trf_37936)
static void C_fcall trf_37936(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37936(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37936(t0,t1);}

C_noret_decl(trf_37758)
static void C_fcall trf_37758(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37758(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37758(t0,t1);}

C_noret_decl(trf_37765)
static void C_fcall trf_37765(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37765(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37765(t0,t1);}

C_noret_decl(trf_37771)
static void C_fcall trf_37771(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37771(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_37771(t0,t1,t2);}

C_noret_decl(trf_37653)
static void C_fcall trf_37653(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37653(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37653(t0,t1);}

C_noret_decl(trf_37660)
static void C_fcall trf_37660(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37660(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37660(t0,t1);}

C_noret_decl(trf_37666)
static void C_fcall trf_37666(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37666(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_37666(t0,t1,t2);}

C_noret_decl(trf_37128)
static void C_fcall trf_37128(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37128(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37128(t0,t1);}

C_noret_decl(trf_37131)
static void C_fcall trf_37131(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37131(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37131(t0,t1);}

C_noret_decl(trf_37134)
static void C_fcall trf_37134(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37134(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37134(t0,t1);}

C_noret_decl(trf_36699)
static void C_fcall trf_36699(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36699(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36699(t0,t1);}

C_noret_decl(trf_36702)
static void C_fcall trf_36702(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36702(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36702(t0,t1);}

C_noret_decl(trf_36705)
static void C_fcall trf_36705(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36705(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36705(t0,t1);}

C_noret_decl(trf_36270)
static void C_fcall trf_36270(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36270(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36270(t0,t1);}

C_noret_decl(trf_36273)
static void C_fcall trf_36273(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36273(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36273(t0,t1);}

C_noret_decl(trf_36276)
static void C_fcall trf_36276(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36276(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36276(t0,t1);}

C_noret_decl(trf_35563)
static void C_fcall trf_35563(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35563(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35563(t0,t1);}

C_noret_decl(trf_35566)
static void C_fcall trf_35566(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35566(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35566(t0,t1);}

C_noret_decl(trf_35569)
static void C_fcall trf_35569(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35569(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35569(t0,t1);}

C_noret_decl(trf_35572)
static void C_fcall trf_35572(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35572(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35572(t0,t1);}

C_noret_decl(trf_34856)
static void C_fcall trf_34856(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34856(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34856(t0,t1);}

C_noret_decl(trf_34859)
static void C_fcall trf_34859(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34859(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34859(t0,t1);}

C_noret_decl(trf_34862)
static void C_fcall trf_34862(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34862(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34862(t0,t1);}

C_noret_decl(trf_34865)
static void C_fcall trf_34865(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34865(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34865(t0,t1);}

C_noret_decl(trf_34149)
static void C_fcall trf_34149(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34149(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34149(t0,t1);}

C_noret_decl(trf_34152)
static void C_fcall trf_34152(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34152(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34152(t0,t1);}

C_noret_decl(trf_34155)
static void C_fcall trf_34155(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34155(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34155(t0,t1);}

C_noret_decl(trf_34158)
static void C_fcall trf_34158(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34158(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34158(t0,t1);}

C_noret_decl(trf_33720)
static void C_fcall trf_33720(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33720(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33720(t0,t1);}

C_noret_decl(trf_33723)
static void C_fcall trf_33723(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33723(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33723(t0,t1);}

C_noret_decl(trf_33726)
static void C_fcall trf_33726(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33726(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33726(t0,t1);}

C_noret_decl(trf_32665)
static void C_fcall trf_32665(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32665(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32665(t0,t1);}

C_noret_decl(trf_32668)
static void C_fcall trf_32668(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32668(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32668(t0,t1);}

C_noret_decl(trf_32671)
static void C_fcall trf_32671(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32671(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32671(t0,t1);}

C_noret_decl(trf_32674)
static void C_fcall trf_32674(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32674(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32674(t0,t1);}

C_noret_decl(trf_32677)
static void C_fcall trf_32677(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32677(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32677(t0,t1);}

C_noret_decl(trf_32502)
static void C_fcall trf_32502(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32502(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32502(t0,t1);}

C_noret_decl(trf_32509)
static void C_fcall trf_32509(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32509(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32509(t0,t1);}

C_noret_decl(trf_32447)
static void C_fcall trf_32447(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32447(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32447(t0,t1);}

C_noret_decl(trf_32454)
static void C_fcall trf_32454(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32454(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32454(t0,t1);}

C_noret_decl(trf_32204)
static void C_fcall trf_32204(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32204(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32204(t0,t1);}

C_noret_decl(trf_32207)
static void C_fcall trf_32207(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32207(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32207(t0,t1);}

C_noret_decl(trf_31993)
static void C_fcall trf_31993(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31993(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31993(t0,t1,t2);}

C_noret_decl(trf_31869)
static void C_fcall trf_31869(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31869(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_31869(t0,t1,t2,t3,t4);}

C_noret_decl(trf_31905)
static void C_fcall trf_31905(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31905(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31905(t0,t1,t2);}

C_noret_decl(trf_31707)
static void C_fcall trf_31707(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31707(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31707(t0,t1);}

C_noret_decl(trf_31711)
static void C_fcall trf_31711(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31711(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31711(t0,t1);}

C_noret_decl(trf_31227)
static void C_fcall trf_31227(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31227(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31227(t0,t1);}

C_noret_decl(trf_31230)
static void C_fcall trf_31230(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31230(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31230(t0,t1);}

C_noret_decl(trf_31233)
static void C_fcall trf_31233(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31233(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31233(t0,t1);}

C_noret_decl(trf_31239)
static void C_fcall trf_31239(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31239(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31239(t0,t1);}

C_noret_decl(trf_29047)
static void C_fcall trf_29047(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29047(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29047(t0,t1);}

C_noret_decl(trf_31835)
static void C_fcall trf_31835(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31835(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31835(t0,t1,t2);}

C_noret_decl(trf_31845)
static void C_fcall trf_31845(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31845(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31845(t0,t1);}

C_noret_decl(trf_31805)
static void C_fcall trf_31805(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31805(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31805(t0,t1,t2);}

C_noret_decl(trf_31815)
static void C_fcall trf_31815(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31815(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31815(t0,t1);}

C_noret_decl(trf_30389)
static void C_fcall trf_30389(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30389(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30389(t0,t1);}

C_noret_decl(trf_30392)
static void C_fcall trf_30392(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30392(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30392(t0,t1);}

C_noret_decl(trf_30395)
static void C_fcall trf_30395(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30395(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30395(t0,t1);}

C_noret_decl(trf_30398)
static void C_fcall trf_30398(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30398(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30398(t0,t1);}

C_noret_decl(trf_30401)
static void C_fcall trf_30401(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30401(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30401(t0,t1);}

C_noret_decl(trf_30404)
static void C_fcall trf_30404(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30404(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30404(t0,t1);}

C_noret_decl(trf_30232)
static void C_fcall trf_30232(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30232(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30232(t0,t1);}

C_noret_decl(trf_30161)
static void C_fcall trf_30161(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30161(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30161(t0,t1);}

C_noret_decl(trf_29976)
static void C_fcall trf_29976(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29976(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29976(t0,t1);}

C_noret_decl(trf_29988)
static void C_fcall trf_29988(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29988(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29988(t0,t1);}

C_noret_decl(trf_30025)
static void C_fcall trf_30025(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30025(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_30025(t0,t1,t2,t3,t4);}

C_noret_decl(trf_30060)
static void C_fcall trf_30060(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30060(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30060(t0,t1);}

C_noret_decl(trf_29955)
static void C_fcall trf_29955(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29955(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29955(t0,t1);}

C_noret_decl(trf_29890)
static void C_fcall trf_29890(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29890(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29890(t0,t1,t2);}

C_noret_decl(trf_29899)
static void C_fcall trf_29899(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29899(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29899(t0,t1,t2);}

C_noret_decl(trf_29912)
static void C_fcall trf_29912(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29912(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29912(t0,t1);}

C_noret_decl(trf_29846)
static void C_fcall trf_29846(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29846(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29846(t0,t1,t2);}

C_noret_decl(trf_29834)
static void C_fcall trf_29834(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29834(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29834(t0,t1);}

C_noret_decl(trf_29732)
static void C_fcall trf_29732(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29732(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29732(t0,t1);}

C_noret_decl(trf_29684)
static void C_fcall trf_29684(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29684(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29684(t0,t1);}

C_noret_decl(trf_29065)
static void C_fcall trf_29065(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29065(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_29065(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_29075)
static void C_fcall trf_29075(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29075(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29075(t0,t1);}

C_noret_decl(trf_29204)
static void C_fcall trf_29204(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29204(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29204(t0,t1);}

C_noret_decl(trf_29292)
static void C_fcall trf_29292(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29292(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29292(t0,t1);}

C_noret_decl(trf_29365)
static void C_fcall trf_29365(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29365(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29365(t0,t1);}

C_noret_decl(trf_29443)
static void C_fcall trf_29443(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29443(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29443(t0,t1);}

C_noret_decl(trf_29394)
static void C_fcall trf_29394(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29394(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29394(t0,t1);}

C_noret_decl(trf_29410)
static void C_fcall trf_29410(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29410(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29410(t0,t1);}

C_noret_decl(trf_29374)
static void C_fcall trf_29374(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29374(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29374(t0,t1);}

C_noret_decl(trf_29316)
static void C_fcall trf_29316(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29316(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29316(t0,t1,t2);}

C_noret_decl(trf_29235)
static void C_fcall trf_29235(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29235(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29235(t0,t1,t2);}

C_noret_decl(trf_29251)
static void C_fcall trf_29251(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29251(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29251(t0,t1);}

C_noret_decl(trf_29219)
static void C_fcall trf_29219(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29219(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29219(t0,t1);}

C_noret_decl(trf_28961)
static void C_fcall trf_28961(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28961(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28961(t0,t1);}

C_noret_decl(trf_28970)
static void C_fcall trf_28970(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28970(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28970(t0,t1);}

C_noret_decl(trf_28975)
static void C_fcall trf_28975(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28975(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28975(t0,t1,t2);}

C_noret_decl(trf_28953)
static void C_fcall trf_28953(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28953(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28953(t0,t1);}

C_noret_decl(trf_28745)
static void C_fcall trf_28745(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28745(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28745(t0,t1,t2,t3);}

C_noret_decl(trf_28712)
static void C_fcall trf_28712(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28712(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28712(t0,t1,t2,t3);}

C_noret_decl(trf_28694)
static void C_fcall trf_28694(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28694(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28694(t0,t1,t2,t3);}

C_noret_decl(trf_28627)
static void C_fcall trf_28627(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28627(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28627(t0,t1,t2,t3);}

C_noret_decl(trf_28615)
static void C_fcall trf_28615(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28615(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28615(t0,t1,t2);}

C_noret_decl(trf_28583)
static void C_fcall trf_28583(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28583(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28583(t0,t1,t2);}

C_noret_decl(trf_28567)
static void C_fcall trf_28567(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28567(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28567(t0,t1);}

C_noret_decl(trf_28558)
static void C_fcall trf_28558(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28558(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28558(t0,t1);}

C_noret_decl(trf_28540)
static void C_fcall trf_28540(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28540(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28540(t0,t1);}

C_noret_decl(trf_28522)
static void C_fcall trf_28522(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28522(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28522(t0,t1);}

C_noret_decl(trf_28507)
static void C_fcall trf_28507(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28507(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28507(t0,t1);}

C_noret_decl(trf_28501)
static void C_fcall trf_28501(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28501(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28501(t0,t1,t2,t3);}

C_noret_decl(trf_28453)
static void C_fcall trf_28453(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28453(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28453(t0,t1,t2);}

C_noret_decl(trf_28421)
static void C_fcall trf_28421(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28421(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28421(t0,t1);}

C_noret_decl(trf_28363)
static void C_fcall trf_28363(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28363(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28363(t0,t1,t2);}

C_noret_decl(trf_28353)
static void C_fcall trf_28353(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28353(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28353(t0,t1);}

C_noret_decl(trf_28347)
static void C_fcall trf_28347(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28347(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28347(t0,t1);}

C_noret_decl(trf_28335)
static void C_fcall trf_28335(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28335(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28335(t0,t1);}

C_noret_decl(trf_28314)
static void C_fcall trf_28314(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28314(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28314(t0,t1);}

C_noret_decl(trf_28212)
static void C_fcall trf_28212(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28212(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_28212(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_28202)
static void C_fcall trf_28202(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28202(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28202(t0,t1);}

C_noret_decl(trf_28190)
static void C_fcall trf_28190(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28190(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28190(t0,t1);}

C_noret_decl(trf_28158)
static void C_fcall trf_28158(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28158(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28158(t0,t1);}

C_noret_decl(trf_28122)
static void C_fcall trf_28122(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28122(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28122(t0,t1);}

C_noret_decl(trf_27909)
static void C_fcall trf_27909(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27909(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27909(t0,t1);}

C_noret_decl(trf_28058)
static void C_fcall trf_28058(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28058(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28058(t0,t1,t2);}

C_noret_decl(trf_27944)
static void C_fcall trf_27944(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27944(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_27944(t0,t1,t2,t3);}

C_noret_decl(trf_27985)
static void C_fcall trf_27985(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27985(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_27985(t0,t1,t2,t3,t4);}

C_noret_decl(trf_27869)
static void C_fcall trf_27869(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27869(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27869(t0,t1);}

C_noret_decl(trf_27832)
static void C_fcall trf_27832(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27832(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_27832(t0,t1,t2,t3);}

C_noret_decl(trf_27730)
static void C_fcall trf_27730(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27730(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_27730(t0,t1,t2,t3,t4);}

C_noret_decl(trf_27677)
static void C_fcall trf_27677(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27677(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27677(t0,t1,t2);}

C_noret_decl(trf_27849)
static void C_fcall trf_27849(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27849(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27849(t0,t1);}

C_noret_decl(trf_27790)
static void C_fcall trf_27790(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27790(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27790(t0,t1);}

C_noret_decl(trf_27645)
static void C_fcall trf_27645(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27645(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27645(t0,t1);}

C_noret_decl(trf_27276)
static void C_fcall trf_27276(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27276(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27276(t0,t1);}

C_noret_decl(trf_27279)
static void C_fcall trf_27279(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27279(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27279(t0,t1);}

C_noret_decl(trf_27282)
static void C_fcall trf_27282(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27282(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27282(t0,t1);}

C_noret_decl(trf_8251)
static void C_fcall trf_8251(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8251(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8251(t0,t1,t2,t3);}

C_noret_decl(trf_8264)
static void C_fcall trf_8264(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8264(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8264(t0,t1);}

C_noret_decl(trf_27440)
static void C_fcall trf_27440(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27440(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27440(t0,t1);}

C_noret_decl(trf_27443)
static void C_fcall trf_27443(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27443(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27443(t0,t1);}

C_noret_decl(trf_27452)
static void C_fcall trf_27452(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27452(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27452(t0,t1,t2);}

C_noret_decl(trf_27462)
static void C_fcall trf_27462(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27462(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27462(t0,t1);}

C_noret_decl(trf_27409)
static void C_fcall trf_27409(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27409(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27409(t0,t1,t2);}

C_noret_decl(trf_27371)
static void C_fcall trf_27371(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27371(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27371(t0,t1,t2);}

C_noret_decl(trf_26744)
static void C_fcall trf_26744(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26744(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_26744(t0,t1,t2,t3);}

C_noret_decl(trf_27326)
static void C_fcall trf_27326(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27326(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27326(t0,t1,t2);}

C_noret_decl(trf_27296)
static void C_fcall trf_27296(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27296(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27296(t0,t1,t2);}

C_noret_decl(trf_27231)
static void C_fcall trf_27231(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27231(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_27231(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_27175)
static void C_fcall trf_27175(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27175(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27175(t0,t1,t2);}

C_noret_decl(trf_27143)
static void C_fcall trf_27143(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27143(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27143(t0,t1,t2);}

C_noret_decl(trf_27094)
static void C_fcall trf_27094(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27094(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27094(t0,t1,t2);}

C_noret_decl(trf_27113)
static void C_fcall trf_27113(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27113(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27113(t0,t1,t2);}

C_noret_decl(trf_27033)
static void C_fcall trf_27033(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27033(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_27033(t0,t1,t2,t3);}

C_noret_decl(trf_27016)
static void C_fcall trf_27016(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27016(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27016(t0,t1);}

C_noret_decl(trf_26999)
static void C_fcall trf_26999(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26999(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26999(t0,t1);}

C_noret_decl(trf_26832)
static void C_fcall trf_26832(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26832(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_26832(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_26842)
static void C_fcall trf_26842(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26842(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26842(t0,t1);}

C_noret_decl(trf_26657)
static void C_fcall trf_26657(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26657(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_26657(t0,t1,t2,t3,t4);}

C_noret_decl(trf_26679)
static void C_fcall trf_26679(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26679(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26679(t0,t1);}

C_noret_decl(trf_26498)
static void C_fcall trf_26498(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26498(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_26498(t0,t1,t2,t3);}

C_noret_decl(trf_26587)
static void C_fcall trf_26587(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26587(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_26587(t0,t1,t2,t3,t4);}

C_noret_decl(trf_26601)
static void C_fcall trf_26601(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26601(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26601(t0,t1);}

C_noret_decl(trf_26529)
static void C_fcall trf_26529(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26529(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26529(t0,t1);}

C_noret_decl(trf_26436)
static void C_fcall trf_26436(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26436(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_26436(t0,t1,t2,t3,t4);}

C_noret_decl(trf_24943)
static void C_fcall trf_24943(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24943(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24943(t0,t1);}

C_noret_decl(trf_24946)
static void C_fcall trf_24946(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24946(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24946(t0,t1);}

C_noret_decl(trf_24949)
static void C_fcall trf_24949(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24949(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24949(t0,t1);}

C_noret_decl(trf_24952)
static void C_fcall trf_24952(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24952(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24952(t0,t1);}

C_noret_decl(trf_24955)
static void C_fcall trf_24955(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24955(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24955(t0,t1);}

C_noret_decl(trf_24958)
static void C_fcall trf_24958(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24958(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24958(t0,t1);}

C_noret_decl(trf_24707)
static void C_fcall trf_24707(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24707(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24707(t0,t1);}

C_noret_decl(trf_8019)
static void C_fcall trf_8019(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8019(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_8019(t0,t1,t2,t3,t4);}

C_noret_decl(trf_24792)
static void C_fcall trf_24792(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24792(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24792(t0,t1,t2);}

C_noret_decl(trf_24718)
static void C_fcall trf_24718(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24718(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24718(t0,t1,t2);}

C_noret_decl(trf_24759)
static void C_fcall trf_24759(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24759(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24759(t0,t1);}

C_noret_decl(trf_24733)
static void C_fcall trf_24733(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24733(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24733(t0,t1);}

C_noret_decl(trf_24578)
static void C_fcall trf_24578(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24578(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24578(t0,t1,t2);}

C_noret_decl(trf_24504)
static void C_fcall trf_24504(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24504(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24504(t0,t1,t2);}

C_noret_decl(trf_24486)
static void C_fcall trf_24486(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24486(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24486(t0,t1,t2);}

C_noret_decl(trf_24468)
static void C_fcall trf_24468(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24468(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24468(t0,t1,t2);}

C_noret_decl(trf_24444)
static void C_fcall trf_24444(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24444(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24444(t0,t1);}

C_noret_decl(trf_24438)
static void C_fcall trf_24438(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24438(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_24438(t0,t1,t2,t3,t4);}

C_noret_decl(trf_24393)
static void C_fcall trf_24393(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24393(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24393(t0,t1);}

C_noret_decl(trf_24351)
static void C_fcall trf_24351(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24351(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24351(t0,t1);}

C_noret_decl(trf_23163)
static void C_fcall trf_23163(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23163(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23163(t0,t1);}

C_noret_decl(trf_23309)
static void C_fcall trf_23309(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23309(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_23309(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_23258)
static void C_fcall trf_23258(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23258(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23258(t0,t1,t2,t3);}

C_noret_decl(trf_23264)
static void C_fcall trf_23264(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23264(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23264(t0,t1,t2,t3);}

C_noret_decl(trf_23274)
static void C_fcall trf_23274(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23274(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23274(t0,t1);}

C_noret_decl(trf_23143)
static void C_fcall trf_23143(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23143(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23143(t0,t1,t2);}

C_noret_decl(trf_23138)
static void C_fcall trf_23138(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23138(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23138(t0,t1,t2,t3);}

C_noret_decl(trf_22995)
static void C_fcall trf_22995(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22995(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22995(t0,t1);}

C_noret_decl(trf_22878)
static void C_fcall trf_22878(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22878(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22878(t0,t1,t2);}

C_noret_decl(trf_22887)
static void C_fcall trf_22887(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22887(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22887(t0,t1,t2,t3);}

C_noret_decl(trf_22720)
static void C_fcall trf_22720(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22720(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22720(t0,t1);}

C_noret_decl(trf_22736)
static void C_fcall trf_22736(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22736(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22736(t0,t1,t2,t3);}

C_noret_decl(trf_22544)
static void C_fcall trf_22544(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22544(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_22544(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_22574)
static void C_fcall trf_22574(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22574(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22574(t0,t1);}

C_noret_decl(trf_22557)
static void C_fcall trf_22557(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22557(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22557(t0,t1);}

C_noret_decl(trf_22422)
static void C_fcall trf_22422(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22422(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_22422(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_22452)
static void C_fcall trf_22452(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22452(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22452(t0,t1);}

C_noret_decl(trf_22435)
static void C_fcall trf_22435(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22435(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22435(t0,t1);}

C_noret_decl(trf_22325)
static void C_fcall trf_22325(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22325(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_22325(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_22338)
static void C_fcall trf_22338(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22338(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22338(t0,t1);}

C_noret_decl(trf_22257)
static void C_fcall trf_22257(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22257(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22257(t0,t1,t2,t3);}

C_noret_decl(trf_22236)
static void C_fcall trf_22236(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22236(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22236(t0,t1);}

C_noret_decl(trf_22158)
static void C_fcall trf_22158(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22158(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22158(t0,t1,t2,t3);}

C_noret_decl(trf_21827)
static void C_fcall trf_21827(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21827(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21827(t0,t1);}

C_noret_decl(trf_21830)
static void C_fcall trf_21830(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21830(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21830(t0,t1);}

C_noret_decl(trf_21836)
static void C_fcall trf_21836(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21836(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21836(t0,t1);}

C_noret_decl(trf_21739)
static void C_fcall trf_21739(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21739(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_21739(t0,t1,t2,t3,t4);}

C_noret_decl(trf_21631)
static void C_fcall trf_21631(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21631(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21631(t0,t1);}

C_noret_decl(trf_21636)
static void C_fcall trf_21636(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21636(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21636(t0,t1,t2,t3);}

C_noret_decl(trf_21304)
static void C_fcall trf_21304(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21304(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21304(t0,t1);}

C_noret_decl(trf_21105)
static void C_fcall trf_21105(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21105(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21105(t0,t1);}

C_noret_decl(trf_21187)
static void C_fcall trf_21187(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21187(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21187(t0,t1);}

C_noret_decl(trf_21198)
static void C_fcall trf_21198(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21198(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21198(t0,t1,t2,t3);}

C_noret_decl(trf_21210)
static void C_fcall trf_21210(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21210(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21210(t0,t1,t2);}

C_noret_decl(trf_21131)
static void C_fcall trf_21131(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21131(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21131(t0,t1,t2);}

C_noret_decl(trf_20992)
static void C_fcall trf_20992(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20992(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20992(t0,t1);}

C_noret_decl(trf_21001)
static void C_fcall trf_21001(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21001(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_21001(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_21014)
static void C_fcall trf_21014(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21014(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21014(t0,t1);}

C_noret_decl(trf_20856)
static void C_fcall trf_20856(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20856(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20856(t0,t1);}

C_noret_decl(trf_20859)
static void C_fcall trf_20859(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20859(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20859(t0,t1);}

C_noret_decl(trf_20861)
static void C_fcall trf_20861(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20861(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_20861(t0,t1,t2,t3,t4);}

C_noret_decl(trf_20789)
static void C_fcall trf_20789(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20789(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20789(t0,t1);}

C_noret_decl(trf_20792)
static void C_fcall trf_20792(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20792(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20792(t0,t1);}

C_noret_decl(trf_20795)
static void C_fcall trf_20795(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20795(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20795(t0,t1);}

C_noret_decl(trf_20653)
static void C_fcall trf_20653(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20653(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20653(t0,t1,t2,t3);}

C_noret_decl(trf_20669)
static void C_fcall trf_20669(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20669(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20669(t0,t1,t2);}

C_noret_decl(trf_20391)
static void C_fcall trf_20391(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20391(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20391(t0,t1);}

C_noret_decl(trf_20394)
static void C_fcall trf_20394(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20394(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20394(t0,t1);}

C_noret_decl(trf_19947)
static void C_fcall trf_19947(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19947(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19947(t0,t1);}

C_noret_decl(trf_18872)
static void C_fcall trf_18872(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18872(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18872(t0,t1);}

C_noret_decl(trf_18875)
static void C_fcall trf_18875(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18875(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18875(t0,t1);}

C_noret_decl(trf_19615)
static void C_fcall trf_19615(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19615(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19615(t0,t1,t2);}

C_noret_decl(trf_19638)
static void C_fcall trf_19638(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19638(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_19638(t0,t1,t2,t3,t4);}

C_noret_decl(trf_19673)
static void C_fcall trf_19673(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19673(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19673(t0,t1);}

C_noret_decl(trf_19577)
static void C_fcall trf_19577(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19577(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19577(t0,t1);}

C_noret_decl(trf_19080)
static void C_fcall trf_19080(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19080(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19080(t0,t1);}

C_noret_decl(trf_19448)
static void C_fcall trf_19448(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19448(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19448(t0,t1,t2,t3);}

C_noret_decl(trf_19534)
static void C_fcall trf_19534(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19534(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19534(t0,t1,t2,t3);}

C_noret_decl(trf_19491)
static void C_fcall trf_19491(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19491(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19491(t0,t1,t2);}

C_noret_decl(trf_19415)
static void C_fcall trf_19415(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19415(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19415(t0,t1,t2);}

C_noret_decl(trf_19353)
static void C_fcall trf_19353(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19353(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19353(t0,t1,t2);}

C_noret_decl(trf_19388)
static void C_fcall trf_19388(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19388(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19388(t0,t1,t2,t3);}

C_noret_decl(trf_19148)
static void C_fcall trf_19148(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19148(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19148(t0,t1,t2);}

C_noret_decl(trf_19044)
static void C_fcall trf_19044(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19044(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19044(t0,t1,t2);}

C_noret_decl(trf_19326)
static void C_fcall trf_19326(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19326(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19326(t0,t1,t2,t3);}

C_noret_decl(trf_19299)
static void C_fcall trf_19299(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19299(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19299(t0,t1,t2,t3);}

C_noret_decl(trf_19185)
static void C_fcall trf_19185(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19185(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19185(t0,t1,t2);}

C_noret_decl(trf_19226)
static void C_fcall trf_19226(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19226(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19226(t0,t1);}

C_noret_decl(trf_19238)
static void C_fcall trf_19238(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19238(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19238(t0,t1,t2,t3);}

C_noret_decl(trf_18967)
static void C_fcall trf_18967(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18967(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_18967(t0,t1,t2,t3,t4);}

C_noret_decl(trf_18885)
static void C_fcall trf_18885(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18885(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_18885(t0,t1,t2,t3);}

C_noret_decl(trf_8212)
static void C_fcall trf_8212(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8212(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_8212(t0,t1,t2,t3,t4);}

C_noret_decl(trf_8222)
static void C_fcall trf_8222(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8222(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8222(t0,t1);}

C_noret_decl(trf_18957)
static void C_fcall trf_18957(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18957(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18957(t0,t1,t2);}

C_noret_decl(trf_18806)
static void C_fcall trf_18806(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18806(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18806(t0,t1,t2);}

C_noret_decl(trf_18831)
static void C_fcall trf_18831(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18831(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18831(t0,t1);}

C_noret_decl(trf_18534)
static void C_fcall trf_18534(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18534(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18534(t0,t1);}

C_noret_decl(trf_18537)
static void C_fcall trf_18537(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18537(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18537(t0,t1);}

C_noret_decl(trf_18543)
static void C_fcall trf_18543(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18543(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18543(t0,t1);}

C_noret_decl(trf_18257)
static void C_fcall trf_18257(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18257(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18257(t0,t1);}

C_noret_decl(trf_18260)
static void C_fcall trf_18260(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18260(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18260(t0,t1);}

C_noret_decl(trf_18187)
static void C_fcall trf_18187(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18187(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18187(t0,t1);}

C_noret_decl(trf_18035)
static void C_fcall trf_18035(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18035(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_18035(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17960)
static void C_fcall trf_17960(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17960(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_17960(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17970)
static void C_fcall trf_17970(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17970(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17970(t0,t1);}

C_noret_decl(trf_17977)
static void C_fcall trf_17977(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17977(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17977(t0,t1);}

C_noret_decl(trf_18072)
static void C_fcall trf_18072(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18072(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18072(t0,t1,t2);}

C_noret_decl(trf_17850)
static void C_fcall trf_17850(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17850(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_17850(t0,t1,t2,t3);}

C_noret_decl(trf_17862)
static void C_fcall trf_17862(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17862(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_17862(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17923)
static void C_fcall trf_17923(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17923(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17923(t0,t1,t2);}

C_noret_decl(trf_17287)
static void C_fcall trf_17287(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17287(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_17287(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_17223)
static void C_fcall trf_17223(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17223(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17223(t0,t1);}

C_noret_decl(trf_17170)
static void C_fcall trf_17170(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17170(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17170(t0,t1);}

C_noret_decl(trf_17173)
static void C_fcall trf_17173(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17173(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17173(t0,t1);}

C_noret_decl(trf_17367)
static void C_fcall trf_17367(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17367(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17367(t0,t1);}

C_noret_decl(trf_17370)
static void C_fcall trf_17370(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17370(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17370(t0,t1);}

C_noret_decl(trf_17373)
static void C_fcall trf_17373(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17373(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17373(t0,t1);}

C_noret_decl(trf_17388)
static void C_fcall trf_17388(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17388(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17388(t0,t1);}

C_noret_decl(trf_16949)
static void C_fcall trf_16949(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16949(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16949(t0,t1);}

C_noret_decl(trf_17041)
static void C_fcall trf_17041(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17041(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17041(t0,t1,t2);}

C_noret_decl(trf_17060)
static void C_fcall trf_17060(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17060(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17060(t0,t1);}

C_noret_decl(trf_17014)
static void C_fcall trf_17014(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17014(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17014(t0,t1,t2);}

C_noret_decl(trf_16959)
static void C_fcall trf_16959(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16959(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16959(t0,t1,t2);}

C_noret_decl(trf_16969)
static void C_fcall trf_16969(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16969(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_16969(t0,t1,t2,t3);}

C_noret_decl(trf_16827)
static void C_fcall trf_16827(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16827(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16827(t0,t1,t2);}

C_noret_decl(trf_16884)
static void C_fcall trf_16884(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16884(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16884(t0,t1,t2);}

C_noret_decl(trf_16842)
static void C_fcall trf_16842(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16842(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_16842(t0,t1,t2,t3,t4);}

C_noret_decl(trf_16384)
static void C_fcall trf_16384(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16384(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16384(t0,t1);}

C_noret_decl(trf_16387)
static void C_fcall trf_16387(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16387(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16387(t0,t1);}

C_noret_decl(trf_16390)
static void C_fcall trf_16390(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16390(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16390(t0,t1);}

C_noret_decl(trf_16393)
static void C_fcall trf_16393(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16393(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16393(t0,t1);}

C_noret_decl(trf_16357)
static void C_fcall trf_16357(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16357(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16357(t0,t1);}

C_noret_decl(trf_16080)
static void C_fcall trf_16080(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16080(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16080(t0,t1);}

C_noret_decl(trf_16083)
static void C_fcall trf_16083(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16083(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16083(t0,t1);}

C_noret_decl(trf_16086)
static void C_fcall trf_16086(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16086(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16086(t0,t1);}

C_noret_decl(trf_15977)
static void C_fcall trf_15977(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15977(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15977(t0,t1);}

C_noret_decl(trf_15968)
static void C_fcall trf_15968(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15968(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15968(t0,t1,t2);}

C_noret_decl(trf_15959)
static void C_fcall trf_15959(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15959(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15959(t0,t1);}

C_noret_decl(trf_15941)
static void C_fcall trf_15941(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15941(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15941(t0,t1);}

C_noret_decl(trf_15923)
static void C_fcall trf_15923(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15923(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15923(t0,t1);}

C_noret_decl(trf_15905)
static void C_fcall trf_15905(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15905(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15905(t0,t1);}

C_noret_decl(trf_15896)
static void C_fcall trf_15896(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15896(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15896(t0,t1,t2);}

C_noret_decl(trf_15887)
static void C_fcall trf_15887(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15887(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15887(t0,t1);}

C_noret_decl(trf_15718)
static void C_fcall trf_15718(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15718(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15718(t0,t1);}

C_noret_decl(trf_15674)
static void C_fcall trf_15674(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15674(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15674(t0,t1,t2);}

C_noret_decl(trf_15195)
static void C_fcall trf_15195(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15195(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15195(t0,t1);}

C_noret_decl(trf_15198)
static void C_fcall trf_15198(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15198(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15198(t0,t1);}

C_noret_decl(trf_15201)
static void C_fcall trf_15201(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15201(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15201(t0,t1);}

C_noret_decl(trf_15204)
static void C_fcall trf_15204(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15204(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15204(t0,t1);}

C_noret_decl(trf_15150)
static void C_fcall trf_15150(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15150(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_15150(t0,t1,t2,t3,t4);}

C_noret_decl(trf_14856)
static void C_fcall trf_14856(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14856(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14856(t0,t1);}

C_noret_decl(trf_14859)
static void C_fcall trf_14859(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14859(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14859(t0,t1);}

C_noret_decl(trf_14862)
static void C_fcall trf_14862(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14862(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14862(t0,t1);}

C_noret_decl(trf_14573)
static void C_fcall trf_14573(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14573(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14573(t0,t1);}

C_noret_decl(trf_14576)
static void C_fcall trf_14576(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14576(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14576(t0,t1);}

C_noret_decl(trf_14579)
static void C_fcall trf_14579(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14579(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14579(t0,t1);}

C_noret_decl(trf_14532)
static void C_fcall trf_14532(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14532(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14532(t0,t1);}

C_noret_decl(trf_14488)
static void C_fcall trf_14488(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14488(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14488(t0,t1);}

C_noret_decl(trf_14403)
static void C_fcall trf_14403(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14403(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14403(t0,t1);}

C_noret_decl(trf_13888)
static void C_fcall trf_13888(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13888(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13888(t0,t1);}

C_noret_decl(trf_13891)
static void C_fcall trf_13891(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13891(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13891(t0,t1);}

C_noret_decl(trf_13894)
static void C_fcall trf_13894(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13894(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13894(t0,t1);}

C_noret_decl(trf_13897)
static void C_fcall trf_13897(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13897(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13897(t0,t1);}

C_noret_decl(trf_13804)
static void C_fcall trf_13804(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13804(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13804(t0,t1,t2);}

C_noret_decl(trf_13795)
static void C_fcall trf_13795(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13795(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13795(t0,t1);}

C_noret_decl(trf_13730)
static void C_fcall trf_13730(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13730(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13730(t0,t1);}

C_noret_decl(trf_13472)
static void C_fcall trf_13472(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13472(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13472(t0,t1);}

C_noret_decl(trf_13475)
static void C_fcall trf_13475(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13475(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13475(t0,t1);}

C_noret_decl(trf_13478)
static void C_fcall trf_13478(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13478(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13478(t0,t1);}

C_noret_decl(trf_13353)
static void C_fcall trf_13353(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13353(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13353(t0,t1);}

C_noret_decl(trf_13377)
static void C_fcall trf_13377(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13377(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13377(t0,t1);}

C_noret_decl(trf_13307)
static void C_fcall trf_13307(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13307(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13307(t0,t1,t2);}

C_noret_decl(trf_13298)
static void C_fcall trf_13298(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13298(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13298(t0,t1);}

C_noret_decl(trf_13006)
static void C_fcall trf_13006(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13006(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13006(t0,t1);}

C_noret_decl(trf_13242)
static void C_fcall trf_13242(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13242(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13242(t0,t1);}

C_noret_decl(trf_13248)
static void C_fcall trf_13248(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13248(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13248(t0,t1);}

C_noret_decl(trf_13140)
static void C_fcall trf_13140(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13140(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13140(t0,t1);}

C_noret_decl(trf_13142)
static void C_fcall trf_13142(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13142(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13142(t0,t1,t2,t3);}

C_noret_decl(trf_13191)
static void C_fcall trf_13191(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13191(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13191(t0,t1);}

C_noret_decl(trf_13156)
static void C_fcall trf_13156(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13156(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13156(t0,t1);}

C_noret_decl(trf_13040)
static void C_fcall trf_13040(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13040(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13040(t0,t1);}

C_noret_decl(trf_12954)
static void C_fcall trf_12954(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12954(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_12954(t0,t1,t2,t3,t4);}

C_noret_decl(trf_12973)
static void C_fcall trf_12973(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12973(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12973(t0,t1);}

C_noret_decl(trf_12904)
static void C_fcall trf_12904(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12904(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_12904(t0,t1,t2,t3);}

C_noret_decl(trf_12665)
static void C_fcall trf_12665(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12665(void *dummy){
C_word t9=C_pick(0);
C_word t8=C_pick(1);
C_word t7=C_pick(2);
C_word t6=C_pick(3);
C_word t5=C_pick(4);
C_word t4=C_pick(5);
C_word t3=C_pick(6);
C_word t2=C_pick(7);
C_word t1=C_pick(8);
C_word t0=C_pick(9);
C_adjust_stack(-10);
f_12665(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9);}

C_noret_decl(trf_12684)
static void C_fcall trf_12684(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12684(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12684(t0,t1);}

C_noret_decl(trf_12699)
static void C_fcall trf_12699(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12699(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12699(t0,t1);}

C_noret_decl(trf_12708)
static void C_fcall trf_12708(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12708(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12708(t0,t1);}

C_noret_decl(trf_12655)
static void C_fcall trf_12655(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12655(void *dummy){
C_word t0=C_pick(0);
C_adjust_stack(-1);
f_12655(t0);}

C_noret_decl(trf_12596)
static void C_fcall trf_12596(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12596(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12596(t0,t1);}

C_noret_decl(trf_12587)
static void C_fcall trf_12587(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12587(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12587(t0,t1,t2);}

C_noret_decl(trf_12470)
static void C_fcall trf_12470(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12470(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12470(t0,t1);}

C_noret_decl(trf_12461)
static void C_fcall trf_12461(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12461(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12461(t0,t1,t2);}

C_noret_decl(trf_12443)
static void C_fcall trf_12443(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12443(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12443(t0,t1,t2);}

C_noret_decl(trf_12434)
static void C_fcall trf_12434(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12434(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12434(t0,t1);}

C_noret_decl(trf_12416)
static void C_fcall trf_12416(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12416(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12416(t0,t1);}

C_noret_decl(trf_12407)
static void C_fcall trf_12407(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12407(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12407(t0,t1,t2);}

C_noret_decl(trf_12398)
static void C_fcall trf_12398(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12398(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12398(t0,t1);}

C_noret_decl(trf_12380)
static void C_fcall trf_12380(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12380(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12380(t0,t1);}

C_noret_decl(trf_12371)
static void C_fcall trf_12371(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12371(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12371(t0,t1,t2);}

C_noret_decl(trf_12362)
static void C_fcall trf_12362(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12362(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12362(t0,t1);}

C_noret_decl(trf_12347)
static void C_fcall trf_12347(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12347(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12347(t0,t1);}

C_noret_decl(trf_12302)
static void C_fcall trf_12302(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12302(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12302(t0,t1);}

C_noret_decl(trf_12284)
static void C_fcall trf_12284(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12284(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12284(t0,t1);}

C_noret_decl(trf_12275)
static void C_fcall trf_12275(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12275(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12275(t0,t1,t2);}

C_noret_decl(trf_12248)
static void C_fcall trf_12248(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12248(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12248(t0,t1);}

C_noret_decl(trf_12230)
static void C_fcall trf_12230(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12230(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12230(t0,t1);}

C_noret_decl(trf_12212)
static void C_fcall trf_12212(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12212(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12212(t0,t1);}

C_noret_decl(trf_12203)
static void C_fcall trf_12203(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12203(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12203(t0,t1,t2);}

C_noret_decl(trf_12191)
static void C_fcall trf_12191(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12191(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_12191(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_11482)
static void C_fcall trf_11482(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11482(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11482(t0,t1);}

C_noret_decl(trf_11488)
static void C_fcall trf_11488(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11488(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11488(t0,t1);}

C_noret_decl(trf_11511)
static void C_fcall trf_11511(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11511(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11511(t0,t1);}

C_noret_decl(trf_11524)
static void C_fcall trf_11524(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11524(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11524(t0,t1);}

C_noret_decl(trf_11498)
static void C_fcall trf_11498(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11498(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11498(t0,t1);}

C_noret_decl(trf_11311)
static void C_fcall trf_11311(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11311(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_11311(t0,t1,t2,t3);}

C_noret_decl(trf_11320)
static void C_fcall trf_11320(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11320(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_11320(t0,t1,t2,t3,t4);}

C_noret_decl(trf_11274)
static void C_fcall trf_11274(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11274(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11274(t0,t1);}

C_noret_decl(trf_11137)
static void C_fcall trf_11137(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11137(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11137(t0,t1);}

C_noret_decl(trf_11067)
static void C_fcall trf_11067(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11067(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11067(t0,t1);}

C_noret_decl(trf_10428)
static void C_fcall trf_10428(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10428(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10428(t0,t1,t2);}

C_noret_decl(trf_10388)
static void C_fcall trf_10388(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10388(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10388(t0,t1,t2);}

C_noret_decl(trf_10401)
static void C_fcall trf_10401(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10401(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10401(t0,t1);}

C_noret_decl(trf_10980)
static void C_fcall trf_10980(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10980(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10980(t0,t1);}

C_noret_decl(trf_10770)
static void C_fcall trf_10770(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10770(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10770(t0,t1);}

C_noret_decl(trf_10886)
static void C_fcall trf_10886(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10886(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10886(t0,t1);}

C_noret_decl(trf_10773)
static void C_fcall trf_10773(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10773(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10773(t0,t1);}

C_noret_decl(trf_10776)
static void C_fcall trf_10776(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10776(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10776(t0,t1);}

C_noret_decl(trf_10681)
static void C_fcall trf_10681(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10681(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10681(t0,t1);}

C_noret_decl(trf_10596)
static void C_fcall trf_10596(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10596(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10596(t0,t1);}

C_noret_decl(trf_10553)
static void C_fcall trf_10553(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10553(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10553(t0,t1);}

C_noret_decl(trf_10520)
static void C_fcall trf_10520(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10520(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10520(t0,t1);}

C_noret_decl(trf_10515)
static void C_fcall trf_10515(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10515(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10515(t0,t1);}

C_noret_decl(trf_10510)
static void C_fcall trf_10510(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10510(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_10510(t0,t1,t2,t3,t4);}

C_noret_decl(trf_10257)
static void C_fcall trf_10257(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10257(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10257(t0,t1);}

C_noret_decl(trf_10104)
static void C_fcall trf_10104(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10104(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10104(t0,t1,t2,t3);}

C_noret_decl(trf_9950)
static void C_fcall trf_9950(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9950(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9950(t0,t1,t2);}

C_noret_decl(trf_9792)
static void C_fcall trf_9792(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9792(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9792(t0,t1,t2);}

C_noret_decl(trf_9825)
static void C_fcall trf_9825(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9825(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9825(t0,t1);}

C_noret_decl(trf_9732)
static void C_fcall trf_9732(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9732(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9732(t0,t1);}

C_noret_decl(trf_9697)
static void C_fcall trf_9697(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9697(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9697(t0,t1);}

C_noret_decl(trf_9713)
static void C_fcall trf_9713(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9713(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9713(t0,t1);}

C_noret_decl(trf_9668)
static void C_fcall trf_9668(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9668(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9668(t0,t1);}

C_noret_decl(trf_9575)
static void C_fcall trf_9575(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9575(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9575(t0,t1);}

C_noret_decl(trf_9331)
static void C_fcall trf_9331(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9331(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9331(t0,t1,t2);}

C_noret_decl(trf_9135)
static void C_fcall trf_9135(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9135(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9135(t0,t1);}

C_noret_decl(trf_9298)
static void C_fcall trf_9298(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9298(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9298(t0,t1);}

C_noret_decl(trf_9138)
static void C_fcall trf_9138(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9138(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9138(t0,t1);}

C_noret_decl(trf_9141)
static void C_fcall trf_9141(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9141(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9141(t0,t1);}

C_noret_decl(trf_9144)
static void C_fcall trf_9144(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9144(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9144(t0,t1);}

C_noret_decl(trf_9186)
static void C_fcall trf_9186(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9186(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9186(t0,t1);}

C_noret_decl(trf_9151)
static void C_fcall trf_9151(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9151(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9151(t0,t1);}

C_noret_decl(trf_8880)
static void C_fcall trf_8880(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8880(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8880(t0,t1,t2,t3);}

C_noret_decl(trf_8888)
static void C_fcall trf_8888(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8888(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8888(t0,t1,t2,t3);}

C_noret_decl(trf_9017)
static void C_fcall trf_9017(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9017(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9017(t0,t1,t2);}

C_noret_decl(trf_8971)
static void C_fcall trf_8971(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8971(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8971(t0,t1,t2);}

C_noret_decl(trf_8874)
static void C_fcall trf_8874(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8874(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8874(t0,t1,t2);}

C_noret_decl(trf_8868)
static void C_fcall trf_8868(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8868(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8868(t0,t1);}

C_noret_decl(trf_8862)
static void C_fcall trf_8862(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8862(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8862(t0,t1,t2);}

C_noret_decl(trf_8791)
static void C_fcall trf_8791(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8791(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8791(t0,t1,t2);}

C_noret_decl(trf_8793)
static void C_fcall trf_8793(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8793(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8793(t0,t1,t2);}

C_noret_decl(trf_8799)
static void C_fcall trf_8799(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8799(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8799(t0,t1,t2);}

C_noret_decl(trf_8640)
static void C_fcall trf_8640(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8640(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8640(t0,t1);}

C_noret_decl(trf_8655)
static void C_fcall trf_8655(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8655(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8655(t0,t1,t2);}

C_noret_decl(trf_8598)
static void C_fcall trf_8598(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8598(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8598(t0,t1,t2);}

C_noret_decl(trf_8538)
static void C_fcall trf_8538(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8538(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8538(t0,t1,t2);}

C_noret_decl(trf_8370)
static void C_fcall trf_8370(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8370(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_8370(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_8383)
static void C_fcall trf_8383(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8383(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_8383(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_8400)
static void C_fcall trf_8400(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8400(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8400(t0,t1);}

C_noret_decl(trf_8166)
static void C_fcall trf_8166(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8166(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8166(t0,t1,t2);}

C_noret_decl(trf_8172)
static void C_fcall trf_8172(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8172(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_8172(t0,t1,t2,t3,t4);}

C_noret_decl(trf_8182)
static void C_fcall trf_8182(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8182(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8182(t0,t1);}

C_noret_decl(trf_8096)
static void C_fcall trf_8096(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8096(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8096(t0,t1,t2,t3);}

C_noret_decl(trf_8073)
static void C_fcall trf_8073(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8073(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8073(t0,t1,t2,t3);}

C_noret_decl(trf_7914)
static void C_fcall trf_7914(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7914(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7914(t0,t1,t2);}

C_noret_decl(trf_7952)
static void C_fcall trf_7952(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7952(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7952(t0,t1,t2);}

C_noret_decl(trf_7638)
static void C_fcall trf_7638(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7638(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7638(t0,t1);}

C_noret_decl(trf_7499)
static void C_fcall trf_7499(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7499(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_7499(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_7350)
static void C_fcall trf_7350(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7350(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7350(t0,t1);}

C_noret_decl(trf_7256)
static void C_fcall trf_7256(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7256(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7256(t0,t1);}

C_noret_decl(trf_7236)
static void C_fcall trf_7236(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7236(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7236(t0,t1,t2,t3);}

C_noret_decl(trf_7195)
static void C_fcall trf_7195(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7195(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7195(t0,t1);}

C_noret_decl(trf_7185)
static void C_fcall trf_7185(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7185(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7185(t0,t1);}

C_noret_decl(trf_7167)
static void C_fcall trf_7167(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7167(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7167(t0,t1);}

C_noret_decl(trf_7156)
static void C_fcall trf_7156(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7156(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7156(t0,t1,t2);}

C_noret_decl(trf_7118)
static void C_fcall trf_7118(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7118(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7118(t0,t1);}

C_noret_decl(trf_7111)
static void C_fcall trf_7111(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7111(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7111(t0,t1);}

C_noret_decl(trf_7087)
static void C_fcall trf_7087(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7087(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7087(t0,t1);}

C_noret_decl(trf_7020)
static void C_fcall trf_7020(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7020(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7020(t0,t1,t2,t3);}

C_noret_decl(trf_7009)
static void C_fcall trf_7009(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7009(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7009(t0,t1,t2);}

C_noret_decl(trf_6948)
static void C_fcall trf_6948(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6948(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_6948(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_6892)
static void C_fcall trf_6892(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6892(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6892(t0,t1,t2);}

C_noret_decl(trf_6811)
static void C_fcall trf_6811(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6811(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6811(t0,t1);}

C_noret_decl(tr6)
static void C_fcall tr6(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6(C_proc6 k){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
(k)(6,t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr7)
static void C_fcall tr7(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7(C_proc7 k){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
(k)(7,t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr4)
static void C_fcall tr4(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4(C_proc4 k){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
(k)(4,t0,t1,t2,t3);}

C_noret_decl(tr5)
static void C_fcall tr5(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5(C_proc5 k){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
(k)(5,t0,t1,t2,t3,t4);}

C_noret_decl(tr3)
static void C_fcall tr3(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3(C_proc3 k){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
(k)(3,t0,t1,t2);}

C_noret_decl(tr2)
static void C_fcall tr2(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2(C_proc2 k){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
(k)(2,t0,t1);}

C_noret_decl(tr7r)
static void C_fcall tr7r(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7r(C_proc7 k){
int n;
C_word *a,t7;
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
n=C_rest_count(0);
a=C_alloc(n*3);
t7=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6,t7);}

C_noret_decl(tr6r)
static void C_fcall tr6r(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6r(C_proc6 k){
int n;
C_word *a,t6;
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
n=C_rest_count(0);
a=C_alloc(n*3);
t6=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr5r)
static void C_fcall tr5r(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5r(C_proc5 k){
int n;
C_word *a,t5;
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
n=C_rest_count(0);
a=C_alloc(n*3);
t5=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr4r)
static void C_fcall tr4r(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4r(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n*3);
t4=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3r)
static void C_fcall tr3r(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3r(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n*3);
t3=C_restore_rest(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr2r)
static void C_fcall tr2r(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2r(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n*3);
t2=C_restore_rest(a,n);
(k)(t0,t1,t2);}

C_noret_decl(tr3rv)
static void C_fcall tr3rv(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3rv(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n+1);
t3=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr2rv)
static void C_fcall tr2rv(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2rv(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n+1);
t2=C_restore_rest_vector(a,n);
(k)(t0,t1,t2);}

/* toplevel */
static C_TLS int toplevel_initialized=0;
C_noret_decl(toplevel_trampoline)
static void C_fcall toplevel_trampoline(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall toplevel_trampoline(void *dummy){
C_cm_toplevel(2,C_SCHEME_UNDEFINED,C_restore);}

void C_ccall C_cm_toplevel(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(toplevel_initialized) C_kontinue(t1,C_SCHEME_UNDEFINED);
else C_toplevel_entry(C_text("cm_toplevel"));
C_check_nursery_minimum(3);
if(!C_demand(3)){
C_save(t1);
C_reclaim((void*)toplevel_trampoline,NULL);}
toplevel_initialized=1;
if(!C_demand_2(5618)){
C_save(t1);
C_rereclaim2(5618*sizeof(C_word), 1);
t1=C_restore;}
a=C_alloc(3);
C_initialize_lf(lf,1037);
lf[0]=C_h_intern(&lf[0],7,"logtest");
lf[1]=C_h_intern(&lf[1],6,"logand");
lf[2]=C_h_intern(&lf[2],20,"most-positive-fixnum");
lf[3]=C_h_intern(&lf[3],20,"most-negative-fixnum");
lf[4]=C_h_intern(&lf[4],2,"pi");
lf[5]=C_decode_literal(C_heaptop,"\376U3.14159265358979\000");
lf[6]=C_h_intern(&lf[6],9,"list-set!");
lf[7]=C_h_intern(&lf[7],21,"make-equal-hash-table");
lf[8]=C_h_intern(&lf[8],15,"make-hash-table");
lf[9]=C_h_intern(&lf[9],6,"equal\077");
lf[10]=C_h_intern(&lf[10],18,"make-eq-hash-table");
lf[11]=C_h_intern(&lf[11],3,"eq\077");
lf[12]=C_h_intern(&lf[12],9,"hash-set!");
lf[13]=C_h_intern(&lf[13],15,"hash-table-set!");
lf[14]=C_h_intern(&lf[14],8,"hash-ref");
lf[15]=C_h_intern(&lf[15],22,"hash-table-ref/default");
lf[17]=C_h_intern(&lf[17],22,"call-with-input-string");
lf[18]=C_h_intern(&lf[18],4,"read");
lf[20]=C_h_intern(&lf[20],17,"\003sysmake-c-string");
lf[46]=C_h_intern(&lf[46],17,"\003syspeek-c-string");
lf[48]=C_h_intern(&lf[48],4,"quit");
lf[49]=C_h_intern(&lf[49],11,"print-error");
lf[50]=C_h_intern(&lf[50],12,"print-output");
lf[51]=C_h_intern(&lf[51],5,"shell");
lf[52]=C_h_intern(&lf[52],5,"first");
lf[53]=C_h_intern(&lf[53],3,"car");
lf[54]=C_h_intern(&lf[54],6,"second");
lf[55]=C_h_intern(&lf[55],4,"cadr");
lf[56]=C_h_intern(&lf[56],5,"third");
lf[57]=C_h_intern(&lf[57],5,"caddr");
lf[58]=C_h_intern(&lf[58],6,"fourth");
lf[59]=C_h_intern(&lf[59],6,"cadddr");
lf[60]=C_h_intern(&lf[60],5,"fifth");
lf[61]=C_h_intern(&lf[61],5,"sixth");
lf[62]=C_h_intern(&lf[62],7,"seventh");
lf[63]=C_h_intern(&lf[63],6,"eighth");
lf[64]=C_h_intern(&lf[64],5,"ninth");
lf[65]=C_h_intern(&lf[65],5,"tenth");
lf[66]=C_h_intern(&lf[66],3,"nth");
lf[67]=C_h_intern(&lf[67],8,"list-ref");
lf[68]=C_h_intern(&lf[68],4,"rest");
lf[69]=C_h_intern(&lf[69],4,"last");
lf[70]=C_h_intern(&lf[70],7,"butlast");
lf[71]=C_h_intern(&lf[71],4,"tail");
lf[72]=C_h_intern(&lf[72],6,"concat");
lf[73]=C_h_intern(&lf[73],9,"make-list");
lf[74]=C_h_intern(&lf[74],5,"error");
lf[75]=C_decode_literal(C_heaptop,"\376B\000\000\034Negative length to make-list");
lf[79]=C_h_intern(&lf[79],6,"length");
lf[80]=C_h_intern(&lf[80],10,"string-ref");
lf[81]=C_h_intern(&lf[81],13,"string-length");
lf[82]=C_h_intern(&lf[82],10,"vector-ref");
lf[83]=C_h_intern(&lf[83],13,"vector-length");
lf[84]=C_decode_literal(C_heaptop,"\376B\000\000\034not a list, string or vector");
lf[85]=C_h_intern(&lf[85],4,"find");
lf[86]=C_h_intern(&lf[86],12,"with-optkeys");
lf[87]=C_h_intern(&lf[87],3,"key");
lf[88]=C_h_intern(&lf[88],5,"start");
lf[89]=C_h_intern(&lf[89],3,"end");
lf[90]=C_h_intern(&lf[90],8,"position");
lf[102]=C_h_intern(&lf[102],8,"operator");
lf[103]=C_h_intern(&lf[103],8,"bindings");
lf[104]=C_h_intern(&lf[104],10,"collectors");
lf[105]=C_h_intern(&lf[105],9,"initially");
lf[106]=C_h_intern(&lf[106],9,"end-tests");
lf[107]=C_h_intern(&lf[107],7,"looping");
lf[108]=C_h_intern(&lf[108],8,"stepping");
lf[109]=C_h_intern(&lf[109],7,"finally");
lf[110]=C_h_intern(&lf[110],9,"returning");
lf[112]=C_h_intern(&lf[112],6,"append");
lf[117]=C_decode_literal(C_heaptop,"\376B\000\000\023illegal loop syntax");
lf[118]=C_h_intern(&lf[118],7,"newline");
lf[119]=C_h_intern(&lf[119],7,"display");
lf[120]=C_decode_literal(C_heaptop,"\376B\000\000\002()");
lf[121]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[122]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[123]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[124]=C_decode_literal(C_heaptop,"\376B\000\000\020clause context: ");
lf[125]=C_decode_literal(C_heaptop,"\376B\000\000\014LOOP ERROR: ");
lf[126]=C_h_intern(&lf[126],7,"reverse");
lf[128]=C_decode_literal(C_heaptop,"\376B\000\000*Variable expected but source code ran out.");
lf[129]=C_decode_literal(C_heaptop,"\376B\000\000.\047for\047 clause expected but source code ran out.");
lf[130]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[131]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[132]=C_decode_literal(C_heaptop,"\376B\000\000\031 is not valid with \047for\047.");
lf[133]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[134]=C_decode_literal(C_heaptop,"\376B\000\000\034\047 where a variable expected.");
lf[136]=C_h_intern(&lf[136],4,"set!");
lf[137]=C_h_intern(&lf[137],3,"for");
lf[138]=C_h_intern(&lf[138],6,"gensym");
lf[139]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[140]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[141]=C_h_intern(&lf[141],8,"downfrom");
lf[142]=C_h_intern(&lf[142],1,"-");
lf[143]=C_h_intern(&lf[143],5,"above");
lf[144]=C_h_intern(&lf[144],2,"<=");
lf[145]=C_h_intern(&lf[145],1,"<");
lf[146]=C_h_intern(&lf[146],1,"+");
lf[147]=C_h_intern(&lf[147],5,"below");
lf[148]=C_h_intern(&lf[148],2,">=");
lf[149]=C_h_intern(&lf[149],1,">");
lf[150]=C_h_intern(&lf[150],6,"downto");
lf[151]=C_h_intern(&lf[151],4,"from");
lf[152]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[153]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[154]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[155]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[156]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[157]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[158]=C_h_intern(&lf[158],2,"to");
lf[159]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[160]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[161]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[162]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[163]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[164]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[165]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[166]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[167]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[168]=C_h_intern(&lf[168],2,"by");
lf[169]=C_decode_literal(C_heaptop,"\376B\000\000\025Found duplicate \047by\047.");
lf[170]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[171]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[172]=C_decode_literal(C_heaptop,"\376B\000\000,Expected expression but source code ran out.");
lf[174]=C_decode_literal(C_heaptop,"\376B\000\0001\047repeat\047 clause expected but source code ran out.");
lf[175]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[177]=C_h_intern(&lf[177],6,"across");
lf[178]=C_h_intern(&lf[178],3,"not");
lf[179]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[180]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[181]=C_h_intern(&lf[181],4,"over");
lf[182]=C_h_intern(&lf[182],4,"eod\077");
lf[183]=C_h_intern(&lf[183],5,"begin");
lf[184]=C_h_intern(&lf[184],4,"next");
lf[185]=C_h_intern(&lf[185],5,"null\077");
lf[186]=C_h_intern(&lf[186],2,"in");
lf[187]=C_h_intern(&lf[187],5,"quote");
lf[188]=C_h_intern(&lf[188],3,"cdr");
lf[189]=C_decode_literal(C_heaptop,"\376B\000\000\014Extraneous \047");
lf[190]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[191]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[192]=C_decode_literal(C_heaptop,"\376B\000\000\017Duplicate \047by\047.");
lf[193]=C_decode_literal(C_heaptop,"\376B\000\000\036\047by\047 is invalid with \047across\047.");
lf[194]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[195]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[196]=C_h_intern(&lf[196],2,"on");
lf[197]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[198]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[200]=C_h_intern(&lf[200],1,"=");
lf[201]=C_decode_literal(C_heaptop,"\376B\000\000\016Duplicate \047=\047.");
lf[202]=C_h_intern(&lf[202],4,"then");
lf[203]=C_decode_literal(C_heaptop,"\376B\000\000\021Duplicate \047then\047.");
lf[204]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[205]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[206]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[208]=C_h_intern(&lf[208],4,"with");
lf[209]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[210]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[211]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[212]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[213]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[214]=C_h_intern(&lf[214],3,"and");
lf[215]=C_decode_literal(C_heaptop,"\376B\000\000\020Duplicate \047and\047.");
lf[216]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[217]=C_decode_literal(C_heaptop,"\376B\000\000\037Found \047=\047 where \047and\047 expected.");
lf[218]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[219]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where variable expected.");
lf[220]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[221]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 where \047=\047 or \047and\047 expected.");
lf[223]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[224]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[226]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[227]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[229]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[230]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[232]=C_h_intern(&lf[232],3,"sum");
lf[233]=C_h_intern(&lf[233],5,"count");
lf[234]=C_h_intern(&lf[234],2,"if");
lf[235]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[236]=C_h_intern(&lf[236],8,"minimize");
lf[237]=C_h_intern(&lf[237],8,"maximize");
lf[238]=C_h_intern(&lf[238],2,"or");
lf[239]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[240]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[241]=C_h_intern(&lf[241],4,"list");
lf[242]=C_h_intern(&lf[242],8,"set-cdr!");
lf[243]=C_h_intern(&lf[243],9,"last-pair");
lf[244]=C_h_intern(&lf[244],7,"collect");
lf[245]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\003\000\000\002\376\377\006\000\376\377\016");
lf[246]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[247]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[248]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[249]=C_h_intern(&lf[249],5,"nconc");
lf[250]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[251]=C_decode_literal(C_heaptop,"\376B\000\000\007\047 and \047");
lf[252]=C_decode_literal(C_heaptop,"\376B\000\000 \047 are incompatible accumulators.");
lf[253]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007collect\376\003\000\000\002\376\001\000\000\006append\376\003\000\000\002\376\001\000\000\005nconc\376\377\016");
lf[254]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[255]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010minimize\376\003\000\000\002\376\001\000\000\010maximize\376\377\016");
lf[256]=C_h_intern(&lf[256],4,"into");
lf[257]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[258]=C_decode_literal(C_heaptop,"\376B\000\000!\047 where \047into\047 variable expected.");
lf[259]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing \047into\047 variable.");
lf[260]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[261]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[263]=C_h_intern(&lf[263],6,"return");
lf[265]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[266]=C_h_intern(&lf[266],5,"until");
lf[267]=C_h_intern(&lf[267],5,"while");
lf[268]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[269]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[271]=C_h_intern(&lf[271],7,"thereis");
lf[272]=C_h_intern(&lf[272],6,"always");
lf[273]=C_h_intern(&lf[273],5,"never");
lf[274]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[275]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[277]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[278]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[280]=C_decode_literal(C_heaptop,"\376B\000\000\025Missing \047and\047 clause.");
lf[281]=C_h_intern(&lf[281],4,"else");
lf[282]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[283]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 is not conditional operator.");
lf[284]=C_h_intern(&lf[284],4,"task");
lf[285]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007thereis\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[287]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004else\376\377\016");
lf[288]=C_decode_literal(C_heaptop,"\376B\000\000\026Missing \047else\047 clause.");
lf[289]=C_h_intern(&lf[289],6,"unless");
lf[290]=C_decode_literal(C_heaptop,"\376B\000\000\033Missing conditional clause.");
lf[291]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[292]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[293]=C_h_intern(&lf[293],6,"repeat");
lf[294]=C_h_intern(&lf[294],4,"iter");
lf[295]=C_h_intern(&lf[295],2,"as");
lf[296]=C_h_intern(&lf[296],2,"do");
lf[297]=C_h_intern(&lf[297],4,"when");
lf[300]=C_h_intern(&lf[300],6,"period");
lf[302]=C_h_intern(&lf[302],14,"\003sysblock-set!");
lf[310]=C_h_intern(&lf[310],7,"pattern");
lf[325]=C_h_intern(&lf[325],4,"\000nad");
lf[326]=C_h_intern(&lf[326],8,"\000periods");
lf[327]=C_h_intern(&lf[327],12,"\000depth-first");
lf[329]=C_h_intern(&lf[329],6,"logior");
lf[330]=C_h_intern(&lf[330],6,"lognot");
lf[331]=C_h_intern(&lf[331],14,"\000breadth-first");
lf[332]=C_decode_literal(C_heaptop,"\376B\000\000\026Illegal for traversing");
lf[333]=C_h_intern(&lf[333],7,"\000values");
lf[334]=C_decode_literal(C_heaptop,"\376B\000\000\024Illegal for counting");
lf[336]=C_h_intern(&lf[336],4,"eop\077");
lf[337]=C_h_intern(&lf[337],4,"\000eop");
lf[338]=C_h_intern(&lf[338],4,"\000eod");
lf[342]=C_h_intern(&lf[342],3,"max");
lf[343]=C_h_intern(&lf[343],10,"make-cycle");
lf[344]=C_h_intern(&lf[344],12,"\003sysfor-each");
lf[346]=C_decode_literal(C_heaptop,"\376B\000\000\022Too many arguments");
lf[347]=C_h_intern(&lf[347],4,"\000for");
lf[348]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing keyword value in");
lf[349]=C_decode_literal(C_heaptop,"\376B\000\000\021Redundant keyword");
lf[350]=C_h_intern(&lf[350],7,"\000repeat");
lf[351]=C_decode_literal(C_heaptop,"\376B\000\000\017Unknown keyword");
lf[352]=C_h_intern(&lf[352],8,"keyword\077");
lf[353]=C_decode_literal(C_heaptop,"\376B\000\000\031Positional after keywords");
lf[355]=C_h_intern(&lf[355],5,"palin");
lf[357]=C_h_intern(&lf[357],15,"make-palindrome");
lf[359]=C_h_intern(&lf[359],6,"\000elide");
lf[360]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\000\376\003\000\000\002\376\377\006\001\376\377\016");
lf[361]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\001\376\003\000\000\002\376\377\006\000\376\377\016");
lf[362]=C_h_intern(&lf[362],9,"make-line");
lf[364]=C_h_intern(&lf[364],9,"make-heap");
lf[366]=C_h_intern(&lf[366],13,"make-rotation");
lf[368]=C_h_intern(&lf[368],7,"\000rotate");
lf[370]=C_h_intern(&lf[370],11,"random-item");
lf[378]=C_h_intern(&lf[378],14,"make-weighting");
lf[381]=C_h_intern(&lf[381],7,"\000weight");
lf[382]=C_h_intern(&lf[382],4,"\000min");
lf[383]=C_h_intern(&lf[383],4,"\000max");
lf[384]=C_h_intern(&lf[384],7,"\003sysmap");
lf[385]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[386]=C_h_intern(&lf[386],11,"make-markov");
lf[387]=C_h_intern(&lf[387],1,"*");
lf[389]=C_h_intern(&lf[389],5,"\000past");
lf[390]=C_h_intern(&lf[390],2,"->");
lf[391]=C_decode_literal(C_heaptop,"\376B\000\000.Left hand sides have different number of items");
lf[392]=C_h_intern(&lf[392],3,"\000->");
lf[393]=C_decode_literal(C_heaptop,"\376B\000\000\042Transition missing right hand side");
lf[394]=C_decode_literal(C_heaptop,"\376B\000\000\030Transition is not a list");
lf[395]=C_decode_literal(C_heaptop,"\376B\000\000 Not a list of Markov transitions");
lf[396]=C_decode_literal(C_heaptop,"\376B\000\000\032No transition matches past");
lf[398]=C_h_intern(&lf[398],10,"graph-node");
lf[399]=C_h_intern(&lf[399],10,"make-graph");
lf[401]=C_h_intern(&lf[401],3,"\000to");
lf[402]=C_h_intern(&lf[402],3,"\000id");
lf[403]=C_decode_literal(C_heaptop,"\376B\000\000\025Graph node not a list");
lf[404]=C_decode_literal(C_heaptop,"\376B\000\000\016Not graph data");
lf[405]=C_decode_literal(C_heaptop,"\376B\000\000\024No graph node for id");
lf[406]=C_h_intern(&lf[406],14,"markov-analyze");
lf[407]=C_h_intern(&lf[407],6,"format");
lf[408]=C_decode_literal(C_heaptop,"\376B\000\000\002~s");
lf[409]=C_h_intern(&lf[409],19,"\003sysundefined-value");
lf[410]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002->\376\377\016");
lf[411]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[412]=C_h_intern(&lf[412],19,"\003syswrite-char/port");
lf[413]=C_h_intern(&lf[413],19,"\003sysstandard-output");
lf[414]=C_h_intern(&lf[414],9,"substring");
lf[415]=C_h_intern(&lf[415],3,"min");
lf[416]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[417]=C_h_intern(&lf[417],13,"string-append");
lf[418]=C_decode_literal(C_heaptop,"\376B\000\000\003 ~a");
lf[419]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[420]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[421]=C_h_intern(&lf[421],11,"make-string");
lf[422]=C_h_intern(&lf[422],4,"sort");
lf[423]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[424]=C_h_intern(&lf[424],8,"decimals");
lf[425]=C_h_intern(&lf[425],11,"string-ci<\077");
lf[426]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[427]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[428]=C_h_intern(&lf[428],6,"modulo");
lf[429]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[430]=C_h_intern(&lf[430],6,"\000order");
lf[431]=C_h_intern(&lf[431],5,"\000mode");
lf[432]=C_h_intern(&lf[432],7,"rescale");
lf[433]=C_h_intern(&lf[433],8,"discrete");
lf[434]=C_h_intern(&lf[434],12,"ffi_discrete");
lf[435]=C_h_intern(&lf[435],4,"not\077");
lf[436]=C_h_intern(&lf[436],3,"int");
lf[437]=C_h_intern(&lf[437],5,"float");
lf[438]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[439]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[440]=C_h_intern(&lf[440],5,"log10");
lf[441]=C_h_intern(&lf[441],4,"log2");
lf[442]=C_h_intern(&lf[442],4,"plus");
lf[443]=C_h_intern(&lf[443],5,"times");
lf[444]=C_h_intern(&lf[444],5,"minus");
lf[445]=C_h_intern(&lf[445],6,"divide");
lf[446]=C_h_intern(&lf[446],1,"/");
lf[447]=C_h_intern(&lf[447],8,"quantize");
lf[448]=C_h_intern(&lf[448],5,"round");
lf[449]=C_h_intern(&lf[449],4,"expt");
lf[450]=C_decode_literal(C_heaptop,"\376U10.0\000");
lf[451]=C_h_intern(&lf[451],15,"rhythm->seconds");
lf[452]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[453]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[454]=C_h_intern(&lf[454],6,"\000tempo");
lf[455]=C_h_intern(&lf[455],5,"\000beat");
lf[456]=C_h_intern(&lf[456],12,"cents->ratio");
lf[457]=C_h_intern(&lf[457],12,"ratio->cents");
lf[459]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[460]=C_h_intern(&lf[460],3,"err");
lf[461]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[462]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[463]=C_h_intern(&lf[463],6,"interp");
lf[464]=C_decode_literal(C_heaptop,"\376B\000\000\027missing x y coordinates");
lf[465]=C_h_intern(&lf[465],8,"tendency");
lf[466]=C_h_intern(&lf[466],3,"ran");
lf[467]=C_h_intern(&lf[467],3,"fit");
lf[468]=C_h_intern(&lf[468],9,"remainder");
lf[469]=C_decode_literal(C_heaptop,"\376B\000\000\021mode not 1 2 or 3");
lf[470]=C_h_intern(&lf[470],5,"scale");
lf[471]=C_decode_literal(C_heaptop,"\376B\000\000\023limit same as start");
lf[472]=C_h_intern(&lf[472],4,"segs");
lf[473]=C_decode_literal(C_heaptop,"\376B\000\000\014Illegal base");
lf[474]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[475]=C_h_intern(&lf[475],8,"ran-set!");
lf[476]=C_h_intern(&lf[476],7,"between");
lf[477]=C_h_intern(&lf[477],4,"pick");
lf[478]=C_h_intern(&lf[478],4,"vary");
lf[479]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[480]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[481]=C_h_intern(&lf[481],8,"shuffle!");
lf[482]=C_h_intern(&lf[482],7,"shuffle");
lf[483]=C_h_intern(&lf[483],6,"ranlow");
lf[484]=C_h_intern(&lf[484],7,"ranhigh");
lf[485]=C_h_intern(&lf[485],9,"ranmiddle");
lf[486]=C_h_intern(&lf[486],7,"ranbeta");
lf[487]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[488]=C_h_intern(&lf[488],2,"\000a");
lf[489]=C_h_intern(&lf[489],2,"\000b");
lf[490]=C_h_intern(&lf[490],6,"ranexp");
lf[491]=C_h_intern(&lf[491],8,"rangauss");
lf[492]=C_h_intern(&lf[492],9,"rancauchy");
lf[493]=C_h_intern(&lf[493],10,"ranpoisson");
lf[494]=C_h_intern(&lf[494],8,"rangamma");
lf[495]=C_h_intern(&lf[495],8,"ranbrown");
lf[496]=C_h_intern(&lf[496],7,"ranpink");
lf[499]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[500]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[502]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[503]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[504]=C_decode_literal(C_heaptop,"\376U0.333333333333333\000");
lf[505]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[506]=C_h_intern(&lf[506],5,"floor");
lf[507]=C_h_intern(&lf[507],14,"symbol->string");
lf[508]=C_h_intern(&lf[508],15,"keyword->string");
lf[509]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[510]=C_h_intern(&lf[510],4,"note");
lf[511]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[512]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[513]=C_h_intern(&lf[513],2,"hz");
lf[514]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[515]=C_h_intern(&lf[515],2,"pc");
lf[516]=C_h_intern(&lf[516],6,"invert");
lf[517]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[518]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[519]=C_h_intern(&lf[519],9,"transpose");
lf[520]=C_decode_literal(C_heaptop,"\376B\000\000\022No transposion for");
lf[521]=C_h_intern(&lf[521],10,"retrograde");
lf[522]=C_h_intern(&lf[522],11,"scale-order");
lf[523]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[524]=C_h_intern(&lf[524],7,"*tempo*");
lf[525]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[526]=C_h_intern(&lf[526],6,"*beat*");
lf[527]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[529]=C_h_intern(&lf[529],14,"string->symbol");
lf[530]=C_h_intern(&lf[530],6,"rhythm");
lf[531]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\012\000\000+\376\003\000\000\002\376\377\012\000\000-\376\003\000\000\002\376\377\012\000\000*\376\003\000\000\002\376\377\012\000\000/\376\377\016");
lf[532]=C_decode_literal(C_heaptop,"\376B\000\000\014Not a rhythm");
lf[533]=C_decode_literal(C_heaptop,"\376B\000\000\014Not a rhythm");
lf[534]=C_decode_literal(C_heaptop,"\376B\000\000\014not a rhythm");
lf[535]=C_decode_literal(C_heaptop,"\376B\000\000\014Not a rhythm");
lf[536]=C_decode_literal(C_heaptop,"\376B\000\000\014not a rhythm");
lf[537]=C_decode_literal(C_heaptop,"\376B\000\000\014Not a rhythm");
lf[538]=C_decode_literal(C_heaptop,"\376B\000\000\014not a rhythm");
lf[539]=C_h_intern(&lf[539],8,"in-tempo");
lf[540]=C_h_intern(&lf[540],3,"cwd");
lf[541]=C_h_intern(&lf[541],5,"chdir");
lf[543]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[544]=C_decode_literal(C_heaptop,"\376B\000\000\030pathname is not a string");
lf[546]=C_decode_literal(C_heaptop,"\376B\000\000\030pathname is not a string");
lf[548]=C_h_intern(&lf[548],8,"spectrum");
lf[550]=C_h_intern(&lf[550],13,"spectrum-time");
lf[552]=C_h_intern(&lf[552],13,"spectrum-size");
lf[554]=C_h_intern(&lf[554],14,"spectrum-freqs");
lf[556]=C_h_intern(&lf[556],13,"spectrum-amps");
lf[557]=C_h_intern(&lf[557],13,"spectrum-copy");
lf[558]=C_h_intern(&lf[558],14,"spectrum-pairs");
lf[559]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[560]=C_h_intern(&lf[560],16,"spectrum-minfreq");
lf[561]=C_h_intern(&lf[561],16,"spectrum-maxfreq");
lf[562]=C_h_intern(&lf[562],15,"spectrum-minamp");
lf[563]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[564]=C_h_intern(&lf[564],15,"spectrum-maxamp");
lf[565]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[566]=C_h_intern(&lf[566],13,"spectrum-keys");
lf[567]=C_h_intern(&lf[567],5,"sort!");
lf[568]=C_decode_literal(C_heaptop,"\376B\000\000\022mode not -1 0 or 1");
lf[569]=C_h_intern(&lf[569],4,"mode");
lf[570]=C_h_intern(&lf[570],8,"for-each");
lf[571]=C_h_intern(&lf[571],7,"\000thresh");
lf[572]=C_h_intern(&lf[572],6,"\000quant");
lf[573]=C_h_intern(&lf[573],7,"\000unique");
lf[574]=C_h_intern(&lf[574],11,"fm-spectrum");
lf[575]=C_h_intern(&lf[575],4,"caar");
lf[576]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[577]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[578]=C_h_intern(&lf[578],13,"spectrum-add!");
lf[579]=C_h_intern(&lf[579],11,"rm-spectrum");
lf[580]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[581]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[582]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[583]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[584]=C_h_intern(&lf[584],14,"spectrum-flip!");
lf[585]=C_h_intern(&lf[585],17,"spectrum-rescale!");
lf[586]=C_h_intern(&lf[586],3,"map");
lf[587]=C_decode_literal(C_heaptop,"\376B\000\000\037Non-numerical y can\047t be scaler");
lf[588]=C_h_intern(&lf[588],7,"number\077");
lf[589]=C_decode_literal(C_heaptop,"\376B\000\000\014Mode not 1-8");
lf[590]=C_decode_literal(C_heaptop,"\376B\000\000%Need a scaler, envelope or x y values");
lf[591]=C_decode_literal(C_heaptop,"\376B\000\000\024Not a number or pair");
lf[592]=C_h_intern(&lf[592],19,"import-spear-frames");
lf[593]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[594]=C_h_intern(&lf[594],9,"read-line");
lf[595]=C_decode_literal(C_heaptop,"\376B\000\000\016Bad frame data");
lf[596]=C_h_intern(&lf[596],17,"open-input-string");
lf[597]=C_decode_literal(C_heaptop,"\376B\000\000\012frame-data");
lf[598]=C_decode_literal(C_heaptop,"\376B\000\000$point-type index frequency amplitude");
lf[599]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[600]=C_decode_literal(C_heaptop,"\376B\000\000\025par-text-frame-format");
lf[601]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[602]=C_h_intern(&lf[602],18,"current-input-port");
lf[603]=C_h_intern(&lf[603],20,"with-input-from-file");
lf[604]=C_h_intern(&lf[604],19,"export-spear-frames");
lf[605]=C_decode_literal(C_heaptop,"\376B\000\000\002~%");
lf[606]=C_decode_literal(C_heaptop,"\376B\000\000\011 ~S ~S ~S");
lf[607]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[608]=C_decode_literal(C_heaptop,"\376B\000\000\005~S ~S");
lf[609]=C_decode_literal(C_heaptop,"\376B\000\000\014frame-data~%");
lf[610]=C_decode_literal(C_heaptop,"\376B\000\000\020frame-count ~S~%");
lf[611]=C_decode_literal(C_heaptop,"\376B\000\000\023partials-count ~S~%");
lf[612]=C_decode_literal(C_heaptop,"\376B\000\000&point-type index frequency amplitude~%");
lf[613]=C_decode_literal(C_heaptop,"\376B\000\000\027par-text-frame-format~%");
lf[614]=C_h_intern(&lf[614],19,"current-output-port");
lf[615]=C_h_intern(&lf[615],19,"with-output-to-file");
lf[617]=C_h_intern(&lf[617],5,"token");
lf[621]=C_h_intern(&lf[621],1,"t");
lf[626]=C_h_intern(&lf[626],4,"rule");
lf[628]=C_decode_literal(C_heaptop,"\376B\000\000\012not a rule");
lf[635]=C_h_intern(&lf[635],11,"parse-error");
lf[637]=C_h_intern(&lf[637],10,"parse-unit");
lf[649]=C_decode_literal(C_heaptop,"\376B\000\000\014no info for ");
lf[651]=C_h_intern(&lf[651],15,"string->keyword");
lf[652]=C_decode_literal(C_heaptop,"\376B\000\0005emit-token-unit: dont know how to emit slotref token ");
lf[653]=C_decode_literal(C_heaptop,"\376B\000\000\047emit-token-unit: dont know how to emit ");
lf[656]=C_decode_literal(C_heaptop,"\376B\000\000\033emit: dont know how to emit");
lf[658]=C_h_intern(&lf[658],2,"!=");
lf[663]=C_decode_literal(C_heaptop,"\376B\000\000\035Not a token type or rule type");
lf[664]=C_decode_literal(C_heaptop,"\376B\000\000\047Pattern opr not one of and, or, *, +, @");
lf[665]=C_h_intern(&lf[665],1,"@");
lf[666]=C_decode_literal(C_heaptop,"\376B\000\000\047Not a pattern value or pattern operator");
lf[667]=C_decode_literal(C_heaptop,"\376B\000\000!~%parse[~A]: pattern=~S tokens=~S");
lf[668]=C_h_intern(&lf[668],3,"ash");
lf[673]=C_decode_literal(C_heaptop,"\376B\000\000\004stop");
lf[674]=C_decode_literal(C_heaptop,"\376B\000\000\004temp");
lf[675]=C_decode_literal(C_heaptop,"\376B\000\000\004bool");
lf[676]=C_decode_literal(C_heaptop,"\376B\000\000\004tail");
lf[677]=C_decode_literal(C_heaptop,"\376B\000\000\004goal");
lf[678]=C_decode_literal(C_heaptop,"\376B\000\000\004from");
lf[679]=C_decode_literal(C_heaptop,"\376B\000\000\004step");
lf[680]=C_h_intern(&lf[680],3,"sal");
lf[681]=C_decode_literal(C_heaptop,"\376B\000\000\013>>> Error: ");
lf[682]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[683]=C_h_intern(&lf[683],4,"eval");
lf[684]=C_h_intern(&lf[684],23,"interaction-environment");
lf[685]=C_h_intern(&lf[685],7,"\000syntax");
lf[686]=C_h_intern(&lf[686],7,"\000scheme");
lf[687]=C_decode_literal(C_heaptop,"\376B\000\000\023Illegal statement: ");
lf[688]=C_h_intern(&lf[688],7,"call/cc");
lf[690]=C_h_intern(&lf[690],7,"\000tokens");
lf[691]=C_h_intern(&lf[691],8,"\000expand\077");
lf[692]=C_h_intern(&lf[692],5,"\000rule");
lf[693]=C_h_intern(&lf[693],9,"sal:print");
lf[694]=C_decode_literal(C_heaptop,"\376B\000\000\002{}");
lf[695]=C_decode_literal(C_heaptop,"\376B\000\000\001}");
lf[696]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[697]=C_decode_literal(C_heaptop,"\376B\000\000\001{");
lf[698]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[699]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[700]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[701]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[702]=C_h_intern(&lf[702],9,"sal:chdir");
lf[703]=C_h_intern(&lf[703],8,"sal:load");
lf[704]=C_decode_literal(C_heaptop,"\376B\000\000\003sal");
lf[705]=C_h_intern(&lf[705],13,"load-sal-file");
lf[706]=C_h_intern(&lf[706],4,"load");
lf[707]=C_decode_literal(C_heaptop,"\376B\000\000\010Loading ");
lf[708]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[709]=C_decode_literal(C_heaptop,"\376B\000\000\021>>> Error: file \042");
lf[710]=C_decode_literal(C_heaptop,"\376B\000\000\021\042 does not exist\012");
lf[711]=C_decode_literal(C_heaptop,"\376B\000\000\030pathname is not a string");
lf[712]=C_h_intern(&lf[712],8,"sal:open");
lf[713]=C_decode_literal(C_heaptop,"\376B\000\000)>>> Error: open command not implemented.\012");
lf[714]=C_h_intern(&lf[714],5,"ports");
lf[716]=C_decode_literal(C_heaptop,"\376B\000\000\003mid");
lf[718]=C_decode_literal(C_heaptop,"\376B\000\000\004aiff");
lf[719]=C_decode_literal(C_heaptop,"\376B\000\000\003snd");
lf[720]=C_decode_literal(C_heaptop,"\376B\000\000\003wav");
lf[722]=C_decode_literal(C_heaptop,"\376B\000\000\003sco");
lf[723]=C_h_intern(&lf[723],19,"cs:open-output-file");
lf[724]=C_decode_literal(C_heaptop,"\376B\000\000\026don\047t know how to open");
lf[725]=C_decode_literal(C_heaptop,"\376B\000\000\021file not writable");
lf[726]=C_decode_literal(C_heaptop,"\376B\000\000\033Scheduler busy, cannot open");
lf[727]=C_h_intern(&lf[727],7,"mp:open");
lf[730]=C_h_intern(&lf[730],4,"\000out");
lf[731]=C_h_intern(&lf[731],3,"\000in");
lf[732]=C_decode_literal(C_heaptop,"\376B\000\000\030not a midi device number");
lf[733]=C_decode_literal(C_heaptop,"\376B\000\000\030not a midi device number");
lf[734]=C_h_intern(&lf[734],7,"mp:midi");
lf[735]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[736]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[737]=C_h_intern(&lf[737],5,"\000time");
lf[738]=C_h_intern(&lf[738],4,"\000dur");
lf[739]=C_h_intern(&lf[739],4,"\000key");
lf[740]=C_h_intern(&lf[740],4,"\000amp");
lf[741]=C_h_intern(&lf[741],5,"\000chan");
lf[742]=C_h_intern(&lf[742],6,"mp:off");
lf[743]=C_h_intern(&lf[743],5,"mp:on");
lf[744]=C_h_intern(&lf[744],4,"\000vel");
lf[745]=C_h_intern(&lf[745],8,"mp:touch");
lf[746]=C_h_intern(&lf[746],4,"\000val");
lf[747]=C_h_intern(&lf[747],7,"mp:ctrl");
lf[748]=C_h_intern(&lf[748],4,"\000num");
lf[749]=C_h_intern(&lf[749],7,"mp:prog");
lf[750]=C_h_intern(&lf[750],8,"mp:press");
lf[751]=C_h_intern(&lf[751],7,"mp:bend");
lf[752]=C_h_intern(&lf[752],9,"mp:tuning");
lf[753]=C_decode_literal(C_heaptop,"\376B\000\000\035not a tuning division 1 to 16");
lf[754]=C_h_intern(&lf[754],10,"mp:playseq");
lf[755]=C_h_intern(&lf[755],10,"mp:saveseq");
lf[756]=C_h_intern(&lf[756],10,"mp:copyseq");
lf[757]=C_h_intern(&lf[757],10,"mp:plotseq");
lf[758]=C_h_intern(&lf[758],11,"mp:clearseq");
lf[759]=C_h_intern(&lf[759],12,"mp:recordseq");
lf[760]=C_h_intern(&lf[760],21,"ffi_mp_set_record_seq");
lf[761]=C_h_intern(&lf[761],9,"mp:inhook");
lf[762]=C_decode_literal(C_heaptop,"\376B\000\000\023not yet implemented");
lf[763]=C_h_intern(&lf[763],10,"mp:inchans");
lf[764]=C_decode_literal(C_heaptop,"\376B\000\000\026need a channel 0 to 15");
lf[765]=C_decode_literal(C_heaptop,"\376B\000\000\025not a channel 0 to 15");
lf[766]=C_h_intern(&lf[766],10,"mp:intypes");
lf[767]=C_decode_literal(C_heaptop,"\376B\000\000(missing message type (mm:off to mm:bend)");
lf[768]=C_decode_literal(C_heaptop,"\376B\000\000$not a message type mm:off to mm:bend");
lf[769]=C_h_intern(&lf[769],5,"mp:mm");
lf[770]=C_decode_literal(C_heaptop,"\376B\000\000\023not yet implemented");
lf[772]=C_h_intern(&lf[772],9,"\000channels");
lf[773]=C_h_intern(&lf[773],14,"*clm-channels*");
lf[774]=C_h_intern(&lf[774],15,"init-with-sound");
lf[775]=C_h_intern(&lf[775],7,"\000output");
lf[776]=C_decode_literal(C_heaptop,"\376B\000\000\004aiff");
lf[777]=C_h_intern(&lf[777],12,"\000header-type");
lf[778]=C_h_intern(&lf[778],8,"mus-aifc");
lf[779]=C_decode_literal(C_heaptop,"\376B\000\000\003wav");
lf[780]=C_h_intern(&lf[780],8,"mus-riff");
lf[781]=C_decode_literal(C_heaptop,"\376B\000\000\003snd");
lf[782]=C_h_intern(&lf[782],8,"mus-next");
lf[783]=C_decode_literal(C_heaptop,"\376B\000\000\004aiff");
lf[784]=C_h_intern(&lf[784],12,"\000data-format");
lf[785]=C_h_intern(&lf[785],10,"mus-bshort");
lf[786]=C_decode_literal(C_heaptop,"\376B\000\000\003wav");
lf[787]=C_h_intern(&lf[787],10,"mus-lshort");
lf[788]=C_decode_literal(C_heaptop,"\376B\000\000\003snd");
lf[789]=C_h_intern(&lf[789],5,"\000play");
lf[790]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[791]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[792]=C_decode_literal(C_heaptop,"\376B\000\000\007 :play ");
lf[793]=C_h_intern(&lf[793],6,"\000write");
lf[794]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[795]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[796]=C_decode_literal(C_heaptop,"\376B\000\000\010 :write ");
lf[797]=C_h_intern(&lf[797],8,"\000options");
lf[798]=C_decode_literal(C_heaptop,"\376B\000\000\013 :options \042");
lf[799]=C_decode_literal(C_heaptop,"\376B\000\000\001\042");
lf[800]=C_decode_literal(C_heaptop,"\376B\000\000\024options not a string");
lf[801]=C_h_intern(&lf[801],7,"\000header");
lf[802]=C_decode_literal(C_heaptop,"\376B\000\000\012 :header \042");
lf[803]=C_decode_literal(C_heaptop,"\376B\000\000\001\042");
lf[804]=C_decode_literal(C_heaptop,"\376B\000\000\023header not a string");
lf[805]=C_h_intern(&lf[805],10,"\000orchestra");
lf[806]=C_decode_literal(C_heaptop,"\376B\000\000\015 :orchestra \042");
lf[807]=C_decode_literal(C_heaptop,"\376B\000\000\001\042");
lf[808]=C_decode_literal(C_heaptop,"\376B\000\000\026orchestra not a string");
lf[809]=C_decode_literal(C_heaptop,"\376B\000\000\025unknown Csound option");
lf[810]=C_decode_literal(C_heaptop,"\376B\000\000\023uneven options list");
lf[811]=C_decode_literal(C_heaptop,"\376B\000\000\001\042");
lf[812]=C_decode_literal(C_heaptop,"\376B\000\000\001\042");
lf[814]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[815]=C_h_intern(&lf[815],1,"i");
lf[816]=C_h_intern(&lf[816],14,"cs:f_statement");
lf[817]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[818]=C_decode_literal(C_heaptop,"\376B\000\000#pfield not number, string or symbol");
lf[819]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[820]=C_decode_literal(C_heaptop,"\376B\000\000\027missing pfield 2 (time)");
lf[821]=C_decode_literal(C_heaptop,"\376B\000\000\025pfield 2 not a number");
lf[822]=C_decode_literal(C_heaptop,"\376B\000\000\027pfield 1 not an integer");
lf[823]=C_decode_literal(C_heaptop,"\376B\000\000\023missing pfield data");
lf[824]=C_h_intern(&lf[824],4,"cs:i");
lf[825]=C_h_intern(&lf[825],4,"cs:f");
lf[826]=C_h_intern(&lf[826],1,"f");
lf[829]=C_decode_literal(C_heaptop,"\376B\000\000\030too many arguments in ~S");
lf[830]=C_decode_literal(C_heaptop,"\376B\000\000\036Uneven keyword arguments in ~S");
lf[831]=C_decode_literal(C_heaptop,"\376B\000\000%~A not a valid keyword argument in ~S");
lf[832]=C_decode_literal(C_heaptop,"\376B\000\000\031~A not a keyword argument");
lf[833]=C_decode_literal(C_heaptop,"\376B\000\000%send missing required arguments in ~S");
lf[834]=C_decode_literal(C_heaptop,"\376B\000\000%send missing required arguments in ~S");
lf[835]=C_h_intern(&lf[835],30,"call-with-current-continuation");
lf[836]=C_h_intern(&lf[836],4,"\000opt");
lf[837]=C_h_intern(&lf[837],7,"\000optkey");
lf[838]=C_h_intern(&lf[838],5,"\000rest");
lf[839]=C_decode_literal(C_heaptop,"\376B\000\000\012not a mode");
lf[840]=C_h_intern(&lf[840],9,"\000optional");
lf[841]=C_decode_literal(C_heaptop,"\376B\000\000\010shouldnt");
lf[842]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\003out\376\003\000\000\002\376\001\000\000\002in\376\377\016");
lf[843]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003dur\376\003\000\000\002\376\001\000\000\003key\376\003\000\000\002\376\001\000\000\003amp\376\003\000\000\002\376\001\000\000\004"
"chan\376\377\016");
lf[844]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003key\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[845]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003key\376\003\000\000\002\376\001\000\000\003vel\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[846]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003key\376\003\000\000\002\376\001\000\000\003val\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[847]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003num\376\003\000\000\002\376\001\000\000\003val\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[848]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003val\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[849]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003val\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[850]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003val\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[851]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\002mm\376\377\016");
lf[852]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004func\376\377\016");
lf[853]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\003div\376\377\016");
lf[854]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\003rec\376\377\016");
lf[855]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005\000rest\376\003\000\000\002\376\001\000\000\004args\376\377\016");
lf[856]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005\000rest\376\003\000\000\002\376\001\000\000\004args\376\377\016");
lf[857]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005\000rest\376\003\000\000\002\376\001\000\000\004args\376\377\016");
lf[858]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005\000rest\376\003\000\000\002\376\001\000\000\004args\376\377\016");
lf[859]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\003arg\376\377\016");
lf[861]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005throw\376\003\000\000\002\376\377\001\377\377\377\377\376\377\016");
lf[863]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[864]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[867]=C_h_intern(&lf[867],6,"sprout");
lf[868]=C_decode_literal(C_heaptop,"\376B\000\000\011not an id");
lf[869]=C_decode_literal(C_heaptop,"\376B\000\000\011not an id");
lf[870]=C_decode_literal(C_heaptop,"\376B\000\000\020not a start time");
lf[871]=C_decode_literal(C_heaptop,"\376B\000\000\020not a start time");
lf[872]=C_decode_literal(C_heaptop,"\376B\000\000\021illegal arguments");
lf[873]=C_decode_literal(C_heaptop,"\376B\000\000\015not a process");
lf[874]=C_decode_literal(C_heaptop,"\376B\000\000\015not a process");
lf[875]=C_h_intern(&lf[875],3,"now");
lf[876]=C_h_intern(&lf[876],5,"pause");
lf[877]=C_h_intern(&lf[877],7,"paused\077");
lf[878]=C_h_intern(&lf[878],8,"continue");
lf[879]=C_h_intern(&lf[879],4,"stop");
lf[880]=C_decode_literal(C_heaptop,"\376B\000\000\021Not an integer id");
lf[881]=C_h_intern(&lf[881],4,"hush");
lf[882]=C_h_intern(&lf[882],14,"ffi_sched_hush");
lf[883]=C_h_intern(&lf[883],16,"arithmetic-shift");
lf[884]=C_h_intern(&lf[884],11,"bitwise-and");
lf[885]=C_h_intern(&lf[885],11,"bitwise-not");
lf[886]=C_h_intern(&lf[886],6,"logxor");
lf[887]=C_h_intern(&lf[887],11,"bitwise-xor");
lf[888]=C_h_intern(&lf[888],11,"bitwise-ior");
lf[889]=C_h_intern(&lf[889],14,"return-to-host");
lf[890]=C_decode_literal(C_heaptop,"\376B\000\000\007cs:data");
lf[891]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:f");
lf[892]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:i");
lf[893]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:intypes");
lf[894]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:inchans");
lf[895]=C_decode_literal(C_heaptop,"\376B\000\000\013mp:clearseq");
lf[896]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:copyseq");
lf[897]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:saveseq");
lf[898]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:playseq");
lf[899]=C_decode_literal(C_heaptop,"\376B\000\000\014mp:recordseq");
lf[900]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:tuning");
lf[901]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:inhook");
lf[902]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:mm");
lf[903]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:bend");
lf[904]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:press");
lf[905]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:prog");
lf[906]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:ctrl");
lf[907]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:touch");
lf[908]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:on");
lf[909]=C_decode_literal(C_heaptop,"\376B\000\000\006mp:off");
lf[910]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:midi");
lf[911]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:open");
lf[912]=C_decode_literal(C_heaptop,"\376B\000\000\030SalStatementSequenceRule");
lf[913]=C_decode_literal(C_heaptop,"\376B\000\000\020SalStatementRule");
lf[914]=C_h_intern(&lf[914],6,"define");
lf[915]=C_decode_literal(C_heaptop,"\376B\000\000\017Variable: ~A = ");
lf[916]=C_decode_literal(C_heaptop,"\376B\000\000\002)\012");
lf[917]=C_decode_literal(C_heaptop,"\376B\000\000\002, ");
lf[918]=C_decode_literal(C_heaptop,"\376B\000\000\002 (");
lf[919]=C_decode_literal(C_heaptop,"\376B\000\000\012Function: ");
lf[920]=C_h_intern(&lf[920],7,"\000return");
lf[921]=C_h_intern(&lf[921],6,"lambda");
lf[922]=C_h_intern(&lf[922],9,"\000function");
lf[923]=C_decode_literal(C_heaptop,"\376B\000\000\011Process: ");
lf[924]=C_h_intern(&lf[924],8,"\000process");
lf[925]=C_decode_literal(C_heaptop,"\376B\000\000\003...");
lf[926]=C_decode_literal(C_heaptop,"\376B\000\000\026SalDefineStatementRule");
lf[927]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunDeclRule");
lf[928]=C_h_intern(&lf[928],4,"args");
lf[929]=C_h_intern(&lf[929],22,"ffi_sched_score_mode_p");
lf[930]=C_h_intern(&lf[930],20,"ffi_sched_score_time");
lf[931]=C_h_intern(&lf[931],7,"elapsed");
lf[932]=C_h_intern(&lf[932],1,"x");
lf[933]=C_h_intern(&lf[933],4,"wait");
lf[934]=C_h_intern(&lf[934],5,"throw");
lf[935]=C_h_intern(&lf[935],18,"current-error-port");
lf[936]=C_h_intern(&lf[936],19,"print-error-message");
lf[937]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[938]=C_h_intern(&lf[938],22,"with-exception-handler");
lf[939]=C_h_intern(&lf[939],4,"let*");
lf[940]=C_h_intern(&lf[940],10,"\003sysappend");
lf[941]=C_decode_literal(C_heaptop,"\376B\000\000\006errvar");
lf[942]=C_decode_literal(C_heaptop,"\376B\000\000*Warning: possible non-terminating process.");
lf[943]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[944]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[945]=C_h_intern(&lf[945],7,"process");
lf[946]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[947]=C_decode_literal(C_heaptop,"\376B\000\000\030\047 clause cannot follow \047");
lf[948]=C_decode_literal(C_heaptop,"\376B\000\000\002\047.");
lf[949]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[950]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where operator expected.");
lf[951]=C_h_intern(&lf[951],2,"go");
lf[952]=C_h_intern(&lf[952],4,"void");
lf[953]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\000\376\377\016");
lf[954]=C_h_intern(&lf[954],5,"\000loop");
lf[955]=C_h_intern(&lf[955],4,"\000run");
lf[956]=C_decode_literal(C_heaptop,"\376B\000\000\035run statement outside process");
lf[957]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoopStatementRule");
lf[958]=C_decode_literal(C_heaptop,"\376B\000\000\022SalTerminationRule");
lf[959]=C_decode_literal(C_heaptop,"\376B\000\000\017SalSteppingRule");
lf[960]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[961]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[962]=C_decode_literal(C_heaptop,"\376B\000\000\022SalConditionalRule");
lf[963]=C_decode_literal(C_heaptop,"\376B\000\000\014SalBlockRule");
lf[964]=C_h_intern(&lf[964],9,"list-tail");
lf[965]=C_h_intern(&lf[965],8,"set-car!");
lf[966]=C_h_intern(&lf[966],4,"cons");
lf[967]=C_decode_literal(C_heaptop,"\376B\000\000\021SalAssignmentRule");
lf[968]=C_decode_literal(C_heaptop,"\376B\000\000\015SalAssignRule");
lf[969]=C_h_intern(&lf[969],9,"\000bindings");
lf[970]=C_decode_literal(C_heaptop,"\376B\000\000\017SalBindingsRule");
lf[971]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[972]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBindRule");
lf[973]=C_decode_literal(C_heaptop,"\376B\000\000!return statement outside function");
lf[974]=C_decode_literal(C_heaptop,"\376B\000\000\025SalFunctionReturnRule");
lf[975]=C_decode_literal(C_heaptop,"\376B\000\000 wait statement outside run block");
lf[976]=C_decode_literal(C_heaptop,"\376B\000\000\022SalProcessWaitRule");
lf[977]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006fix-me\376\003\000\000\002\376\001\000\000\004plot\376\377\016");
lf[978]=C_decode_literal(C_heaptop,"\376B\000\000\024SalPlotStatementRule");
lf[979]=C_decode_literal(C_heaptop,"\376B\000\000\026SalOutputStatementRule");
lf[980]=C_h_intern(&lf[980],10,"sal:output");
lf[981]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSystemStatementRule");
lf[982]=C_h_intern(&lf[982],10,"sal:system");
lf[983]=C_decode_literal(C_heaptop,"\376B\000\000\025SalChdirStatementRule");
lf[984]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoadStatementRule");
lf[985]=C_decode_literal(C_heaptop,"\376B\000\000\024SalExecStatementRule");
lf[986]=C_decode_literal(C_heaptop,"\376B\000\000\022not a send message");
lf[987]=C_decode_literal(C_heaptop,"\376B\000\000\024SalSendStatementRule");
lf[988]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSproutStatementRule");
lf[989]=C_decode_literal(C_heaptop,"\376B\000\000\025SalPrintStatementRule");
lf[990]=C_decode_literal(C_heaptop,"\376B\000\000\014SalSexprRule");
lf[991]=C_decode_literal(C_heaptop,"\376B\000\000\013SalTermRule");
lf[992]=C_decode_literal(C_heaptop,"\376B\000\000\014SalMexprRule");
lf[993]=C_decode_literal(C_heaptop,"\376B\000\000\011SalOpRule");
lf[994]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFuncallRule");
lf[995]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunargsRule");
lf[996]=C_decode_literal(C_heaptop,"\376B\000\000\014SalKargsRule");
lf[997]=C_decode_literal(C_heaptop,"\376B\000\000\014SalPargsRule");
lf[998]=C_decode_literal(C_heaptop,"\376B\000\000\015SalIfExprRule");
lf[999]=C_decode_literal(C_heaptop,"\376B\000\000\013SalArefRule");
lf[1000]=C_decode_literal(C_heaptop,"\376B\000\000\012SalEltRule");
lf[1001]=C_h_intern(&lf[1001],7,"unquote");
lf[1002]=C_h_intern(&lf[1002],16,"unquote-splicing");
lf[1003]=C_h_intern(&lf[1003],5,"\000list");
lf[1004]=C_h_intern(&lf[1004],8,"\000unquote");
lf[1005]=C_decode_literal(C_heaptop,"\376B\000\000\023#$ outside of list.");
lf[1006]=C_decode_literal(C_heaptop,"\376B\000\000\023#^ outside of list.");
lf[1007]=C_decode_literal(C_heaptop,"\376B\000\000\016SalUnquoteRule");
lf[1008]=C_h_intern(&lf[1008],10,"quasiquote");
lf[1009]=C_decode_literal(C_heaptop,"\376B\000\000\013SalListRule");
lf[1010]=C_decode_literal(C_heaptop,"\376B\000\000\013SalAtomRule");
lf[1011]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBoolRule");
lf[1012]=C_decode_literal(C_heaptop,"\376B\000\000\015SalNumberRule");
lf[1013]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376B\000\000\001.\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002..\376\003\000\000\002\376U0.75\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\003..."
"\376\003\000\000\002\376U0.875\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\004....\376\003\000\000\002\376U0.9375\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\005.....\376\003\000\000\002\376U0"
".96875\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\006......\376\003\000\000\002\376U0.984375\000\376\377\016\376\377\016");
lf[1014]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[1015]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[1016]=C_decode_literal(C_heaptop,"\376B\000\000\001t");
lf[1017]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[1018]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[1019]=C_decode_literal(C_heaptop,"\376B\000\000\001t");
lf[1020]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[1021]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376U0.015625\000\376\003\000\000\002\376B\000\000\001x\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376U0.03125\000\376\003\000\000\002\376B\000\000\001t\376\003"
"\000\000\002\376\377\001\000\000\000\001\376\377\016\376\003\000\000\002\376\003\000\000\002\376U0.0625\000\376\003\000\000\002\376B\000\000\001s\376\003\000\000\002\376\377\001\000\000\000\002\376\377\016\376\003\000\000\002\376\003\000\000\002\376U0.125\000\376\003\000\000"
"\002\376B\000\000\001e\376\003\000\000\002\376\377\001\000\000\000\003\376\377\016\376\003\000\000\002\376\003\000\000\002\376U0.25\000\376\003\000\000\002\376B\000\000\001q\376\003\000\000\002\376\377\001\000\000\000\004\376\377\016\376\003\000\000\002\376\003\000\000\002\376U0.5"
"\000\376\003\000\000\002\376B\000\000\001h\376\003\000\000\002\376\377\001\000\000\000\005\376\377\016\376\003\000\000\002\376\003\000\000\002\376\377\001\000\000\000\001\376\003\000\000\002\376B\000\000\001w\376\003\000\000\002\376\377\001\000\000\000\006\376\377\016\376\377\016");
lf[1022]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[1023]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[1024]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[1025]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376B\000\000\001c\376\003\000\000\002\376B\000\000\002bs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002df\376\003\000\000\002\376B\000\000\002cs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001d\376"
"\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002ef\376\003\000\000\002\376B\000\000\002ds\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001e\376\003\000\000\002\376B\000\000\002ff\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001"
"f\376\003\000\000\002\376B\000\000\002es\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002fs\376\003\000\000\002\376B\000\000\002gf\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001g\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000"
"\000\002af\376\003\000\000\002\376B\000\000\002gs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001a\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002bf\376\003\000\000\002\376B\000\000\002as\376\377\016\376\003\000\000\002\376\003\000\000\002"
"\376B\000\000\001b\376\003\000\000\002\376B\000\000\002cf\376\377\016\376\377\016");
lf[1026]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[1027]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[1028]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376B\000\000\00200\376\003\000\000\002\376B\000\000\0010\376\003\000\000\002\376B\000\000\0011\376\003\000\000\002\376B\000\000\0012\376\003\000\000\002\376B\000\000\0013\376\003\000\000\002\376B\000\000\0014\376\003\000\000\002\376B\000\000\0015\376\003"
"\000\000\002\376B\000\000\0016\376\003\000\000\002\376B\000\000\0017\376\003\000\000\002\376B\000\000\0018\376\003\000\000\002\376B\000\000\0019\376\377\016");
lf[1029]=C_decode_literal(C_heaptop,"\376B\000\000\001>");
lf[1030]=C_decode_literal(C_heaptop,"\376B\000\000\001<");
lf[1031]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[1032]=C_decode_literal(C_heaptop,"\376B\000\000\002cf");
lf[1033]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[1034]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[1035]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[1036]=C_h_intern(&lf[1036],15,"enable-warnings");
C_register_lf2(lf,1037,create_ptable());
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6751,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_library_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6749 */
static void C_ccall f_6751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6751,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6754,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_eval_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6752 in k6749 */
static void C_ccall f_6754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6754,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6757,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6755 in k6752 in k6749 */
static void C_ccall f_6757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6757,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6760,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_6760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6760,2,t0,t1);}
t2=C_mutate((C_word*)lf[0]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6762,a[2]=((C_word)li0),tmp=(C_word)a,a+=3,tmp));
t3=C_set_block_item(lf[2],0,C_fix(1073741823));
t4=C_set_block_item(lf[3],0,C_fix(-1073741823));
t5=C_mutate((C_word*)lf[4]+1,lf[5]);
t6=C_mutate((C_word*)lf[6]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6782,a[2]=((C_word)li1),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[7]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6792,a[2]=((C_word)li2),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[10]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6798,a[2]=((C_word)li3),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[12]+1,C_retrieve(lf[13]));
t10=C_mutate((C_word*)lf[14]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6805,a[2]=((C_word)li4),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[16],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6811,a[2]=((C_word)li5),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6873,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 12   enable-warnings");
t13=C_retrieve(lf[1036]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t12,C_SCHEME_FALSE);}

/* k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_6873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word t77;
C_word t78;
C_word t79;
C_word t80;
C_word t81;
C_word t82;
C_word t83;
C_word t84;
C_word t85;
C_word t86;
C_word t87;
C_word t88;
C_word t89;
C_word t90;
C_word t91;
C_word t92;
C_word t93;
C_word t94;
C_word t95;
C_word t96;
C_word t97;
C_word t98;
C_word t99;
C_word t100;
C_word t101;
C_word t102;
C_word t103;
C_word t104;
C_word t105;
C_word t106;
C_word t107;
C_word t108;
C_word t109;
C_word t110;
C_word t111;
C_word t112;
C_word t113;
C_word t114;
C_word t115;
C_word t116;
C_word t117;
C_word t118;
C_word t119;
C_word t120;
C_word t121;
C_word t122;
C_word t123;
C_word t124;
C_word t125;
C_word t126;
C_word t127;
C_word t128;
C_word t129;
C_word t130;
C_word t131;
C_word t132;
C_word t133;
C_word t134;
C_word t135;
C_word t136;
C_word t137;
C_word t138;
C_word t139;
C_word t140;
C_word t141;
C_word t142;
C_word t143;
C_word t144;
C_word t145;
C_word t146;
C_word t147;
C_word t148;
C_word t149;
C_word t150;
C_word t151;
C_word t152;
C_word t153;
C_word t154;
C_word t155;
C_word t156;
C_word t157;
C_word t158;
C_word t159;
C_word t160;
C_word t161;
C_word t162;
C_word t163;
C_word t164;
C_word t165;
C_word t166;
C_word t167;
C_word t168;
C_word t169;
C_word t170;
C_word t171;
C_word t172;
C_word t173;
C_word t174;
C_word t175;
C_word t176;
C_word t177;
C_word t178;
C_word t179;
C_word t180;
C_word t181;
C_word t182;
C_word t183;
C_word t184;
C_word t185;
C_word t186;
C_word t187;
C_word t188;
C_word t189;
C_word t190;
C_word t191;
C_word t192;
C_word t193;
C_word t194;
C_word t195;
C_word t196;
C_word t197;
C_word t198;
C_word t199;
C_word t200;
C_word t201;
C_word t202;
C_word t203;
C_word t204;
C_word t205;
C_word t206;
C_word t207;
C_word t208;
C_word t209;
C_word t210;
C_word t211;
C_word t212;
C_word t213;
C_word t214;
C_word t215;
C_word t216;
C_word t217;
C_word t218;
C_word t219;
C_word t220;
C_word t221;
C_word t222;
C_word t223;
C_word ab[906],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6873,2,t0,t1);}
t2=C_mutate(&lf[19],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6892,a[2]=((C_word)li6),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[21],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6948,a[2]=((C_word)li7),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[22],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7002,a[2]=((C_word)li8),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[23],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7009,a[2]=((C_word)li9),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[24],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7020,a[2]=((C_word)li10),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[25],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7035,a[2]=((C_word)li11),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[26],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7042,a[2]=((C_word)li12),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[27],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7049,a[2]=((C_word)li13),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[28],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7068,a[2]=((C_word)li14),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[29],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7087,a[2]=((C_word)li15),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[30],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7108,a[2]=((C_word)li16),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[31],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7111,a[2]=((C_word)li17),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[32],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7118,a[2]=((C_word)li18),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[33],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7147,a[2]=((C_word)li19),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[34],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7150,a[2]=((C_word)li20),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[35],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7153,a[2]=((C_word)li21),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[36],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7156,a[2]=((C_word)li22),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[37],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7167,a[2]=((C_word)li23),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[38],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7185,a[2]=((C_word)li24),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[39],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7192,a[2]=((C_word)li25),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[40],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7195,a[2]=((C_word)li26),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[41],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7202,a[2]=((C_word)li27),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[42],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7205,a[2]=((C_word)li28),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[43],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7236,a[2]=((C_word)li29),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[44],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7256,a[2]=((C_word)li30),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[45],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7350,a[2]=((C_word)li31),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[47],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7499,a[2]=((C_word)li32),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[48]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7616,a[2]=((C_word)li33),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[49]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7622,a[2]=((C_word)li34),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[50]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7628,a[2]=((C_word)li35),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[51]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7659,a[2]=((C_word)li36),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[52]+1,*((C_word*)lf[53]+1));
t34=C_mutate((C_word*)lf[54]+1,*((C_word*)lf[55]+1));
t35=C_mutate((C_word*)lf[56]+1,*((C_word*)lf[57]+1));
t36=C_mutate((C_word*)lf[58]+1,*((C_word*)lf[59]+1));
t37=C_mutate((C_word*)lf[60]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7669,a[2]=((C_word)li37),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[61]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7679,a[2]=((C_word)li38),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[62]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7689,a[2]=((C_word)li39),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate((C_word*)lf[63]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7699,a[2]=((C_word)li40),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[64]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7709,a[2]=((C_word)li41),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[65]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7723,a[2]=((C_word)li42),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate((C_word*)lf[66]+1,*((C_word*)lf[67]+1));
t44=C_mutate((C_word*)lf[68]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7738,a[2]=((C_word)li43),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate((C_word*)lf[69]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7744,a[2]=((C_word)li44),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[70]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7767,a[2]=((C_word)li45),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate((C_word*)lf[71]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7815,a[2]=((C_word)li46),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate((C_word*)lf[72]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7905,a[2]=((C_word)li49),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate((C_word*)lf[73]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8067,a[2]=((C_word)li52),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate(&lf[76],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8166,a[2]=((C_word)li54),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate(&lf[77],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8284,a[2]=((C_word)li55),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate(&lf[78],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8370,a[2]=((C_word)li57),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[85]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8444,a[2]=((C_word)li60),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate((C_word*)lf[90]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8488,a[2]=((C_word)li63),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate(&lf[91],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8538,a[2]=((C_word)li64),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate(&lf[92],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8544,a[2]=((C_word)li65),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate(&lf[93],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8556,a[2]=((C_word)li66),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate(&lf[94],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8568,a[2]=((C_word)li67),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate(&lf[95],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8580,a[2]=((C_word)li68),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate(&lf[96],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8592,a[2]=((C_word)li69),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate(&lf[97],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8598,a[2]=((C_word)li70),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate(&lf[98],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8604,a[2]=((C_word)li71),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate(&lf[99],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8616,a[2]=((C_word)li72),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate(&lf[100],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8628,a[2]=((C_word)li73),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate(&lf[101],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8640,a[2]=((C_word)li75),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate(&lf[111],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8791,a[2]=((C_word)li78),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate(&lf[113],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8862,a[2]=((C_word)li79),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate(&lf[114],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8868,a[2]=((C_word)li80),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate(&lf[115],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8874,a[2]=((C_word)li81),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate(&lf[116],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8880,a[2]=((C_word)li85),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate(&lf[127],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9040,a[2]=((C_word)li86),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate(&lf[135],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9122,a[2]=((C_word)li88),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate(&lf[173],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9504,a[2]=((C_word)li91),tmp=(C_word)a,a+=3,tmp));
t74=C_mutate(&lf[176],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9551,a[2]=((C_word)li93),tmp=(C_word)a,a+=3,tmp));
t75=C_mutate(&lf[199],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9902,a[2]=((C_word)li95),tmp=(C_word)a,a+=3,tmp));
t76=C_mutate(&lf[207],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10044,a[2]=((C_word)li97),tmp=(C_word)a,a+=3,tmp));
t77=C_mutate(&lf[222],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10237,a[2]=((C_word)li99),tmp=(C_word)a,a+=3,tmp));
t78=C_mutate(&lf[225],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10304,a[2]=((C_word)li100),tmp=(C_word)a,a+=3,tmp));
t79=C_mutate(&lf[228],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10342,a[2]=((C_word)li101),tmp=(C_word)a,a+=3,tmp));
t80=C_mutate(&lf[231],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10501,a[2]=((C_word)li107),tmp=(C_word)a,a+=3,tmp));
t81=C_mutate(&lf[262],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11047,a[2]=((C_word)li108),tmp=(C_word)a,a+=3,tmp));
t82=C_mutate(&lf[264],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11053,a[2]=((C_word)li109),tmp=(C_word)a,a+=3,tmp));
t83=C_mutate(&lf[270],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11119,a[2]=((C_word)li110),tmp=(C_word)a,a+=3,tmp));
t84=C_mutate(&lf[276],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11210,a[2]=((C_word)li111),tmp=(C_word)a,a+=3,tmp));
t85=C_mutate(&lf[279],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11311,a[2]=((C_word)li115),tmp=(C_word)a,a+=3,tmp));
t86=C_mutate(&lf[286],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11442,a[2]=((C_word)li120),tmp=(C_word)a,a+=3,tmp));
t87=(C_word)C_a_i_list(&a,3,lf[208],C_retrieve2(lf[207],"parse-with"),C_SCHEME_FALSE);
t88=(C_word)C_a_i_list(&a,3,lf[105],C_retrieve2(lf[228],"parse-initially"),C_SCHEME_FALSE);
t89=(C_word)C_a_i_list(&a,3,lf[293],C_retrieve2(lf[173],"parse-repeat"),lf[294]);
t90=(C_word)C_a_i_list(&a,2,lf[151],C_retrieve2(lf[135],"parse-numerical-for"));
t91=(C_word)C_a_i_list(&a,2,lf[141],C_retrieve2(lf[135],"parse-numerical-for"));
t92=(C_word)C_a_i_list(&a,2,lf[147],C_retrieve2(lf[135],"parse-numerical-for"));
t93=(C_word)C_a_i_list(&a,2,lf[158],C_retrieve2(lf[135],"parse-numerical-for"));
t94=(C_word)C_a_i_list(&a,2,lf[143],C_retrieve2(lf[135],"parse-numerical-for"));
t95=(C_word)C_a_i_list(&a,2,lf[150],C_retrieve2(lf[135],"parse-numerical-for"));
t96=(C_word)C_a_i_list(&a,2,lf[186],C_retrieve2(lf[176],"parse-sequence-iteration"));
t97=(C_word)C_a_i_list(&a,2,lf[196],C_retrieve2(lf[176],"parse-sequence-iteration"));
t98=(C_word)C_a_i_list(&a,2,lf[177],C_retrieve2(lf[176],"parse-sequence-iteration"));
t99=(C_word)C_a_i_list(&a,2,lf[200],C_retrieve2(lf[199],"parse-general-iteration"));
t100=(C_word)C_a_i_list(&a,2,lf[181],C_retrieve2(lf[176],"parse-sequence-iteration"));
t101=(C_word)C_a_i_list(&a,14,lf[137],C_retrieve2(lf[127],"parse-for"),lf[294],t90,t91,t92,t93,t94,t95,t96,t97,t98,t99,t100);
t102=(C_word)C_a_i_list(&a,3,lf[295],C_retrieve2(lf[127],"parse-for"),lf[294]);
t103=(C_word)C_a_i_list(&a,3,lf[296],C_retrieve2(lf[222],"parse-do"),lf[284]);
t104=(C_word)C_a_i_list(&a,3,lf[244],C_retrieve2(lf[231],"parse-accumulation"),lf[284]);
t105=(C_word)C_a_i_list(&a,3,lf[112],C_retrieve2(lf[231],"parse-accumulation"),lf[284]);
t106=(C_word)C_a_i_list(&a,3,lf[249],C_retrieve2(lf[231],"parse-accumulation"),lf[284]);
t107=(C_word)C_a_i_list(&a,3,lf[232],C_retrieve2(lf[231],"parse-accumulation"),lf[284]);
t108=(C_word)C_a_i_list(&a,3,lf[233],C_retrieve2(lf[231],"parse-accumulation"),lf[284]);
t109=(C_word)C_a_i_list(&a,3,lf[236],C_retrieve2(lf[231],"parse-accumulation"),lf[284]);
t110=(C_word)C_a_i_list(&a,3,lf[237],C_retrieve2(lf[231],"parse-accumulation"),lf[284]);
t111=(C_word)C_a_i_list(&a,4,lf[271],C_retrieve2(lf[270],"parse-thereis"),lf[284],C_retrieve2(lf[262],"loop-return"));
t112=(C_word)C_a_i_list(&a,4,lf[272],C_retrieve2(lf[270],"parse-thereis"),lf[284],C_retrieve2(lf[262],"loop-return"));
t113=(C_word)C_a_i_list(&a,4,lf[273],C_retrieve2(lf[270],"parse-thereis"),lf[284],C_retrieve2(lf[262],"loop-return"));
t114=(C_word)C_a_i_list(&a,4,lf[263],C_retrieve2(lf[276],"parse-return"),lf[284],C_retrieve2(lf[262],"loop-return"));
t115=(C_word)C_a_i_list(&a,3,lf[267],C_retrieve2(lf[264],"parse-while-until"),C_SCHEME_FALSE);
t116=(C_word)C_a_i_list(&a,3,lf[266],C_retrieve2(lf[264],"parse-while-until"),C_SCHEME_FALSE);
t117=(C_word)C_a_i_list(&a,3,lf[297],C_retrieve2(lf[286],"parse-conditional"),lf[284]);
t118=(C_word)C_a_i_list(&a,3,lf[289],C_retrieve2(lf[286],"parse-conditional"),lf[284]);
t119=(C_word)C_a_i_list(&a,3,lf[234],C_retrieve2(lf[286],"parse-conditional"),lf[284]);
t120=(C_word)C_a_i_list(&a,3,lf[109],C_retrieve2(lf[225],"parse-finally"),C_SCHEME_FALSE);
t121=(C_word)C_a_i_list(&a,23,t87,t88,t89,t101,t102,t103,t104,t105,t106,t107,t108,t109,t110,t111,t112,t113,t114,t115,t116,t117,t118,t119,t120);
t122=C_mutate(&lf[298],t121);
t123=C_mutate(&lf[299],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12191,a[2]=((C_word)li121),tmp=(C_word)a,a+=3,tmp));
t124=C_mutate(&lf[301],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12203,a[2]=((C_word)li122),tmp=(C_word)a,a+=3,tmp));
t125=C_mutate(&lf[303],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12212,a[2]=((C_word)li123),tmp=(C_word)a,a+=3,tmp));
t126=C_mutate(&lf[304],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12230,a[2]=((C_word)li124),tmp=(C_word)a,a+=3,tmp));
t127=C_mutate(&lf[305],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12248,a[2]=((C_word)li125),tmp=(C_word)a,a+=3,tmp));
t128=C_mutate(&lf[306],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12275,a[2]=((C_word)li126),tmp=(C_word)a,a+=3,tmp));
t129=C_mutate(&lf[307],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12284,a[2]=((C_word)li127),tmp=(C_word)a,a+=3,tmp));
t130=C_mutate(&lf[308],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12302,a[2]=((C_word)li128),tmp=(C_word)a,a+=3,tmp));
t131=C_mutate(&lf[309],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12347,a[2]=((C_word)li129),tmp=(C_word)a,a+=3,tmp));
t132=C_mutate(&lf[311],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12362,a[2]=((C_word)li130),tmp=(C_word)a,a+=3,tmp));
t133=C_mutate(&lf[312],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12371,a[2]=((C_word)li131),tmp=(C_word)a,a+=3,tmp));
t134=C_mutate(&lf[313],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12380,a[2]=((C_word)li132),tmp=(C_word)a,a+=3,tmp));
t135=C_mutate(&lf[314],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12398,a[2]=((C_word)li133),tmp=(C_word)a,a+=3,tmp));
t136=C_mutate(&lf[315],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12407,a[2]=((C_word)li134),tmp=(C_word)a,a+=3,tmp));
t137=C_mutate(&lf[316],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12416,a[2]=((C_word)li135),tmp=(C_word)a,a+=3,tmp));
t138=C_mutate(&lf[317],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12434,a[2]=((C_word)li136),tmp=(C_word)a,a+=3,tmp));
t139=C_mutate(&lf[318],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12443,a[2]=((C_word)li137),tmp=(C_word)a,a+=3,tmp));
t140=C_mutate(&lf[319],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12452,a[2]=((C_word)li138),tmp=(C_word)a,a+=3,tmp));
t141=C_mutate(&lf[320],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12461,a[2]=((C_word)li139),tmp=(C_word)a,a+=3,tmp));
t142=C_mutate(&lf[321],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12470,a[2]=((C_word)li140),tmp=(C_word)a,a+=3,tmp));
t143=C_mutate(&lf[322],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12587,a[2]=((C_word)li141),tmp=(C_word)a,a+=3,tmp));
t144=C_mutate(&lf[323],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12596,a[2]=((C_word)li142),tmp=(C_word)a,a+=3,tmp));
t145=C_mutate(&lf[324],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12655,a[2]=((C_word)li143),tmp=(C_word)a,a+=3,tmp));
t146=C_mutate(&lf[328],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12665,a[2]=((C_word)li145),tmp=(C_word)a,a+=3,tmp));
t147=C_mutate((C_word*)lf[336]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12845,a[2]=((C_word)li146),tmp=(C_word)a,a+=3,tmp));
t148=C_mutate((C_word*)lf[182]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12864,a[2]=((C_word)li147),tmp=(C_word)a,a+=3,tmp));
t149=C_mutate((C_word*)lf[184]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12883,a[2]=((C_word)li150),tmp=(C_word)a,a+=3,tmp));
t150=C_mutate(&lf[339],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13006,a[2]=((C_word)li153),tmp=(C_word)a,a+=3,tmp));
t151=C_mutate(&lf[340],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13298,a[2]=((C_word)li154),tmp=(C_word)a,a+=3,tmp));
t152=C_mutate(&lf[335],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13307,a[2]=((C_word)li155),tmp=(C_word)a,a+=3,tmp));
t153=C_mutate(&lf[341],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13353,a[2]=((C_word)li157),tmp=(C_word)a,a+=3,tmp));
t154=C_mutate((C_word*)lf[343]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13468,a[2]=((C_word)li159),tmp=(C_word)a,a+=3,tmp));
t155=C_mutate(&lf[345],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13723,a[2]=((C_word)li160),tmp=(C_word)a,a+=3,tmp));
t156=C_mutate(&lf[354],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13795,a[2]=((C_word)li161),tmp=(C_word)a,a+=3,tmp));
t157=C_mutate(&lf[356],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13804,a[2]=((C_word)li162),tmp=(C_word)a,a+=3,tmp));
t158=C_mutate((C_word*)lf[357]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13884,a[2]=((C_word)li164),tmp=(C_word)a,a+=3,tmp));
t159=C_mutate(&lf[358],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14354,a[2]=((C_word)li165),tmp=(C_word)a,a+=3,tmp));
t160=C_mutate((C_word*)lf[362]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14569,a[2]=((C_word)li167),tmp=(C_word)a,a+=3,tmp));
t161=C_mutate(&lf[363],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14816,a[2]=((C_word)li168),tmp=(C_word)a,a+=3,tmp));
t162=C_mutate((C_word*)lf[364]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14852,a[2]=((C_word)li170),tmp=(C_word)a,a+=3,tmp));
t163=C_mutate(&lf[365],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15115,a[2]=((C_word)li172),tmp=(C_word)a,a+=3,tmp));
t164=C_mutate((C_word*)lf[366]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15191,a[2]=((C_word)li174),tmp=(C_word)a,a+=3,tmp));
t165=C_mutate(&lf[367],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15665,a[2]=((C_word)li177),tmp=(C_word)a,a+=3,tmp));
t166=C_mutate(&lf[369],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15887,a[2]=((C_word)li178),tmp=(C_word)a,a+=3,tmp));
t167=C_mutate(&lf[371],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15896,a[2]=((C_word)li179),tmp=(C_word)a,a+=3,tmp));
t168=C_mutate(&lf[372],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15905,a[2]=((C_word)li180),tmp=(C_word)a,a+=3,tmp));
t169=C_mutate(&lf[373],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15923,a[2]=((C_word)li181),tmp=(C_word)a,a+=3,tmp));
t170=C_mutate(&lf[374],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15941,a[2]=((C_word)li182),tmp=(C_word)a,a+=3,tmp));
t171=C_mutate(&lf[375],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15959,a[2]=((C_word)li183),tmp=(C_word)a,a+=3,tmp));
t172=C_mutate(&lf[376],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15968,a[2]=((C_word)li184),tmp=(C_word)a,a+=3,tmp));
t173=C_mutate(&lf[377],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15977,a[2]=((C_word)li185),tmp=(C_word)a,a+=3,tmp));
t174=C_mutate((C_word*)lf[378]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16060,a[2]=((C_word)li190),tmp=(C_word)a,a+=3,tmp));
t175=C_mutate(&lf[379],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16827,a[2]=((C_word)li193),tmp=(C_word)a,a+=3,tmp));
t176=C_mutate(&lf[380],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16927,a[2]=((C_word)li198),tmp=(C_word)a,a+=3,tmp));
t177=C_mutate((C_word*)lf[386]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17360,a[2]=((C_word)li203),tmp=(C_word)a,a+=3,tmp));
t178=C_mutate(&lf[388],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17847,a[2]=((C_word)li210),tmp=(C_word)a,a+=3,tmp));
t179=C_mutate(&lf[397],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18187,a[2]=((C_word)li211),tmp=(C_word)a,a+=3,tmp));
t180=C_mutate((C_word*)lf[399]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18250,a[2]=((C_word)li216),tmp=(C_word)a,a+=3,tmp));
t181=C_mutate(&lf[400],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18768,a[2]=((C_word)li218),tmp=(C_word)a,a+=3,tmp));
t182=C_mutate((C_word*)lf[406]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18862,a[2]=((C_word)li242),tmp=(C_word)a,a+=3,tmp));
t183=C_mutate((C_word*)lf[432]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19909,a[2]=((C_word)li244),tmp=(C_word)a,a+=3,tmp));
t184=C_mutate((C_word*)lf[433]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19943,a[2]=((C_word)li247),tmp=(C_word)a,a+=3,tmp));
t185=C_mutate((C_word*)lf[436]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20054,a[2]=((C_word)li248),tmp=(C_word)a,a+=3,tmp));
t186=C_mutate((C_word*)lf[437]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20069,a[2]=((C_word)li250),tmp=(C_word)a,a+=3,tmp));
t187=C_mutate((C_word*)lf[440]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20090,a[2]=((C_word)li251),tmp=(C_word)a,a+=3,tmp));
t188=C_mutate((C_word*)lf[441]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20096,a[2]=((C_word)li252),tmp=(C_word)a,a+=3,tmp));
t189=C_mutate((C_word*)lf[442]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20102,a[2]=((C_word)li254),tmp=(C_word)a,a+=3,tmp));
t190=C_mutate((C_word*)lf[443]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20171,a[2]=((C_word)li256),tmp=(C_word)a,a+=3,tmp));
t191=C_mutate((C_word*)lf[444]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20240,a[2]=((C_word)li258),tmp=(C_word)a,a+=3,tmp));
t192=C_mutate((C_word*)lf[445]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20283,a[2]=((C_word)li260),tmp=(C_word)a,a+=3,tmp));
t193=C_mutate((C_word*)lf[447]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20326,a[2]=((C_word)li262),tmp=(C_word)a,a+=3,tmp));
t194=C_mutate((C_word*)lf[424]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20347,a[2]=((C_word)li264),tmp=(C_word)a,a+=3,tmp));
t195=C_mutate((C_word*)lf[451]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20387,a[2]=((C_word)li266),tmp=(C_word)a,a+=3,tmp));
t196=C_mutate((C_word*)lf[456]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20623,a[2]=((C_word)li267),tmp=(C_word)a,a+=3,tmp));
t197=C_mutate((C_word*)lf[457]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20638,a[2]=((C_word)li268),tmp=(C_word)a,a+=3,tmp));
t198=C_mutate(&lf[458],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20653,a[2]=((C_word)li270),tmp=(C_word)a,a+=3,tmp));
t199=C_mutate((C_word*)lf[463]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20739,a[2]=((C_word)li271),tmp=(C_word)a,a+=3,tmp));
t200=C_mutate((C_word*)lf[465]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20785,a[2]=((C_word)li272),tmp=(C_word)a,a+=3,tmp));
t201=C_mutate((C_word*)lf[467]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20852,a[2]=((C_word)li275),tmp=(C_word)a,a+=3,tmp));
t202=C_mutate((C_word*)lf[470]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20985,a[2]=((C_word)li277),tmp=(C_word)a,a+=3,tmp));
t203=C_mutate((C_word*)lf[472]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21092,a[2]=((C_word)li281),tmp=(C_word)a,a+=3,tmp));
t204=C_mutate((C_word*)lf[475]+1,C_retrieve2(lf[30],"ffi_ranseed"));
t205=C_mutate((C_word*)lf[466]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21300,a[2]=((C_word)li282),tmp=(C_word)a,a+=3,tmp));
t206=C_mutate((C_word*)lf[476]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21335,a[2]=((C_word)li283),tmp=(C_word)a,a+=3,tmp));
t207=C_mutate((C_word*)lf[477]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21356,a[2]=((C_word)li284),tmp=(C_word)a,a+=3,tmp));
t208=C_mutate((C_word*)lf[478]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21627,a[2]=((C_word)li287),tmp=(C_word)a,a+=3,tmp));
t209=C_mutate((C_word*)lf[481]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21726,a[2]=((C_word)li289),tmp=(C_word)a,a+=3,tmp));
t210=C_mutate((C_word*)lf[482]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21781,a[2]=((C_word)li290),tmp=(C_word)a,a+=3,tmp));
t211=C_mutate((C_word*)lf[483]+1,C_retrieve2(lf[33],"ffi_ranlow"));
t212=C_mutate((C_word*)lf[484]+1,C_retrieve2(lf[34],"ffi_ranhigh"));
t213=C_mutate((C_word*)lf[485]+1,C_retrieve2(lf[35],"ffi_ranmiddle"));
t214=C_mutate((C_word*)lf[486]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21823,a[2]=((C_word)li291),tmp=(C_word)a,a+=3,tmp));
t215=C_mutate((C_word*)lf[490]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22051,a[2]=((C_word)li292),tmp=(C_word)a,a+=3,tmp));
t216=C_mutate((C_word*)lf[491]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22070,a[2]=((C_word)li293),tmp=(C_word)a,a+=3,tmp));
t217=C_mutate((C_word*)lf[492]+1,C_retrieve2(lf[39],"ffi_rancauchy"));
t218=C_mutate((C_word*)lf[493]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22111,a[2]=((C_word)li294),tmp=(C_word)a,a+=3,tmp));
t219=C_mutate((C_word*)lf[494]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22130,a[2]=((C_word)li295),tmp=(C_word)a,a+=3,tmp));
t220=C_mutate((C_word*)lf[495]+1,C_retrieve2(lf[42],"ffi_ranbrown"));
t221=C_mutate((C_word*)lf[496]+1,C_retrieve2(lf[41],"ffi_ranpink"));
t222=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22153,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 17   make-equal-hash-table");
t223=C_retrieve(lf[7]);
((C_proc2)C_retrieve_proc(t223))(2,t223,t222);}

/* k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22153,2,t0,t1);}
t2=C_mutate(&lf[497],t1);
t3=C_SCHEME_END_OF_LIST;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22156,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44521,a[2]=t7,a[3]=t4,a[4]=((C_word)li590),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_44521(t9,t5,C_fix(0));}

/* do3277 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_44521(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_44521,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(128)))){
t3=(C_word)C_a_i_list(&a,5,lf[1022],C_fix(-1),lf[1023],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44534,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   hash-set!");
t5=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_retrieve2(lf[497],"*notes*"),lf[1024],t3);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_44747,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 17   modulo");
t4=*((C_word*)lf[428]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(12));}}

/* k44745 in do3277 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44747,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[1025],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44544,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44555,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 17   modulo");
t6=*((C_word*)lf[428]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t0)[4],C_fix(12));}

/* k44553 in k44745 in do3277 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44555,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],lf[1026]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],lf[1027]);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_44567,a[2]=t3,a[3]=t2,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 17   ffi_keynum_to_hertz");
f_7087(t4,((C_word*)t0)[4]);}

/* k44565 in k44553 in k44745 in do3277 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44567,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_44571,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],lf[1035]);
C_trace("ChickenBridge.scm: 17   ffi_keynum_to_hertz");
f_7087(t2,t3);}

/* k44569 in k44565 in k44553 in k44745 in do3277 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44571,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_44575,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],lf[1034]);
C_trace("ChickenBridge.scm: 17   ffi_keynum_to_hertz");
f_7087(t2,t3);}

/* k44573 in k44569 in k44565 in k44553 in k44745 in do3277 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44575,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_44731,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_a_i_divide(&a,2,((C_word*)t0)[8],C_fix(12));
C_trace("ChickenBridge.scm: 17   floor");
t4=*((C_word*)lf[506]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k44729 in k44573 in k44569 in k44565 in k44553 in k44745 in do3277 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44731,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_44581,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=t4,a[5]=((C_word)li589),tmp=(C_word)a,a+=6,tmp));
t6=((C_word*)t4)[1];
f_44581(t6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do3283 in k44729 in k44573 in k44569 in k44565 in k44553 in k44745 in do3277 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_44581(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13){
C_word tmp;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[41],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_44581,NULL,14,t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}
t14=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t18=t1;
((C_proc2)(void*)(*((C_word*)t18+1)))(2,t18,C_SCHEME_FALSE);}
else{
t18=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_44591,a[2]=t17,a[3]=t16,a[4]=t15,a[5]=t14,a[6]=t9,a[7]=t8,a[8]=t7,a[9]=t6,a[10]=t5,a[11]=t4,a[12]=t3,a[13]=t1,a[14]=((C_word*)t0)[4],a[15]=t2,tmp=(C_word)a,a+=16,tmp);
t19=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_44601,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t8,a[6]=t6,a[7]=t9,a[8]=t5,a[9]=t17,a[10]=t4,a[11]=t7,a[12]=t3,a[13]=t16,a[14]=t15,a[15]=t14,a[16]=t18,tmp=(C_word)a,a+=17,tmp);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(0)))){
t20=(C_word)C_i_car(t2);
t21=t19;
f_44601(t21,(C_word)C_i_string_equal_p(t20,lf[1033]));}
else{
t20=t19;
f_44601(t20,C_SCHEME_FALSE);}}}

/* k44599 in do3283 in k44729 in k44573 in k44569 in k44565 in k44553 in k44745 in do3277 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_44601(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_44601,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[16];
f_44591(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_44604,a[2]=((C_word*)t0)[16],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[15],tmp=(C_word)a,a+=17,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_string_equal_p(t3,lf[1031]))){
t4=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[15])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[15])+1,t4);
t6=t2;
f_44604(t6,t5);}
else{
t4=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_string_equal_p(t4,lf[1032]))){
t5=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[15])[1],C_fix(1));
t6=C_mutate(((C_word *)((C_word*)t0)[15])+1,t5);
t7=t2;
f_44604(t7,t6);}
else{
t5=t2;
f_44604(t5,C_SCHEME_UNDEFINED);}}}}

/* k44602 in k44599 in do3283 in k44729 in k44573 in k44569 in k44565 in k44553 in k44745 in do3277 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_44604(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_44604,NULL,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[1028],((C_word*)((C_word*)t0)[16])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[15])+1,t2);
t4=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_44612,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[15],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],tmp=(C_word)a,a+=16,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 17   string-append");
t6=*((C_word*)lf[417]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[15])[1]);}

/* k44610 in k44602 in k44599 in do3283 in k44729 in k44573 in k44569 in k44565 in k44553 in k44745 in do3277 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44612,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[15])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[15])[1],((C_word*)t0)[14],((C_word*)t0)[13],((C_word*)t0)[12],((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[10])+1,t3);
t5=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_44619,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[15],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 17   hash-set!");
t6=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[497],"*notes*"),((C_word*)((C_word*)t0)[15])[1],((C_word*)((C_word*)t0)[10])[1]);}

/* k44617 in k44610 in k44602 in k44599 in do3283 in k44729 in k44573 in k44569 in k44565 in k44553 in k44745 in do3277 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44619,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_44622,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 17   hash-set!");
t4=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[497],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[9])[1]);}
else{
t4=t2;
f_44622(2,t4,C_SCHEME_UNDEFINED);}}

/* k44620 in k44617 in k44610 in k44602 in k44599 in do3283 in k44729 in k44573 in k44569 in k44565 in k44553 in k44745 in do3277 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44622,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_44626,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 17   string-append");
t4=*((C_word*)lf[417]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[1030],((C_word*)((C_word*)t0)[9])[1]);}

/* k44624 in k44620 in k44617 in k44610 in k44602 in k44599 in do3283 in k44729 in k44573 in k44569 in k44565 in k44553 in k44745 in do3277 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44626,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[12])[1],((C_word*)t0)[11],((C_word*)t0)[10],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_44633,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 17   hash-set!");
t6=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[497],"*notes*"),((C_word*)((C_word*)t0)[12])[1],((C_word*)((C_word*)t0)[8])[1]);}

/* k44631 in k44624 in k44620 in k44617 in k44610 in k44602 in k44599 in do3283 in k44729 in k44573 in k44569 in k44565 in k44553 in k44745 in do3277 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44633,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_44636,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(1));
t5=(C_word)C_a_i_plus(&a,2,t4,C_fix(1000));
C_trace("ChickenBridge.scm: 17   hash-set!");
t6=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t2,C_retrieve2(lf[497],"*notes*"),t5,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=t2;
f_44636(2,t4,C_SCHEME_UNDEFINED);}}

/* k44634 in k44631 in k44624 in k44620 in k44617 in k44610 in k44602 in k44599 in do3283 in k44729 in k44573 in k44569 in k44565 in k44553 in k44745 in do3277 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44636,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_44640,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 17   string-append");
t4=*((C_word*)lf[417]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[1029],((C_word*)((C_word*)t0)[7])[1]);}

/* k44638 in k44634 in k44631 in k44624 in k44620 in k44617 in k44610 in k44602 in k44599 in do3283 in k44729 in k44573 in k44569 in k44565 in k44553 in k44745 in do3277 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44640,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)t0)[8],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_44647,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 17   hash-set!");
t6=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[497],"*notes*"),((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* k44645 in k44638 in k44634 in k44631 in k44624 in k44620 in k44617 in k44610 in k44602 in k44599 in do3283 in k44729 in k44573 in k44569 in k44565 in k44553 in k44745 in do3277 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44647,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);
if(C_truep(t2)){
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1000));
C_trace("ChickenBridge.scm: 17   hash-set!");
t4=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[3],C_retrieve2(lf[497],"*notes*"),t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=((C_word*)t0)[3];
f_44591(2,t3,C_SCHEME_UNDEFINED);}}

/* k44589 in do3283 in k44729 in k44573 in k44569 in k44565 in k44553 in k44745 in do3277 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[15]);
t3=((C_word*)((C_word*)t0)[14])[1];
f_44581(t3,((C_word*)t0)[13],t2,((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)t0)[10],((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k44542 in k44745 in do3277 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44544,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_44521(t3,((C_word*)t0)[2],t2);}

/* k44532 in do3277 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44534,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44537,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 17   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve2(lf[497],"*notes*"),C_fix(-1),((C_word*)t0)[2]);}

/* k44535 in k44532 in do3277 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}

/* k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22156,2,t0,t1);}
t2=C_mutate(&lf[498],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22158,a[2]=((C_word)li296),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[501],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22257,a[2]=((C_word)li297),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[510]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22310,a[2]=((C_word)li299),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[87]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22407,a[2]=((C_word)li301),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[513]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22529,a[2]=((C_word)li303),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[515]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22645,a[2]=((C_word)li304),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[516]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22690,a[2]=((C_word)li308),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[519]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22825,a[2]=((C_word)li312),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[521]+1,*((C_word*)lf[126]+1));
t11=C_mutate((C_word*)lf[522]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22991,a[2]=((C_word)li315),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[524]+1,lf[525]);
t13=C_mutate((C_word*)lf[526]+1,lf[527]);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23137,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 17   make-equal-hash-table");
t15=C_retrieve(lf[7]);
((C_proc2)C_retrieve_proc(t15))(2,t15,t14);}

/* k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23137,2,t0,t1);}
t2=C_mutate(&lf[528],t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23138,a[2]=((C_word)li316),tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23143,a[2]=((C_word)li317),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23157,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44426,a[2]=t3,a[3]=t4,a[4]=((C_word)li588),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t7=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t5,t6,lf[1021]);}

/* a44425 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44426(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_44426,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_i_caddr(t2);
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_44439,a[2]=t1,a[3]=t4,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=t3,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 17   addryth");
f_23143(t6,t4,t3);}

/* k44437 in a44425 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44439,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_44442,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44515,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 17   rsym");
f_23138(t3,lf[1019],((C_word*)t0)[3],lf[1020]);}

/* k44513 in k44437 in a44425 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44515,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[4],lf[1018]);
C_trace("ChickenBridge.scm: 17   addryth");
f_23143(((C_word*)t0)[2],t1,t2);}

/* k44440 in k44437 in a44425 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44442,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_44447,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word*)t0)[7],a[8]=((C_word)li587),tmp=(C_word)a,a+=9,tmp));
t5=((C_word*)t3)[1];
f_44447(t5,((C_word*)t0)[2],C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do3428 in k44440 in k44437 in a44425 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_44447(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_44447,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[7]))){
t9=(C_word)C_i_list_ref(lf[1013],t2);
t10=C_set_block_item(t6,0,t9);
t11=(C_word)C_i_car(((C_word*)t6)[1]);
t12=C_set_block_item(t7,0,t11);
t13=(C_word)C_i_cadr(((C_word*)t6)[1]);
t14=C_set_block_item(t8,0,t13);
t15=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_44469,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t8,a[7]=t7,a[8]=t6,a[9]=t1,a[10]=((C_word*)t0)[6],a[11]=t2,tmp=(C_word)a,a+=12,tmp);
t16=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_44499,a[2]=t15,a[3]=((C_word*)t0)[4],a[4]=t8,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 17   rsym");
f_23138(t16,lf[1017],((C_word*)t0)[2],((C_word*)t7)[1]);}
else{
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,C_SCHEME_FALSE);}}

/* k44497 in do3428 in k44440 in k44437 in a44425 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44499,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],t2);
C_trace("ChickenBridge.scm: 17   addryth");
f_23143(((C_word*)t0)[2],t1,t3);}

/* k44467 in do3428 in k44440 in k44437 in a44425 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44469,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_44472,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_44483,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 17   rsym");
f_23138(t3,lf[1016],((C_word*)t0)[2],((C_word*)((C_word*)t0)[7])[1]);}

/* k44481 in k44467 in do3428 in k44440 in k44437 in a44425 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44483,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],lf[1014]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_44495,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 17   *");
C_times(5,0,t3,((C_word*)t0)[5],lf[1015],((C_word*)((C_word*)t0)[2])[1]);}

/* k44493 in k44481 in k44467 in do3428 in k44440 in k44437 in a44425 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44495,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],t1);
C_trace("ChickenBridge.scm: 17   addryth");
f_23143(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k44470 in k44467 in do3428 in k44440 in k44437 in a44425 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44472,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t3=((C_word*)((C_word*)t0)[6])[1];
f_44447(t3,((C_word*)t0)[5],t2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word ab[108],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23157,2,t0,t1);}
t2=C_mutate((C_word*)lf[530]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23159,a[2]=((C_word)li322),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[539]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23475,a[2]=((C_word)li323),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[540]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23497,a[2]=((C_word)li324),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[541]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23503,a[2]=((C_word)li325),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[542],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24351,a[2]=((C_word)li326),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[545],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24393,a[2]=((C_word)li327),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[547],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24438,a[2]=((C_word)li328),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[549],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24444,a[2]=((C_word)li329),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[550]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24459,a[2]=((C_word)li330),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[551],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24468,a[2]=((C_word)li331),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[552]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24477,a[2]=((C_word)li332),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[553],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24486,a[2]=((C_word)li333),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[554]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24495,a[2]=((C_word)li334),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[555],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24504,a[2]=((C_word)li335),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[556]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24513,a[2]=((C_word)li336),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[557]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24522,a[2]=((C_word)li337),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[558]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24560,a[2]=((C_word)li339),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[560]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24619,a[2]=((C_word)li340),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[561]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24629,a[2]=((C_word)li341),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[562]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24647,a[2]=((C_word)li343),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[564]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24678,a[2]=((C_word)li345),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[566]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24939,a[2]=((C_word)li355),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[574]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26412,a[2]=((C_word)li360),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[578]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26818,a[2]=((C_word)li362),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[579]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26997,a[2]=((C_word)li370),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[584]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27209,a[2]=((C_word)li372),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[585]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27266,a[2]=((C_word)li382),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[592]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27779,a[2]=((C_word)li389),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[604]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27905,a[2]=((C_word)li394),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[616],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28101,a[2]=((C_word)li395),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[618],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28122,a[2]=((C_word)li396),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[619],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28158,a[2]=((C_word)li397),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[620],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28167,a[2]=((C_word)li398),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[622],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28190,a[2]=((C_word)li399),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[623],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28202,a[2]=((C_word)li400),tmp=(C_word)a,a+=3,tmp));
t37=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28210,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-eq-hash-table");
t38=C_retrieve(lf[10]);
((C_proc2)C_retrieve_proc(t38))(2,t38,t37);}

/* k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word ab[105],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28210,2,t0,t1);}
t2=C_mutate(&lf[624],t1);
t3=C_mutate(&lf[625],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28212,a[2]=((C_word)li401),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[627],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28314,a[2]=((C_word)li402),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[319],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28332,a[2]=((C_word)li403),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[629],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28335,a[2]=((C_word)li404),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[630],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28347,a[2]=((C_word)li405),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[631],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28353,a[2]=((C_word)li406),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[632],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28363,a[2]=((C_word)li407),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[633],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28421,a[2]=((C_word)li408),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[634],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28453,a[2]=((C_word)li409),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[636],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28501,a[2]=((C_word)li410),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[638],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28507,a[2]=((C_word)li411),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[639],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28522,a[2]=((C_word)li412),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[640],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28540,a[2]=((C_word)li413),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[641],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28558,a[2]=((C_word)li414),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[642],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28567,a[2]=((C_word)li415),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[644],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28583,a[2]=((C_word)li416),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[646],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28615,a[2]=((C_word)li417),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[647],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28627,a[2]=((C_word)li418),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[648],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28694,a[2]=((C_word)li419),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[650],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28712,a[2]=((C_word)li420),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[655],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28745,a[2]=((C_word)li421),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[658]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28776,a[2]=((C_word)li422),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[659],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28953,a[2]=((C_word)li424),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[660],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28961,a[2]=((C_word)li427),tmp=(C_word)a,a+=3,tmp));
t27=lf[661]=C_SCHEME_FALSE;;
t28=C_mutate(&lf[662],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29065,a[2]=((C_word)li441),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[643],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29684,a[2]=((C_word)li442),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[654],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29732,a[2]=((C_word)li443),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[657],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29834,a[2]=((C_word)li444),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[645],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29846,a[2]=((C_word)li445),tmp=(C_word)a,a+=3,tmp));
t33=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29867,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t34=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44404,a[2]=t33,tmp=(C_word)a,a+=3,tmp);
t35=(C_word)C_a_i_cons(&a,2,C_fix(3072),C_SCHEME_END_OF_LIST);
t36=(C_word)C_a_i_cons(&a,2,C_fix(3328),t35);
t37=(C_word)C_a_i_cons(&a,2,C_fix(2816),t36);
t38=(C_word)C_a_i_cons(&a,2,lf[238],t37);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t34,lf[1012],C_fix(25856),t38,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k44402 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(25856),t1);}

/* k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29867,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29870,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44384,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[238],t5);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t3,lf[1011],C_fix(26112),t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k44382 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(26112),t1);}

/* k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29870,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29873,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44344,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(3840),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(3072),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(3328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(2816),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[238],t10);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t3,lf[1010],C_fix(26368),t11,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k44342 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(26368),t1);}

/* k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29873,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29876,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44234,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26880),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[387],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1280),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(1024),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[214],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44240,a[2]=((C_word)li585),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44250,a[2]=((C_word)li586),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t3,lf[1009],C_fix(26624),t9,t10,t11);}

/* a44249 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44250(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_44250,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_44254,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   get-emit-info");
f_28615(t5,lf[1003],t3);}

/* k44252 in a44249 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44254,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_44257,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28540(t2,((C_word*)t0)[2]);}

/* k44255 in k44252 in a44249 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44257,2,t0,t1);}
t2=((C_word*)t0)[5];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 19   emit");
f_28712(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_nullp(t1))){
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,1,lf[241]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_44275,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   add-emit-info");
f_28627(t3,lf[1003],C_SCHEME_TRUE,((C_word*)t0)[3]);}}}

/* k44273 in k44255 in k44252 in a44249 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44275,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44278,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k44276 in k44273 in k44255 in k44252 in a44249 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44278,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44281,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44309,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   get-emit-info");
f_28615(t5,lf[1003],((C_word*)t0)[2]);}

/* k44307 in k44276 in k44273 in k44255 in k44252 in a44249 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44309,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[1004]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,2,lf[1008],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_44281(t5,t4);}
else{
t3=(C_word)C_a_i_list(&a,2,lf[187],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_44281(t5,t4);}}

/* k44279 in k44276 in k44273 in k44255 in k44252 in a44249 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_44281(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_44281,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44287,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   get-emit-info");
f_28615(t2,lf[969],((C_word*)t0)[2]);}

/* k44285 in k44279 in k44276 in k44273 in k44255 in k44252 in a44249 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44287,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,lf[241]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[112],((C_word*)((C_word*)t0)[2])[1],t2));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* a44239 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44240(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_44240,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28501(t1,C_fix(26624),t4,C_SCHEME_FALSE);}

/* k44232 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(26624),t1);}

/* k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29876,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29879,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44130,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(5632),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(5376),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[238],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[214],t8);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44138,a[2]=t9,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   simple-unit-parser");
f_28953(t10,C_fix(27648));}

/* k44136 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44138,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44140,a[2]=((C_word)li584),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(((C_word*)t0)[3],lf[1007],C_fix(27648),((C_word*)t0)[2],t1,t2);}

/* a44139 in k44136 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44140(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_44140,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44144,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28540(t5,t2);}

/* k44142 in a44139 in k44136 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44144,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_44147,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28583(t2,t3,C_fix(5376));}

/* k44145 in k44142 in a44139 in k44136 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44147,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_44150,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   get-emit-info");
f_28615(t2,lf[1003],((C_word*)t0)[4]);}

/* k44148 in k44145 in k44142 in a44139 in k44136 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44150,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_44153,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t1)){
t3=t2;
f_44153(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44186,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_truep(((C_word*)t0)[5])?lf[1005]:lf[1006]);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44194,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 19   parse-unit-position");
f_28558(t5,t6);}}

/* k44192 in k44148 in k44145 in k44142 in a44139 in k44136 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-parse-error");
f_28453(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k44184 in k44148 in k44145 in k44142 in a44139 in k44136 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k44151 in k44148 in k44145 in k44142 in a44139 in k44136 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44153,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44156,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44176,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=lf[1003];
t6=((C_word*)t0)[4];
t7=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_set_block_item(t11,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28646,a[2]=t9,a[3]=t5,a[4]=t11,a[5]=t7,a[6]=((C_word)li583),tmp=(C_word)a,a+=7,tmp));
t13=((C_word*)t11)[1];
f_28646(t13,t4,t6);}

/* do4486 in k44151 in k44148 in k44145 in k44142 in a44139 in k44136 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28646(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28646,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28659,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28692,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t3,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   caar");
t5=*((C_word*)lf[575]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}

/* k28690 in do4486 in k44151 in k44148 in k44145 in k44142 in a44139 in k44136 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28692,2,t0,t1);}
t2=(C_word)C_eqp(t1,((C_word*)t0)[5]);
if(C_truep(t2)){
t3=((C_word*)t0)[4];
f_28659(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=((C_word*)t0)[4];
f_28659(t8,t7);}}

/* k28657 in do4486 in k44151 in k44148 in k44145 in k44142 in a44139 in k44136 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28659(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_28646(t3,((C_word*)t0)[2],t2);}

/* k44174 in k44151 in k44148 in k44145 in k44142 in a44139 in k44136 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   emit");
f_28712(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k44154 in k44151 in k44148 in k44145 in k44142 in a44139 in k44136 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44156,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44159,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   set-emit-info!");
f_28694(t2,lf[1003],lf[1004],((C_word*)t0)[2]);}

/* k44157 in k44154 in k44151 in k44148 in k44145 in k44142 in a44139 in k44136 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44159,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(((C_word*)t0)[3])?(C_word)C_a_i_list(&a,2,lf[1001],((C_word*)t0)[2]):(C_word)C_a_i_list(&a,2,lf[1002],((C_word*)t0)[2])));}

/* k44128 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(27648),t1);}

/* k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29879,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29882,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44102,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(27648),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(26624),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26368),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[238],t7);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t3,lf[1000],C_fix(26880),t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k44100 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(26880),t1);}

/* k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29882,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29885,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44042,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(1792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1536),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[214],t7);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44048,a[2]=((C_word)li581),tmp=(C_word)a,a+=3,tmp);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44066,a[2]=((C_word)li582),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t3,lf[999],C_fix(27136),t8,t9,t10);}

/* a44065 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44066(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_44066,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44074,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44078,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28540(t6,t2);}

/* k44076 in a44065 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   emit");
f_28712(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k44072 in a44065 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44074,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[67],t1));}

/* a44047 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44048(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_44048,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28501(t1,C_fix(27136),t6,C_SCHEME_FALSE);}

/* k44040 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_44042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(27136),t1);}

/* k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29885,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29888,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43919,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[665],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(256),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(5120),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[214],t13);
t15=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43925,a[2]=((C_word)li579),tmp=(C_word)a,a+=3,tmp);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43956,a[2]=((C_word)li580),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t3,lf[998],C_fix(27392),t14,t15,t16);}

/* a43955 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43956(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_43956,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43960,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28540(t5,t2);}

/* k43958 in a43955 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43960,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_43963,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k43961 in k43958 in a43955 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43963,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_43966,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k43964 in k43961 in k43958 in a43955 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43966,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43979,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,4,lf[234],((C_word*)t0)[4],t1,C_SCHEME_FALSE));}}

/* k43977 in k43964 in k43961 in k43958 in a43955 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43979,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,4,lf[234],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* a43924 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43925(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43925,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43929,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   sixth");
t5=C_retrieve(lf[61]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k43927 in a43924 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43929,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43944,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   fifth");
t4=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[3]);}

/* k43942 in k43927 in a43924 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43944,2,t0,t1);}
t2=(C_word)C_i_pairp(((C_word*)t0)[4]);
t3=(C_truep(t2)?(C_word)C_i_cadr(((C_word*)t0)[4]):C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,((C_word*)t0)[3],t1,t3);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28501(((C_word*)t0)[2],C_fix(27392),t4,C_SCHEME_FALSE);}

/* k43917 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(27392),t1);}

/* k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29888,2,t0,t1);}
t2=C_mutate(&lf[669],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29890,a[2]=((C_word)li447),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29944,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43799,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[146],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[214],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t10,t11);
t13=(C_word)C_a_i_cons(&a,2,lf[238],t12);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43805,a[2]=((C_word)li578),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t4,lf[997],C_fix(28416),t13,t14,C_SCHEME_FALSE);}

/* a43804 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43805(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43805,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43821,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_cadr(t2);
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28583(t4,t8,C_fix(256));}
else{
t7=t4;
f_43821(2,t7,C_SCHEME_FALSE);}}
else{
t6=t4;
f_43821(2,t6,C_SCHEME_FALSE);}}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,1,t2));}}

/* k43819 in a43804 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43821,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43832,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 19   remove-token-type");
f_29890(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k43830 in k43819 in a43804 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43832,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* k43797 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(28416),t1);}

/* k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29944,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29947,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43660,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[146],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(6144),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[214],t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t13=(C_word)C_a_i_cons(&a,2,C_fix(6144),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[214],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t11,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[238],t16);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43666,a[2]=((C_word)li577),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t3,lf[996],C_fix(28672),t17,t18,C_SCHEME_FALSE);}

/* a43665 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43666(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43666,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43686,a[2]=t4,a[3]=t1,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43689,a[2]=t6,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(C_word)C_i_caddr(t2);
if(C_truep((C_word)C_i_pairp(t9))){
t10=(C_word)C_i_caddr(t2);
t11=(C_word)C_i_car(t10);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28583(t7,t11,C_fix(256));}
else{
t10=t7;
f_43689(2,t10,C_SCHEME_FALSE);}}
else{
t9=t7;
f_43689(2,t9,C_SCHEME_FALSE);}}

/* k43687 in a43665 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 19   remove-token-type");
f_29890(((C_word*)t0)[2],t2,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_43686(2,t2,C_SCHEME_END_OF_LIST);}}

/* k43684 in a43665 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43686,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t2));}

/* k43658 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(28672),t1);}

/* k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[75],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29947,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29950,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43508,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[214],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(28416),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(512),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[214],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28672),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[214],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(28672),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(28416),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(512),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[214],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,t14,t21);
t23=(C_word)C_a_i_cons(&a,2,t10,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[238],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43514,a[2]=((C_word)li576),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t3,lf[995],C_fix(28160),t25,t26,C_SCHEME_FALSE);}

/* a43513 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43514(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43514,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cdr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(C_word)C_i_cdr(((C_word*)t4)[1]);
t9=C_set_block_item(t4,0,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43532,a[2]=t7,a[3]=t4,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28583(t10,t7,C_fix(768));}

/* k43530 in a43513 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43532,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43541,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28583(t2,t3,C_fix(256));}}

/* k43539 in k43530 in a43513 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 19   append");
t3=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k43506 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(28160),t1);}

/* k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29950,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29953,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43437,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(28160),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(25088),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[214],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43443,a[2]=((C_word)li574),tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43461,a[2]=((C_word)li575),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t3,lf[994],C_fix(27904),t6,t7,t8);}

/* a43460 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43461(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_43461,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43465,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28540(t5,t2);}

/* k43463 in a43460 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43465,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_43468,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k43466 in k43463 in a43460 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43468,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43484,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k43482 in k43466 in k43463 in a43460 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43484,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* a43442 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43443(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43443,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_a_i_cons(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28501(t1,C_fix(27904),t6,C_SCHEME_FALSE);}

/* k43435 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(27904),t1);}

/* k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29953,2,t0,t1);}
t2=C_mutate(&lf[670],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29955,a[2]=((C_word)li448),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[671],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29976,a[2]=((C_word)li451),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30092,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43361,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(C_word)C_a_i_cons(&a,2,C_fix(8705),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(8450),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(10244),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(11268),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11012),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(9732),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(9476),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(9988),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(10756),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(8199),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(7941),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(7686),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(7430),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(7173),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(6917),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[238],t21);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t5,lf[993],C_fix(28928),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k43359 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(28928),t1);}

/* k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30092,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30095,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43281,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(28928),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29440),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[214],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43287,a[2]=((C_word)li573),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t3,lf[992],C_fix(29184),t9,t10,C_SCHEME_FALSE);}

/* a43286 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43287(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43287,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43294,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 19   is-op?");
f_29955(t4,t7);}
else{
t6=t4;
f_43294(2,t6,C_SCHEME_FALSE);}}

/* k43292 in a43286 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43294,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(C_word)C_a_i_cons(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 19   inf->pre");
f_29976(((C_word*)t0)[2],t4);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}}

/* k43279 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(29184),t1);}

/* k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30095,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30098,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43145,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(7173),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[214],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[214],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[214],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(2304),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(26624),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(26368),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(27136),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(27904),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(27392),t18);
t20=(C_word)C_a_i_cons(&a,2,t13,t19);
t21=(C_word)C_a_i_cons(&a,2,t9,t20);
t22=(C_word)C_a_i_cons(&a,2,t6,t21);
t23=(C_word)C_a_i_cons(&a,2,lf[238],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43151,a[2]=((C_word)li571),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43177,a[2]=((C_word)li572),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t3,lf[991],C_fix(29440),t23,t24,t25);}

/* a43176 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43177(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_43177,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43185,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28540(t5,t2);}

/* k43183 in a43176 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   emit");
f_28712(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a43150 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43151(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43151,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43159,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43168,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28583(t5,t6,C_fix(512));}
else{
t5=t4;
f_43159(t5,t2);}}

/* k43166 in a43150 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_43159(t2,(C_truep(t1)?(C_word)C_i_cadr(((C_word*)t0)[2]):((C_word*)t0)[2]));}

/* k43157 in a43150 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_43159(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28501(((C_word*)t0)[2],C_fix(29440),t1,C_SCHEME_FALSE);}

/* k43143 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(29440),t1);}

/* k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30098,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30101,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43101,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26368),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6400),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(2304),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26624),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(27136),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(27904),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(27392),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[238],t11);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t3,lf[990],C_fix(29696),t12,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k43099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(29696),t1);}

/* k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30101,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30104,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42991,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(15872),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[214],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42997,a[2]=((C_word)li568),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43019,a[2]=((C_word)li570),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t3,lf[989],C_fix(33536),t10,t11,t12);}

/* a43018 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43019(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_43019,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_list(&a,1,lf[693]);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_43030,a[2]=t1,a[3]=t4,a[4]=t3,a[5]=t7,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28540(t8,t2);}

/* k43028 in a43018 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43030,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_43032,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word)li569),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_43032(t5,((C_word*)t0)[2],t1);}

/* do4946 in k43028 in a43018 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_43032(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_43032,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_43061,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k43059 in do4946 in k43028 in a43018 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43061,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_43032(t7,((C_word*)t0)[2],t6);}

/* a42996 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42997(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42997,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43013,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 19   remove-token-type");
f_29890(t5,t6,C_fix(256));}

/* k43011 in a42996 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_43013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43013,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28501(((C_word*)t0)[2],C_fix(33536),t2,C_SCHEME_FALSE);}

/* k42989 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(33536),t1);}

/* k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[48],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30104,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30107,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42880,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(6144),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(256),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[387],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t6,t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(16896),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[214],t14);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42886,a[2]=((C_word)li566),tmp=(C_word)a,a+=3,tmp);
t17=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42920,a[2]=((C_word)li567),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t3,lf[988],C_fix(34560),t15,t16,t17);}

/* a42919 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42920(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_42920,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42924,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28540(t5,t2);}

/* k42922 in a42919 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42924,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42931,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t2,t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k42929 in k42922 in a42919 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42931,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[867],t1));}

/* a42885 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42886(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42886,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42902,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42906,a[2]=t2,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 19   remove-token-type");
f_29890(t6,t7,C_fix(256));}

/* k42904 in a42885 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42906,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42910,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 19   remove-token-type");
f_29890(t2,t3,C_fix(256));}

/* k42908 in k42904 in a42885 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   append");
t2=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k42900 in a42885 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42902,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28501(((C_word*)t0)[2],C_fix(34560),t2,C_SCHEME_FALSE);}

/* k42878 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(34560),t1);}

/* k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30107,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30110,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42671,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[238],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(28416),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[214],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28416),t11);
t13=(C_word)C_a_i_cons(&a,2,t10,t12);
t14=(C_word)C_a_i_cons(&a,2,lf[238],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(256),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[665],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t6,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(16384),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[214],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42677,a[2]=((C_word)li563),tmp=(C_word)a,a+=3,tmp);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42752,a[2]=((C_word)li565),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t3,lf[987],C_fix(34304),t21,t22,t23);}

/* a42751 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42752(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_42752,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42756,a[2]=t1,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42788,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28540(t6,t2);}

/* k42786 in a42751 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   emit");
f_28712(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k42754 in a42751 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42756,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_i_car(t1);
t4=(C_word)C_i_cdr(t1);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42772,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li564),tmp=(C_word)a,a+=5,tmp);
t6=((C_word*)t0)[2];
t7=(C_word)C_a_i_list(&a,1,t5);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38452,a[2]=t4,a[3]=t6,a[4]=t8,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t10=C_set_block_item(t8,0,*((C_word*)lf[74]+1));
t11=t9;
f_38452(t11,t10);}
else{
t10=(C_word)C_i_car(((C_word*)t8)[1]);
t11=C_set_block_item(t8,0,t10);
t12=t9;
f_38452(t12,t11);}}

/* k38450 in k42754 in a42751 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_38452(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38452,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_stringp(((C_word*)t0)[5]))){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38461,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 20   hash-ref");
t3=C_retrieve(lf[14]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_retrieve2(lf[827],"*messages*"),((C_word*)t0)[5]);}
else{
if(C_truep((C_word)C_i_symbolp(((C_word*)t0)[5]))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[2]));}
else{
C_trace("ChickenBridge.scm: 20   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[986],((C_word*)t0)[5]);}}}

/* k38459 in k38450 in k42754 in a42751 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38461,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38477,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t1);
t5=t4;
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,((C_word*)t0)[3]);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38474,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   string->symbol");
t4=*((C_word*)lf[529]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k38472 in k38459 in k38450 in k42754 in a42751 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38474,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* k38475 in k38459 in k38450 in k42754 in a42751 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38477,2,t0,t1);}
if(C_truep((C_word)C_i_stringp(t1))){
C_trace("ChickenBridge.scm: 20   errcont");
t2=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],t1);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38493,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   string->symbol");
t3=*((C_word*)lf[529]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}}

/* k38491 in k38475 in k38459 in k38450 in k42754 in a42751 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38493,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* a42771 in k42754 in a42751 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42772(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_42772,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42780,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42784,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-position");
f_28558(t4,((C_word*)t0)[2]);}

/* k42782 in a42771 in k42754 in a42751 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-parse-error");
f_28453(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k42778 in a42771 in k42754 in a42751 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a42676 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42677(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42677,4,t0,t1,t2,t3);}
t4=(C_word)C_i_caddr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42684,a[2]=t1,a[3]=t6,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t8=((C_word*)t6)[1];
if(C_truep(t8)){
t9=(C_word)C_i_cadr(((C_word*)t6)[1]);
t10=C_set_block_item(t6,0,t9);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42720,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t12=(C_word)C_i_cdr(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=t11;
f_42720(2,t13,C_SCHEME_FALSE);}
else{
t13=(C_word)C_i_cadr(((C_word*)t6)[1]);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28583(t11,t13,C_fix(256));}}
else{
t9=C_set_block_item(t6,0,C_SCHEME_END_OF_LIST);
t10=t7;
f_42684(t10,t9);}}

/* k42718 in a42676 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42720,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42724,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 19   append");
t5=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,t3,t4);}
else{
t2=((C_word*)t0)[2];
f_42684(t2,C_SCHEME_UNDEFINED);}}

/* k42722 in k42718 in a42676 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_42684(t3,t2);}

/* k42682 in a42676 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_42684(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42684,NULL,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42695,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 19   parse-unit-position");
f_28558(t4,t5);}

/* k42693 in k42682 in a42676 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28501(((C_word*)t0)[3],C_fix(34304),((C_word*)t0)[2],t1);}

/* k42669 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(34304),t1);}

/* k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30110,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30113,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42645,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14080),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[214],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42651,a[2]=((C_word)li562),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t3,lf[985],C_fix(33792),t6,t7,C_SCHEME_FALSE);}

/* a42650 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42651(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42651,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t2));}

/* k42643 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(33792),t1);}

/* k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30113,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30116,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42617,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14592),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[214],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42625,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   simple-unit-parser");
f_28953(t7,C_fix(35072));}

/* k42623 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42625,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42629,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   simple-unit-emitter");
f_28961(t2,lf[703]);}

/* k42627 in k42623 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(((C_word*)t0)[4],lf[984],C_fix(35072),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k42615 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(35072),t1);}

/* k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30116,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30119,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42589,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(13568),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[214],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42597,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   simple-unit-parser");
f_28953(t7,C_fix(35584));}

/* k42595 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42597,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42601,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   simple-unit-emitter");
f_28961(t2,lf[702]);}

/* k42599 in k42595 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(((C_word*)t0)[4],lf[983],C_fix(35584),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k42587 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(35584),t1);}

/* k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30119,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30122,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42561,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(17152),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[214],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42569,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   simple-unit-parser");
f_28953(t7,C_fix(35328));}

/* k42567 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42569,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42573,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   simple-unit-emitter");
f_28961(t2,lf[982]);}

/* k42571 in k42567 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(((C_word*)t0)[4],lf[981],C_fix(35328),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k42559 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(35328),t1);}

/* k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30122,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30125,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42533,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18432),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[214],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42541,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   simple-unit-parser");
f_28953(t7,C_fix(34816));}

/* k42539 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42541,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42545,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   simple-unit-emitter");
f_28961(t2,lf[980]);}

/* k42543 in k42539 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(((C_word*)t0)[4],lf[979],C_fix(34816),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k42531 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(34816),t1);}

/* k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[69],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30125,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30128,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42396,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[214],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[238],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(6144),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[214],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,t12,t13);
t15=(C_word)C_a_i_cons(&a,2,lf[238],t14);
t16=(C_word)C_a_i_cons(&a,2,t15,C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[387],t17);
t19=(C_word)C_a_i_cons(&a,2,t18,C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,t9,t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(15616),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[214],t21);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42402,a[2]=((C_word)li560),tmp=(C_word)a,a+=3,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42432,a[2]=((C_word)li561),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t3,lf[978],C_fix(36096),t22,t23,t24);}

/* a42431 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42432(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_42432,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,lf[977]);}

/* a42401 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42402(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42402,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42426,a[2]=t1,a[3]=t4,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 19   remove-token-type");
f_29890(t6,t7,C_fix(256));}

/* k42424 in a42401 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42426,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t2);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28501(((C_word*)t0)[2],C_fix(36096),t3,C_SCHEME_FALSE);}

/* k42394 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(36096),t1);}

/* k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30128,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30131,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42338,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(19712),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[214],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42346,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   simple-unit-parser");
f_28953(t7,C_fix(31744));}

/* k42344 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42346,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42348,a[2]=((C_word)li559),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(((C_word*)t0)[3],lf[976],C_fix(31744),((C_word*)t0)[2],t1,t2);}

/* a42347 in k42344 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42348(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_42348,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42352,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28540(t5,t2);}

/* k42350 in a42347 in k42344 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42352,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_42355,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42380,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   get-emit-info");
f_28615(t3,lf[955],((C_word*)t0)[3]);}

/* k42378 in k42350 in a42347 in k42344 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42380,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_42355(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42368,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42372,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 19   parse-unit-position");
f_28558(t3,t4);}}

/* k42370 in k42378 in k42350 in a42347 in k42344 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-parse-error");
f_28453(((C_word*)t0)[2],lf[975],t1);}

/* k42366 in k42378 in k42350 in a42347 in k42344 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k42353 in k42350 in a42347 in k42344 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   emit");
f_28712(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k42336 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(31744),t1);}

/* k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30131,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30134,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42277,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18688),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[214],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42285,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   simple-unit-parser");
f_28953(t7,C_fix(31488));}

/* k42283 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42285,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42287,a[2]=((C_word)li558),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(((C_word*)t0)[3],lf[974],C_fix(31488),((C_word*)t0)[2],t1,t2);}

/* a42286 in k42283 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42287(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_42287,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42291,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28540(t5,t2);}

/* k42289 in a42286 in k42283 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42291,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_42294,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42322,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   get-emit-info");
f_28615(t3,lf[922],((C_word*)t0)[3]);}

/* k42320 in k42289 in a42286 in k42283 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42322,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_42294(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42310,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42314,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 19   parse-unit-position");
f_28558(t3,t4);}}

/* k42312 in k42320 in k42289 in a42286 in k42283 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-parse-error");
f_28453(((C_word*)t0)[2],lf[973],t1);}

/* k42308 in k42320 in k42289 in a42286 in k42283 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k42292 in k42289 in a42286 in k42283 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42294,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_42297,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   set-emit-info!");
f_28694(t2,lf[922],lf[920],((C_word*)t0)[3]);}

/* k42295 in k42292 in k42289 in a42286 in k42283 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   emit");
f_28712(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k42275 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(31488),t1);}

/* k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30134,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30137,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42186,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(10756),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[214],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,lf[238],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42192,a[2]=((C_word)li555),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42227,a[2]=((C_word)li557),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t3,lf[972],C_fix(30208),t10,t11,t12);}

/* a42226 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42227(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_42227,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42233,a[2]=t4,a[3]=t3,a[4]=((C_word)li556),tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42241,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28540(t6,t2);}

/* k42239 in a42226 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a42232 in a42226 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42233(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_42233,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a42191 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42192(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42192,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28501(t1,C_fix(30208),t6,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42225,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28501(t4,C_fix(4608),lf[971],C_SCHEME_FALSE);}}

/* k42223 in a42191 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42225,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28501(((C_word*)t0)[2],C_fix(30208),t2,C_SCHEME_FALSE);}

/* k42184 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(30208),t1);}

/* k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30137,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30140,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42084,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(20480),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[214],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42090,a[2]=((C_word)li552),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42133,a[2]=((C_word)li554),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t3,lf[970],C_fix(29952),t10,t11,t12);}

/* a42132 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42133(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_42133,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42137,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   add-emit-info");
f_28627(t5,lf[969],C_SCHEME_TRUE,t3);}

/* k42135 in a42132 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42137,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42142,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word)li553),tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42150,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28540(t3,((C_word*)t0)[2]);}

/* k42148 in k42135 in a42132 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a42141 in k42135 in a42132 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42142(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_42142,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a42089 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42090(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42090,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42123,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 19   remove-token-type");
f_29890(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28501(t1,C_fix(29952),t5,C_SCHEME_FALSE);}}

/* k42121 in a42089 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42123,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28501(((C_word*)t0)[2],C_fix(29952),t2,C_SCHEME_FALSE);}

/* k42082 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(29952),t1);}

/* k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30140,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30143,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41998,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(27136),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[238],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(12800),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(12544),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(12288),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(12032),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11776),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(11268),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(11012),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(10756),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[238],t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,t15,t16);
t18=(C_word)C_a_i_cons(&a,2,t6,t17);
t19=(C_word)C_a_i_cons(&a,2,lf[214],t18);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42004,a[2]=((C_word)li551),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t3,lf[968],C_fix(30720),t19,t20,C_SCHEME_FALSE);}

/* a42003 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_42004(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42004,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28501(t1,C_fix(30720),t2,C_SCHEME_FALSE);}

/* k41996 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(30720),t1);}

/* k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30143,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30146,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41718,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30720),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30720),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16640),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[214],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41724,a[2]=((C_word)li548),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41767,a[2]=((C_word)li550),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t3,lf[967],C_fix(30464),t10,t11,t12);}

/* a41766 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41767(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_41767,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41771,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28540(t5,t2);}

/* k41769 in a41766 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41771,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[183]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_41779,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t4,a[6]=t2,a[7]=((C_word)li549),tmp=(C_word)a,a+=8,tmp));
t8=((C_word*)t6)[1];
f_41779(t8,((C_word*)t0)[2],t1);}

/* do5024 in k41769 in a41766 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_41779(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41779,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cddr(((C_word*)t0)[6]);
t4=(C_word)C_i_nullp(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cadr(((C_word*)t0)[6]):((C_word*)t0)[6]));}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_41802,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28540(t3,t4);}}

/* k41800 in do5024 in k41769 in a41766 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41802,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_41805,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k41803 in k41800 in do5024 in k41769 in a41766 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41805,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_41808,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 19   parse-unit-type");
f_28522(t2,t3);}

/* k41806 in k41803 in k41800 in do5024 in k41769 in a41766 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41808,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_41811,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k41809 in k41806 in k41803 in k41800 in do5024 in k41769 in a41766 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41811,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_41814,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41871,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t1,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29846(t5,((C_word*)t0)[2],C_fix(10756));}

/* k41869 in k41809 in k41806 in k41803 in k41800 in do5024 in k41769 in a41766 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41871,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
f_41814(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41878,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29846(t2,((C_word*)t0)[2],C_fix(11776));}}

/* k41876 in k41869 in k41809 in k41806 in k41803 in k41800 in do5024 in k41769 in a41766 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41878,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[146],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_41814(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41888,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29846(t2,((C_word*)t0)[2],C_fix(12032));}}

/* k41886 in k41876 in k41869 in k41809 in k41806 in k41803 in k41800 in do5024 in k41769 in a41766 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41888,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[387],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_41814(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41898,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29846(t2,((C_word*)t0)[2],C_fix(12288));}}

/* k41896 in k41886 in k41876 in k41869 in k41809 in k41806 in k41803 in k41800 in do5024 in k41769 in a41766 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41898,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[241],((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,lf[112],((C_word*)t0)[5],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[3];
f_41814(t5,t4);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41912,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29846(t2,((C_word*)t0)[2],C_fix(12544));}}

/* k41910 in k41896 in k41886 in k41876 in k41869 in k41809 in k41806 in k41803 in k41800 in do5024 in k41769 in a41766 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41912,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[966],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_41814(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41922,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29846(t2,((C_word*)t0)[2],C_fix(12800));}}

/* k41920 in k41910 in k41896 in k41886 in k41876 in k41869 in k41809 in k41806 in k41803 in k41800 in do5024 in k41769 in a41766 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41922,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[112],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_41814(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41932,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29846(t2,((C_word*)t0)[2],C_fix(11012));}}

/* k41930 in k41920 in k41910 in k41896 in k41886 in k41876 in k41869 in k41809 in k41806 in k41803 in k41800 in do5024 in k41769 in a41766 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41932,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[415],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_41814(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41942,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29846(t2,((C_word*)t0)[2],C_fix(11268));}}

/* k41940 in k41930 in k41920 in k41910 in k41896 in k41886 in k41876 in k41869 in k41809 in k41806 in k41803 in k41800 in do5024 in k41769 in a41766 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41942,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[342],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_41814(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_41814(t2,C_SCHEME_UNDEFINED);}}

/* k41812 in k41809 in k41806 in k41803 in k41800 in do5024 in k41769 in a41766 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_41814(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41814,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41817,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41838,a[2]=t2,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t3;
f_41838(t5,(C_word)C_eqp(t4,lf[67]));}
else{
t4=t3;
f_41838(t4,C_SCHEME_FALSE);}}

/* k41836 in k41812 in k41809 in k41806 in k41803 in k41800 in do5024 in k41769 in a41766 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_41838(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41838,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[964],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[965],t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_41817(t7,t6);}
else{
t2=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_41817(t4,t3);}}

/* k41815 in k41812 in k41809 in k41806 in k41803 in k41800 in do5024 in k41769 in a41766 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_41817(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41817,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_41779(t7,((C_word*)t0)[2],t6);}

/* a41723 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41724(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41724,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41757,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 19   remove-token-type");
f_29890(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28501(t1,C_fix(30464),t5,C_SCHEME_FALSE);}}

/* k41755 in a41723 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41757,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28501(((C_word*)t0)[2],C_fix(30464),t2,C_SCHEME_FALSE);}

/* k41716 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(30464),t1);}

/* k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30146,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30149,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41604,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[665],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,lf[387],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(13328),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[214],t11);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41610,a[2]=((C_word)li546),tmp=(C_word)a,a+=3,tmp);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41636,a[2]=((C_word)li547),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t3,lf[963],C_fix(32000),t12,t13,t14);}

/* a41635 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41636(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_41636,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41640,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28540(t5,t2);}

/* k41638 in a41635 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41640,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41646,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k41644 in k41638 in a41635 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41646,2,t0,t1);}
if(C_truep(((C_word*)t0)[5])){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41666,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t2,((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[183],t1));}}

/* k41664 in k41644 in k41638 in a41635 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41666,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[939],t2));}

/* a41609 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41610(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41610,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_caddr(t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41620,a[2]=t1,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t9=((C_word*)t6)[1];
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)t6)[1]);
t11=C_set_block_item(t6,0,t10);
t12=t8;
f_41620(t12,t11);}
else{
t10=t8;
f_41620(t10,C_SCHEME_FALSE);}}

/* k41618 in a41609 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_41620(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41620,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28501(((C_word*)t0)[2],C_fix(32000),t2,C_SCHEME_FALSE);}

/* k41602 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(32000),t1);}

/* k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30149,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30152,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41345,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[665],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(17920),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[665],t7);
t9=(C_word)C_a_i_cons(&a,2,t8,C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(18944),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(14336),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[214],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(19968),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[214],t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(29696),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(19200),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[214],t21);
t23=(C_word)C_a_i_cons(&a,2,t22,C_SCHEME_END_OF_LIST);
t24=(C_word)C_a_i_cons(&a,2,t18,t23);
t25=(C_word)C_a_i_cons(&a,2,t14,t24);
t26=(C_word)C_a_i_cons(&a,2,lf[238],t25);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41351,a[2]=((C_word)li544),tmp=(C_word)a,a+=3,tmp);
t28=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41419,a[2]=((C_word)li545),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t3,lf[962],C_fix(32256),t26,t27,t28);}

/* a41418 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41419(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_41419,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41423,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28540(t5,t2);}

/* k41421 in a41418 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41423,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41429,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28583(t2,t3,C_fix(14336));}

/* k41427 in k41421 in a41418 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41429,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 19   emit");
f_28712(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41438,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28583(t2,t3,C_fix(19968));}}

/* k41436 in k41427 in k41421 in a41418 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41438,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41445,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41476,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k41474 in k41436 in k41427 in k41421 in a41418 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41476,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[178],t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41468,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k41466 in k41474 in k41436 in k41427 in k41421 in a41418 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41468,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[234],((C_word*)t0)[2],t1));}

/* k41443 in k41436 in k41427 in k41421 in a41418 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41445,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41449,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k41447 in k41443 in k41436 in k41427 in k41421 in a41418 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41449,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[234],((C_word*)t0)[2],t1));}

/* a41350 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41351(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41351,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41364,a[2]=t7,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41370,a[2]=t8,a[3]=t7,a[4]=t5,a[5]=t4,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28583(t9,t4,C_fix(14336));}

/* k41368 in a41350 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41370,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_41376,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t6,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t4,tmp=(C_word)a,a+=10,tmp);
t10=((C_word*)t4)[1];
if(C_truep(t10)){
t11=(C_word)C_i_car(((C_word*)t4)[1]);
t12=C_set_block_item(t6,0,t11);
t13=t9;
f_41376(t13,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41405,a[2]=t9,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28501(t11,C_fix(4608),lf[961],C_SCHEME_FALSE);}}
else{
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_41364(t5,t4);}}

/* k41403 in k41368 in a41350 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_41376(t3,t2);}

/* k41374 in k41368 in a41350 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_41376(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41376,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_41380,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 19   fifth");
t3=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k41378 in k41374 in k41368 in a41350 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41380,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_41383,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t4)){
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=t3;
f_41383(t7,t6);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41394,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28501(t5,C_fix(4608),lf[960],C_SCHEME_FALSE);}}

/* k41392 in k41378 in k41374 in k41368 in a41350 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_41383(t3,t2);}

/* k41381 in k41378 in k41374 in k41368 in a41350 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_41383(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41383,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_41364(t4,t3);}

/* k41362 in a41350 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_41364(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28501(((C_word*)t0)[3],C_fix(32256),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k41343 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(32256),t1);}

/* k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[174],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30152,2,t0,t1);}
t2=C_mutate(&lf[672],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30154,a[2]=((C_word)li452),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30675,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41073,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(23296),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[214],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(18944),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[665],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(10756),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(25088),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(22272),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[214],t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,C_fix(22784),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(25088),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(22272),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[214],t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t23=(C_word)C_a_i_cons(&a,2,C_fix(20992),t22);
t24=(C_word)C_a_i_cons(&a,2,C_fix(23552),t23);
t25=(C_word)C_a_i_cons(&a,2,C_fix(21248),t24);
t26=(C_word)C_a_i_cons(&a,2,lf[238],t25);
t27=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t28=(C_word)C_a_i_cons(&a,2,t26,t27);
t29=(C_word)C_a_i_cons(&a,2,lf[665],t28);
t30=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t31=(C_word)C_a_i_cons(&a,2,C_fix(21504),t30);
t32=(C_word)C_a_i_cons(&a,2,lf[665],t31);
t33=(C_word)C_a_i_cons(&a,2,t32,C_SCHEME_END_OF_LIST);
t34=(C_word)C_a_i_cons(&a,2,t29,t33);
t35=(C_word)C_a_i_cons(&a,2,C_fix(29696),t34);
t36=(C_word)C_a_i_cons(&a,2,C_fix(22528),t35);
t37=(C_word)C_a_i_cons(&a,2,C_fix(25088),t36);
t38=(C_word)C_a_i_cons(&a,2,C_fix(22272),t37);
t39=(C_word)C_a_i_cons(&a,2,lf[214],t38);
t40=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t41=(C_word)C_a_i_cons(&a,2,C_fix(20992),t40);
t42=(C_word)C_a_i_cons(&a,2,C_fix(23552),t41);
t43=(C_word)C_a_i_cons(&a,2,C_fix(21248),t42);
t44=(C_word)C_a_i_cons(&a,2,lf[238],t43);
t45=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t46=(C_word)C_a_i_cons(&a,2,C_fix(21504),t45);
t47=(C_word)C_a_i_cons(&a,2,lf[665],t46);
t48=(C_word)C_a_i_cons(&a,2,t47,C_SCHEME_END_OF_LIST);
t49=(C_word)C_a_i_cons(&a,2,C_fix(29696),t48);
t50=(C_word)C_a_i_cons(&a,2,t44,t49);
t51=(C_word)C_a_i_cons(&a,2,C_fix(25088),t50);
t52=(C_word)C_a_i_cons(&a,2,C_fix(22272),t51);
t53=(C_word)C_a_i_cons(&a,2,lf[214],t52);
t54=(C_word)C_a_i_cons(&a,2,t53,C_SCHEME_END_OF_LIST);
t55=(C_word)C_a_i_cons(&a,2,t39,t54);
t56=(C_word)C_a_i_cons(&a,2,t21,t55);
t57=(C_word)C_a_i_cons(&a,2,t16,t56);
t58=(C_word)C_a_i_cons(&a,2,t7,t57);
t59=(C_word)C_a_i_cons(&a,2,lf[238],t58);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t4,lf[959],C_fix(33024),t59,C_retrieve2(lf[672],"sal-parse-stepping"),C_SCHEME_FALSE);}

/* k41071 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(33024),t1);}

/* k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30675,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30678,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41017,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(20224),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[214],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(19456),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[214],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t6,t10);
t12=(C_word)C_a_i_cons(&a,2,lf[238],t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41025,a[2]=t12,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   simple-unit-parser");
f_28953(t13,C_fix(33280));}

/* k41023 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(((C_word*)t0)[3],lf[958],C_fix(33280),((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* k41015 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_41017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(33280),t1);}

/* k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[78],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30678,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31209,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40845,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(16144),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14864),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[238],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,lf[665],t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(33024),C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,lf[387],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(33280),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,lf[387],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,lf[146],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(22016),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[665],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,t14,t19);
t21=(C_word)C_a_i_cons(&a,2,t12,t20);
t22=(C_word)C_a_i_cons(&a,2,t10,t21);
t23=(C_word)C_a_i_cons(&a,2,t8,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[214],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40851,a[2]=((C_word)li534),tmp=(C_word)a,a+=3,tmp);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40897,a[2]=((C_word)li543),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t3,lf[957],C_fix(32512),t25,t26,t27);}

/* a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40897(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_40897,5,t0,t1,t2,t3,t4);}
t5=t3;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30684,a[2]=t4,a[3]=t6,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28540(t7,t2);}

/* k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30684,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_END_OF_LIST;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_END_OF_LIST;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_END_OF_LIST;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_END_OF_LIST;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30708,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t17,a[5]=t19,a[6]=t9,a[7]=t11,a[8]=t7,a[9]=t15,a[10]=t13,a[11]=((C_word*)t0)[4],a[12]=t5,a[13]=t3,tmp=(C_word)a,a+=14,tmp);
t21=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31168,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t20,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
t22=(C_word)C_i_car(((C_word*)t3)[1]);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28583(t21,t22,C_fix(14864));}

/* k31166 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31168,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31172,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   add-emit-info");
f_28627(t2,lf[954],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31175,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31202,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   get-emit-info");
f_28615(t3,lf[924],((C_word*)((C_word*)t0)[6])[1]);}}

/* k31200 in k31166 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31202,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_31175(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31190,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31194,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 19   parse-unit-position");
f_28558(t3,t4);}}

/* k31192 in k31200 in k31166 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-parse-error");
f_28453(((C_word*)t0)[2],lf[956],t1);}

/* k31188 in k31200 in k31166 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k31173 in k31166 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31175,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31179,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   add-emit-info");
f_28627(t2,lf[955],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[4])[1]);}

/* k31177 in k31173 in k31166 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[2];
f_30708(t4,t3);}

/* k31170 in k31166 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30708(t3,t2);}

/* k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_30708(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30708,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30715,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[13])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31157,a[2]=t4,a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31161,a[2]=((C_word*)t0)[8],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[13])[1]);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t6,t7,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}
else{
t5=t4;
f_30715(t5,C_SCHEME_UNDEFINED);}}

/* k31159 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   append");
t2=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k31155 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30715(t3,t2);}

/* k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_30715(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30715,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30718,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[2])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31032,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[9],a[6]=t5,a[7]=((C_word)li542),tmp=(C_word)a,a+=8,tmp));
t7=((C_word*)t5)[1];
f_31032(t7,t2,t3);}

/* do5136 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_31032(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31032,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31042,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31053,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28540(t4,t5);}}

/* k31051 in do5136 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31053,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31055,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word)li541),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_31055(t5,((C_word*)t0)[2],t1);}

/* do5139 in k31051 in do5136 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_31055(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31055,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_31069,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=((C_word*)t0)[4],a[6]=t1,a[7]=((C_word*)t0)[5],a[8]=t2,a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cadr(t3);
t7=(C_word)C_a_i_list(&a,2,t5,t6);
t8=(C_word)C_a_i_list(&a,1,t7);
C_trace("ChickenBridge.scm: 19   append");
t9=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,((C_word*)((C_word*)t0)[6])[1],t8);}}

/* k31067 in do5139 in k31051 in do5136 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31069,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31072,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_caddr(((C_word*)t0)[4]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31122,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_caddr(((C_word*)t0)[4]);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 19   append");
t7=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t4,((C_word*)((C_word*)t0)[2])[1],t6);}
else{
t4=t3;
f_31072(t4,C_SCHEME_UNDEFINED);}}

/* k31120 in k31067 in do5139 in k31051 in do5136 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31072(t3,t2);}

/* k31070 in k31067 in do5139 in k31051 in do5136 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_31072(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31072,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31075,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_cadddr(((C_word*)t0)[3]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31107,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 19   append");
t6=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,((C_word*)((C_word*)t0)[2])[1],t5);}
else{
t3=t2;
f_31075(t3,C_SCHEME_UNDEFINED);}}

/* k31105 in k31070 in k31067 in do5139 in k31051 in do5136 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31075(t3,t2);}

/* k31073 in k31070 in k31067 in do5139 in k31051 in do5136 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_31075(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31075,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31078,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31088,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   fifth");
t4=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k31086 in k31073 in k31070 in k31067 in do5139 in k31051 in do5136 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31088,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31092,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31100,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   fifth");
t4=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_31078(t2,C_SCHEME_UNDEFINED);}}

/* k31098 in k31086 in k31073 in k31070 in k31067 in do5139 in k31051 in do5136 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31100,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 19   append");
t3=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k31090 in k31086 in k31073 in k31070 in k31067 in do5139 in k31051 in do5136 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31078(t3,t2);}

/* k31076 in k31073 in k31070 in k31067 in do5139 in k31051 in do5136 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_31078(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_31055(t3,((C_word*)t0)[2],t2);}

/* k31040 in do5136 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_31032(t3,((C_word*)t0)[2],t2);}

/* k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30718,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30721,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=(C_word)C_i_cadddr(((C_word*)((C_word*)t0)[2])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30996,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word)li540),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_30996(t7,t2,t3);}

/* do5150 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_30996(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30996,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31007,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31022,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t4,t5,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k31020 in do5150 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31022,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 19   append");
t3=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k31005 in do5150 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_30996(t4,((C_word*)t0)[2],t3);}

/* k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30721,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30724,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_pairp(t3))){
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_truep(((C_word*)((C_word*)t0)[13])[1])?C_retrieve2(lf[860],"*process-stop*"):lf[953]);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30904,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=t6,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
t8=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30936,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t10,a[5]=t5,a[6]=((C_word)li539),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_30936(t12,t7,t8);}
else{
t4=t2;
f_30724(t4,C_SCHEME_UNDEFINED);}}

/* do5157 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_30936(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30936,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30946,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28540(t3,t4);}}

/* k30944 in do5157 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30946,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30949,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t2,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k30947 in k30944 in do5157 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30949,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30952,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30970,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28583(t5,t6,C_fix(20224));}

/* k30968 in k30947 in k30944 in do5157 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30970,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[178],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_30952(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_30952(t2,C_SCHEME_UNDEFINED);}}

/* k30950 in k30947 in k30944 in do5157 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_30952(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30952,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30956,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 19   append");
t4=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[6])[1],t3);}

/* k30954 in k30950 in k30947 in k30944 in do5157 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_30936(t4,((C_word*)t0)[2],t3);}

/* k30902 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30904,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30907,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t2;
f_30907(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[238],((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t2;
f_30907(t6,t5);}}

/* k30905 in k30902 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_30907(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30907,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[234],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30724(t5,t4);}

/* k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_30724(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30724,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30727,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[11])[1]))){
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_30727(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[238],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_30727(t6,t5);}}
else{
t3=C_set_block_item(((C_word*)t0)[11],0,C_SCHEME_FALSE);
t4=t2;
f_30727(t4,t3);}}

/* k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_30727(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30727,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_30730,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30861,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   fifth");
t4=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k30859 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30861,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30865,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30869,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   fifth");
t4=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[5];
f_30730(t3,t2);}}

/* k30867 in k30859 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   emit");
f_28712(((C_word*)t0)[4],t1,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k30863 in k30859 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30730(t3,t2);}

/* k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_30730(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30730,NULL,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30831,a[2]=((C_word*)t0)[9],tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30847,a[2]=((C_word*)t0)[5],a[3]=t4,a[4]=((C_word*)t0)[6],a[5]=t3,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   append");
t6=*((C_word*)lf[112]+1);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[7])[1]);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30765,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[9],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30769,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   ##sys#append");
t6=*((C_word*)lf[940]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t5,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(C_word)C_a_i_list(&a,1,lf[951]);
t4=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30816,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t3,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30820,a[2]=((C_word*)t0)[4],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30824,a[2]=((C_word*)t0)[3],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   ##sys#append");
t8=*((C_word*)lf[940]+1);
((C_proc4)(void*)(*((C_word*)t8+1)))(4,t8,t7,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[5])[1]);}}}

/* k30822 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   ##sys#append");
t2=*((C_word*)lf[940]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k30818 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   ##sys#append");
t2=*((C_word*)lf[940]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k30814 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30816,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[6],t1);
t3=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t2);
t4=(C_word)C_a_i_cons(&a,2,lf[296],t3);
t5=(C_word)C_a_i_list(&a,3,lf[921],((C_word*)t0)[5],t4);
t6=(C_word)C_a_i_list(&a,2,lf[835],t5);
t7=(C_word)C_a_i_list(&a,1,lf[952]);
t8=(C_word)C_a_i_list(&a,5,lf[939],((C_word*)((C_word*)t0)[4])[1],t6,((C_word*)((C_word*)t0)[3])[1],t7);
t9=(C_word)C_a_i_list(&a,3,lf[921],C_SCHEME_END_OF_LIST,t8);
t10=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,(C_word)C_a_i_list(&a,1,t9));}

/* k30767 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   ##sys#append");
t2=*((C_word*)lf[940]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k30763 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30765,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t2);
t4=(C_word)C_a_i_cons(&a,2,lf[296],t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_list(&a,3,lf[939],((C_word*)((C_word*)t0)[2])[1],t4));}

/* k30845 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30847,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[6])[1];
t3=(C_truep(t2)?t2:C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 19   make-loop-clause");
f_8640(((C_word*)t0)[5],(C_word)C_a_i_list(&a,18,lf[102],lf[945],lf[103],((C_word*)((C_word*)t0)[4])[1],lf[104],C_SCHEME_END_OF_LIST,lf[105],C_SCHEME_END_OF_LIST,lf[106],((C_word*)t0)[3],lf[107],t1,lf[108],((C_word*)((C_word*)t0)[2])[1],lf[109],t3,lf[110],C_SCHEME_END_OF_LIST));}

/* k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30831,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39178,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_vectorp(t1))){
t3=t2;
f_39178(2,t3,t1);}
else{
t3=t1;
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11864,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t5=t3;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_nullp(((C_word*)t6)[1]);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11696,a[2]=t6,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t7)){
t9=t8;
f_11696(t9,t7);}
else{
t9=(C_word)C_i_car(((C_word*)t6)[1]);
t10=(C_word)C_i_symbolp(t9);
t11=t8;
f_11696(t11,(C_word)C_i_not(t10));}}}

/* k11694 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_11696(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11696,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11703,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 15   make-loop-clause");
f_8640(t2,(C_word)C_a_i_list(&a,4,lf[102],lf[296],lf[107],((C_word*)((C_word*)t0)[2])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11704,a[2]=((C_word)li535),tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11729,a[2]=t6,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11731,a[2]=t2,a[3]=t9,a[4]=t6,a[5]=t4,a[6]=((C_word*)t0)[2],a[7]=((C_word)li538),tmp=(C_word)a,a+=8,tmp));
t11=((C_word*)t9)[1];
f_11731(t11,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}}

/* do1334 in k11694 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_11731(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11731,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11741,a[2]=((C_word*)t0)[2],a[3]=t9,a[4]=t7,a[5]=t1,a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[4],a[8]=t8,a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[5],a[11]=t6,tmp=(C_word)a,a+=12,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t12=(C_word)C_eqp(t11,lf[214]);
if(C_truep(t12)){
t13=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t14=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[6])+1,t14);
t16=t10;
f_11741(t16,t13);}
else{
t13=t10;
f_11741(t13,C_SCHEME_UNDEFINED);}}}

/* k11739 in do1334 in k11694 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_11741(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11741,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11745,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 15   loop-op?");
f_8862(t2,t3,C_retrieve2(lf[865],"*run-operators*"));}

/* k11743 in k11739 in do1334 in k11694 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11745,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11748,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
t4=((C_word*)((C_word*)t0)[11])[1];
if(C_truep(t4)){
t5=t3;
f_11748(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t3,C_retrieve2(lf[865],"*run-operators*"),((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,3,lf[949],t5,lf[950]));}}

/* k11746 in k11743 in k11739 in do1334 in k11694 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11748,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11751,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11800,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[5],a[5]=((C_word)li536),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11809,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[4],a[4]=((C_word)li537),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 15   call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a11808 in k11746 in k11743 in k11739 in do1334 in k11694 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11809(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11809,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a11799 in k11746 in k11743 in k11739 in do1334 in k11694 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11800,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_retrieve2(lf[865],"*run-operators*"));}

/* k11749 in k11746 in k11743 in k11739 in do1334 in k11694 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11751,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11754,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11770,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=t2,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 15   op-type?");
f_11704(t3,((C_word*)((C_word*)t0)[5])[1],lf[284]);}

/* k11768 in k11749 in k11746 in k11743 in k11739 in do1334 in k11694 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11770,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=((C_word*)t0)[4];
f_11754(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11777,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 15   op-type?");
f_11704(t2,((C_word*)((C_word*)t0)[5])[1],lf[294]);}}

/* k11775 in k11768 in k11749 in k11746 in k11743 in k11739 in do1334 in k11694 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11777,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t2=((C_word*)t0)[4];
f_11754(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(((C_word*)t0)[4],C_retrieve2(lf[865],"*run-operators*"),((C_word*)((C_word*)t0)[2])[1],(C_word)C_a_i_list(&a,5,lf[946],t2,lf[947],t3,lf[948]));}}
else{
t2=((C_word*)t0)[4];
f_11754(2,t2,C_SCHEME_UNDEFINED);}}

/* k11752 in k11749 in k11746 in k11743 in k11739 in do1334 in k11694 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11754,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11760,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 15   append");
t6=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)((C_word*)t0)[7])[1],t5);}

/* k11758 in k11752 in k11749 in k11746 in k11743 in k11739 in do1334 in k11694 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=((C_word*)((C_word*)t0)[7])[1];
f_11731(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k11727 in k11694 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_11864(t2,((C_word*)((C_word*)t0)[2])[1]);}

/* op-type? in k11694 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_11704(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11704,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(C_word)C_i_caddr(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_eqp(t5,t3));}}

/* k11701 in k11694 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11703,2,t0,t1);}
t2=((C_word*)t0)[2];
f_11864(t2,(C_word)C_a_i_list(&a,1,t1));}

/* k11862 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_11864(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   gather-clauses");
f_8791(((C_word*)t0)[2],lf[945],t1);}

/* k39176 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39178,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_retrieve2(lf[860],"*process-stop*");
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39181,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 21   gensym");
t9=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[944]);}

/* k39179 in k39176 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39181,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39184,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 21   gensym");
t3=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[943]);}

/* k39182 in k39179 in k39176 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39184,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_39188,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 21   loop-end-tests");
t3=C_retrieve2(lf[95],"loop-end-tests");
f_8580(3,t3,t2,((C_word*)t0)[3]);}

/* k39186 in k39182 in k39179 in k39176 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39188,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_39191,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39402,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 21   loop-finally");
t5=C_retrieve2(lf[99],"loop-finally");
f_8616(3,t5,t4,((C_word*)t0)[3]);}

/* k39400 in k39186 in k39182 in k39179 in k39176 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39402,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=((C_word*)t0)[4];
f_39191(t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39386,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39390,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 21   loop-finally");
t4=C_retrieve2(lf[99],"loop-finally");
f_8616(3,t4,t3,((C_word*)t0)[2]);}}

/* k39388 in k39400 in k39186 in k39182 in k39179 in k39176 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39390,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 21   ##sys#append");
t3=*((C_word*)lf[940]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k39384 in k39400 in k39186 in k39182 in k39179 in k39176 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39386,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[183],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_39191(t4,t3);}

/* k39189 in k39186 in k39182 in k39179 in k39176 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_39191(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39191,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39194,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39364,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39371,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 21   loop-looping");
t5=C_retrieve2(lf[96],"loop-looping");
f_8592(3,t5,t4,((C_word*)t0)[4]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39335,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_39335(t7,t6);}
else{
t5=(C_word)C_a_i_cons(&a,2,lf[238],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_39335(t7,t6);}}}

/* k39333 in k39189 in k39186 in k39182 in k39179 in k39176 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_39335(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39335,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[234],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_39194(2,t5,t4);}

/* k39369 in k39189 in k39186 in k39182 in k39179 in k39176 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 21   process-code-terminates?");
f_39135(((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k39362 in k39189 in k39186 in k39182 in k39179 in k39176 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[2];
f_39194(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 21   print-output");
t2=C_retrieve(lf[50]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[942]);}}

/* k39192 in k39189 in k39186 in k39182 in k39179 in k39176 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[124],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39194,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[6],C_fix(0));
t4=(C_word)C_a_i_list(&a,2,lf[185],lf[928]);
t5=(C_word)C_a_i_list(&a,2,lf[53],lf[928]);
t6=(C_word)C_a_i_list(&a,1,lf[929]);
t7=(C_word)C_a_i_list(&a,3,lf[214],t5,t6);
t8=(C_word)C_a_i_list(&a,1,lf[930]);
t9=(C_word)C_a_i_list(&a,4,lf[234],t7,t8,((C_word*)t0)[7]);
t10=(C_word)C_a_i_list(&a,4,lf[234],t4,((C_word*)t0)[7],t9);
t11=(C_word)C_a_i_list(&a,3,lf[921],lf[928],t10);
t12=(C_word)C_a_i_list(&a,2,lf[931],t11);
t13=(C_word)C_a_i_list(&a,1,lf[932]);
t14=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[6],lf[932]);
t15=(C_word)C_a_i_list(&a,3,lf[921],t13,t14);
t16=(C_word)C_a_i_list(&a,2,lf[933],t15);
t17=(C_word)C_a_i_list(&a,3,t3,t12,t16);
t18=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39261,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=t17,tmp=(C_word)a,a+=7,tmp);
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39265,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=t18,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 21   loop-looping");
t20=C_retrieve2(lf[96],"loop-looping");
f_8592(3,t20,t19,((C_word*)t0)[3]);}

/* k39263 in k39192 in k39189 in k39186 in k39182 in k39179 in k39176 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39265,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39269,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 21   loop-stepping");
t3=C_retrieve2(lf[98],"loop-stepping");
f_8604(3,t3,t2,((C_word*)t0)[2]);}

/* k39267 in k39263 in k39192 in k39189 in k39186 in k39182 in k39179 in k39176 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39269,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 21   append");
t3=*((C_word*)lf[112]+1);
((C_proc6)C_retrieve_proc(t3))(6,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2],t1,t2);}

/* k39259 in k39192 in k39189 in k39186 in k39182 in k39179 in k39176 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39261,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6827,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 12   gensym");
t3=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[941]);}

/* k6825 in k39259 in k39192 in k39189 in k39186 in k39182 in k39179 in k39176 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_6827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[96],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6827,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[934]);
t3=(C_word)C_a_i_list(&a,1,t1);
t4=(C_word)C_a_i_list(&a,1,lf[935]);
t5=(C_word)C_a_i_list(&a,4,lf[936],t1,t4,lf[937]);
t6=(C_word)C_a_i_list(&a,2,lf[934],C_fix(-2));
t7=(C_word)C_a_i_list(&a,4,lf[921],t3,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,((C_word*)t0)[7]);
t9=(C_word)C_a_i_cons(&a,2,lf[921],t8);
t10=(C_word)C_a_i_list(&a,3,lf[938],t7,t9);
t11=(C_word)C_a_i_list(&a,3,lf[921],t2,t10);
t12=(C_word)C_a_i_list(&a,2,lf[835],t11);
t13=(C_word)C_a_i_list(&a,3,lf[939],((C_word*)t0)[6],t12);
t14=(C_word)C_a_i_list(&a,3,lf[921],((C_word*)t0)[5],t13);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39204,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t17=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39241,a[2]=((C_word*)t0)[2],a[3]=t16,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 21   loop-bindings");
t18=C_retrieve2(lf[92],"loop-bindings");
f_8544(3,t18,t17,((C_word*)t0)[2]);}

/* k39239 in k6825 in k39259 in k39192 in k39189 in k39186 in k39182 in k39179 in k39176 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39241,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39237,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 21   loop-initially");
t3=C_retrieve2(lf[94],"loop-initially");
f_8568(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_39204(t2,C_SCHEME_FALSE);}}

/* k39235 in k39239 in k6825 in k39259 in k39192 in k39189 in k39186 in k39182 in k39179 in k39176 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_39204(t2,(C_word)C_i_nullp(t1));}

/* k39202 in k6825 in k39259 in k39192 in k39189 in k39186 in k39182 in k39179 in k39176 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_39204(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39204,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39215,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 21   loop-bindings");
t3=C_retrieve2(lf[92],"loop-bindings");
f_8544(3,t3,t2,((C_word*)t0)[2]);}}

/* k39213 in k39202 in k6825 in k39259 in k39192 in k39189 in k39186 in k39182 in k39179 in k39176 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39215,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39219,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39223,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 21   loop-initially");
t4=C_retrieve2(lf[94],"loop-initially");
f_8568(3,t4,t3,((C_word*)t0)[2]);}

/* k39221 in k39213 in k39202 in k6825 in k39259 in k39192 in k39189 in k39186 in k39182 in k39179 in k39176 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39223,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 21   ##sys#append");
t3=*((C_word*)lf[940]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k39217 in k39213 in k39202 in k6825 in k39259 in k39192 in k39189 in k39186 in k39182 in k39179 in k39176 in k30829 in k30728 in k30725 in k30722 in k30719 in k30716 in k30713 in k30706 in k30682 in a40896 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39219,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[939],t2));}

/* a40850 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40851(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40851,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(C_word)C_i_cadddr(t2);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40867,a[2]=t2,a[3]=t1,a[4]=t9,a[5]=t8,a[6]=t7,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 19   fifth");
t11=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k40865 in a40850 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40867,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40870,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 19   sixth");
t3=C_retrieve(lf[61]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k40868 in k40865 in a40850 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40870,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_40873,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t4;
f_40873(t7,t6);}
else{
t5=t4;
f_40873(t5,C_SCHEME_UNDEFINED);}}

/* k40871 in k40868 in k40865 in a40850 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_40873(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40873,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_40876,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=t2;
f_40876(t5,t4);}
else{
t3=t2;
f_40876(t3,C_SCHEME_UNDEFINED);}}

/* k40874 in k40871 in k40868 in k40865 in a40850 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_40876(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40876,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40887,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-position");
f_28558(t3,((C_word*)t0)[8]);}

/* k40885 in k40874 in k40871 in k40868 in k40865 in a40850 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28501(((C_word*)t0)[3],C_fix(32512),((C_word*)t0)[2],t1);}

/* k40843 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(32512),t1);}

/* k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31209,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31212,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40700,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[214],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[387],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t9,t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(25088),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[214],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t6,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[238],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(25088),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[214],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40706,a[2]=((C_word)li533),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t3,lf[927],C_fix(37632),t21,t22,C_SCHEME_FALSE);}

/* a40705 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40706(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40706,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40719,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t10=(C_word)C_i_length(((C_word*)t7)[1]);
if(C_truep((C_word)C_i_nequalp(t10,C_fix(2)))){
t11=C_set_block_item(t7,0,C_SCHEME_END_OF_LIST);
t12=t9;
f_40719(t12,t11);}
else{
t11=(C_word)C_i_cadr(((C_word*)t7)[1]);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40745,a[2]=t9,a[3]=t7,a[4]=t11,tmp=(C_word)a,a+=5,tmp);
t13=(C_word)C_i_caddr(((C_word*)t7)[1]);
C_trace("ChickenBridge.scm: 19   remove-token-type");
f_29890(t12,t13,C_fix(256));}}

/* k40743 in a40705 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40745,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_40719(t4,t3);}

/* k40717 in a40705 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_40719(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40719,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28501(((C_word*)t0)[2],C_fix(37632),t2,C_SCHEME_FALSE);}

/* k40698 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(37632),t1);}

/* k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31212,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31215,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40243,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(24576),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[214],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(24064),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[214],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(24320),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[214],t15);
t17=(C_word)C_a_i_cons(&a,2,t16,C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,t13,t17);
t19=(C_word)C_a_i_cons(&a,2,t10,t18);
t20=(C_word)C_a_i_cons(&a,2,lf[238],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,C_fix(13824),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[214],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40249,a[2]=((C_word)li529),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40288,a[2]=((C_word)li532),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t3,lf[926],C_fix(36352),t23,t24,t25);}

/* a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40288(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_40288,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40292,a[2]=t4,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28540(t6,t2);}

/* k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40292,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,lf[183]);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40301,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_40304,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=t5,a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28583(t7,t2,C_fix(24576));}

/* k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40304,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_40313,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=t4,a[5]=((C_word*)t0)[7],a[6]=((C_word)li530),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_40313(t6,((C_word*)t0)[4],t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_40362,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28540(t2,t3);}}

/* k40360 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40362,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40365,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k40363 in k40360 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40365,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_40368,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k40366 in k40363 in k40360 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40368,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_40580,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 19   append");
t3=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,C_SCHEME_END_OF_LIST);}

/* k40578 in k40366 in k40363 in k40360 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40580,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[9],t1);
t3=(C_word)C_i_caddr(((C_word*)t0)[8]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_40377,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[7],a[11]=t7,a[12]=t5,tmp=(C_word)a,a+=13,tmp);
t9=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t9))){
t10=t8;
f_40377(t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_length(t2);
t11=(C_word)C_a_i_minus(&a,2,t10,C_fix(2));
t12=(C_word)C_i_list_tail(t2,t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40518,a[2]=t12,a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_cadr(t12);
C_trace("ChickenBridge.scm: 19   symbol->string");
t15=*((C_word*)lf[507]+1);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}}

/* k40516 in k40578 in k40366 in k40363 in k40360 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40518,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40527,a[2]=t1,a[3]=t2,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_greaterp(t2,C_fix(3)))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40552,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(3));
C_trace("ChickenBridge.scm: 19   substring");
t6=*((C_word*)lf[414]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t1,t5);}
else{
t4=t3;
f_40527(t4,C_SCHEME_FALSE);}}

/* k40550 in k40516 in k40578 in k40366 in k40363 in k40360 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_40527(t2,(C_word)C_i_string_equal_p(t1,lf[925]));}

/* k40525 in k40516 in k40578 in k40366 in k40363 in k40360 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_40527(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40527,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40534,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40538,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(3));
C_trace("ChickenBridge.scm: 19   substring");
t5=*((C_word*)lf[414]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t3,((C_word*)t0)[2],C_fix(0),t4);}
else{
t2=((C_word*)t0)[5];
f_40377(t2,C_SCHEME_UNDEFINED);}}

/* k40536 in k40525 in k40516 in k40578 in k40366 in k40363 in k40360 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   string->symbol");
t2=*((C_word*)lf[529]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k40532 in k40525 in k40516 in k40578 in k40366 in k40363 in k40360 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_40377(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k40375 in k40578 in k40366 in k40363 in k40360 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_40377(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40377,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40380,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_40455,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28583(t3,((C_word*)t0)[2],C_fix(24064));}

/* k40453 in k40375 in k40578 in k40366 in k40363 in k40360 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40455,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_40459,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 19   add-emit-info");
f_28627(t2,lf[922],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[9])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_40496,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28583(t2,((C_word*)t0)[2],C_fix(24320));}}

/* k40494 in k40453 in k40375 in k40578 in k40366 in k40363 in k40360 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40496,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_40500,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 19   add-emit-info");
f_28627(t2,lf[924],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[8])[1]);}
else{
t2=((C_word*)t0)[4];
f_40380(t2,C_SCHEME_UNDEFINED);}}

/* k40498 in k40494 in k40453 in k40375 in k40578 in k40366 in k40363 in k40360 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40500,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40504,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k40502 in k40498 in k40494 in k40453 in k40375 in k40578 in k40366 in k40363 in k40360 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40504,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[914],((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[923]);
t6=((C_word*)t0)[2];
f_40380(t6,t5);}

/* k40457 in k40453 in k40375 in k40578 in k40366 in k40363 in k40360 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40459,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_40463,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k40461 in k40457 in k40453 in k40375 in k40578 in k40366 in k40363 in k40360 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40463,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40466,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40490,a[2]=t3,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   get-emit-info");
f_28615(t4,lf[922],((C_word*)((C_word*)t0)[2])[1]);}

/* k40488 in k40461 in k40457 in k40453 in k40375 in k40578 in k40366 in k40363 in k40360 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40490,2,t0,t1);}
t2=(C_word)C_eqp(lf[920],t1);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,1,lf[263]);
t4=(C_word)C_a_i_list(&a,3,lf[921],t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[835],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_40466(t7,t6);}
else{
t3=((C_word*)t0)[2];
f_40466(t3,C_SCHEME_UNDEFINED);}}

/* k40464 in k40461 in k40457 in k40453 in k40375 in k40578 in k40366 in k40363 in k40360 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_40466(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40466,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[914],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[919]);
t5=((C_word*)t0)[2];
f_40380(t5,t4);}

/* k40378 in k40375 in k40578 in k40366 in k40363 in k40360 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_40380(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40380,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40383,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40394,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40452,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   symbol->string");
t5=*((C_word*)lf[507]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[2]);}

/* k40450 in k40378 in k40375 in k40578 in k40366 in k40363 in k40360 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   string-append");
t2=*((C_word*)lf[417]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1,lf[918]);}

/* k40392 in k40378 in k40375 in k40578 in k40366 in k40363 in k40360 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40394,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40396,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li531),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_40396(t5,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* do5237 in k40392 in k40378 in k40375 in k40578 in k40366 in k40363 in k40360 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_40396(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40396,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40411,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   string-append");
t6=*((C_word*)lf[417]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],lf[916]);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40415,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40444,a[2]=t4,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 19   symbol->string");
t8=*((C_word*)lf[507]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k40442 in do5237 in k40392 in k40378 in k40375 in k40578 in k40366 in k40363 in k40360 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   string-append");
t2=*((C_word*)lf[417]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k40413 in do5237 in k40392 in k40378 in k40375 in k40578 in k40366 in k40363 in k40360 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40415,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40418,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_40418(t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40432,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   string-append");
t6=*((C_word*)lf[417]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)((C_word*)t0)[5])[1],lf[917]);}}

/* k40430 in k40413 in do5237 in k40392 in k40378 in k40375 in k40578 in k40366 in k40363 in k40360 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_40418(t3,t2);}

/* k40416 in k40413 in do5237 in k40392 in k40378 in k40375 in k40578 in k40366 in k40363 in k40360 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_40418(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_40396(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k40409 in do5237 in k40392 in k40378 in k40375 in k40578 in k40366 in k40363 in k40360 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40411,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[50],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k40381 in k40378 in k40375 in k40578 in k40366 in k40363 in k40360 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40383,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[3];
f_40301(2,t3,(C_word)C_i_set_cdr(((C_word*)t0)[2],t2));}

/* do5211 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_40313(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40313,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40323,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t3,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k40321 in do5211 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40323,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40329,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 19   format");
t4=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,C_SCHEME_FALSE,lf[915],t2);}

/* k40327 in k40321 in do5211 in k40302 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40329,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[914],((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,3,lf[693],t1,((C_word*)t0)[6]);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t4);
t6=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[5])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[5])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)t0)[4]);
t9=((C_word*)((C_word*)t0)[3])[1];
f_40313(t9,((C_word*)t0)[2],t8);}

/* k40299 in k40290 in a40287 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* a40248 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40249(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40249,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cadr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40260,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40266,a[2]=t8,a[3]=t7,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28583(t9,t7,C_fix(24576));}

/* k40264 in a40248 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40266,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40282,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 19   remove-token-type");
f_29890(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_40260(t2,C_SCHEME_UNDEFINED);}}

/* k40280 in k40264 in a40248 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40282,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_40260(t5,t4);}

/* k40258 in a40248 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_40260(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28501(((C_word*)t0)[3],C_fix(36352),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k40241 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(36352),t1);}

/* k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31215,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31218,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40167,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(33792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(35584),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(35072),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(36096),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(34816),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(35328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(31488),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(31744),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(32512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(32256),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(30464),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(34304),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(34560),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(33536),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(32000),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36352),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[238],t19);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t3,lf[913],C_fix(36608),t20,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k40165 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(36608),t1);}

/* k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31218,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31221,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40123,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[146],t4);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40129,a[2]=((C_word)li527),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40143,a[2]=((C_word)li528),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   make-rule");
f_28212(t3,lf[912],C_fix(36864),t5,t6,t7);}

/* a40142 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40143(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_40143,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40151,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40155,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28540(t6,t2);}

/* k40153 in a40142 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40155(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   emit");
f_28712(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k40149 in a40142 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40151,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[183],t1));}

/* a40128 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40129(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40129,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40137,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 19   parse-unit-position");
f_28558(t4,t5);}

/* k40135 in a40128 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28501(((C_word*)t0)[3],C_fix(36864),((C_word*)t0)[2],t1);}

/* k40121 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[624],"*rules*"),C_fix(36864),t1);}

/* k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word ab[111],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31221,2,t0,t1);}
t2=C_mutate((C_word*)lf[680]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31223,a[2]=((C_word)li458),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[689],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31707,a[2]=((C_word)li459),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[693]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31866,a[2]=((C_word)li463),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[702]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32019,a[2]=((C_word)li464),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[703]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32028,a[2]=((C_word)li465),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[712]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32077,a[2]=((C_word)li466),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[714]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32101,a[2]=((C_word)li467),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[715],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32129,a[2]=((C_word)li468),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[727]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32200,a[2]=((C_word)li469),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[729],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32447,a[2]=((C_word)li470),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[728],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32502,a[2]=((C_word)li471),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[717],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32655,a[2]=((C_word)li472),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[734]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32661,a[2]=((C_word)li473),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[742]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33716,a[2]=((C_word)li474),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[743]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34145,a[2]=((C_word)li475),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[745]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34852,a[2]=((C_word)li476),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[747]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35559,a[2]=((C_word)li477),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[749]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36266,a[2]=((C_word)li478),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[750]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36695,a[2]=((C_word)li479),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[751]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37124,a[2]=((C_word)li480),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[752]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37553,a[2]=((C_word)li481),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[754]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37583,a[2]=((C_word)li482),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[755]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37589,a[2]=((C_word)li483),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[756]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37595,a[2]=((C_word)li484),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[757]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37601,a[2]=((C_word)li485),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[758]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37607,a[2]=((C_word)li486),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[759]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37613,a[2]=((C_word)li487),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[761]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37628,a[2]=((C_word)li488),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[763]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37634,a[2]=((C_word)li490),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[766]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37739,a[2]=((C_word)li492),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[769]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37848,a[2]=((C_word)li493),tmp=(C_word)a,a+=3,tmp));
t33=lf[771]=C_SCHEME_FALSE;;
t34=C_mutate(&lf[721],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37921,a[2]=((C_word)li494),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[723]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38034,a[2]=((C_word)li496),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[813],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38206,a[2]=((C_word)li498),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[824]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38399,a[2]=((C_word)li499),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[825]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38405,a[2]=((C_word)li500),tmp=(C_word)a,a+=3,tmp));
t39=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38446,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 20   make-equal-hash-table");
t40=C_retrieve(lf[7]);
((C_proc2)C_retrieve_proc(t40))(2,t40,t39);}

/* k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38446,2,t0,t1);}
t2=C_mutate(&lf[827],t1);
t3=C_mutate(&lf[828],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38522,a[2]=((C_word)li508),tmp=(C_word)a,a+=3,tmp));
t4=lf[842];
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38996,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40119,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_38522(t6,t4);}

/* k40117 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40119,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[827],"*messages*"),lf[911],t2);}

/* k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38996,2,t0,t1);}
t2=lf[843];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38999,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40111,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_38522(t4,t2);}

/* k40109 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40111,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[827],"*messages*"),lf[910],t2);}

/* k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38999,2,t0,t1);}
t2=lf[844];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39002,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40103,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_38522(t4,t2);}

/* k40101 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40103,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[827],"*messages*"),lf[909],t2);}

/* k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39002,2,t0,t1);}
t2=lf[845];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39005,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40095,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_38522(t4,t2);}

/* k40093 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40095,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[827],"*messages*"),lf[908],t2);}

/* k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39005,2,t0,t1);}
t2=lf[846];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39008,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40087,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_38522(t4,t2);}

/* k40085 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40087,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[827],"*messages*"),lf[907],t2);}

/* k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39008(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39008,2,t0,t1);}
t2=lf[847];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39011,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40079,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_38522(t4,t2);}

/* k40077 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40079,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[827],"*messages*"),lf[906],t2);}

/* k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39011,2,t0,t1);}
t2=lf[848];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39014,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40071,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_38522(t4,t2);}

/* k40069 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40071,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[827],"*messages*"),lf[905],t2);}

/* k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39014,2,t0,t1);}
t2=lf[849];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39017,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40063,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_38522(t4,t2);}

/* k40061 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40063,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[827],"*messages*"),lf[904],t2);}

/* k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39017,2,t0,t1);}
t2=lf[850];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39020,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40055,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_38522(t4,t2);}

/* k40053 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40055,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[827],"*messages*"),lf[903],t2);}

/* k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39020,2,t0,t1);}
t2=lf[851];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39023,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40047,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_38522(t4,t2);}

/* k40045 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40047,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[827],"*messages*"),lf[902],t2);}

/* k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39023,2,t0,t1);}
t2=lf[852];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39026,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40039,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_38522(t4,t2);}

/* k40037 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40039,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[827],"*messages*"),lf[901],t2);}

/* k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39026,2,t0,t1);}
t2=lf[853];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39029,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40031,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_38522(t4,t2);}

/* k40029 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40031,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[827],"*messages*"),lf[900],t2);}

/* k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39029,2,t0,t1);}
t2=lf[854];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39032,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40023,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_38522(t4,t2);}

/* k40021 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40023,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[827],"*messages*"),lf[899],t2);}

/* k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39032,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39035,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40015,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_38522(t4,t2);}

/* k40013 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40015,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[827],"*messages*"),lf[898],t2);}

/* k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39035,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39038,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40007,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_38522(t4,t2);}

/* k40005 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_40007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40007,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[827],"*messages*"),lf[897],t2);}

/* k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39038,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39041,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39999,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_38522(t4,t2);}

/* k39997 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39999,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[827],"*messages*"),lf[896],t2);}

/* k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39041,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39044,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39991,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_38522(t4,t2);}

/* k39989 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39991,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[827],"*messages*"),lf[895],t2);}

/* k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39044,2,t0,t1);}
t2=lf[855];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39047,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39983,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_38522(t4,t2);}

/* k39981 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39983,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[827],"*messages*"),lf[894],t2);}

/* k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39047,2,t0,t1);}
t2=lf[856];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39050,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39975,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_38522(t4,t2);}

/* k39973 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39975,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[827],"*messages*"),lf[893],t2);}

/* k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39050,2,t0,t1);}
t2=lf[857];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39053,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39967,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_38522(t4,t2);}

/* k39965 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39967,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[827],"*messages*"),lf[892],t2);}

/* k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39053,2,t0,t1);}
t2=lf[858];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39056,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39959,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_38522(t4,t2);}

/* k39957 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39959,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[827],"*messages*"),lf[891],t2);}

/* k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39056,2,t0,t1);}
t2=lf[859];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39059,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39951,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   make-message-parser");
f_38522(t4,t2);}

/* k39949 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39951,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 20   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[827],"*messages*"),lf[890],t2);}

/* k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39059,2,t0,t1);}
t2=C_mutate(&lf[860],lf[861]);
t3=C_mutate(&lf[862],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39062,a[2]=((C_word)li509),tmp=(C_word)a,a+=3,tmp));
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39133,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39882,a[2]=t9,a[3]=t4,a[4]=t6,a[5]=((C_word)li526),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_39882(t11,t7,C_retrieve2(lf[298],"*loop-operators*"));}

/* do6624 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_39882(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39882,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_a_i_list(&a,3,lf[267],C_retrieve2(lf[862],"run-while-until"),C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[266],C_retrieve2(lf[862],"run-while-until"),C_SCHEME_FALSE);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39910,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t4);
if(C_truep((C_truep((C_word)C_i_equalp(t5,lf[244]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[112]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[249]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[232]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[233]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[236]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[237]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[271]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[272]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[273]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[263]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[267]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[266]))?C_SCHEME_TRUE:C_SCHEME_FALSE))))))))))))))){
t6=t3;
f_39910(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t3;
f_39910(t11,t10);}}}

/* k39908 in do6624 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_39910(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_39882(t3,((C_word*)t0)[2],t2);}

/* k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39133,2,t0,t1);}
t2=C_mutate(&lf[865],t1);
t3=C_mutate(&lf[866],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39135,a[2]=((C_word)li510),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[867]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39410,a[2]=((C_word)li518),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[875]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39780,a[2]=((C_word)li519),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[876]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39786,a[2]=((C_word)li520),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[877]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39792,a[2]=((C_word)li521),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[878]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39798,a[2]=((C_word)li522),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[879]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39804,a[2]=((C_word)li524),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[881]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39862,a[2]=((C_word)li525),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[668]+1,*((C_word*)lf[883]+1));
t12=C_mutate((C_word*)lf[1]+1,*((C_word*)lf[884]+1));
t13=C_mutate((C_word*)lf[330]+1,*((C_word*)lf[885]+1));
t14=C_mutate((C_word*)lf[886]+1,*((C_word*)lf[887]+1));
t15=C_mutate((C_word*)lf[329]+1,*((C_word*)lf[888]+1));
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39880,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 94   return-to-host");
t17=C_retrieve(lf[889]);
((C_proc2)C_retrieve_proc(t17))(2,t17,t16);}

/* k39878 in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}

/* hush in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39862,2,t0,t1);}
C_trace("ChickenBridge.scm: 21   ffi_sched_hush");
t2=C_retrieve(lf[882]);
((C_proc2)C_retrieve_proc(t2))(2,t2,t1);}

/* stop in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39804(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr2r,(void*)f_39804r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_39804r(t0,t1,t2);}}

static void C_ccall f_39804r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39808,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 21   ffi_sched_stop");
f_7256(t3,C_fix(-1));}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39822,a[2]=t5,a[3]=((C_word)li523),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_39822(t7,t3,t2);}}

/* do6708 in stop in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_39822(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39822,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39832,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t4))){
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 21   ffi_sched_stop");
f_7256(t3,t5);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 21   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[880],t5);}}}

/* k39830 in do6708 in stop in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_39822(t3,((C_word*)t0)[2],t2);}

/* k39806 in stop in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_retrieve(lf[409]));}

/* continue in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39798,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub256(C_SCHEME_UNDEFINED));}

/* paused? in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39792,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub252(C_SCHEME_UNDEFINED));}

/* pause in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39786,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub254(C_SCHEME_UNDEFINED));}

/* now in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39780,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub241(t2));}

/* sprout in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39410(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+27)){
C_save_and_reclaim((void*)tr3r,(void*)f_39410r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_39410r(t0,t1,t2,t3);}}

static void C_ccall f_39410r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(27);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(-1);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(C_word)C_i_closurep(t2);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39417,a[2]=t4,a[3]=t10,a[4]=t2,a[5]=t1,a[6]=t8,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(t11)){
t13=t12;
f_39417(2,t13,t11);}
else{
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39733,a[2]=t2,a[3]=t12,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39747,a[2]=t2,a[3]=t15,a[4]=((C_word)li517),tmp=(C_word)a,a+=5,tmp));
t17=((C_word*)t15)[1];
f_39747(t17,t13,t2);}
else{
t14=t13;
f_39733(2,t14,C_SCHEME_FALSE);}}}

/* do6657 in sprout in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_39747(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39747,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_TRUE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39757,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_closurep(t4))){
t5=t3;
f_39757(2,t5,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 21   error");
t5=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[874],((C_word*)t0)[2]);}}}

/* k39755 in do6657 in sprout in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_39747(t3,((C_word*)t0)[2],t2);}

/* k39731 in sprout in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_39417(2,t2,t1);}
else{
C_trace("ChickenBridge.scm: 21   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[873],((C_word*)t0)[2]);}}

/* k39415 in sprout in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39417,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39420,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39671,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=t4,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=((C_word)li516),tmp=(C_word)a,a+=8,tmp));
t6=((C_word*)t4)[1];
f_39671(t6,t2,((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* do6662 in k39415 in sprout in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_39671(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39671,NULL,4,t0,t1,t2,t3);}
t4=(C_word)C_i_nullp(t2);
t5=(C_truep(t4)?t4:((C_word*)((C_word*)t0)[6])[1]);
if(C_truep(t5)){
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39685,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_stringp(t7))){
t8=(C_word)C_i_car(t2);
t9=C_mutate(((C_word *)((C_word*)t0)[6])+1,t8);
t10=t6;
f_39685(2,t10,t9);}
else{
if(C_truep((C_word)C_i_nequalp(t3,C_fix(0)))){
t8=(C_word)C_i_car(t2);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t6;
f_39685(2,t10,t9);}
else{
if(C_truep((C_word)C_i_nequalp(t3,C_fix(1)))){
t8=(C_word)C_i_car(t2);
t9=C_mutate(((C_word *)((C_word*)t0)[2])+1,t8);
t10=t6;
f_39685(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 21   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t6,lf[872],((C_word*)((C_word*)t0)[5])[1]);}}}}}

/* k39683 in do6662 in k39415 in sprout in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39685,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_39671(t4,((C_word*)t0)[2],t2,t3);}

/* k39418 in k39415 in sprout in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39420,2,t0,t1);}
t2=(C_word)C_i_numberp(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_truep(t2)?(C_word)C_i_greater_or_equalp(((C_word*)((C_word*)t0)[7])[1],C_fix(0)):C_SCHEME_FALSE);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39426,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t3)){
t5=t4;
f_39426(2,t5,t3);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39604,a[2]=((C_word*)t0)[7],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[7])[1]))){
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39618,a[2]=t7,a[3]=((C_word)li515),tmp=(C_word)a,a+=4,tmp));
t9=((C_word*)t7)[1];
f_39618(t9,t5,((C_word*)((C_word*)t0)[7])[1]);}
else{
t6=t5;
f_39604(2,t6,C_SCHEME_FALSE);}}}

/* do6674 in k39418 in k39415 in sprout in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_39618(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39618,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_TRUE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39628,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_numberp(t4);
t6=(C_word)C_i_not(t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39641,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t6)){
t8=t7;
f_39641(t8,t6);}
else{
t8=(C_word)C_i_car(t2);
t9=t7;
f_39641(t9,(C_word)C_i_lessp(t8,C_fix(0)));}}}

/* k39639 in do6674 in k39418 in k39415 in sprout in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_39641(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 21   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],lf[871],t2);}
else{
t2=((C_word*)t0)[2];
f_39628(2,t2,C_SCHEME_UNDEFINED);}}

/* k39626 in do6674 in k39418 in k39415 in sprout in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_39618(t3,((C_word*)t0)[2],t2);}

/* k39602 in k39418 in k39415 in sprout in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_39426(2,t2,t1);}
else{
C_trace("ChickenBridge.scm: 21   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[870],((C_word*)((C_word*)t0)[2])[1]);}}

/* k39424 in k39418 in k39415 in sprout in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39426,2,t0,t1);}
t2=(C_word)C_i_integerp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39432,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t2)){
t4=t3;
f_39432(2,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39552,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[7])[1]))){
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39566,a[2]=t6,a[3]=((C_word)li514),tmp=(C_word)a,a+=4,tmp));
t8=((C_word*)t6)[1];
f_39566(t8,t4,((C_word*)((C_word*)t0)[7])[1]);}
else{
t5=t4;
f_39552(2,t5,C_SCHEME_FALSE);}}}

/* do6685 in k39424 in k39418 in k39415 in sprout in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_39566(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39566,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_TRUE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39576,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_integerp(t4))){
t5=t3;
f_39576(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 21   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[869],t5);}}}

/* k39574 in do6685 in k39424 in k39418 in k39415 in sprout in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_39566(t3,((C_word*)t0)[2],t2);}

/* k39550 in k39424 in k39418 in k39415 in sprout in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_39432(2,t2,t1);}
else{
C_trace("ChickenBridge.scm: 21   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[868],((C_word*)((C_word*)t0)[2])[1]);}}

/* k39430 in k39424 in k39418 in k39415 in sprout in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39432,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39435,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39549,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t3,C_retrieve2(lf[715],"open-file"),((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_39435(t3,C_SCHEME_UNDEFINED);}}

/* k39547 in k39430 in k39424 in k39418 in k39415 in sprout in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_39435(t3,t2);}

/* k39433 in k39430 in k39424 in k39418 in k39415 in sprout in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_39435(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39435,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39436,a[2]=((C_word*)t0)[5],a[3]=((C_word)li511),tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39464,a[2]=((C_word*)t0)[4],a[3]=((C_word)li512),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39494,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39505,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word)li513),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_39505(t8,t4,((C_word*)t0)[2]);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39541,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 21   nextstart");
t6=t2;
f_39436(t6,t5);}}

/* k39539 in k39433 in k39430 in k39424 in k39418 in k39415 in sprout in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39541,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39545,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 21   nextid");
t3=((C_word*)t0)[2];
f_39464(t3,t2);}

/* k39543 in k39539 in k39433 in k39430 in k39424 in k39418 in k39415 in sprout in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 21   ffi_sched_sprout");
f_7236(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do6696 in k39433 in k39430 in k39424 in k39418 in k39415 in sprout in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_39505(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39505,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39515,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39530,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 21   nextstart");
t6=((C_word*)t0)[2];
f_39436(t6,t5);}}

/* k39528 in do6696 in k39433 in k39430 in k39424 in k39418 in k39415 in sprout in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39530,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39534,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 21   nextid");
t3=((C_word*)t0)[2];
f_39464(t3,t2);}

/* k39532 in k39528 in do6696 in k39433 in k39430 in k39424 in k39418 in k39415 in sprout in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 21   ffi_sched_sprout");
f_7236(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k39513 in do6696 in k39433 in k39430 in k39424 in k39418 in k39415 in sprout in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_39505(t3,((C_word*)t0)[2],t2);}

/* k39492 in k39433 in k39430 in k39424 in k39418 in k39415 in sprout in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_retrieve(lf[409]));}

/* nextid in k39433 in k39430 in k39424 in k39418 in k39415 in sprout in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_39464(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39464,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* nextstart in k39433 in k39430 in k39424 in k39418 in k39415 in sprout in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_39436(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39436,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* process-code-terminates? in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_39135(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
loop:
a=C_alloc(5);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_39135,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39151,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 21   process-code-terminates?");
t8=t4;
t9=t5;
t10=t3;
t1=t8;
t2=t9;
t3=t10;
goto loop;}
else{
t4=(C_word)C_i_car(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_equalp(t2,t4));}}}

/* k39149 in process-code-terminates? in k39131 in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 21   process-code-terminates?");
f_39135(((C_word*)t0)[4],t2,((C_word*)t0)[2]);}}

/* run-while-until in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39062(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39062,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39073,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 21   loop-error");
f_8880(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[863],t7,lf[864]));}
else{
t13=t12;
f_39073(2,t13,C_SCHEME_UNDEFINED);}}

/* k39071 in run-while-until in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39073,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39076,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[266]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_39076(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[267]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[178],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_39076(t10,t9);}
else{
t5=t2;
f_39076(t5,C_SCHEME_UNDEFINED);}}}

/* k39074 in k39071 in run-while-until in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_39076(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39076,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39083,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[234],((C_word*)((C_word*)t0)[3])[1],C_retrieve2(lf[860],"*process-stop*"));
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 21   make-loop-clause");
f_8640(t2,(C_word)C_a_i_list(&a,4,lf[102],((C_word*)t0)[2],lf[107],t4));}

/* k39081 in k39074 in k39071 in run-while-until in k39057 in k39054 in k39051 in k39048 in k39045 in k39042 in k39039 in k39036 in k39033 in k39030 in k39027 in k39024 in k39021 in k39018 in k39015 in k39012 in k39009 in k39006 in k39003 in k39000 in k38997 in k38994 in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_39083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 21   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* make-message-parser in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_38522(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38522,NULL,2,t1,t2);}
t3=C_SCHEME_END_OF_LIST;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38526,a[2]=t12,a[3]=t1,a[4]=t10,a[5]=t8,a[6]=t6,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_38855,a[2]=t4,a[3]=t12,a[4]=t6,a[5]=t10,a[6]=t8,a[7]=t15,a[8]=((C_word)li507),tmp=(C_word)a,a+=9,tmp));
t17=((C_word*)t15)[1];
f_38855(t17,t13,t2,C_SCHEME_FALSE);}

/* do6431 in make-message-parser in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_38855(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38855,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38865,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[7],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_38875,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t5,a[8]=t4,a[9]=t2,tmp=(C_word)a,a+=10,tmp);
t7=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 20   keyword?");
t8=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k38873 in do6431 in make-message-parser in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38875,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[9]);
if(C_truep((C_truep((C_word)C_i_equalp(t2,lf[836]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t2,lf[739]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t2,lf[837]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t2,lf[838]))?C_SCHEME_TRUE:C_SCHEME_FALSE)))))){
t3=(C_word)C_i_car(((C_word*)t0)[9]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=((C_word*)t0)[7];
f_38865(2,t5,t4);}
else{
C_trace("ChickenBridge.scm: 20   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[7],lf[839],((C_word*)((C_word*)t0)[8])[1]);}}
else{
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[8])[1],lf[739]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38901,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[9]);
if(C_truep((C_word)C_i_pairp(t3))){
C_trace("ChickenBridge.scm: 20   caar");
t4=*((C_word*)lf[575]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,((C_word*)t0)[9]);}
else{
t4=t2;
f_38901(2,t4,(C_word)C_i_car(((C_word*)t0)[9]));}}
else{
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[8])[1],lf[837]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38940,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38944,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 20   symbol->string");
t5=*((C_word*)lf[507]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[8])[1],lf[840]))){
t2=(C_word)C_i_car(((C_word*)t0)[9]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[7];
f_38865(2,t5,t4);}
else{
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[8])[1],lf[838]))){
t2=(C_word)C_i_car(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[7];
f_38865(2,t4,t3);}
else{
t2=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 20   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[7],lf[841],((C_word*)((C_word*)t0)[8])[1]);}
else{
t3=(C_word)C_i_car(((C_word*)t0)[9]);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[7];
f_38865(2,t6,t5);}}}}}}}

/* k38942 in k38873 in do6431 in make-message-parser in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   string->keyword");
t2=C_retrieve(lf[651]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k38938 in k38873 in do6431 in make-message-parser in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38940,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_38865(2,t4,t3);}

/* k38899 in k38873 in do6431 in make-message-parser in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38901,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38909,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38913,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 20   symbol->string");
t4=*((C_word*)lf[507]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t1);}

/* k38911 in k38899 in k38873 in do6431 in make-message-parser in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   string->keyword");
t2=C_retrieve(lf[651]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k38907 in k38899 in k38873 in do6431 in make-message-parser in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38909,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_38865(2,t4,t3);}

/* k38863 in do6431 in make-message-parser in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_38855(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k38524 in make-message-parser in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38526,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38530,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 20   reverse");
t3=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[7])[1]);}

/* k38528 in k38524 in make-message-parser in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38530,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38534,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 20   reverse");
t4=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[6])[1]);}

/* k38532 in k38528 in k38524 in make-message-parser in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38534,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38538,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 20   reverse");
t4=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[6])[1]);}

/* k38536 in k38532 in k38528 in k38524 in make-message-parser in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38538,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38542,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 20   reverse");
t4=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[6])[1]);}

/* k38540 in k38536 in k38532 in k38528 in k38524 in make-message-parser in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38542,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38543,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word)li506),tmp=(C_word)a,a+=8,tmp));}

/* f_38543 in k38540 in k38536 in k38532 in k38528 in k38524 in make-message-parser in k38444 in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38543(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_38543,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_38549,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t3,a[8]=((C_word)li505),tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 20   call-with-current-continuation");
t5=*((C_word*)lf[835]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}

/* a38548 */
static void C_ccall f_38549(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_38549,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[7])[1];
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_38553,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=t2,a[8]=t1,a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 20   return");
t5=t2;
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_SCHEME_TRUE);}
else{
t5=t4;
f_38553(2,t5,C_SCHEME_UNDEFINED);}}

/* k38551 in a38548 */
static void C_ccall f_38553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38553,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_38556,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_38782,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=t4,a[7]=((C_word*)t0)[9],a[8]=((C_word)li504),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_38782(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do6442 in k38551 in a38548 */
static void C_fcall f_38782(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38782,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38792,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38813,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   format");
t5=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_SCHEME_FALSE,lf[833],((C_word*)t0)[4]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38819,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38829,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 20   keyword?");
t7=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}}

/* k38827 in do6442 in k38551 in a38548 */
static void C_ccall f_38829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_member(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
t4=((C_word*)t0)[3];
f_38819(t4,t3);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t5=((C_word*)t0)[3];
f_38819(t5,(C_word)C_i_member(t4,((C_word*)((C_word*)t0)[2])[1]));}}
else{
t2=((C_word*)t0)[3];
f_38819(t2,C_SCHEME_FALSE);}}

/* k38817 in do6442 in k38551 in a38548 */
static void C_fcall f_38819(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38819,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38826,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   format");
t3=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_SCHEME_FALSE,lf[834],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_38792(2,t2,C_SCHEME_UNDEFINED);}}

/* k38824 in k38817 in do6442 in k38551 in a38548 */
static void C_ccall f_38826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k38811 in do6442 in k38551 in a38548 */
static void C_ccall f_38813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k38790 in do6442 in k38551 in a38548 */
static void C_ccall f_38792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_38782(t5,((C_word*)t0)[2],t4);}

/* k38554 in k38551 in a38548 */
static void C_ccall f_38556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38556,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38559,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38737,a[2]=t2,a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t3;
f_38737(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_38737(t5,(C_word)C_i_not(t4));}}

/* k38735 in k38554 in k38551 in a38548 */
static void C_fcall f_38737(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38737,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38742,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word)li503),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_38742(t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[2];
f_38559(2,t2,C_SCHEME_UNDEFINED);}}

/* do6450 in k38735 in k38554 in k38551 in a38548 */
static void C_fcall f_38742(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38742,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38752,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_38752(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 20   keyword?");
t5=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k38750 in do6450 in k38735 in k38554 in k38551 in a38548 */
static void C_ccall f_38752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)((C_word*)t0)[2])[1];
f_38742(t4,((C_word*)t0)[4]);}}

/* k38557 in k38554 in k38551 in a38548 */
static void C_ccall f_38559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38559,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38562,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38691,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t4=t3;
f_38691(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_38691(t5,(C_word)C_i_not(t4));}}

/* k38689 in k38557 in k38554 in k38551 in a38548 */
static void C_fcall f_38691(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38691,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38696,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word)li502),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_38696(t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[2];
f_38562(2,t2,C_SCHEME_UNDEFINED);}}

/* do6456 in k38689 in k38557 in k38554 in k38551 in a38548 */
static void C_fcall f_38696(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38696,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38706,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_38706(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 20   keyword?");
t5=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k38704 in do6456 in k38689 in k38557 in k38554 in k38551 in a38548 */
static void C_ccall f_38706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)((C_word*)t0)[2])[1];
f_38696(t4,((C_word*)t0)[4]);}}

/* k38560 in k38557 in k38554 in k38551 in a38548 */
static void C_ccall f_38562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38562,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38565,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_not(t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38588,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t4)){
t6=t5;
f_38588(t6,t4);}
else{
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[2])[1]);
t7=t5;
f_38588(t7,(C_word)C_i_not(t6));}}

/* k38586 in k38560 in k38557 in k38554 in k38551 in a38548 */
static void C_fcall f_38588(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38588,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_truep(t2)?((C_word*)((C_word*)t0)[6])[1]:((C_word*)((C_word*)t0)[7])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38597,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word)li501),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_38597(t7,((C_word*)t0)[2],t3);}
else{
t2=((C_word*)t0)[2];
f_38565(2,t2,C_SCHEME_UNDEFINED);}}

/* do6464 in k38586 in k38560 in k38557 in k38554 in k38551 in a38548 */
static void C_fcall f_38597(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38597,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38607,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38613,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
C_trace("ChickenBridge.scm: 20   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}}

/* k38611 in do6464 in k38586 in k38560 in k38557 in k38554 in k38551 in a38548 */
static void C_ccall f_38613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38613,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38616,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
if(C_truep((C_word)C_i_member(t3,((C_word*)t0)[2]))){
t4=t2;
f_38616(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38647,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 20   format");
t6=C_retrieve(lf[407]);
((C_proc6)C_retrieve_proc(t6))(6,t6,t4,C_SCHEME_FALSE,lf[831],t5,((C_word*)t0)[3]);}}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38666,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 20   format");
t4=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_SCHEME_FALSE,lf[832],t3);}}

/* k38664 in k38611 in do6464 in k38586 in k38560 in k38557 in k38554 in k38551 in a38548 */
static void C_ccall f_38666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k38645 in k38611 in do6464 in k38586 in k38560 in k38557 in k38554 in k38551 in a38548 */
static void C_ccall f_38647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k38614 in k38611 in do6464 in k38586 in k38560 in k38557 in k38554 in k38551 in a38548 */
static void C_ccall f_38616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38616,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38623,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38637,a[2]=t4,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   format");
t6=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_SCHEME_FALSE,lf[830],((C_word*)t0)[2]);}
else{
t5=t4;
f_38623(2,t5,C_SCHEME_UNDEFINED);}}

/* k38635 in k38614 in k38611 in do6464 in k38586 in k38560 in k38557 in k38554 in k38551 in a38548 */
static void C_ccall f_38637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k38621 in k38614 in k38611 in do6464 in k38586 in k38560 in k38557 in k38554 in k38551 in a38548 */
static void C_ccall f_38623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_38607(2,t4,t3);}

/* k38605 in do6464 in k38586 in k38560 in k38557 in k38554 in k38551 in a38548 */
static void C_ccall f_38607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_38597(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k38563 in k38560 in k38557 in k38554 in k38551 in a38548 */
static void C_ccall f_38565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38565,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38578,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   format");
t3=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_SCHEME_FALSE,lf[829],((C_word*)t0)[2]);}}

/* k38576 in k38563 in k38560 in k38557 in k38554 in k38551 in a38548 */
static void C_ccall f_38578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* cs:f in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38405(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_38405r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_38405r(t0,t1,t2);}}

static void C_ccall f_38405r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_trace("ChickenBridge.scm: 20   cs:send");
f_38206(t1,lf[826],t2);}

/* cs:i in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38399(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_38399r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_38399r(t0,t1,t2);}}

static void C_ccall f_38399r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_trace("ChickenBridge.scm: 20   cs:send");
f_38206(t1,lf[815],t2);}

/* cs:send in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_38206(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38206,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=lf[814];
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38210,a[2]=t4,a[3]=t1,a[4]=t10,a[5]=t8,a[6]=t6,a[7]=t2,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t4)[1]))){
C_trace("ChickenBridge.scm: 20   error");
t12=*((C_word*)lf[74]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,lf[823]);}
else{
t12=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38379,a[2]=t11,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t13=(C_word)C_i_cdr(((C_word*)t4)[1]);
if(C_truep((C_word)C_i_nullp(t13))){
t14=(C_word)C_i_car(((C_word*)t4)[1]);
t15=t12;
f_38379(t15,(C_word)C_i_pairp(t14));}
else{
t14=t12;
f_38379(t14,C_SCHEME_FALSE);}}}

/* k38377 in cs:send in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_38379(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_38210(2,t4,t3);}
else{
t2=((C_word*)t0)[2];
f_38210(2,t2,C_SCHEME_UNDEFINED);}}

/* k38208 in cs:send in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38210,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38213,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_integerp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t2;
f_38213(2,t8,t7);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 20   error");
t5=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,lf[822],t4);}}

/* k38211 in k38208 in cs:send in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38213,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38216,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[2])[1]))){
C_trace("ChickenBridge.scm: 20   error");
t3=*((C_word*)lf[74]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[820]);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_numberp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t2;
f_38216(2,t8,t7);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 20   error");
t5=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,lf[821],t4);}}}

/* k38214 in k38211 in k38208 in cs:send in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38216,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38221,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word)li497),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_38221(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],lf[819]);}

/* do6404 in k38214 in k38211 in k38208 in cs:send in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_38221(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38221,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=(C_word)C_eqp(((C_word*)t0)[6],lf[815]);
t5=(C_truep(t4)?C_fix(1):C_retrieve(lf[816]));
t6=t1;
t7=((C_word*)((C_word*)t0)[5])[1];
t8=((C_word*)((C_word*)t0)[4])[1];
t9=((C_word*)((C_word*)t0)[3])[1];
t10=(C_word)C_i_foreign_fixnum_argumentp(t5);
t11=(C_word)C_i_foreign_fixnum_argumentp(t7);
t12=(C_word)C_i_foreign_flonum_argumentp(t8);
t13=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7589,a[2]=t12,a[3]=t11,a[4]=t10,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
if(C_truep(t9)){
t14=(C_word)C_i_foreign_string_argumentp(t9);
C_trace("##sys#make-c-string");
t15=C_retrieve(lf[20]);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}
else{
t14=t13;
f_7589(2,t14,C_SCHEME_FALSE);}}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38241,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t5))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38255,a[2]=t4,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38259,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t8=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 20   number->string");
C_number_to_string(3,0,t7,t8);}
else{
t6=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_stringp(t6))){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38273,a[2]=t4,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 20   string-append");
t9=*((C_word*)lf[417]+1);
((C_proc5)C_retrieve_proc(t9))(5,t9,t7,((C_word*)((C_word*)t0)[3])[1],t3,t8);}
else{
t7=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_symbolp(t7))){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38287,a[2]=t4,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38291,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=t8,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 20   symbol->string");
t11=*((C_word*)lf[507]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t9,t10);}
else{
t8=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 20   error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,lf[818],t8);}}}}}

/* k38289 in do6404 in k38214 in k38211 in k38208 in cs:send in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   string-append");
t2=*((C_word*)lf[417]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2],t1);}

/* k38285 in do6404 in k38214 in k38211 in k38208 in cs:send in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38241(2,t3,t2);}

/* k38271 in do6404 in k38214 in k38211 in k38208 in cs:send in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38241(2,t3,t2);}

/* k38257 in do6404 in k38214 in k38211 in k38208 in cs:send in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   string-append");
t2=*((C_word*)lf[417]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2],t1);}

/* k38253 in do6404 in k38214 in k38211 in k38208 in cs:send in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38241(2,t3,t2);}

/* k38239 in do6404 in k38214 in k38211 in k38208 in cs:send in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_38221(t3,((C_word*)t0)[2],t2,lf[817]);}

/* k7587 in do6404 in k38214 in k38211 in k38208 in cs:send in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub419(C_SCHEME_UNDEFINED,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* cs:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38034(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr3r,(void*)f_38034r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_38034r(t0,t1,t2,t3);}}

static void C_ccall f_38034r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(4);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38038,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   string-append");
t5=*((C_word*)lf[417]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,lf[811],t2,lf[812]);}

/* k38036 in cs:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38038,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38041,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_length(((C_word*)t0)[2]);
if(C_truep((C_word)C_i_evenp(t5))){
t6=t4;
f_38041(2,t6,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 20   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[810],((C_word*)t0)[2]);}}

/* k38039 in k38036 in cs:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38041,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38046,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li495),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_38046(t5,((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do6384 in k38039 in k38036 in cs:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_38046(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38046,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
t6=((C_word*)((C_word*)t0)[3])[1];
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7563,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t6)){
t8=(C_word)C_i_foreign_string_argumentp(t6);
C_trace("##sys#make-c-string");
t9=C_retrieve(lf[20]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t7,t8);}
else{
t8=t7;
f_7563(2,t8,C_SCHEME_FALSE);}}
else{
t5=(C_word)C_i_cadr(t2);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(t2);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38066,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t9=(C_word)C_eqp(t7,lf[789]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38080,a[2]=t8,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_cadr(t2);
t12=(C_truep(t11)?lf[790]:lf[791]);
C_trace("ChickenBridge.scm: 20   string-append");
t13=*((C_word*)lf[417]+1);
((C_proc5)C_retrieve_proc(t13))(5,t13,t10,((C_word*)((C_word*)t0)[3])[1],lf[792],t12);}
else{
t10=(C_word)C_eqp(t7,lf[793]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38097,a[2]=t8,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t12=(C_word)C_i_cadr(t2);
t13=(C_truep(t12)?lf[794]:lf[795]);
C_trace("ChickenBridge.scm: 20   string-append");
t14=*((C_word*)lf[417]+1);
((C_proc5)C_retrieve_proc(t14))(5,t14,t11,((C_word*)((C_word*)t0)[3])[1],lf[796],t13);}
else{
t11=(C_word)C_eqp(t7,lf[797]);
if(C_truep(t11)){
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38113,a[2]=t2,a[3]=t8,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t13=t12;
f_38113(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 20   error");
t13=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[800],((C_word*)t4)[1]);}}
else{
t12=(C_word)C_eqp(t7,lf[801]);
if(C_truep(t12)){
t13=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38140,a[2]=t2,a[3]=t8,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t14=t13;
f_38140(2,t14,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 20   error");
t14=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t14))(4,t14,t13,lf[804],((C_word*)t4)[1]);}}
else{
t13=(C_word)C_eqp(t7,lf[805]);
if(C_truep(t13)){
t14=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38167,a[2]=t2,a[3]=t8,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t15=t14;
f_38167(2,t15,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 20   error");
t15=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t14,lf[808],((C_word*)t4)[1]);}}
else{
t14=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 20   error");
t15=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t8,lf[809],t14);}}}}}}}

/* k38165 in do6384 in k38039 in k38036 in cs:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38167,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38171,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 20   string-append");
t4=*((C_word*)lf[417]+1);
((C_proc6)C_retrieve_proc(t4))(6,t4,t2,((C_word*)((C_word*)t0)[4])[1],lf[806],t3,lf[807]);}

/* k38169 in k38165 in do6384 in k38039 in k38036 in cs:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38066(2,t3,t2);}

/* k38138 in do6384 in k38039 in k38036 in cs:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38140,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38144,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 20   string-append");
t4=*((C_word*)lf[417]+1);
((C_proc6)C_retrieve_proc(t4))(6,t4,t2,((C_word*)((C_word*)t0)[4])[1],lf[802],t3,lf[803]);}

/* k38142 in k38138 in do6384 in k38039 in k38036 in cs:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38066(2,t3,t2);}

/* k38111 in do6384 in k38039 in k38036 in cs:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38113,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38117,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 20   string-append");
t4=*((C_word*)lf[417]+1);
((C_proc6)C_retrieve_proc(t4))(6,t4,t2,((C_word*)((C_word*)t0)[4])[1],lf[798],t3,lf[799]);}

/* k38115 in k38111 in do6384 in k38039 in k38036 in cs:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38066(2,t3,t2);}

/* k38095 in do6384 in k38039 in k38036 in cs:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38066(2,t3,t2);}

/* k38078 in do6384 in k38039 in k38036 in cs:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38066(2,t3,t2);}

/* k38064 in do6384 in k38039 in k38036 in cs:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_38066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_38046(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k7561 in do6384 in k38039 in k38036 in cs:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub410(C_SCHEME_UNDEFINED,t1));}

/* snd:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37921(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr3r,(void*)f_37921r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_37921r(t0,t1,t2,t3);}}

static void C_ccall f_37921r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37926,a[2]=t5,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 20   full-pathname");
f_24393(t6,((C_word*)t4)[1]);}

/* k37924 in snd:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37926,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=lf[771]=C_SCHEME_FALSE;;
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37930,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 20   pathname-type");
f_24351(t4,((C_word*)((C_word*)t0)[4])[1]);}

/* k37928 in k37924 in snd:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37930,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37933,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37981,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 20   list-prop");
t4=C_retrieve2(lf[77],"list-prop");
f_8284(4,t4,t3,((C_word*)((C_word*)t0)[3])[1],lf[784]);}

/* k37979 in k37928 in k37924 in snd:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37981,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_37933(t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37973,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37977,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=((C_word*)t0)[2];
if(C_truep((C_word)C_i_string_equal_p(t4,lf[783]))){
t5=t3;
f_37977(t5,(C_word)C_a_i_list(&a,2,lf[784],C_retrieve(lf[785])));}
else{
if(C_truep((C_word)C_i_string_equal_p(t4,lf[786]))){
t5=t3;
f_37977(t5,(C_word)C_a_i_list(&a,2,lf[784],C_retrieve(lf[787])));}
else{
t5=(C_word)C_i_string_equal_p(t4,lf[788]);
t6=t3;
f_37977(t6,(C_truep(t5)?(C_word)C_a_i_list(&a,2,lf[784],C_retrieve(lf[785])):C_SCHEME_END_OF_LIST));}}}}

/* k37975 in k37979 in k37928 in k37924 in snd:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_37977(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   append");
t2=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k37971 in k37979 in k37928 in k37924 in snd:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_37933(t3,t2);}

/* k37931 in k37928 in k37924 in snd:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_37933(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37933,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37936,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37966,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 20   list-prop");
t4=C_retrieve2(lf[77],"list-prop");
f_8284(4,t4,t3,((C_word*)((C_word*)t0)[4])[1],lf[777]);}

/* k37964 in k37931 in k37928 in k37924 in snd:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37966,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_37936(t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37958,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37962,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=((C_word*)t0)[2];
if(C_truep((C_word)C_i_string_equal_p(t4,lf[776]))){
t5=t3;
f_37962(t5,(C_word)C_a_i_list(&a,2,lf[777],C_retrieve(lf[778])));}
else{
if(C_truep((C_word)C_i_string_equal_p(t4,lf[779]))){
t5=t3;
f_37962(t5,(C_word)C_a_i_list(&a,2,lf[777],C_retrieve(lf[780])));}
else{
t5=(C_word)C_i_string_equal_p(t4,lf[781]);
t6=t3;
f_37962(t6,(C_truep(t5)?(C_word)C_a_i_list(&a,2,lf[777],C_retrieve(lf[782])):C_SCHEME_END_OF_LIST));}}}}

/* k37960 in k37964 in k37931 in k37928 in k37924 in snd:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_37962(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   append");
t2=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k37956 in k37964 in k37931 in k37928 in k37924 in snd:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_37936(t3,t2);}

/* k37934 in k37931 in k37928 in k37924 in snd:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_37936(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37936,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37939,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_apply(6,0,t2,C_retrieve(lf[774]),lf[775],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);}

/* k37937 in k37934 in k37931 in k37928 in k37924 in snd:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37939,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37943,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37951,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   list-prop");
t4=C_retrieve2(lf[77],"list-prop");
f_8284(5,t4,t3,((C_word*)((C_word*)t0)[2])[1],lf[772],C_retrieve(lf[773]));}

/* k37949 in k37937 in k37934 in k37931 in k37928 in k37924 in snd:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37951,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 20   append");
t3=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k37941 in k37937 in k37934 in k37931 in k37928 in k37924 in snd:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[771],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_retrieve2(lf[771],"*sndfileinfo*"));}

/* mp:mm in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37848(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_37848,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 20   error");
t3=*((C_word*)lf[74]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[770]);}

/* mp:intypes in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37739(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2r,(void*)f_37739r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_37739r(t0,t1,t2);}}

static void C_ccall f_37739r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37743,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 20   error");
t6=*((C_word*)lf[74]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[767]);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37758,a[2]=t2,a[3]=t5,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(t2);
t9=t6;
f_37758(t9,(C_word)C_eqp(t8,C_SCHEME_FALSE));}
else{
t8=t6;
f_37758(t8,C_SCHEME_FALSE);}}}

/* k37756 in mp:intypes in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_37758(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37758,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t3=((C_word*)t0)[3];
f_37743(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37765,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[2]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t2;
f_37765(t5,(C_word)C_eqp(t4,C_SCHEME_TRUE));}
else{
t4=t2;
f_37765(t4,C_SCHEME_FALSE);}}}

/* k37763 in k37756 in mp:intypes in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_37765(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37765,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[4],0,C_fix(127));
t3=((C_word*)t0)[3];
f_37743(2,t3,t2);}
else{
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37771,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word)li491),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_37771(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* do6358 in k37763 in k37756 in mp:intypes in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_37771(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37771,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37781,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37791,a[2]=t2,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 20   <=");
C_less_or_equal_p(5,0,t4,C_fix(8),t5,C_fix(14));}}

/* k37789 in do6358 in k37763 in k37756 in mp:intypes in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37791,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37795,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37799,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=(C_word)C_a_i_minus(&a,2,t4,C_fix(8));
C_trace("ChickenBridge.scm: 20   ash");
t6=C_retrieve(lf[668]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,C_fix(1),t5);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 20   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],lf[768],t2);}}

/* k37797 in k37789 in do6358 in k37763 in k37756 in mp:intypes in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   logior");
t2=C_retrieve(lf[329]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k37793 in k37789 in do6358 in k37763 in k37756 in mp:intypes in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_37781(2,t3,t2);}

/* k37779 in do6358 in k37763 in k37756 in mp:intypes in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_37771(t3,((C_word*)t0)[2],t2);}

/* k37741 in mp:intypes in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=((C_word*)t0)[3];
t3=((C_word*)((C_word*)t0)[2])[1];
t4=(C_word)C_i_foreign_fixnum_argumentp(t3);
t5=t2;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub392(C_SCHEME_UNDEFINED,t4));}

/* mp:inchans in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37634(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2r,(void*)f_37634r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_37634r(t0,t1,t2);}}

static void C_ccall f_37634r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37638,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 20   error");
t6=*((C_word*)lf[74]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[764]);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37653,a[2]=t2,a[3]=t5,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(t2);
t9=t6;
f_37653(t9,(C_word)C_eqp(t8,C_SCHEME_FALSE));}
else{
t8=t6;
f_37653(t8,C_SCHEME_FALSE);}}}

/* k37651 in mp:inchans in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_37653(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37653,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t3=((C_word*)t0)[3];
f_37638(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37660,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[2]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t2;
f_37660(t5,(C_word)C_eqp(t4,C_SCHEME_TRUE));}
else{
t4=t2;
f_37660(t4,C_SCHEME_FALSE);}}}

/* k37658 in k37651 in mp:inchans in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_37660(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37660,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[4],0,C_fix(65535));
t3=((C_word*)t0)[3];
f_37638(2,t3,t2);}
else{
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37666,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word)li489),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_37666(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* do6350 in k37658 in k37651 in mp:inchans in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_37666(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37666,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37676,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37686,a[2]=t2,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 20   <=");
C_less_or_equal_p(5,0,t4,C_fix(0),t5,C_fix(15));}}

/* k37684 in do6350 in k37658 in k37651 in mp:inchans in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37686,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37690,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37694,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 20   ash");
t5=C_retrieve(lf[668]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,C_fix(1),t4);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 20   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],lf[765],t2);}}

/* k37692 in k37684 in do6350 in k37658 in k37651 in mp:inchans in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   logior");
t2=C_retrieve(lf[329]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k37688 in k37684 in do6350 in k37658 in k37651 in mp:inchans in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_37676(2,t3,t2);}

/* k37674 in do6350 in k37658 in k37651 in mp:inchans in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_37666(t3,((C_word*)t0)[2],t2);}

/* k37636 in mp:inchans in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=((C_word*)t0)[3];
t3=((C_word*)((C_word*)t0)[2])[1];
t4=(C_word)C_i_foreign_fixnum_argumentp(t3);
t5=t2;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub388(C_SCHEME_UNDEFINED,t4));}

/* mp:inhook in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37628(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_37628,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 20   error");
t3=*((C_word*)lf[74]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[762]);}

/* mp:recordseq in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37613(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_37613r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_37613r(t0,t1,t2);}}

static void C_ccall f_37613r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t2,C_fix(0)));
C_trace("ChickenBridge.scm: 20   ffi_mp_set_record_seq");
t5=C_retrieve(lf[760]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}

/* mp:clearseq in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37607,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub407(C_SCHEME_UNDEFINED));}

/* mp:plotseq in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37601,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub405(C_SCHEME_UNDEFINED));}

/* mp:copyseq in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37595,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub403(C_SCHEME_UNDEFINED));}

/* mp:saveseq in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37589,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub401(C_SCHEME_UNDEFINED));}

/* mp:playseq in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37583(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37583,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub399(C_SCHEME_UNDEFINED));}

/* mp:tuning in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37553(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2rv,(void*)f_37553r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_37553r(t0,t1,t2);}}

static void C_ccall f_37553r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(4);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?C_fix(1):(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37563,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_integerp(t4))){
C_trace("ChickenBridge.scm: 20   <");
C_lessp(5,0,t5,C_fix(0),t4,C_fix(17));}
else{
t6=t5;
f_37563(2,t6,C_SCHEME_FALSE);}}

/* k37561 in mp:tuning in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[2]);
t4=t2;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub396(C_SCHEME_UNDEFINED,t3));}
else{
C_trace("ChickenBridge.scm: 20   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[753],((C_word*)t0)[2]);}}

/* mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37124(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_37124r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_37124r(t0,t1,t2);}}

static void C_ccall f_37124r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(8192);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_37128,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_37128(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[737]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37431,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[349],lf[737]);}
else{
t23=t22;
f_37431(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[746]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37466,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[349],lf[746]);}
else{
t24=t23;
f_37466(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[741]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37501,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[349],lf[741]);}
else{
t25=t24;
f_37501(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37530,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[353],t2);}
else{
t25=t24;
f_37530(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k37528 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37530,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37537,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37545,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k37543 in k37528 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_37537(2,t2,C_SCHEME_UNDEFINED);}}

/* k37535 in k37528 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37128(t5,t4);}

/* k37499 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37501,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37505,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_37505(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37503 in k37499 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37128(t7,t6);}

/* k37464 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37466,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37470,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_37470(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37468 in k37464 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37128(t7,t6);}

/* k37429 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37431,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37435,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_37435(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37433 in k37429 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37128(t7,t6);}

/* k37126 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_37128(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37128,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_37131,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_37131(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37296,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[737]);}
else{
t6=t5;
f_37296(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[746]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37331,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[746]);}
else{
t7=t6;
f_37331(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[741]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37366,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[741]);}
else{
t8=t7;
f_37366(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37395,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_37395(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k37393 in k37126 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37395,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37402,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37410,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k37408 in k37393 in k37126 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_37402(2,t2,C_SCHEME_UNDEFINED);}}

/* k37400 in k37393 in k37126 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37131(t5,t4);}

/* k37364 in k37126 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37366,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37370,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_37370(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37368 in k37364 in k37126 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37131(t7,t6);}

/* k37329 in k37126 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37331,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37335,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_37335(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37333 in k37329 in k37126 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37131(t7,t6);}

/* k37294 in k37126 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37296,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37300,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_37300(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37298 in k37294 in k37126 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37131(t7,t6);}

/* k37129 in k37126 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_37131(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37131,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37134,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_37134(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37161,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[737]);}
else{
t6=t5;
f_37161(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[746]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37196,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[746]);}
else{
t7=t6;
f_37196(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[741]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37231,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[741]);}
else{
t8=t7;
f_37231(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37260,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_37260(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k37258 in k37129 in k37126 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37260,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37267,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37275,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k37273 in k37258 in k37129 in k37126 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_37267(2,t2,C_SCHEME_UNDEFINED);}}

/* k37265 in k37258 in k37129 in k37126 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37134(t5,t4);}

/* k37229 in k37129 in k37126 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37231,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37235,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_37235(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37233 in k37229 in k37129 in k37126 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37134(t7,t6);}

/* k37194 in k37129 in k37126 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37196,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37200,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_37200(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37198 in k37194 in k37129 in k37126 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37134(t7,t6);}

/* k37159 in k37129 in k37126 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37161,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37165,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_37165(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37163 in k37159 in k37129 in k37126 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37134(t7,t6);}

/* k37132 in k37129 in k37126 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_37134(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37134,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37137,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_37137(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k37135 in k37132 in k37129 in k37126 in mp:bend in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   ffi_mp_send_data");
f_7499(((C_word*)t0)[5],C_fix(14),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36695(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_36695r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_36695r(t0,t1,t2);}}

static void C_ccall f_36695r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_36699,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_36699(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[737]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37002,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[349],lf[737]);}
else{
t23=t22;
f_37002(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[746]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37037,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[349],lf[746]);}
else{
t24=t23;
f_37037(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[741]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37072,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[349],lf[741]);}
else{
t25=t24;
f_37072(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37101,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[353],t2);}
else{
t25=t24;
f_37101(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k37099 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37101,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37108,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37116,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k37114 in k37099 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_37108(2,t2,C_SCHEME_UNDEFINED);}}

/* k37106 in k37099 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_36699(t5,t4);}

/* k37070 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37072,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37076,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_37076(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37074 in k37070 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36699(t7,t6);}

/* k37035 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37037,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37041,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_37041(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37039 in k37035 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36699(t7,t6);}

/* k37000 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37002,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37006,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_37006(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37004 in k37000 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_37006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36699(t7,t6);}

/* k36697 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_36699(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36699,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_36702,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_36702(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36867,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[737]);}
else{
t6=t5;
f_36867(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[746]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36902,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[746]);}
else{
t7=t6;
f_36902(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[741]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36937,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[741]);}
else{
t8=t7;
f_36937(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36966,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_36966(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k36964 in k36697 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36966,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36973,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36981,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36979 in k36964 in k36697 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36973(2,t2,C_SCHEME_UNDEFINED);}}

/* k36971 in k36964 in k36697 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_36702(t5,t4);}

/* k36935 in k36697 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36937,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36941,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36941(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36939 in k36935 in k36697 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36702(t7,t6);}

/* k36900 in k36697 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36902,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36906,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36906(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36904 in k36900 in k36697 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36702(t7,t6);}

/* k36865 in k36697 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36867,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36871,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36871(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36869 in k36865 in k36697 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36702(t7,t6);}

/* k36700 in k36697 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_36702(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36702,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36705,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_36705(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36732,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[737]);}
else{
t6=t5;
f_36732(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[746]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36767,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[746]);}
else{
t7=t6;
f_36767(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[741]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36802,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[741]);}
else{
t8=t7;
f_36802(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36831,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_36831(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k36829 in k36700 in k36697 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36831,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36838,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36846,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36844 in k36829 in k36700 in k36697 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36838(2,t2,C_SCHEME_UNDEFINED);}}

/* k36836 in k36829 in k36700 in k36697 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_36705(t5,t4);}

/* k36800 in k36700 in k36697 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36802,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36806,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36806(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36804 in k36800 in k36700 in k36697 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36705(t7,t6);}

/* k36765 in k36700 in k36697 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36767,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36771,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36771(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36769 in k36765 in k36700 in k36697 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36705(t7,t6);}

/* k36730 in k36700 in k36697 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36732,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36736,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36736(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36734 in k36730 in k36700 in k36697 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36705(t7,t6);}

/* k36703 in k36700 in k36697 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_36705(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36705,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36708,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_36708(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k36706 in k36703 in k36700 in k36697 in mp:press in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   ffi_mp_send_data");
f_7499(((C_word*)t0)[5],C_fix(13),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36266(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_36266r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_36266r(t0,t1,t2);}}

static void C_ccall f_36266r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_36270,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_36270(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[737]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36573,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[349],lf[737]);}
else{
t23=t22;
f_36573(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[746]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36608,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[349],lf[746]);}
else{
t24=t23;
f_36608(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[741]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36643,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[349],lf[741]);}
else{
t25=t24;
f_36643(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36672,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[353],t2);}
else{
t25=t24;
f_36672(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k36670 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36672,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36679,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36687,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36685 in k36670 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36679(2,t2,C_SCHEME_UNDEFINED);}}

/* k36677 in k36670 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_36270(t5,t4);}

/* k36641 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36643(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36643,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36647,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36647(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36645 in k36641 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36270(t7,t6);}

/* k36606 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36608,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36612,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36612(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36610 in k36606 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36270(t7,t6);}

/* k36571 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36573,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36577,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36577(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36575 in k36571 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36270(t7,t6);}

/* k36268 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_36270(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36270,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_36273,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_36273(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36438,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[737]);}
else{
t6=t5;
f_36438(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[746]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36473,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[746]);}
else{
t7=t6;
f_36473(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[741]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36508,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[741]);}
else{
t8=t7;
f_36508(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36537,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_36537(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k36535 in k36268 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36537,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36544,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36552,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36550 in k36535 in k36268 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36544(2,t2,C_SCHEME_UNDEFINED);}}

/* k36542 in k36535 in k36268 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_36273(t5,t4);}

/* k36506 in k36268 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36508,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36512,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36512(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36510 in k36506 in k36268 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36273(t7,t6);}

/* k36471 in k36268 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36473,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36477,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36477(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36475 in k36471 in k36268 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36273(t7,t6);}

/* k36436 in k36268 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36438,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36442,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36442(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36440 in k36436 in k36268 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36273(t7,t6);}

/* k36271 in k36268 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_36273(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36273,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36276,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_36276(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36303,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[737]);}
else{
t6=t5;
f_36303(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[746]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36338,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[746]);}
else{
t7=t6;
f_36338(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[741]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36373,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[741]);}
else{
t8=t7;
f_36373(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36402,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_36402(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k36400 in k36271 in k36268 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36402,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36409,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36417,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36415 in k36400 in k36271 in k36268 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36409(2,t2,C_SCHEME_UNDEFINED);}}

/* k36407 in k36400 in k36271 in k36268 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_36276(t5,t4);}

/* k36371 in k36271 in k36268 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36373,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36377,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36377(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36375 in k36371 in k36271 in k36268 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36276(t7,t6);}

/* k36336 in k36271 in k36268 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36338,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36342,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36342(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36340 in k36336 in k36271 in k36268 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36276(t7,t6);}

/* k36301 in k36271 in k36268 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36303,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36307,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36307(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36305 in k36301 in k36271 in k36268 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36276(t7,t6);}

/* k36274 in k36271 in k36268 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_36276(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36276,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36279,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_36279(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k36277 in k36274 in k36271 in k36268 in mp:prog in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   ffi_mp_send_data");
f_7499(((C_word*)t0)[5],C_fix(12),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35559(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_35559r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_35559r(t0,t1,t2);}}

static void C_ccall f_35559r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_35563,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_35563(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[737]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36109,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[349],lf[737]);}
else{
t27=t26;
f_36109(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[748]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36144,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[349],lf[748]);}
else{
t28=t27;
f_36144(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[746]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36179,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[349],lf[746]);}
else{
t29=t28;
f_36179(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[741]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36214,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[349],lf[741]);}
else{
t30=t29;
f_36214(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36243,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[353],t2);}
else{
t30=t29;
f_36243(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k36241 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36243,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36250,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36258,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36256 in k36241 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36250(2,t2,C_SCHEME_UNDEFINED);}}

/* k36248 in k36241 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35563(t5,t4);}

/* k36212 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36214,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36218,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36218(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36216 in k36212 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35563(t7,t6);}

/* k36177 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36179,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36183,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36183(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36181 in k36177 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35563(t7,t6);}

/* k36142 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36144,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36148,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36148(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36146 in k36142 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35563(t7,t6);}

/* k36107 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36109,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36113,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36113(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36111 in k36107 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35563(t7,t6);}

/* k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_35563(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35563,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_35566,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_35566(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35939,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[737]);}
else{
t6=t5;
f_35939(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[748]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35974,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[748]);}
else{
t7=t6;
f_35974(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[746]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36009,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[746]);}
else{
t8=t7;
f_36009(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[741]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36044,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[741]);}
else{
t9=t8;
f_36044(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36073,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[353],((C_word*)t0)[7]);}
else{
t9=t8;
f_36073(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k36071 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36073,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36080,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36088,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36086 in k36071 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36080(2,t2,C_SCHEME_UNDEFINED);}}

/* k36078 in k36071 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35566(t5,t4);}

/* k36042 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36044,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36048,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36048(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36046 in k36042 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35566(t7,t6);}

/* k36007 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36009,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36013,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_36013(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36011 in k36007 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_36013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35566(t7,t6);}

/* k35972 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35974,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35978,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35978(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35976 in k35972 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35566(t7,t6);}

/* k35937 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35939,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35943,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35943(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35941 in k35937 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35566(t7,t6);}

/* k35564 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_35566(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35566,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_35569,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_35569(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35769,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[737]);}
else{
t6=t5;
f_35769(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[748]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35804,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[748]);}
else{
t7=t6;
f_35804(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[746]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35839,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[746]);}
else{
t8=t7;
f_35839(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[741]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35874,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[741]);}
else{
t9=t8;
f_35874(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35903,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[353],((C_word*)t0)[7]);}
else{
t9=t8;
f_35903(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k35901 in k35564 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35903,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35910,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35918,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35916 in k35901 in k35564 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35910(2,t2,C_SCHEME_UNDEFINED);}}

/* k35908 in k35901 in k35564 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35569(t5,t4);}

/* k35872 in k35564 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35874,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35878,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35878(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35876 in k35872 in k35564 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35569(t7,t6);}

/* k35837 in k35564 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35839,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35843,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35843(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35841 in k35837 in k35564 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35569(t7,t6);}

/* k35802 in k35564 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35804,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35808,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35808(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35806 in k35802 in k35564 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35569(t7,t6);}

/* k35767 in k35564 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35769,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35773,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35773(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35771 in k35767 in k35564 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35569(t7,t6);}

/* k35567 in k35564 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_35569(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35569,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_35572,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_35572(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35599,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[737]);}
else{
t6=t5;
f_35599(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[748]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35634,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[748]);}
else{
t7=t6;
f_35634(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[746]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35669,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[746]);}
else{
t8=t7;
f_35669(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[741]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35704,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[741]);}
else{
t9=t8;
f_35704(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35733,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[353],((C_word*)t0)[7]);}
else{
t9=t8;
f_35733(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k35731 in k35567 in k35564 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35733,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35740,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35748,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35746 in k35731 in k35567 in k35564 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35740(2,t2,C_SCHEME_UNDEFINED);}}

/* k35738 in k35731 in k35567 in k35564 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35572(t5,t4);}

/* k35702 in k35567 in k35564 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35704,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35708,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35708(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35706 in k35702 in k35567 in k35564 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35572(t7,t6);}

/* k35667 in k35567 in k35564 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35669,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35673,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35673(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35671 in k35667 in k35567 in k35564 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35572(t7,t6);}

/* k35632 in k35567 in k35564 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35634,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35638,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35638(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35636 in k35632 in k35567 in k35564 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35572(t7,t6);}

/* k35597 in k35567 in k35564 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35599,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35603,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35603(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35601 in k35597 in k35567 in k35564 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35572(t7,t6);}

/* k35570 in k35567 in k35564 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_35572(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35572,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35575,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_35575(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k35573 in k35570 in k35567 in k35564 in k35561 in mp:ctrl in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   ffi_mp_send_data");
f_7499(((C_word*)t0)[6],C_fix(11),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34852(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_34852r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_34852r(t0,t1,t2);}}

static void C_ccall f_34852r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_34856,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_34856(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[737]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35402,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[349],lf[737]);}
else{
t27=t26;
f_35402(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[739]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35437,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[349],lf[739]);}
else{
t28=t27;
f_35437(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[746]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35472,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[349],lf[746]);}
else{
t29=t28;
f_35472(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[741]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35507,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[349],lf[741]);}
else{
t30=t29;
f_35507(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35536,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[353],t2);}
else{
t30=t29;
f_35536(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k35534 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35536,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35543,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35551,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35549 in k35534 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35543(2,t2,C_SCHEME_UNDEFINED);}}

/* k35541 in k35534 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34856(t5,t4);}

/* k35505 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35507,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35511,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35511(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35509 in k35505 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34856(t7,t6);}

/* k35470 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35472,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35476,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35476(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35474 in k35470 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34856(t7,t6);}

/* k35435 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35437,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35441,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35441(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35439 in k35435 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34856(t7,t6);}

/* k35400 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35402,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35406,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35406(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35404 in k35400 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34856(t7,t6);}

/* k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_34856(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34856,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_34859,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_34859(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35232,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[737]);}
else{
t6=t5;
f_35232(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35267,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[739]);}
else{
t7=t6;
f_35267(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[746]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35302,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[746]);}
else{
t8=t7;
f_35302(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[741]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35337,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[741]);}
else{
t9=t8;
f_35337(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35366,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[353],((C_word*)t0)[7]);}
else{
t9=t8;
f_35366(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k35364 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35366,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35373,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35381,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35379 in k35364 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35373(2,t2,C_SCHEME_UNDEFINED);}}

/* k35371 in k35364 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34859(t5,t4);}

/* k35335 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35337,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35341,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35341(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35339 in k35335 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34859(t7,t6);}

/* k35300 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35302,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35306,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35306(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35304 in k35300 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34859(t7,t6);}

/* k35265 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35267,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35271,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35271(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35269 in k35265 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34859(t7,t6);}

/* k35230 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35232,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35236,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35236(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35234 in k35230 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34859(t7,t6);}

/* k34857 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_34859(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34859,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_34862,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_34862(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35062,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[737]);}
else{
t6=t5;
f_35062(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35097,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[739]);}
else{
t7=t6;
f_35097(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[746]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35132,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[746]);}
else{
t8=t7;
f_35132(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[741]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35167,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[741]);}
else{
t9=t8;
f_35167(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35196,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[353],((C_word*)t0)[7]);}
else{
t9=t8;
f_35196(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k35194 in k34857 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35196,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35203,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35211,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35209 in k35194 in k34857 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35203(2,t2,C_SCHEME_UNDEFINED);}}

/* k35201 in k35194 in k34857 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34862(t5,t4);}

/* k35165 in k34857 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35167,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35171,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35171(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35169 in k35165 in k34857 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34862(t7,t6);}

/* k35130 in k34857 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35132,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35136,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35136(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35134 in k35130 in k34857 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34862(t7,t6);}

/* k35095 in k34857 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35097,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35101,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35101(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35099 in k35095 in k34857 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34862(t7,t6);}

/* k35060 in k34857 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35062,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35066,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35066(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35064 in k35060 in k34857 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34862(t7,t6);}

/* k34860 in k34857 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_34862(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34862,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_34865,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_34865(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34892,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[737]);}
else{
t6=t5;
f_34892(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34927,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[739]);}
else{
t7=t6;
f_34927(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[746]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34962,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[746]);}
else{
t8=t7;
f_34962(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[741]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34997,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[741]);}
else{
t9=t8;
f_34997(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35026,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[353],((C_word*)t0)[7]);}
else{
t9=t8;
f_35026(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k35024 in k34860 in k34857 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35026,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35033,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35041,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35039 in k35024 in k34860 in k34857 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35033(2,t2,C_SCHEME_UNDEFINED);}}

/* k35031 in k35024 in k34860 in k34857 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34865(t5,t4);}

/* k34995 in k34860 in k34857 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34997,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35001,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_35001(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34999 in k34995 in k34860 in k34857 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_35001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34865(t7,t6);}

/* k34960 in k34860 in k34857 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34962,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34966,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34966(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34964 in k34960 in k34860 in k34857 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34865(t7,t6);}

/* k34925 in k34860 in k34857 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34927,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34931,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34931(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34929 in k34925 in k34860 in k34857 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34865(t7,t6);}

/* k34890 in k34860 in k34857 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34892,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34896,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34896(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34894 in k34890 in k34860 in k34857 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34865(t7,t6);}

/* k34863 in k34860 in k34857 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_34865(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34865,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34868,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_34868(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k34866 in k34863 in k34860 in k34857 in k34854 in mp:touch in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   ffi_mp_send_data");
f_7499(((C_word*)t0)[6],C_fix(10),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34145(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_34145r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_34145r(t0,t1,t2);}}

static void C_ccall f_34145r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(64);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_34149,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_34149(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[737]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34695,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[349],lf[737]);}
else{
t27=t26;
f_34695(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[739]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34730,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[349],lf[739]);}
else{
t28=t27;
f_34730(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[744]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34765,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[349],lf[744]);}
else{
t29=t28;
f_34765(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[741]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34800,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[349],lf[741]);}
else{
t30=t29;
f_34800(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34829,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[353],t2);}
else{
t30=t29;
f_34829(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k34827 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34829,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34836,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34844,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34842 in k34827 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34836(2,t2,C_SCHEME_UNDEFINED);}}

/* k34834 in k34827 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34149(t5,t4);}

/* k34798 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34800,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34804,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34804(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34802 in k34798 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34149(t7,t6);}

/* k34763 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34765,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34769,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34769(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34767 in k34763 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34149(t7,t6);}

/* k34728 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34730,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34734,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34734(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34732 in k34728 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34149(t7,t6);}

/* k34693 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34695,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34699,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34699(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34697 in k34693 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34149(t7,t6);}

/* k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_34149(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34149,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_34152,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_34152(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34525,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[737]);}
else{
t6=t5;
f_34525(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34560,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[739]);}
else{
t7=t6;
f_34560(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[744]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34595,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[744]);}
else{
t8=t7;
f_34595(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[741]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34630,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[741]);}
else{
t9=t8;
f_34630(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34659,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[353],((C_word*)t0)[7]);}
else{
t9=t8;
f_34659(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k34657 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34659,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34666,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34674,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34672 in k34657 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34666(2,t2,C_SCHEME_UNDEFINED);}}

/* k34664 in k34657 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34152(t5,t4);}

/* k34628 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34630,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34634,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34634(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34632 in k34628 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34152(t7,t6);}

/* k34593 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34595,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34599,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34599(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34597 in k34593 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34152(t7,t6);}

/* k34558 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34560,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34564,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34564(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34562 in k34558 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34152(t7,t6);}

/* k34523 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34525,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34529,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34529(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34527 in k34523 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34152(t7,t6);}

/* k34150 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_34152(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34152,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_34155,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_34155(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34355,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[737]);}
else{
t6=t5;
f_34355(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34390,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[739]);}
else{
t7=t6;
f_34390(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[744]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34425,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[744]);}
else{
t8=t7;
f_34425(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[741]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34460,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[741]);}
else{
t9=t8;
f_34460(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34489,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[353],((C_word*)t0)[7]);}
else{
t9=t8;
f_34489(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k34487 in k34150 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34489,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34496,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34504,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34502 in k34487 in k34150 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34496(2,t2,C_SCHEME_UNDEFINED);}}

/* k34494 in k34487 in k34150 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34155(t5,t4);}

/* k34458 in k34150 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34460(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34460,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34464,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34464(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34462 in k34458 in k34150 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34155(t7,t6);}

/* k34423 in k34150 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34425,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34429,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34429(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34427 in k34423 in k34150 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34155(t7,t6);}

/* k34388 in k34150 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34390,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34394,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34394(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34392 in k34388 in k34150 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34155(t7,t6);}

/* k34353 in k34150 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34355,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34359,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34359(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34357 in k34353 in k34150 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34155(t7,t6);}

/* k34153 in k34150 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_34155(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34155,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_34158,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_34158(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34185,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[737]);}
else{
t6=t5;
f_34185(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34220,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[739]);}
else{
t7=t6;
f_34220(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[744]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34255,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[744]);}
else{
t8=t7;
f_34255(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[741]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34290,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[741]);}
else{
t9=t8;
f_34290(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34319,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[353],((C_word*)t0)[7]);}
else{
t9=t8;
f_34319(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k34317 in k34153 in k34150 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34319,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34326,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34334,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34332 in k34317 in k34153 in k34150 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34326(2,t2,C_SCHEME_UNDEFINED);}}

/* k34324 in k34317 in k34153 in k34150 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34158(t5,t4);}

/* k34288 in k34153 in k34150 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34290,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34294,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34294(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34292 in k34288 in k34153 in k34150 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34158(t7,t6);}

/* k34253 in k34153 in k34150 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34255,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34259,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34259(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34257 in k34253 in k34153 in k34150 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34158(t7,t6);}

/* k34218 in k34153 in k34150 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34220,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34224,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34224(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34222 in k34218 in k34153 in k34150 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34224(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34158(t7,t6);}

/* k34183 in k34153 in k34150 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34185,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34189,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34189(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34187 in k34183 in k34153 in k34150 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34158(t7,t6);}

/* k34156 in k34153 in k34150 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_34158(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34158,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34161,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_34161(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k34159 in k34156 in k34153 in k34150 in k34147 in mp:on in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   ffi_mp_send_data");
f_7499(((C_word*)t0)[6],C_fix(9),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33716(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_33716r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_33716r(t0,t1,t2);}}

static void C_ccall f_33716r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_33720,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_33720(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[737]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34023,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[349],lf[737]);}
else{
t23=t22;
f_34023(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[739]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34058,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[349],lf[739]);}
else{
t24=t23;
f_34058(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[741]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34093,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[349],lf[741]);}
else{
t25=t24;
f_34093(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34122,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[353],t2);}
else{
t25=t24;
f_34122(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k34120 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34122,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34129,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34137,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34135 in k34120 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34129(2,t2,C_SCHEME_UNDEFINED);}}

/* k34127 in k34120 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33720(t5,t4);}

/* k34091 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34093,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34097,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34097(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34095 in k34091 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33720(t7,t6);}

/* k34056 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34058,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34062,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34062(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34060 in k34056 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33720(t7,t6);}

/* k34021 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34023,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34027,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_34027(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34025 in k34021 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33720(t7,t6);}

/* k33718 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_33720(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33720,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_33723,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_33723(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33888,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[737]);}
else{
t6=t5;
f_33888(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33923,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[739]);}
else{
t7=t6;
f_33923(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[741]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33958,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[741]);}
else{
t8=t7;
f_33958(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33987,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_33987(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k33985 in k33718 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33987,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33994,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34002,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34000 in k33985 in k33718 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_34002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33994(2,t2,C_SCHEME_UNDEFINED);}}

/* k33992 in k33985 in k33718 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33723(t5,t4);}

/* k33956 in k33718 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33958,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33962,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33962(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33960 in k33956 in k33718 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33723(t7,t6);}

/* k33921 in k33718 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33923,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33927,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33927(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33925 in k33921 in k33718 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33723(t7,t6);}

/* k33886 in k33718 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33888,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33892,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33892(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33890 in k33886 in k33718 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33723(t7,t6);}

/* k33721 in k33718 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_33723(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33723,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33726,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_33726(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33753,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[737]);}
else{
t6=t5;
f_33753(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33788,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[739]);}
else{
t7=t6;
f_33788(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[741]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33823,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[741]);}
else{
t8=t7;
f_33823(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33852,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_33852(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k33850 in k33721 in k33718 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33852,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33859,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33867,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33865 in k33850 in k33721 in k33718 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33859(2,t2,C_SCHEME_UNDEFINED);}}

/* k33857 in k33850 in k33721 in k33718 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33726(t5,t4);}

/* k33821 in k33721 in k33718 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33823,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33827,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33827(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33825 in k33821 in k33721 in k33718 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33726(t7,t6);}

/* k33786 in k33721 in k33718 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33788,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33792,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33792(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33790 in k33786 in k33721 in k33718 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33726(t7,t6);}

/* k33751 in k33721 in k33718 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33753,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33757,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33757(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33755 in k33751 in k33721 in k33718 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33726(t7,t6);}

/* k33724 in k33721 in k33718 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_33726(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33726,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33729,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_33729(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k33727 in k33724 in k33721 in k33718 in mp:off in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   ffi_mp_send_data");
f_7499(((C_word*)t0)[5],C_fix(8),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32661(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+86)){
C_save_and_reclaim((void*)tr2r,(void*)f_32661r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_32661r(t0,t1,t2);}}

static void C_ccall f_32661r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word *a=C_alloc(86);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=lf[735];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(60);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=lf[736];
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_fix(0);
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=t2;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_32665,a[2]=t22,a[3]=t20,a[4]=t18,a[5]=t16,a[6]=t26,a[7]=t14,a[8]=t2,a[9]=t24,a[10]=t12,a[11]=t10,a[12]=t8,a[13]=t6,a[14]=t4,a[15]=t1,tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t24)[1]))){
t28=t27;
f_32665(t28,C_SCHEME_UNDEFINED);}
else{
t28=(C_word)C_i_car(((C_word*)t24)[1]);
t29=(C_word)C_eqp(t28,lf[737]);
if(C_truep(t29)){
t30=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33524,a[2]=t2,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t14,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t31=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t31))(4,t31,t30,lf[349],lf[737]);}
else{
t31=t30;
f_33524(2,t31,C_SCHEME_UNDEFINED);}}
else{
t30=(C_word)C_eqp(t28,lf[738]);
if(C_truep(t30)){
t31=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33559,a[2]=t2,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t16,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t32=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[349],lf[738]);}
else{
t32=t31;
f_33559(2,t32,C_SCHEME_UNDEFINED);}}
else{
t31=(C_word)C_eqp(t28,lf[739]);
if(C_truep(t31)){
t32=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33594,a[2]=t2,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t18,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t33=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t33))(4,t33,t32,lf[349],lf[739]);}
else{
t33=t32;
f_33594(2,t33,C_SCHEME_UNDEFINED);}}
else{
t32=(C_word)C_eqp(t28,lf[740]);
if(C_truep(t32)){
t33=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33629,a[2]=t2,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t20,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t20)[1])){
C_trace("error");
t34=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t34))(4,t34,t33,lf[349],lf[740]);}
else{
t34=t33;
f_33629(2,t34,C_SCHEME_UNDEFINED);}}
else{
t33=(C_word)C_eqp(t28,lf[741]);
if(C_truep(t33)){
t34=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33664,a[2]=t2,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t22,a[7]=t12,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t35=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t35))(4,t35,t34,lf[349],lf[741]);}
else{
t35=t34;
f_33664(2,t35,C_SCHEME_UNDEFINED);}}
else{
t34=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33693,a[2]=t27,a[3]=t14,a[4]=t4,a[5]=t24,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t26)[1])){
C_trace("error");
t35=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t35))(4,t35,t34,lf[353],t2);}
else{
t35=t34;
f_33693(2,t35,C_SCHEME_UNDEFINED);}}}}}}}}

/* k33691 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33693,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33700,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33708,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33706 in k33691 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33700(2,t2,C_SCHEME_UNDEFINED);}}

/* k33698 in k33691 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32665(t5,t4);}

/* k33662 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33664,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33668,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33668(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33666 in k33662 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32665(t7,t6);}

/* k33627 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33629,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33633,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33633(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33631 in k33627 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32665(t7,t6);}

/* k33592 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33594,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33598,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33598(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33596 in k33592 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32665(t7,t6);}

/* k33557 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33559,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33563,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33563(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33561 in k33557 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32665(t7,t6);}

/* k33522 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33524,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33528,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33528(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33526 in k33522 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32665(t7,t6);}

/* k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_32665(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[62],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32665,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_32668,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t3=t2;
f_32668(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t4=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33319,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[737]);}
else{
t6=t5;
f_33319(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[738]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33354,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[738]);}
else{
t7=t6;
f_33354(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33389,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[739]);}
else{
t8=t7;
f_33389(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[740]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33424,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[740]);}
else{
t9=t8;
f_33424(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[741]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33459,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t10=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[349],lf[741]);}
else{
t10=t9;
f_33459(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33488,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[9],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t10=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[353],((C_word*)t0)[8]);}
else{
t10=t9;
f_33488(2,t10,C_SCHEME_UNDEFINED);}}}}}}}}

/* k33486 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33488,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33495,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33503,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33501 in k33486 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33495(2,t2,C_SCHEME_UNDEFINED);}}

/* k33493 in k33486 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32668(t5,t4);}

/* k33457 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33459,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33463,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33463(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33461 in k33457 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32668(t7,t6);}

/* k33422 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33424,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33428,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33428(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33426 in k33422 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32668(t7,t6);}

/* k33387 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33389,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33393,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33393(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33391 in k33387 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32668(t7,t6);}

/* k33352 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33354,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33358,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33358(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33356 in k33352 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32668(t7,t6);}

/* k33317 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33319,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33323,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33323(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33321 in k33317 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32668(t7,t6);}

/* k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_32668(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[62],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32668,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_32671,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t3=t2;
f_32671(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t4=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33114,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[737]);}
else{
t6=t5;
f_33114(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[738]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33149,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[738]);}
else{
t7=t6;
f_33149(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33184,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[739]);}
else{
t8=t7;
f_33184(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[740]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33219,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[740]);}
else{
t9=t8;
f_33219(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[741]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33254,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t10=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[349],lf[741]);}
else{
t10=t9;
f_33254(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33283,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[12],a[5]=((C_word*)t0)[9],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t10=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[353],((C_word*)t0)[8]);}
else{
t10=t9;
f_33283(2,t10,C_SCHEME_UNDEFINED);}}}}}}}}

/* k33281 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33283,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33290,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33298,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33296 in k33281 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33290(2,t2,C_SCHEME_UNDEFINED);}}

/* k33288 in k33281 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32671(t5,t4);}

/* k33252 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33254,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33258,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33258(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33256 in k33252 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32671(t7,t6);}

/* k33217 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33219,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33223,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33223(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33221 in k33217 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32671(t7,t6);}

/* k33182 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33184,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33188,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33188(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33186 in k33182 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32671(t7,t6);}

/* k33147 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33149,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33153,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33153(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33151 in k33147 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32671(t7,t6);}

/* k33112 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33114,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33118,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33118(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33116 in k33112 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32671(t7,t6);}

/* k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_32671(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[62],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32671,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_32674,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t3=t2;
f_32674(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t4=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32909,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[737]);}
else{
t6=t5;
f_32909(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[738]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32944,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[738]);}
else{
t7=t6;
f_32944(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32979,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[739]);}
else{
t8=t7;
f_32979(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[740]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33014,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[740]);}
else{
t9=t8;
f_33014(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[741]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33049,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t10=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[349],lf[741]);}
else{
t10=t9;
f_33049(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33078,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[9],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t10=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[353],((C_word*)t0)[8]);}
else{
t10=t9;
f_33078(2,t10,C_SCHEME_UNDEFINED);}}}}}}}}

/* k33076 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33078,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33085,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33093,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33091 in k33076 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33085(2,t2,C_SCHEME_UNDEFINED);}}

/* k33083 in k33076 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32674(t5,t4);}

/* k33047 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33049,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33053,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33053(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33051 in k33047 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32674(t7,t6);}

/* k33012 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33014,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33018,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_33018(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33016 in k33012 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_33018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32674(t7,t6);}

/* k32977 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32979,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32983,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_32983(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32981 in k32977 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32674(t7,t6);}

/* k32942 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32944,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32948,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_32948(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32946 in k32942 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32674(t7,t6);}

/* k32907 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32909,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32913,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_32913(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32911 in k32907 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32674(t7,t6);}

/* k32672 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_32674(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[56],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32674,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_32677,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],a[9]=((C_word*)t0)[15],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t3=t2;
f_32677(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t4=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32704,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[737]);}
else{
t6=t5;
f_32704(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[738]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32739,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[738]);}
else{
t7=t6;
f_32739(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[739]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32774,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[739]);}
else{
t8=t7;
f_32774(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[740]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32809,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[740]);}
else{
t9=t8;
f_32809(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[741]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32844,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t10=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[349],lf[741]);}
else{
t10=t9;
f_32844(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32873,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[9],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t10=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[353],((C_word*)t0)[8]);}
else{
t10=t9;
f_32873(2,t10,C_SCHEME_UNDEFINED);}}}}}}}}

/* k32871 in k32672 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32873,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32880,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32888,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32886 in k32871 in k32672 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32880(2,t2,C_SCHEME_UNDEFINED);}}

/* k32878 in k32871 in k32672 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32677(t5,t4);}

/* k32842 in k32672 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32844,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32848,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_32848(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32846 in k32842 in k32672 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32677(t7,t6);}

/* k32807 in k32672 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32809,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32813,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_32813(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32811 in k32807 in k32672 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32677(t7,t6);}

/* k32772 in k32672 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32774,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32778,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_32778(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32776 in k32772 in k32672 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32677(t7,t6);}

/* k32737 in k32672 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32739,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32743,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_32743(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32741 in k32737 in k32672 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32677(t7,t6);}

/* k32702 in k32672 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32704,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32708,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_32708(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32706 in k32702 in k32672 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32677(t7,t6);}

/* k32675 in k32672 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_32677(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32677,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32680,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_32680(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k32678 in k32675 in k32672 in k32669 in k32666 in k32663 in mp:midi in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a;
t2=((C_word*)t0)[7];
t3=((C_word*)((C_word*)t0)[6])[1];
t4=((C_word*)((C_word*)t0)[5])[1];
t5=((C_word*)((C_word*)t0)[4])[1];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=(C_word)C_i_foreign_flonum_argumentp(t7);
t13=t2;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub368(C_SCHEME_UNDEFINED,t8,t9,t10,t11,t12));}

/* mp:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32655(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32655,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7467,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[20]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_7467(2,t4,C_SCHEME_FALSE);}}

/* k7465 in mp:open-output-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub358(C_SCHEME_UNDEFINED,t1));}

/* mp:open-input in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_32502(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32502,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32509,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_integerp(t5))){
t6=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_greater_or_equalp(t6,C_fix(0)))){
t7=(C_word)C_i_car(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t7);
t9=t3;
f_32509(t9,(C_word)stub346(C_SCHEME_UNDEFINED,t8));}
else{
t7=t3;
f_32509(t7,C_SCHEME_FALSE);}}
else{
t6=t3;
f_32509(t6,C_SCHEME_FALSE);}}
else{
t5=t3;
f_32509(t5,C_SCHEME_FALSE);}}
else{
t4=t3;
f_32509(t4,C_SCHEME_FALSE);}}

/* k32507 in mp:open-input in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_32509(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}
else{
C_trace("ChickenBridge.scm: 20   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[733],((C_word*)t0)[2]);}}

/* mp:open-output in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_32447(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32447,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32454,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_integerp(t5))){
t6=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_greater_or_equalp(t6,C_fix(0)))){
t7=(C_word)C_i_car(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t7);
t9=t3;
f_32454(t9,(C_word)stub342(C_SCHEME_UNDEFINED,t8));}
else{
t7=t3;
f_32454(t7,C_SCHEME_FALSE);}}
else{
t6=t3;
f_32454(t6,C_SCHEME_FALSE);}}
else{
t5=t3;
f_32454(t5,C_SCHEME_FALSE);}}
else{
t4=t3;
f_32454(t4,C_SCHEME_FALSE);}}

/* k32452 in mp:open-output in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_32454(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}
else{
C_trace("ChickenBridge.scm: 20   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[732],((C_word*)t0)[2]);}}

/* mp:open in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32200(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_32200r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_32200r(t0,t1,t2);}}

static void C_ccall f_32200r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_32204,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t1,a[8]=t6,a[9]=t4,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_32204(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[730]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32360,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[349],lf[730]);}
else{
t19=t18;
f_32360(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[731]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32395,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[349],lf[731]);}
else{
t20=t19;
f_32395(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32424,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[353],t2);}
else{
t20=t19;
f_32424(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k32422 in mp:open in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32424,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32431,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32439,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32437 in k32422 in mp:open in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32431(2,t2,C_SCHEME_UNDEFINED);}}

/* k32429 in k32422 in mp:open in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32204(t5,t4);}

/* k32393 in mp:open in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32395,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32399,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_32399(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32397 in k32393 in mp:open in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32204(t7,t6);}

/* k32358 in mp:open in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32360,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32364,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_32364(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32362 in k32358 in mp:open in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32204(t7,t6);}

/* k32202 in mp:open in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_32204(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32204,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32207,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_32207(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[730]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32260,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[730]);}
else{
t6=t5;
f_32260(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[731]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32295,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[731]);}
else{
t7=t6;
f_32295(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32324,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[353],((C_word*)t0)[5]);}
else{
t7=t6;
f_32324(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k32322 in k32202 in mp:open in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32324,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32331,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32339,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32337 in k32322 in k32202 in mp:open in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32331(2,t2,C_SCHEME_UNDEFINED);}}

/* k32329 in k32322 in k32202 in mp:open in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32207(t5,t4);}

/* k32293 in k32202 in mp:open in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32295,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32299,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_32299(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32297 in k32293 in k32202 in mp:open in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32207(t7,t6);}

/* k32258 in k32202 in mp:open in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32260,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32264,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_32264(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32262 in k32258 in k32202 in mp:open in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32207(t7,t6);}

/* k32205 in k32202 in mp:open in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_32207(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32207,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32210,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_32210(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k32208 in k32205 in k32202 in mp:open in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32210,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[4])[1])?((C_word*)((C_word*)t0)[3])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32223,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   mp:open-output");
f_32447(t3,(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 20   mp:open-output");
f_32447(((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 20   mp:open-input");
f_32502(((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]));}
else{
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}}}}

/* k32221 in k32208 in k32205 in k32202 in mp:open in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32223,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32227,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 20   mp:open-input");
f_32502(t2,(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]));}

/* k32225 in k32221 in k32208 in k32205 in k32202 in mp:open in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32227,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,2,((C_word*)t0)[2],t1));}

/* open-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32129(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_32129r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_32129r(t0,t1,t2,t3);}}

static void C_ccall f_32129r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32133,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 20   ffi_pathname_type");
f_7350(t4,t2);}

/* k32131 in open-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32133,2,t0,t1);}
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32136,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)stub262(C_SCHEME_UNDEFINED))){
C_trace("ChickenBridge.scm: 20   error");
t5=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[726],((C_word*)t0)[3]);}
else{
t5=t4;
f_32136(2,t5,C_SCHEME_UNDEFINED);}}

/* k32134 in k32131 in open-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32136,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32139,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7405,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t3)){
t5=(C_word)C_i_foreign_string_argumentp(t3);
C_trace("##sys#make-c-string");
t6=C_retrieve(lf[20]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t5=t4;
f_7405(2,t5,C_SCHEME_FALSE);}}

/* k7403 in k32134 in k32131 in open-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)stub327(C_SCHEME_UNDEFINED,t1))){
t2=((C_word*)t0)[3];
f_32139(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 20   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[725],((C_word*)t0)[2]);}}

/* k32137 in k32134 in k32131 in open-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32139,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32142,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_string_equal_p(((C_word*)t0)[3],lf[716]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32151,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t3,C_retrieve2(lf[717],"mp:open-output-file"),((C_word*)t0)[4],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[3];
if(C_truep((C_truep((C_word)C_i_equalp(t3,lf[718]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,lf[719]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,lf[720]))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32161,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t4,C_retrieve2(lf[721],"snd:open-output-file"),((C_word*)t0)[4],((C_word*)t0)[2]);}
else{
t4=((C_word*)t0)[3];
if(C_truep((C_truep((C_word)C_i_equalp(t4,lf[722]))?C_SCHEME_TRUE:C_SCHEME_FALSE))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32171,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t5,C_retrieve(lf[723]),((C_word*)t0)[4],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 20   error");
t5=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,lf[724],((C_word*)t0)[4]);}}}}

/* k32169 in k32137 in k32134 in k32131 in open-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(3));
t3=((C_word*)t0)[2];
f_32142(2,t3,t2);}

/* k32159 in k32137 in k32134 in k32131 in open-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(2));
t3=((C_word*)t0)[2];
f_32142(2,t3,t2);}

/* k32149 in k32137 in k32134 in k32131 in open-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(1));
t3=((C_word*)t0)[2];
f_32142(2,t3,t2);}

/* k32140 in k32137 in k32134 in k32131 in open-file in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=(C_word)stub267(C_SCHEME_UNDEFINED,t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,((C_word*)t0)[2]);}

/* ports in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32101,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32105,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t4=*((C_word*)lf[46]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,(C_word)stub338(t3),C_fix(0));}

/* k32103 in ports in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 20   read-from-string");
f_6811(((C_word*)t0)[2],t1);}

/* sal:open in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32077(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32077,2,t0,t1);}
C_trace("ChickenBridge.scm: 19   print-error");
t2=C_retrieve(lf[49]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[713]);}

/* sal:load in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32028(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32028,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32032,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=t2;
if(C_truep((C_word)C_i_stringp(t4))){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7391,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t4)){
t6=(C_word)C_i_foreign_string_argumentp(t4);
C_trace("##sys#make-c-string");
t7=C_retrieve(lf[20]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}
else{
t6=t5;
f_7391(2,t6,C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 17   error");
t5=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[711],t4);}}

/* k7389 in sal:load in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_32032(2,t2,(C_word)stub321(C_SCHEME_UNDEFINED,t1));}

/* k32030 in sal:load in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32032,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32035,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep(t1)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32051,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32075,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   string-append");
t5=*((C_word*)lf[417]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,lf[707],((C_word*)t0)[2],lf[708]);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32048,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   string-append");
t4=*((C_word*)lf[417]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,lf[709],((C_word*)t0)[2],lf[710]);}}

/* k32046 in k32030 in sal:load in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   print-error");
t2=C_retrieve(lf[49]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k32073 in k32030 in sal:load in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   print-output");
t2=C_retrieve(lf[50]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k32049 in k32030 in sal:load in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32051,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32071,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   pathname-type");
f_24351(t2,((C_word*)t0)[2]);}

/* k32069 in k32049 in k32030 in sal:load in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32071,2,t0,t1);}
if(C_truep((C_word)C_i_equalp(lf[704],t1))){
C_trace("ChickenBridge.scm: 19   load-sal-file");
t2=C_retrieve(lf[705]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32067,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   full-pathname");
f_24393(t2,((C_word*)t0)[2]);}}

/* k32065 in k32069 in k32049 in k32030 in sal:load in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   load");
t2=C_retrieve(lf[706]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k32033 in k32030 in sal:load in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:chdir in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32019(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32019,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32023,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   chdir");
t4=C_retrieve(lf[541]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k32021 in sal:chdir in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:print in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31866(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr2r,(void*)f_31866r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_31866r(t0,t1,t2);}}

static void C_ccall f_31866r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(16);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31869,a[2]=t4,a[3]=((C_word)li461),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31988,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31993,a[2]=t4,a[3]=t8,a[4]=((C_word)li462),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_31993(t10,t6,t2);}

/* do5378 in sal:print in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_31993(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31993,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 19   print-output");
t3=C_retrieve(lf[50]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[701]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32006,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 19   printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_31869(t5,t3,t4,C_fix(0),C_SCHEME_FALSE);}}

/* k32004 in do5378 in sal:print in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_32006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_31993(t3,((C_word*)t0)[2],t2);}

/* k31986 in sal:print in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   values");
C_values(2,0,((C_word*)t0)[2]);}

/* printer in sal:print in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_31869(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31869,NULL,5,t0,t1,t2,t3,t4);}
t5=t2;
if(C_truep(t5)){
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 19   print-output");
t6=C_retrieve(lf[50]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,lf[694]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31897,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   print-output");
t7=C_retrieve(lf[50]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[697]);}
else{
t6=(C_word)C_eqp(t2,C_SCHEME_TRUE);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 19   print-output");
t7=C_retrieve(lf[50]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t1,lf[698]);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31969,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   number->string");
C_number_to_string(3,0,t7,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 19   print-output");
t7=C_retrieve(lf[50]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t2,t4);}
else{
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31985,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   format");
t8=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t8))(5,t8,t7,C_SCHEME_FALSE,lf[699],t2);}}}}}}
else{
C_trace("ChickenBridge.scm: 19   print-output");
t6=C_retrieve(lf[50]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,lf[700]);}}

/* k31983 in printer in sal:print in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   print-output");
t2=C_retrieve(lf[50]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k31967 in printer in sal:print in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   print-output");
t2=C_retrieve(lf[50]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k31895 in printer in sal:print in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31897,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31900,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31905,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word)li460),tmp=(C_word)a,a+=6,tmp));
t6=((C_word*)t4)[1];
f_31905(t6,t2,((C_word*)t0)[2]);}

/* do5370 in k31895 in printer in sal:print in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_31905(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31905,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31915,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],C_fix(1));
C_trace("ChickenBridge.scm: 19   printer");
t6=((C_word*)((C_word*)t0)[2])[1];
f_31869(t6,t3,t4,t5,C_SCHEME_TRUE);}}

/* k31913 in do5370 in k31895 in printer in sal:print in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31915,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31918,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_31918(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 19   print-output");
t4=C_retrieve(lf[50]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,lf[696]);}}

/* k31916 in k31913 in do5370 in k31895 in printer in sal:print in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_31905(t3,((C_word*)t0)[2],t2);}

/* k31898 in k31895 in printer in sal:print in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   print-output");
t2=C_retrieve(lf[50]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[695]);}

/* tokenize in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_31707(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31707,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31711,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_stringp(((C_word*)t3)[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31729,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)t3)[1];
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7607,a[2]=t5,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t6)){
t9=(C_word)C_i_foreign_string_argumentp(t6);
C_trace("##sys#make-c-string");
t10=C_retrieve(lf[20]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t8,t9);}
else{
t9=t8;
f_7607(2,t9,C_SCHEME_FALSE);}}
else{
t5=t4;
f_31711(t5,C_SCHEME_UNDEFINED);}}

/* k7605 in tokenize in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)stub428(((C_word*)t0)[3],t1);
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[46]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,C_fix(0));}

/* k31727 in tokenize in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31729,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31733,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   read-from-string");
f_6811(t2,t1);}

/* k31731 in k31727 in tokenize in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31711(t3,t2);}

/* k31709 in tokenize in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_31711(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
C_trace("map");
t2=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[620],"list->token"),((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}}

/* sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31223(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+59)){
C_save_and_reclaim((void*)tr3r,(void*)f_31223r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_31223r(t0,t1,t2,t3);}}

static void C_ccall f_31223r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word *a=C_alloc(59);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_fix(36608);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=t3;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_31227,a[2]=t15,a[3]=t13,a[4]=t19,a[5]=t11,a[6]=t3,a[7]=t17,a[8]=t9,a[9]=t7,a[10]=t2,a[11]=t5,a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t17)[1]))){
t21=t20;
f_31227(t21,C_SCHEME_UNDEFINED);}
else{
t21=(C_word)C_i_car(((C_word*)t17)[1]);
t22=(C_word)C_eqp(t21,lf[690]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31585,a[2]=t3,a[3]=t20,a[4]=t17,a[5]=t19,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t24=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[349],lf[690]);}
else{
t24=t23;
f_31585(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t21,lf[691]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31620,a[2]=t3,a[3]=t20,a[4]=t17,a[5]=t19,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("error");
t25=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[349],lf[691]);}
else{
t25=t24;
f_31620(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(C_word)C_eqp(t21,lf[692]);
if(C_truep(t24)){
t25=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31655,a[2]=t3,a[3]=t20,a[4]=t17,a[5]=t19,a[6]=t15,a[7]=t9,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t26=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t26))(4,t26,t25,lf[349],lf[692]);}
else{
t26=t25;
f_31655(2,t26,C_SCHEME_UNDEFINED);}}
else{
t25=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31684,a[2]=t20,a[3]=t11,a[4]=t5,a[5]=t17,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t19)[1])){
C_trace("error");
t26=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t26))(4,t26,t25,lf[353],t3);}
else{
t26=t25;
f_31684(2,t26,C_SCHEME_UNDEFINED);}}}}}}

/* k31682 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31684,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31691,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31699,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31697 in k31682 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31691(2,t2,C_SCHEME_UNDEFINED);}}

/* k31689 in k31682 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31227(t5,t4);}

/* k31653 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31655,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31659,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_31659(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31657 in k31653 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31227(t7,t6);}

/* k31618 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31620,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31624,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_31624(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31622 in k31618 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31227(t7,t6);}

/* k31583 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31585,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31589,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_31589(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31587 in k31583 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31227(t7,t6);}

/* k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_31227(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31227,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_31230,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_31230(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[690]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31450,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[690]);}
else{
t6=t5;
f_31450(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31485,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[691]);}
else{
t7=t6;
f_31485(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[692]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31520,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[692]);}
else{
t8=t7;
f_31520(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31549,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_31549(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k31547 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31549,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31556,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31564,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31562 in k31547 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31556(2,t2,C_SCHEME_UNDEFINED);}}

/* k31554 in k31547 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31230(t5,t4);}

/* k31518 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31520,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31524,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_31524(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31522 in k31518 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31230(t7,t6);}

/* k31483 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31485,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31489,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_31489(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31487 in k31483 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31230(t7,t6);}

/* k31448 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31450,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31454,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_31454(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31452 in k31448 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31230(t7,t6);}

/* k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_31230(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31230,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_31233,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_31233(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[690]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31315,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[690]);}
else{
t6=t5;
f_31315(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[691]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31350,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[691]);}
else{
t7=t6;
f_31350(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[692]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31385,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[692]);}
else{
t8=t7;
f_31385(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31414,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_31414(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k31412 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31414,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31421,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31429,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31427 in k31412 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31421(2,t2,C_SCHEME_UNDEFINED);}}

/* k31419 in k31412 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31233(t5,t4);}

/* k31383 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31385,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31389,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_31389(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31387 in k31383 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31233(t7,t6);}

/* k31348 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31350,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31354,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_31354(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31352 in k31348 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31233(t7,t6);}

/* k31313 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31315,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31319,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_31319(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31317 in k31313 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31233(t7,t6);}

/* k31231 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_31233(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31233,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31236,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_31236(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k31234 in k31231 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31236,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31239,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_not(((C_word*)((C_word*)t0)[5])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31287,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   tokenize");
f_31707(t5,((C_word*)t0)[4]);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31291,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   tokenize");
f_31707(t5,((C_word*)((C_word*)t0)[5])[1]);}}

/* k31289 in k31234 in k31231 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31239(t3,t2);}

/* k31285 in k31234 in k31231 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31239(t3,t2);}

/* k31237 in k31234 in k31231 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_31239(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31239,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31242,a[2]=((C_word*)t0)[6],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_31242(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31251,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t4=((C_word*)((C_word*)t0)[2])[1];
t5=((C_word*)((C_word*)t0)[5])[1];
t6=(C_word)C_a_i_list(&a,4,C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29027,a[2]=t5,a[3]=t4,a[4]=((C_word)li457),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   call/cc");
t8=*((C_word*)lf[688]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t3,t7);}}

/* a29026 in k31237 in k31234 in k31231 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29027(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29027,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29033,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word)li455),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29040,a[2]=t2,a[3]=((C_word)li456),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   call-with-values");
C_call_with_values(4,0,t1,t3,t4);}

/* a29039 in a29026 in k31237 in k31234 in k31231 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29040(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29040,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29047,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t6=(C_word)C_i_nullp(t4);
t7=t5;
f_29047(t7,(C_truep(t6)?t6:C_SCHEME_FALSE));}
else{
t6=t5;
f_29047(t6,C_SCHEME_FALSE);}}

/* k29045 in a29039 in a29026 in k31237 in k31234 in k31231 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_29047(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29047,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29054,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   add-emit-info");
f_28627(t2,lf[685],lf[686],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 19   make-parse-error");
f_28453(((C_word*)t0)[4],lf[687],C_retrieve2(lf[661],"*maxtokpos*"));}}

/* k29052 in k29045 in a29039 in a29026 in k31237 in k31234 in k31231 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   emit");
f_28712(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a29032 in a29026 in k31237 in k31234 in k31231 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29033,2,t0,t1);}
t2=lf[661]=C_fix(0);;
C_trace("ChickenBridge.scm: 19   parser");
f_29065(t1,((C_word*)t0)[4],((C_word*)t0)[3],C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[2]);}

/* k31249 in k31237 in k31234 in k31231 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31251,2,t0,t1);}
t2=t1;
if(C_truep((C_word)C_i_structurep(t2,lf[635]))){
t3=((C_word*)t0)[4];
t4=t1;
t5=(C_word)C_i_string_length(t3);
t6=(C_word)C_i_check_structure(t4,lf[635]);
t7=(C_word)C_i_block_ref(t4,C_fix(2));
t8=(C_word)C_a_i_minus(&a,2,t7,C_fix(1));
t9=t8;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_fix(0);
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_31748,a[2]=t5,a[3]=t3,a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=t7,a[7]=t12,a[8]=t10,tmp=(C_word)a,a+=9,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31835,a[2]=t3,a[3]=t15,a[4]=t10,a[5]=((C_word)li454),tmp=(C_word)a,a+=6,tmp));
t17=((C_word*)t15)[1];
f_31835(t17,t13,C_SCHEME_FALSE);}
else{
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 19   format");
t3=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[3],C_SCHEME_TRUE,lf[682],t1);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31273,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   interaction-environment");
t4=C_retrieve(lf[684]);
((C_proc2)C_retrieve_proc(t4))(2,t4,t3);}}}

/* k31271 in k31249 in k31237 in k31234 in k31231 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   eval");
t2=C_retrieve(lf[683]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do5342 in k31249 in k31237 in k31234 in k31231 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_31835(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31835,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(-1)));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31845,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_31845(t10,t9);}
else{
t9=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t6;
f_31845(t11,t10);}}}

/* k31843 in do5342 in k31249 in k31237 in k31234 in k31231 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_31845(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_31835(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k31746 in k31249 in k31237 in k31234 in k31231 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31748,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[8])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)t0)[6]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31756,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31805,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=((C_word)li453),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_31805(t9,t5,C_SCHEME_FALSE);}

/* do5349 in k31746 in k31249 in k31237 in k31234 in k31231 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_31805(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31805,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31815,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_31815(t10,t9);}
else{
t9=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t6;
f_31815(t11,t10);}}}

/* k31813 in do5349 in k31746 in k31249 in k31237 in k31234 in k31231 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_31815(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_31805(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k31754 in k31746 in k31249 in k31237 in k31234 in k31231 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31756,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31759,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31766,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_check_structure(((C_word*)t0)[6],lf[635]);
t5=(C_word)C_i_block_ref(((C_word*)t0)[6],C_fix(1));
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31774,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=t3,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 19   make-string");
t7=*((C_word*)lf[421]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,C_fix(1),C_make_character(10));}

/* k31772 in k31754 in k31746 in k31249 in k31237 in k31234 in k31231 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31774,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31778,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   substring");
t3=*((C_word*)lf[414]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k31776 in k31772 in k31754 in k31746 in k31249 in k31237 in k31234 in k31231 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31778,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31782,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 19   make-string");
t3=*((C_word*)lf[421]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k31780 in k31776 in k31772 in k31754 in k31746 in k31249 in k31237 in k31234 in k31231 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31782,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31789,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_a_i_plus(&a,2,t2,C_fix(2));
C_trace("ChickenBridge.scm: 19   make-string");
t5=*((C_word*)lf[421]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_make_character(32));}

/* k31787 in k31780 in k31776 in k31772 in k31754 in k31746 in k31249 in k31237 in k31234 in k31231 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31789,2,t0,t1);}
t2=(C_word)C_i_string_set(t1,((C_word*)t0)[7],C_make_character(94));
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t4=(C_word)C_i_string_set(t1,t3,C_make_character(10));
C_trace("ChickenBridge.scm: 19   string-append");
t5=*((C_word*)lf[417]+1);
((C_proc8)C_retrieve_proc(t5))(8,t5,((C_word*)t0)[6],lf[681],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k31764 in k31754 in k31746 in k31249 in k31237 in k31234 in k31231 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   print-error");
t2=C_retrieve(lf[49]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k31757 in k31754 in k31746 in k31249 in k31237 in k31234 in k31231 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   values");
C_values(2,0,((C_word*)t0)[2]);}

/* k31240 in k31237 in k31234 in k31231 in k31228 in k31225 in sal in k31219 in k31216 in k31213 in k31210 in k31207 in k30676 in k30673 in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_31242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_retrieve(lf[409]));}

/* sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30154(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word ab[51],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30154,4,t0,t1,t2,t3);}
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=C_SCHEME_FALSE;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30161,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t33=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_30167,a[2]=t27,a[3]=t25,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t19,a[8]=t17,a[9]=t21,a[10]=t15,a[11]=t7,a[12]=t3,a[13]=t2,a[14]=t32,a[15]=t5,a[16]=t13,a[17]=t11,a[18]=t9,tmp=(C_word)a,a+=19,tmp);
t34=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28583(t33,t34,C_fix(23296));}

/* k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30167,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30171,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[15],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[17],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[12]);}
else{
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_30217,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[10],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[11],tmp=(C_word)a,a+=18,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28583(t2,t3,C_fix(10756));}}

/* k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30217,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_30221,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);}
else{
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_30314,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[16],a[14]=((C_word*)t0)[17],tmp=(C_word)a,a+=15,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28583(t2,t3,C_fix(22784));}}

/* k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30314,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30318,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}
else{
t2=(C_word)C_i_length(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_30382,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}}

/* k30380 in k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30382,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[11])[1],C_fix(1));
t4=(C_word)C_i_list_ref(((C_word*)t0)[10],t3);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_30389,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[8],tmp=(C_word)a,a+=13,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30639,a[2]=t6,a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t7,t8,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t7=C_set_block_item(((C_word*)t0)[9],0,C_fix(1));
t8=t6;
f_30389(t8,t7);}}

/* k30637 in k30380 in k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30389(t3,t2);}

/* k30387 in k30380 in k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_30389(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30389,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_30392,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(6)))){
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30578,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_fix(0));
t4=(C_word)C_i_caddr(((C_word*)t0)[2]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30627,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t6,t7,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}}

/* k30625 in k30387 in k30380 in k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30627(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30392(t3,t2);}

/* k30576 in k30387 in k30380 in k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30578,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30584,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   fifth");
t4=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k30582 in k30576 in k30387 in k30380 in k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30584,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30608,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   fifth");
t3=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=((C_word*)t0)[4];
f_30392(t4,t3);}}

/* k30606 in k30582 in k30576 in k30387 in k30380 in k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30608,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30592,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30604,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   fifth");
t6=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[2]);}

/* k30602 in k30606 in k30582 in k30576 in k30387 in k30380 in k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(((C_word*)t0)[3],t2,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k30590 in k30606 in k30582 in k30576 in k30387 in k30380 in k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30392(t3,t2);}

/* k30390 in k30387 in k30380 in k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_30392(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30392,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_30395,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_30395(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30554,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   gensym");
t4=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[679]);}}

/* k30552 in k30390 in k30387 in k30380 in k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30554,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30558,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 19   append");
t5=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k30556 in k30552 in k30390 in k30387 in k30380 in k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_30395(t4,t3);}

/* k30393 in k30390 in k30387 in k30380 in k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_30395(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30395,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_30398,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_30398(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30531,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   gensym");
t4=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[678]);}}

/* k30529 in k30393 in k30390 in k30387 in k30380 in k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30531,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30535,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 19   append");
t5=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k30533 in k30529 in k30393 in k30390 in k30387 in k30380 in k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_30398(t4,t3);}

/* k30396 in k30393 in k30390 in k30387 in k30380 in k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_30398(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30398,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_30401,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]))){
t3=t2;
f_30401(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30508,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   gensym");
t4=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[677]);}}
else{
t3=t2;
f_30401(t3,C_SCHEME_UNDEFINED);}}

/* k30506 in k30396 in k30393 in k30390 in k30387 in k30380 in k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30508,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30512,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 19   append");
t5=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k30510 in k30506 in k30396 in k30393 in k30390 in k30387 in k30380 in k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_30401(t4,t3);}

/* k30399 in k30396 in k30393 in k30390 in k30387 in k30380 in k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_30401(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30401,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30404,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30433,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28583(t4,((C_word*)((C_word*)t0)[3])[1],C_fix(21248));}
else{
t4=(C_word)C_a_i_list(&a,3,lf[146],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=t2;
f_30404(t7,t6);}}

/* k30431 in k30399 in k30396 in k30393 in k30390 in k30387 in k30380 in k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30433,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[148],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[146],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_30404(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30451,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28583(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(23552));}}

/* k30449 in k30431 in k30399 in k30396 in k30393 in k30390 in k30387 in k30380 in k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30451,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[149],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[146],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_30404(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30469,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28583(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(20992));}}

/* k30467 in k30449 in k30431 in k30399 in k30396 in k30393 in k30390 in k30387 in k30380 in k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30469,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[144],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[142],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_30404(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30487,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28583(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(21760));}}

/* k30485 in k30467 in k30449 in k30431 in k30399 in k30396 in k30393 in k30390 in k30387 in k30380 in k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30487,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[145],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[142],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[6])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30404(t7,t6);}
else{
t2=((C_word*)t0)[2];
f_30404(t2,C_SCHEME_UNDEFINED);}}

/* k30402 in k30399 in k30396 in k30393 in k30390 in k30387 in k30380 in k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_30404(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30404,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30408,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 19   append");
t5=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k30406 in k30402 in k30399 in k30396 in k30393 in k30390 in k30387 in k30380 in k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30161(t3,t2);}

/* k30316 in k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30318,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30322,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k30320 in k30316 in k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30322,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30326,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   gensym");
t4=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[676]);}

/* k30324 in k30320 in k30316 in k30312 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30326,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,2,lf[188],((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_a_i_list(&a,2,lf[185],((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,t4,t5);
t7=(C_word)C_a_i_list(&a,2,lf[53],((C_word*)((C_word*)t0)[6])[1]);
t8=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,2,t6,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_30161(t12,t11);}

/* k30219 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30221,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_30225,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}

/* k30223 in k30219 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30225,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_30229,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 19   fifth");
t4=C_retrieve(lf[60]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k30227 in k30223 in k30219 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30229,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30232,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30248,a[2]=t3,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t3;
f_30232(t6,t5);}}

/* k30246 in k30227 in k30223 in k30219 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30248,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30252,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 19   gensym");
t4=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[675]);}

/* k30250 in k30246 in k30227 in k30223 in k30219 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30252,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[183],t3,t4);
t6=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,4,lf[234],((C_word*)((C_word*)t0)[8])[1],t5,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_TRUE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,1,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_30232(t12,t11);}

/* k30230 in k30227 in k30223 in k30219 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_30232(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30232,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30236,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 19   append");
t5=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[5])[1],t4);}

/* k30234 in k30230 in k30227 in k30223 in k30219 in k30215 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30161(t3,t2);}

/* k30169 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30171,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30175,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   gensym");
t4=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[674]);}

/* k30173 in k30169 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30175,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30179,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   gensym");
t4=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[673]);}

/* k30177 in k30173 in k30169 in k30165 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30179,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[146],((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t5=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[148],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[6])[1]);
t7=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_fix(0),C_SCHEME_FALSE,t5,t6);
t8=(C_word)C_a_i_list(&a,2,t3,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=((C_word*)t0)[2];
f_30161(t10,t9);}

/* k30159 in sal-parse-stepping in k30150 in k30147 in k30144 in k30141 in k30138 in k30135 in k30132 in k30129 in k30126 in k30123 in k30120 in k30117 in k30114 in k30111 in k30108 in k30105 in k30102 in k30099 in k30096 in k30093 in k30090 in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_30161(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28501(((C_word*)t0)[3],C_fix(33024),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* inf->pre in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_29976(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29976,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t3)[1]))){
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29988,a[2]=t9,a[3]=t13,a[4]=t11,a[5]=t5,a[6]=t7,a[7]=t3,a[8]=((C_word)li450),tmp=(C_word)a,a+=9,tmp));
t15=((C_word*)t13)[1];
f_29988(t15,t1);}
else{
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t3)[1]);}}

/* do4906 in inf->pre in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_29988(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29988,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30007,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 19   is-op?");
f_29955(t6,((C_word*)((C_word*)t0)[5])[1]);}}

/* k30005 in do4906 in inf->pre in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30007,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30010,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30025,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word)li449),tmp=(C_word)a,a+=9,tmp));
t7=((C_word*)t5)[1];
f_30025(t7,t3,C_SCHEME_FALSE,C_SCHEME_TRUE,C_SCHEME_END_OF_LIST);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_30010(2,t5,t4);}}

/* do4908 in k30005 in do4906 in inf->pre in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_30025(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30025,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t6)[1]));
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30039,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30053,a[2]=t10,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   reverse");
t12=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t7)[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30057,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 19   is-op?");
f_29955(t10,t11);}}

/* k30055 in do4908 in k30005 in do4906 in inf->pre in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30057,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30060,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t6=t3;
f_30060(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[4])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=t3;
f_30060(t10,t9);}}

/* k30058 in k30055 in do4908 in k30005 in do4906 in inf->pre in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_30060(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_30025(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k30051 in do4908 in k30005 in do4906 in inf->pre in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   inf->pre");
f_29976(((C_word*)t0)[2],t1);}

/* k30037 in do4908 in k30005 in do4906 in inf->pre in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30039,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k30008 in k30005 in do4906 in inf->pre in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_30010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_29988(t2,((C_word*)t0)[2]);}

/* is-op? in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_29955(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29955,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29962,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   token-unit?");
f_28567(t3,t2);}

/* k29960 in is-op? in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29962,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29965,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-type");
f_28522(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k29963 in k29960 in is-op? in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29965,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29971,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   SalOpType?");
f_29732(t2,t1);}

/* k29969 in k29963 in k29960 in is-op? in k29951 in k29948 in k29945 in k29942 in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
C_trace("ChickenBridge.scm: 19   logand");
t4=C_retrieve(lf[1]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(255));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* remove-token-type in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_29890(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29890,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29899,a[2]=t3,a[3]=t6,a[4]=t8,a[5]=t4,a[6]=((C_word)li446),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_29899(t10,t1,t2);}

/* do4872 in remove-token-type in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_29899(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29899,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29912,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29922,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 19   token-unit-type=?");
f_28583(t4,t5,((C_word*)t0)[2]);}}

/* k29920 in do4872 in remove-token-type in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29922,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_29912(t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_29912(t7,t6);}}

/* k29910 in do4872 in remove-token-type in k29886 in k29883 in k29880 in k29877 in k29874 in k29871 in k29868 in k29865 in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_29912(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_29899(t3,((C_word*)t0)[2],t2);}

/* SalType=? in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_29846(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29846,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29854,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   ash");
t5=C_retrieve(lf[668]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t2,C_fix(-8));}

/* k29852 in SalType=? in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29854,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29858,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   ash");
t3=C_retrieve(lf[668]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],C_fix(-8));}

/* k29856 in k29852 in SalType=? in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_nequalp(((C_word*)t0)[2],t1));}

/* SalRuleType? in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_29834(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29834,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(25600),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(38400)):C_SCHEME_FALSE));}

/* SalOpType? in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_29732(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29732,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(6656),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(11520)):C_SCHEME_FALSE));}

/* SalTokenType? in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_29684(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29684,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(0),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(25600)):C_SCHEME_FALSE));}

/* parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_29065(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29065,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29069,a[2]=t4,a[3]=t7,a[4]=t6,a[5]=t5,a[6]=t8,a[7]=t1,a[8]=t2,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 19   format");
t10=C_retrieve(lf[407]);
((C_proc7)C_retrieve_proc(t10))(7,t10,t9,C_SCHEME_TRUE,lf[667],t5,t2,((C_word*)t8)[1]);}
else{
t10=t9;
f_29069(2,t10,C_SCHEME_UNDEFINED);}}

/* k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29069,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29072,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 19   null-tokens?");
f_28202(t2,((C_word*)((C_word*)t0)[6])[1]);}

/* k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29072,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29075,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t1)){
t3=t2;
f_29075(t3,t1);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29490,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29494,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29498,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   first-token");
f_28190(t5,((C_word*)((C_word*)t0)[6])[1]);}}

/* k29496 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   token-position");
f_28158(((C_word*)t0)[2],t1);}

/* k29492 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   max");
t2=*((C_word*)lf[342]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[661],"*maxtokpos*"),t1);}

/* k29488 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[661],t1);
t3=((C_word*)t0)[2];
f_29075(t3,t2);}

/* k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_29075(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29075,NULL,2,t0,t1);}
t2=((C_word*)t0)[8];
if(C_truep((C_word)C_i_numberp(t2))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29084,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   pattern-value");
t4=C_retrieve2(lf[319],"pattern-value");
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[8]);}
else{
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29198,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[2],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 19   pattern-clause?");
f_28335(t3,((C_word*)t0)[8]);}}

/* k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29198,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29204,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[2];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28380,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   pattern-clause?");
f_28335(t4,t3);}
else{
C_trace("ChickenBridge.scm: 19   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[6],lf[666],((C_word*)t0)[2]);}}

/* k28378 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_29204(t3,(C_word)C_eqp(t2,lf[214]));}
else{
t2=((C_word*)t0)[2];
f_29204(t2,C_SCHEME_FALSE);}}

/* k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_29204(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29204,NULL,2,t0,t1);}
t2=(C_truep(t1)?t1:((C_word*)t0)[8]);
if(C_truep(t2)){
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=((C_word*)((C_word*)t0)[7])[1];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29213,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t10,a[7]=((C_word*)t0)[7],a[8]=t6,a[9]=t8,a[10]=t4,a[11]=((C_word*)t0)[6],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 19   pattern-nsubs");
f_28353(t11,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29292,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)t0)[2];
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28396,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   pattern-clause?");
f_28335(t5,t4);}}

/* k28394 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_29292(t3,(C_word)C_eqp(t2,lf[238]));}
else{
t2=((C_word*)t0)[2];
f_29292(t2,C_SCHEME_FALSE);}}

/* k29290 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_29292(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29292,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_29298,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t5,a[9]=((C_word*)t0)[7],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 19   pattern-nsubs");
f_28353(t8,((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29362,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 19   pattern-zero-or-more?");
f_28421(t2,((C_word*)t0)[2]);}}

/* k29360 in k29290 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29362,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29365,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t1)){
t3=t2;
f_29365(t3,t1);}
else{
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28412,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   pattern-clause?");
f_28335(t4,t3);}}

/* k28410 in k29360 in k29290 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_29365(t3,(C_word)C_eqp(t2,lf[146]));}
else{
t2=((C_word*)t0)[2];
f_29365(t2,C_SCHEME_FALSE);}}

/* k29363 in k29360 in k29290 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_29365(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[46],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29365,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)((C_word*)t0)[7])[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29371,a[2]=((C_word*)t0)[5],a[3]=t11,a[4]=((C_word*)t0)[7],a[5]=t9,a[6]=t3,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_29394,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t5,a[7]=t11,a[8]=t7,a[9]=((C_word*)t0)[7],a[10]=t9,a[11]=t14,a[12]=t3,a[13]=((C_word)li438),tmp=(C_word)a,a+=14,tmp));
t16=((C_word*)t14)[1];
f_29394(t16,t12);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29443,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28444,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   pattern-clause?");
f_28335(t4,t3);}}

/* k28442 in k29363 in k29360 in k29290 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_29443(t3,(C_word)C_eqp(t2,lf[665]));}
else{
t2=((C_word*)t0)[2];
f_29443(t2,C_SCHEME_FALSE);}}

/* k29441 in k29363 in k29360 in k29290 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_29443(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29443,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29452,a[2]=((C_word*)t0)[6],a[3]=t7,a[4]=t5,a[5]=((C_word*)t0)[7],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29463,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word)li439),tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29469,a[2]=t7,a[3]=t5,a[4]=t3,a[5]=((C_word)li440),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   call-with-values");
C_call_with_values(4,0,t8,t9,t10);}
else{
t2=((C_word*)t0)[5];
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 19   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[7],lf[664],t3);}}

/* a29468 in k29441 in k29363 in k29360 in k29290 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29469(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29469,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a29462 in k29441 in k29363 in k29360 in k29290 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29463,2,t0,t1);}
C_trace("ChickenBridge.scm: 19   parser");
f_29065(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29450 in k29441 in k29363 in k29360 in k29290 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 19   values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 19   values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_TRUE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1]);}}

/* do4609 in k29363 in k29360 in k29290 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_29394(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29394,NULL,2,t0,t1);}
t2=(C_word)C_i_not(((C_word*)((C_word*)t0)[12])[1]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_29404,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[11],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t2)){
t4=t3;
f_29404(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 19   null-tokens?");
f_28202(t3,((C_word*)((C_word*)t0)[8])[1]);}}

/* k29402 in do4609 in k29363 in k29360 in k29290 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29404,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_29407,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[13],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29424,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word)li436),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29430,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[11],a[5]=((C_word)li437),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   call-with-values");
C_call_with_values(4,0,t2,t3,t4);}}

/* a29429 in k29402 in do4609 in k29363 in k29360 in k29290 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29430(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29430,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a29423 in k29402 in do4609 in k29363 in k29360 in k29290 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29424,2,t0,t1);}
C_trace("ChickenBridge.scm: 19   parser");
f_29065(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29405 in k29402 in do4609 in k29363 in k29360 in k29290 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29407,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29410,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29417,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   append");
t4=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_29410(t3,C_SCHEME_UNDEFINED);}}

/* k29415 in k29405 in k29402 in do4609 in k29363 in k29360 in k29290 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29417,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_29410(t6,t5);}

/* k29408 in k29405 in k29402 in do4609 in k29363 in k29360 in k29290 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_29410(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_29394(t2,((C_word*)t0)[2]);}

/* k29369 in k29363 in k29360 in k29290 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29371,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29374,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29380,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   pattern-zero-or-more?");
f_28421(t3,((C_word*)t0)[2]);}

/* k29378 in k29369 in k29363 in k29360 in k29290 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_truep(t1)?t1:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],C_fix(0)));
if(C_truep(t2)){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[3];
f_29374(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_END_OF_LIST);
t5=((C_word*)t0)[3];
f_29374(t5,t4);}}

/* k29372 in k29369 in k29363 in k29360 in k29290 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_29374(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k29296 in k29290 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29298,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29301,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_29316,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[5],a[9]=t4,a[10]=t1,a[11]=((C_word*)t0)[10],a[12]=((C_word)li435),tmp=(C_word)a,a+=13,tmp));
t6=((C_word*)t4)[1];
f_29316(t6,t2,C_fix(0));}

/* do4589 in k29296 in k29290 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_29316(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29316,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[11])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nequalp(t2,((C_word*)t0)[10]));
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29326,a[2]=t1,a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29335,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word)li433),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29349,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word)li434),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a29348 in do4589 in k29296 in k29290 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29349(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29349,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a29334 in do4589 in k29296 in k29290 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29335,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29343,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   pattern-sub");
f_28363(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29341 in a29334 in do4589 in k29296 in k29290 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29343,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 19   parser");
f_29065(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29324 in do4589 in k29296 in k29290 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29326,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_29316(t3,((C_word*)t0)[2],t2);}

/* k29299 in k29296 in k29290 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 19   values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 19   values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k29211 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29213,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29216,a[2]=((C_word*)t0)[7],a[3]=t3,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_29235,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=t6,a[11]=t3,a[12]=t1,a[13]=((C_word)li432),tmp=(C_word)a,a+=14,tmp));
t8=((C_word*)t6)[1];
f_29235(t8,t4,C_fix(0));}

/* do4567 in k29211 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_29235(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29235,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nequalp(t2,((C_word*)t0)[12]);
t4=(C_truep(t3)?t3:((C_word*)((C_word*)t0)[11])[1]);
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29248,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=t1,a[7]=((C_word*)t0)[10],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29268,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word)li430),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29282,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word)li431),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a29281 in do4567 in k29211 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29282(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29282,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a29267 in do4567 in k29211 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29268,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29276,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   pattern-sub");
f_28363(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29274 in a29267 in do4567 in k29211 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29276,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 19   parser");
f_29065(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29246 in do4567 in k29211 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29248,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29251,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_29251(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t5=t2;
f_29251(t5,t4);}}

/* k29249 in k29246 in do4567 in k29211 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_29251(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29251,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_29235(t3,((C_word*)t0)[2],t2);}

/* k29214 in k29211 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29216,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29219,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_END_OF_LIST);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[2])[1]);
t6=t2;
f_29219(t6,t5);}
else{
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29233,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   reverse");
t5=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[5])[1]);}}

/* k29231 in k29214 in k29211 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_29219(t3,t2);}

/* k29217 in k29214 in k29211 in k29202 in k29196 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_29219(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k29082 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29084,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29090,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 19   SalTokenType?");
f_29684(t2,t1);}

/* k29088 in k29082 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29090,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29096,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   null-tokens?");
f_28202(t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29148,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 19   SalRuleType?");
f_29834(t2,((C_word*)t0)[5]);}}

/* k29146 in k29088 in k29082 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29148,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29151,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 19   get-rule");
f_28314(t2,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 19   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[663],((C_word*)t0)[2]);}}

/* k29149 in k29146 in k29088 in k29082 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29151,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[626]);
t4=(C_word)C_i_block_ref(t2,C_fix(3));
t5=t1;
t6=(C_word)C_i_check_structure(t5,lf[626]);
t7=(C_word)C_i_block_ref(t5,C_fix(4));
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29162,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[6],a[7]=((C_word)li428),tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29172,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word)li429),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   call-with-values");
C_call_with_values(4,0,((C_word*)t0)[2],t8,t9);}

/* a29171 in k29149 in k29146 in k29088 in k29082 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29172(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29172,5,t0,t1,t2,t3,t4);}
if(C_truep(t2)){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29183,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 19   func");
t6=((C_word*)t0)[3];
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t3,((C_word*)t0)[2]);}
else{
t6=t5;
f_29183(2,t6,t3);}}
else{
C_trace("ChickenBridge.scm: 19   values");
C_values(5,0,t1,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);}}

/* k29181 in a29171 in k29149 in k29146 in k29088 in k29082 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   values");
C_values(5,0,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a29161 in k29149 in k29146 in k29088 in k29082 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29162,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 19   parser");
f_29065(t1,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29094 in k29088 in k29082 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29096,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 19   values");
C_values(5,0,((C_word*)t0)[4],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29106,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   first-token");
f_28190(t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k29104 in k29094 in k29088 in k29082 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29106,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29112,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29142,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   token-type");
f_28122(t3,t1);}

/* k29140 in k29104 in k29094 in k29088 in k29082 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29846(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k29110 in k29104 in k29094 in k29088 in k29082 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29112,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29119,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29127,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   token-type");
f_28122(t3,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 19   values");
C_values(5,0,((C_word*)t0)[3],C_SCHEME_FALSE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[4])[1]);}}

/* k29125 in k29110 in k29104 in k29094 in k29088 in k29082 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29127,2,t0,t1);}
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[617]);
t4=(C_word)C_i_block_ref(t2,C_fix(2));
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29135,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   token-position");
f_28158(t5,((C_word*)t0)[3]);}

/* k29133 in k29125 in k29110 in k29104 in k29094 in k29088 in k29082 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28501(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k29117 in k29110 in k29104 in k29094 in k29088 in k29082 in k29073 in k29070 in k29067 in parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_29119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 19   values");
C_values(5,0,((C_word*)t0)[2],C_SCHEME_TRUE,t1,t3);}

/* simple-unit-emitter in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28961(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28961,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28963,a[2]=t2,a[3]=((C_word)li426),tmp=(C_word)a,a+=4,tmp));}

/* f_28963 in simple-unit-emitter in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28963(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28963,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28967,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29011,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28540(t6,t2);}

/* k29009 */
static void C_ccall f_29011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   append");
t2=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k28965 */
static void C_ccall f_28967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28967,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28970,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)t0)[2])){
t6=(C_word)C_i_set_car(((C_word*)t3)[1],((C_word*)t0)[2]);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
t8=C_set_block_item(t3,0,t7);
t9=t5;
f_28970(t9,t8);}
else{
t6=t5;
f_28970(t6,C_SCHEME_UNDEFINED);}}

/* k28968 in k28965 */
static void C_fcall f_28970(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28970,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28975,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t3,a[5]=((C_word*)t0)[6],a[6]=((C_word)li425),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_28975(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* do4524 in k28968 in k28965 */
static void C_fcall f_28975(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28975,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28996,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k28994 in do4524 in k28968 in k28965 */
static void C_ccall f_28996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_28975(t4,((C_word*)t0)[2],t3);}

/* simple-unit-parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28953(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28953,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28955,a[2]=t2,a[3]=((C_word)li423),tmp=(C_word)a,a+=4,tmp));}

/* f_28955 in simple-unit-parser in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28955(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28955,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 19   make-parse-unit");
f_28501(t1,((C_word*)t0)[2],t2,C_SCHEME_FALSE);}

/* != in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28776(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2r,(void*)f_28776r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_28776r(t0,t1,t2);}}

static void C_ccall f_28776r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a=C_alloc(3);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28784,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(4,0,t3,*((C_word*)lf[200]+1),t2);}

/* k28782 in != in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_not(t1));}

/* emit-list in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28745(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28745,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_END_OF_LIST);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28762,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 19   emit");
f_28712(t5,t6,t3,t4);}}

/* k28760 in emit-list in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28762,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28766,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 19   emit-list");
f_28745(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k28764 in k28760 in emit-list in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28766,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* emit in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28712(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28712,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28719,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   token-unit?");
f_28567(t5,t2);}

/* k28717 in emit in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28719,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28790,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-type");
f_28522(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28728,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28606,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit?");
f_28507(t4,t3);}}

/* k28604 in k28717 in emit in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28606,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28613,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-type");
f_28522(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_28728(2,t2,C_SCHEME_FALSE);}}

/* k28611 in k28604 in k28717 in emit in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   SalRuleType?");
f_29834(((C_word*)t0)[2],t1);}

/* k28726 in k28717 in emit in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28728,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28928,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28951,a[2]=t6,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-type");
f_28522(t7,t3);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 19   emit-list");
f_28745(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 19   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[656],((C_word*)t0)[4]);}}}

/* k28949 in k28726 in k28717 in emit in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   get-rule");
f_28314(((C_word*)t0)[2],t1);}

/* k28926 in k28726 in k28717 in emit in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28928,2,t0,t1);}
t2=(C_word)C_i_check_structure(t1,lf[626]);
t3=(C_word)C_i_block_ref(t1,C_fix(5));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 19   meth");
t4=t3;
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28944,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28540(t4,((C_word*)t0)[4]);}}

/* k28942 in k28926 in k28726 in k28717 in emit in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   emit");
f_28712(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k28788 in k28717 in emit in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28790,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28793,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-parsed");
f_28540(t2,((C_word*)t0)[2]);}

/* k28791 in k28788 in k28717 in emit in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28793,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_lessp(C_fix(2560),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(3584)):C_SCHEME_FALSE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 19   string->number");
C_string_to_number(3,0,((C_word*)t0)[3],t1);}
else{
t5=((C_word*)t0)[4];
t6=(C_word)C_i_lessp(C_fix(13056),t5);
t7=(C_truep(t6)?(C_word)C_i_lessp(t5,C_fix(23808)):C_SCHEME_FALSE);
if(C_truep(t7)){
C_trace("ChickenBridge.scm: 19   string->symbol");
t8=*((C_word*)lf[529]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,((C_word*)t0)[3],t1);}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28817,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   SalOpType?");
f_29732(t8,((C_word*)t0)[4]);}}}

/* k28815 in k28791 in k28788 in k28717 in emit in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28817,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28823,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29846(t2,((C_word*)t0)[3],C_fix(7941));}
else{
t2=((C_word*)t0)[3];
t3=(C_word)C_i_lessp(C_fix(4096),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(4864)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28868,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29846(t5,((C_word*)t0)[3],C_fix(4352));}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28874,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29846(t5,((C_word*)t0)[3],C_fix(2304));}}}

/* k28872 in k28815 in k28791 in k28788 in k28717 in emit in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28874,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28880,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29846(t2,((C_word*)t0)[2],C_fix(6144));}}

/* k28878 in k28872 in k28815 in k28791 in k28788 in k28717 in emit in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28880,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 19   string->keyword");
t2=C_retrieve(lf[651]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28889,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29846(t2,((C_word*)t0)[2],C_fix(3840));}}

/* k28887 in k28878 in k28872 in k28815 in k28791 in k28788 in k28717 in emit in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28889,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 19   string->keyword");
t2=C_retrieve(lf[651]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28898,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29846(t2,((C_word*)t0)[2],C_fix(6400));}}

/* k28896 in k28887 in k28878 in k28872 in k28815 in k28791 in k28788 in k28717 in emit in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28898,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 19   string->symbol");
t2=*((C_word*)lf[529]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28907,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29846(t2,((C_word*)t0)[2],C_fix(25344));}}

/* k28905 in k28896 in k28887 in k28878 in k28872 in k28815 in k28791 in k28788 in k28717 in emit in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28907,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 19   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[652],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28916,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29846(t2,((C_word*)t0)[2],C_fix(25088));}}

/* k28914 in k28905 in k28896 in k28887 in k28878 in k28872 in k28815 in k28791 in k28788 in k28717 in emit in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 19   string->symbol");
t2=*((C_word*)lf[529]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 19   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[653],((C_word*)t0)[2]);}}

/* k28866 in k28815 in k28791 in k28788 in k28717 in emit in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_SCHEME_TRUE:C_SCHEME_FALSE));}

/* k28821 in k28815 in k28791 in k28788 in k28717 in emit in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28823,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[428]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28829,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29846(t2,((C_word*)t0)[2],C_fix(8199));}}

/* k28827 in k28821 in k28815 in k28791 in k28788 in k28717 in emit in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28829,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[449]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28835,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29846(t2,((C_word*)t0)[2],C_fix(10244));}}

/* k28833 in k28827 in k28821 in k28815 in k28791 in k28788 in k28717 in emit in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28835,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[9]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28841,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29846(t2,((C_word*)t0)[2],C_fix(8450));}}

/* k28839 in k28833 in k28827 in k28821 in k28815 in k28791 in k28788 in k28717 in emit in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28841,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[214]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28847,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29846(t2,((C_word*)t0)[2],C_fix(8705));}}

/* k28845 in k28839 in k28833 in k28827 in k28821 in k28815 in k28791 in k28788 in k28717 in emit in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28847,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[238]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28853,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29846(t2,((C_word*)t0)[2],C_fix(8963));}}

/* k28851 in k28845 in k28839 in k28833 in k28827 in k28821 in k28815 in k28791 in k28788 in k28717 in emit in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[178]);}
else{
C_trace("ChickenBridge.scm: 19   string->symbol");
t2=*((C_word*)lf[529]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* set-emit-info! in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28694(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28694,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_assoc(t2,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28701,a[2]=t3,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=t6;
f_28701(2,t7,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 19   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[649],t2);}}

/* k28699 in set-emit-info! in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_set_cdr(((C_word*)t0)[3],((C_word*)t0)[2]));}

/* add-emit-info in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28627(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28627,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_cons(&a,2,t2,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_cons(&a,2,t5,t4));}

/* get-emit-info in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28615(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28615,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_assoc(t2,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cdr(t4):C_SCHEME_FALSE));}

/* token-unit-type=? in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28583(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28583,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28590,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 19   token-unit?");
f_28567(t4,t2);}

/* k28588 in token-unit-type=? in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28590,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28597,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-type");
f_28522(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k28595 in k28588 in token-unit-type=? in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   SalType=?");
f_29846(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* token-unit? in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28567(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28567,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28574,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit?");
f_28507(t3,t2);}

/* k28572 in token-unit? in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28574,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28581,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   parse-unit-type");
f_28522(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k28579 in k28572 in token-unit? in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 19   SalTokenType?");
f_29684(((C_word*)t0)[2],t1);}

/* parse-unit-position in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28558(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28558,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[637]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* parse-unit-parsed in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28540(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28540,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[637]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-unit-type in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28522(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28522,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[637]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* parse-unit? in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28507(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28507,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[637]));}

/* make-parse-unit in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28501(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28501,NULL,4,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[637],t2,t3,t4));}

/* make-parse-error in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28453(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28453,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_record(&a,3,lf[635],t2,t3));}

/* pattern-zero-or-more? in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28421(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28421,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28428,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   pattern-clause?");
f_28335(t3,t2);}

/* k28426 in pattern-zero-or-more? in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_eqp(t2,lf[387]));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* pattern-sub in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28363(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28363,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28371,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   pattern-subs");
f_28347(t4,t2);}

/* k28369 in pattern-sub in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)t0)[2]));}

/* pattern-nsubs in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28353(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28353,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28361,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 19   pattern-subs");
f_28347(t3,t2);}

/* k28359 in pattern-nsubs in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_length(t1));}

/* pattern-subs in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28347(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28347,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* pattern-clause? in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28335(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28335,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_pairp(t2));}

/* pattern-value in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28332(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28332,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* get-rule in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28314(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28314,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28318,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 19   hash-ref");
t4=C_retrieve(lf[14]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,C_retrieve2(lf[624],"*rules*"),t2);}

/* k28316 in get-rule in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
C_trace("ChickenBridge.scm: 19   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[628],((C_word*)t0)[2]);}}

/* make-rule in k28208 in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28212(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28212,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,6,lf[626],t2,t3,t4,t5,t6));}

/* null-tokens? in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28202(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28202,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_nullp(t2));}

/* first-token in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28190(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28190,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_car(t2));}

/* list->token in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28167(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28167,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_eqp(t3,lf[621]);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t2);
C_apply(4,0,t1,C_retrieve2(lf[616],"make-token"),t5);}
else{
C_apply(4,0,t1,C_retrieve2(lf[616],"make-token"),t2);}}

/* token-position in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28158(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28158,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[617]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* token-type in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28122(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28122,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[617]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-token in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28101(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28101,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[617],t2,t3,t4));}

/* export-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27905(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27905,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27909,a[2]=t3,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_27909(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_27909(t8,t7);}}

/* k27907 in export-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_27909(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27909,NULL,2,t0,t1);}
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_length(((C_word*)((C_word*)t0)[4])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27915,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t4,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28058,a[2]=t7,a[3]=t3,a[4]=((C_word)li393),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_28058(t9,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* do4291 in k27907 in export-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_28058(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28058,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28069,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28084,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 18   spectrum-freqs");
t6=C_retrieve(lf[554]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}}

/* k28082 in do4291 in k27907 in export-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_length(t1);
C_trace("ChickenBridge.scm: 18   max");
t3=*((C_word*)lf[342]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k28067 in do4291 in k27907 in export-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_28058(t4,((C_word*)t0)[2],t3);}

/* k27913 in k27907 in export-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27915,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27920,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word)li392),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   with-output-to-file");
t3=C_retrieve(lf[615]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a27919 in k27913 in k27907 in export-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27920,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27924,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   current-output-port");
t3=*((C_word*)lf[614]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k27922 in a27919 in k27913 in k27907 in export-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27924,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27927,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 18   format");
t3=C_retrieve(lf[407]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,lf[613]);}

/* k27925 in k27922 in a27919 in k27913 in k27907 in export-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27927,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27930,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 18   format");
t3=C_retrieve(lf[407]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[6],lf[612]);}

/* k27928 in k27925 in k27922 in a27919 in k27913 in k27907 in export-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27930,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27933,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   format");
t3=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[6],lf[611],((C_word*)((C_word*)t0)[2])[1]);}

/* k27931 in k27928 in k27925 in k27922 in a27919 in k27913 in k27907 in export-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27933,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27936,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 18   format");
t3=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[5],lf[610],((C_word*)t0)[2]);}

/* k27934 in k27931 in k27928 in k27925 in k27922 in a27919 in k27913 in k27907 in export-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27936,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27939,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 18   format");
t3=C_retrieve(lf[407]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[4],lf[609]);}

/* k27937 in k27934 in k27931 in k27928 in k27925 in k27922 in a27919 in k27913 in k27907 in export-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27939,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27944,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word)li391),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_27944(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* do4297 in k27937 in k27934 in k27931 in k27928 in k27925 in k27922 in a27919 in k27913 in k27907 in export-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_27944(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27944,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27954,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28038,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 18   spectrum-time");
t7=C_retrieve(lf[550]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k28036 in do4297 in k27937 in k27934 in k27931 in k27928 in k27925 in k27922 in a27919 in k27913 in k27907 in export-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28038,2,t0,t1);}
t2=(C_truep(t1)?t1:(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],lf[607]));
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28045,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 18   spectrum-size");
t5=C_retrieve(lf[552]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k28043 in k28036 in do4297 in k27937 in k27934 in k27931 in k27928 in k27925 in k27922 in a27919 in k27913 in k27907 in export-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_28045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 18   format");
t2=C_retrieve(lf[407]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[608],((C_word*)t0)[2],t1);}

/* k27952 in do4297 in k27937 in k27934 in k27931 in k27928 in k27925 in k27922 in a27919 in k27913 in k27907 in export-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27954,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27957,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27975,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 18   spectrum-freqs");
t5=C_retrieve(lf[554]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k27973 in k27952 in do4297 in k27937 in k27934 in k27931 in k27928 in k27925 in k27922 in a27919 in k27913 in k27907 in export-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27975,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27979,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 18   spectrum-amps");
t4=C_retrieve(lf[556]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k27977 in k27973 in k27952 in do4297 in k27937 in k27934 in k27931 in k27928 in k27925 in k27922 in a27919 in k27913 in k27907 in export-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27979,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27983,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 18   spectrum-size");
t4=C_retrieve(lf[552]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k27981 in k27977 in k27973 in k27952 in do4297 in k27937 in k27934 in k27931 in k27928 in k27925 in k27922 in a27919 in k27913 in k27907 in export-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27983,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27985,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word)li390),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_27985(t5,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do4303 in k27981 in k27977 in k27973 in k27952 in do4297 in k27937 in k27934 in k27931 in k27928 in k27925 in k27922 in a27919 in k27913 in k27907 in export-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_27985(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27985,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_less_or_equalp(t4,C_fix(0)))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27995,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(C_word)C_a_i_minus(&a,2,t4,C_fix(1));
t7=(C_word)C_i_car(t2);
t8=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 18   format");
t9=C_retrieve(lf[407]);
((C_proc7)C_retrieve_proc(t9))(7,t9,t5,((C_word*)t0)[2],lf[606],t6,t7,t8);}}

/* k27993 in do4303 in k27981 in k27977 in k27973 in k27952 in do4297 in k27937 in k27934 in k27931 in k27928 in k27925 in k27922 in a27919 in k27913 in k27907 in export-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27995,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],C_fix(1));
t5=((C_word*)((C_word*)t0)[3])[1];
f_27985(t5,((C_word*)t0)[2],t2,t3,t4);}

/* k27955 in k27952 in do4297 in k27937 in k27934 in k27931 in k27928 in k27925 in k27922 in a27919 in k27913 in k27907 in export-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27957,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27960,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   format");
t3=C_retrieve(lf[407]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],lf[605]);}

/* k27958 in k27955 in k27952 in do4297 in k27937 in k27934 in k27931 in k27928 in k27925 in k27922 in a27919 in k27913 in k27907 in export-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27960,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_27944(t4,((C_word*)t0)[2],t2,t3);}

/* import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27779(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27779,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27785,a[2]=((C_word)li388),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 18   with-input-from-file");
t4=C_retrieve(lf[603]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t2,t3);}

/* a27784 in import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27785,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27789,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 18   current-input-port");
t3=*((C_word*)lf[602]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k27787 in a27784 in import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27789,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27790,a[2]=((C_word)li383),tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27807,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   rhdr");
f_27790(t5,t1);}

/* k27805 in k27787 in a27784 in import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27807,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27810,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[600]))){
t4=t3;
f_27810(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 18   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[601],((C_word*)t0)[4]);}}

/* k27808 in k27805 in k27787 in a27784 in import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27810,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27814,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   rhdr");
f_27790(t2,((C_word*)t0)[4]);}

/* k27812 in k27808 in k27805 in k27787 in a27784 in import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27814,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27817,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[598]))){
t4=t3;
f_27817(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 18   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[599],((C_word*)t0)[4]);}}

/* k27815 in k27812 in k27808 in k27805 in k27787 in a27784 in import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27817,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27820,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27869,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word)li387),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_27869(t6,t2);}

/* do4268 in k27815 in k27812 in k27808 in k27805 in k27787 in a27784 in import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_27869(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27869,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[597]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27880,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 18   rhdr");
f_27790(t2,((C_word*)t0)[2]);}}

/* k27878 in do4268 in k27815 in k27812 in k27808 in k27805 in k27787 in a27784 in import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27869(t3,((C_word*)t0)[2]);}

/* k27818 in k27815 in k27812 in k27808 in k27805 in k27787 in a27784 in import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27820,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27830,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   read-line");
t6=C_retrieve(lf[594]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[3]);}

/* k27828 in k27818 in k27815 in k27812 in k27808 in k27805 in k27787 in a27784 in import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27830,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27832,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li386),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_27832(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do4278 in k27828 in k27818 in k27815 in k27812 in k27808 in k27805 in k27787 in a27784 in import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_27832(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27832,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_eofp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27846,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t6=t2;
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27676,a[2]=t5,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   open-input-string");
t8=C_retrieve(lf[596]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,t6);}}

/* k27674 in do4278 in k27828 in k27818 in k27815 in k27812 in k27808 in k27805 in k27787 in a27784 in import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27676,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27677,a[2]=((C_word*)t0)[3],a[3]=((C_word)li384),tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27700,a[2]=t1,a[3]=t2,a[4]=t7,a[5]=((C_word*)t0)[2],a[6]=t8,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 18   rdat");
t10=t2;
f_27677(t10,t9,t1);}

/* k27698 in k27674 in do4278 in k27828 in k27818 in k27815 in k27812 in k27808 in k27805 in k27787 in a27784 in import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27700,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27704,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 18   rdat");
t4=((C_word*)t0)[3];
f_27677(t4,t3,((C_word*)t0)[2]);}

/* k27702 in k27698 in k27674 in do4278 in k27828 in k27818 in k27815 in k27812 in k27808 in k27805 in k27787 in a27784 in import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27704,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27707,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27730,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[8],a[6]=((C_word)li385),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_27730(t7,t3,C_fix(0),((C_word*)t0)[5],((C_word*)t0)[7]);}

/* do4247 in k27702 in k27698 in k27674 in do4278 in k27828 in k27818 in k27815 in k27812 in k27808 in k27805 in k27787 in a27784 in import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_27730(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27730,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)((C_word*)t0)[5])[1]))){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,C_SCHEME_FALSE);}
else{
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27740,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=t5,a[8]=t6,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 18   rdat");
t8=((C_word*)t0)[3];
f_27677(t8,t7,((C_word*)t0)[2]);}}

/* k27738 in do4247 in k27702 in k27698 in k27674 in do4278 in k27828 in k27818 in k27815 in k27812 in k27808 in k27805 in k27787 in a27784 in import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27740,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27777,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 18   rdat");
t3=((C_word*)t0)[3];
f_27677(t3,t2,((C_word*)t0)[2]);}

/* k27775 in k27738 in do4247 in k27702 in k27698 in k27674 in do4278 in k27828 in k27818 in k27815 in k27812 in k27808 in k27805 in k27787 in a27784 in import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27777,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[8])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t4);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27769,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 18   rdat");
t7=((C_word*)t0)[3];
f_27677(t7,t6,((C_word*)t0)[2]);}

/* k27767 in k27775 in k27738 in do4247 in k27702 in k27698 in k27674 in do4278 in k27828 in k27818 in k27815 in k27812 in k27808 in k27805 in k27787 in a27784 in import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27769,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t7=((C_word*)((C_word*)t0)[4])[1];
f_27730(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k27705 in k27702 in k27698 in k27674 in do4278 in k27828 in k27818 in k27815 in k27812 in k27808 in k27805 in k27787 in a27784 in import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
t3=((C_word*)t0)[5];
f_27846(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_cdr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 18   make-spectrum");
f_24438(((C_word*)t0)[5],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],t3,t4);}}

/* rdat in k27674 in do4278 in k27828 in k27818 in k27815 in k27812 in k27808 in k27805 in k27787 in a27784 in import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_27677(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27677,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27681,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   read");
t4=*((C_word*)lf[18]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k27679 in rdat in k27674 in do4278 in k27828 in k27818 in k27815 in k27812 in k27808 in k27805 in k27787 in a27784 in import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27681,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27684,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_eofp(t1))){
C_trace("ChickenBridge.scm: 18   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[595],((C_word*)t0)[2]);}
else{
t3=t2;
f_27684(2,t3,C_SCHEME_UNDEFINED);}}

/* k27682 in k27679 in rdat in k27674 in do4278 in k27828 in k27818 in k27815 in k27812 in k27808 in k27805 in k27787 in a27784 in import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k27844 in do4278 in k27828 in k27818 in k27815 in k27812 in k27808 in k27805 in k27787 in a27784 in import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27846,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27849,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t3;
f_27849(t8,t7);}
else{
t4=t3;
f_27849(t4,C_SCHEME_UNDEFINED);}}

/* k27847 in k27844 in do4278 in k27828 in k27818 in k27815 in k27812 in k27808 in k27805 in k27787 in a27784 in import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_27849(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27849,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27856,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 18   read-line");
t3=C_retrieve(lf[594]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k27854 in k27847 in k27844 in do4278 in k27828 in k27818 in k27815 in k27812 in k27808 in k27805 in k27787 in a27784 in import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_27832(t2,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* rhdr in k27787 in a27784 in import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_27790(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27790,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27794,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   read-line");
t4=C_retrieve(lf[594]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k27792 in rhdr in k27787 in a27784 in import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27794,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27797,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_eofp(t1))){
C_trace("ChickenBridge.scm: 18   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[593],((C_word*)t0)[2]);}
else{
t3=t2;
f_27797(2,t3,C_SCHEME_UNDEFINED);}}

/* k27795 in k27792 in rhdr in k27787 in a27784 in import-spear-frames in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27266(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+24)){
C_save_and_reclaim((void*)tr4r,(void*)f_27266r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_27266r(t0,t1,t2,t3,t4);}}

static void C_ccall f_27266r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a=C_alloc(24);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27270,a[2]=t5,a[3]=t10,a[4]=t8,a[5]=t6,a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t6)[1]))){
C_trace("ChickenBridge.scm: 18   error");
t12=*((C_word*)lf[74]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,lf[590]);}
else{
t12=(C_word)C_i_cdr(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27639,a[2]=t11,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_car(((C_word*)t6)[1]);
t15=(C_word)C_i_pairp(t14);
t16=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27645,a[2]=t6,a[3]=t13,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t15)){
t17=t16;
f_27645(t17,t15);}
else{
t17=(C_word)C_i_car(((C_word*)t6)[1]);
t18=t16;
f_27645(t18,(C_word)C_i_numberp(t17));}}
else{
t13=t11;
f_27270(2,t13,C_SCHEME_UNDEFINED);}}}

/* k27643 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_27645(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_27639(2,t2,(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]));}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 18   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],lf[591],t2);}}

/* k27637 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_27270(2,t3,t2);}

/* k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27270,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27273,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27623,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   <=");
C_less_or_equal_p(5,0,t3,C_fix(1),((C_word*)((C_word*)t0)[2])[1],C_fix(8));}

/* k27621 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27623,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_27273(2,t4,t3);}
else{
C_trace("ChickenBridge.scm: 18   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[589],((C_word*)((C_word*)t0)[3])[1]);}}

/* k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27273,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27276,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(2)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27605,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-amps");
t4=C_retrieve(lf[556]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27609,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-freqs");
t4=C_retrieve(lf[554]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}}

/* k27607 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_27276(t3,t2);}

/* k27603 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_27276(t3,t2);}

/* k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_27276(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27276,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27279,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(1)))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27594,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-amps");
t4=C_retrieve(lf[556]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27598,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-freqs");
t4=C_retrieve(lf[554]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}}

/* k27596 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_SCHEME_UNDEFINED;
t3=((C_word*)t0)[2];
f_27279(t3,t2);}

/* k27592 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_SCHEME_UNDEFINED;
t3=((C_word*)t0)[2];
f_27279(t3,t2);}

/* k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_27279(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27279,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27282,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=t2;
f_27282(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=t2;
f_27282(t4,t3);}}

/* k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_27282(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27282,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27285,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27296,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word)li373),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_27296(t6,t2,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27326,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word)li374),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_27326(t6,t2,((C_word*)((C_word*)t0)[3])[1]);}}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27346,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27582,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=*((C_word*)lf[588]+1);
t6=((C_word*)((C_word*)t0)[5])[1];
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8251,a[2]=t5,a[3]=t8,a[4]=((C_word)li381),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_8251(t10,t4,t6,C_SCHEME_TRUE);}}

/* do601 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_8251(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8251,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_not(((C_word*)t4)[1]);
t6=(C_truep(t5)?t5:(C_word)C_i_nullp(t2));
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,((C_word*)t4)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8264,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8274,a[2]=t4,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 14   f");
t10=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t10))(3,t10,t8,t9);}}

/* k8272 in do601 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_8264(t2,C_SCHEME_FALSE);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
f_8264(t3,t2);}}

/* k8262 in do601 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_8264(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_8251(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k27580 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27582,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
f_27346(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27440,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=t5,a[6]=t3,a[7]=t9,a[8]=t7,a[9]=((C_word*)t0)[4],a[10]=((C_word*)t0)[5],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27566,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-minamp");
t12=C_retrieve(lf[562]);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t0)[2]);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27574,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-minfreq");
t12=C_retrieve(lf[560]);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t0)[2]);}}}

/* k27572 in k27580 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27574,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27578,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-maxfreq");
t4=C_retrieve(lf[561]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k27576 in k27572 in k27580 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_27440(t3,t2);}

/* k27564 in k27580 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27566,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27570,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-maxamp");
t4=C_retrieve(lf[564]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k27568 in k27564 in k27580 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_27440(t3,t2);}

/* k27438 in k27580 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_27440(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27440,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27443,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(2)))){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27547,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-minamp");
t4=C_retrieve(lf[562]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27555,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-minfreq");
t4=C_retrieve(lf[560]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k27553 in k27438 in k27580 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27555,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27559,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-maxfreq");
t4=C_retrieve(lf[561]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k27557 in k27553 in k27438 in k27580 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_27443(t3,t2);}

/* k27545 in k27438 in k27580 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27547,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27551,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-maxamp");
t4=C_retrieve(lf[564]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k27549 in k27545 in k27438 in k27580 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_27443(t3,t2);}

/* k27441 in k27438 in k27580 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_27443(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27443,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27447,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 18   append");
t3=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_END_OF_LIST);}

/* k27445 in k27441 in k27438 in k27580 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27447,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27452,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t4,a[8]=((C_word)li380),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_27452(t6,((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}

/* do4210 in k27445 in k27441 in k27438 in k27580 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_27452(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27452,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27462,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_eqp(t4,C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t3;
f_27462(t6,(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[3])[1]));}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_eqp(t6,C_SCHEME_TRUE);
t8=t3;
f_27462(t8,(C_truep(t7)?(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[2])[1]):C_SCHEME_UNDEFINED));}}}

/* k27460 in do4210 in k27445 in k27441 in k27438 in k27580 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_27462(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27462,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27465,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 18   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[587],t3);}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
t4=(C_word)C_eqp(t3,C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(((C_word*)t0)[7]);
t6=t2;
f_27465(2,t6,(C_word)C_i_set_car(t5,((C_word*)((C_word*)t0)[3])[1]));}
else{
t5=(C_word)C_i_cadr(((C_word*)t0)[7]);
t6=(C_word)C_eqp(t5,C_SCHEME_TRUE);
if(C_truep(t6)){
t7=(C_word)C_i_cdr(((C_word*)t0)[7]);
t8=t2;
f_27465(2,t8,(C_word)C_i_set_car(t7,((C_word*)((C_word*)t0)[2])[1]));}
else{
t7=t2;
f_27465(2,t7,C_SCHEME_UNDEFINED);}}}}

/* k27463 in k27460 in do4210 in k27445 in k27441 in k27438 in k27580 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27452(t3,((C_word*)t0)[2],t2);}

/* k27344 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27346,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27349,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27371,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word)li378),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_27371(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27409,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word)li379),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_27409(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* do4224 in k27344 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_27409(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27409,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27430,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 18   interp");
t5=C_retrieve(lf[463]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k27428 in do4224 in k27344 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_27409(t4,((C_word*)t0)[2],t3);}

/* do4219 in k27344 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_27371(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27371,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27400,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 18   interp");
t6=C_retrieve(lf[463]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}}

/* k27398 in do4219 in k27344 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27400,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[4],t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_27371(t5,((C_word*)t0)[2],t4);}

/* k27347 in k27344 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27349,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27362,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27366,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-freqs");
t4=C_retrieve(lf[554]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k27364 in k27347 in k27344 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_apply(4,0,((C_word*)t0)[2],*((C_word*)lf[144]+1),t1);}

/* k27360 in k27347 in k27344 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27362,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_27285(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=((C_word*)t0)[2];
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26732,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26804,a[2]=((C_word)li377),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26812,a[2]=t2,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-freqs");
t6=C_retrieve(lf[554]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}

/* k26810 in k27360 in k27347 in k27344 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26812,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26816,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-amps");
t3=C_retrieve(lf[556]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k26814 in k26810 in k27360 in k27347 in k27344 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 18   map");
t2=*((C_word*)lf[586]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a26803 in k27360 in k27347 in k27344 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26804(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26804,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* k26730 in k27360 in k27347 in k27344 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26732,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26736,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26790,a[2]=((C_word)li376),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 18   sort!");
t6=C_retrieve(lf[567]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)t3)[1],t5);}

/* a26789 in k26730 in k27360 in k27347 in k27344 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26790(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26790,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_lessp(t4,t5));}

/* k26734 in k26730 in k27360 in k27347 in k27344 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26736,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26744,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word)li375),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_26744(t8,((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1],t4);}

/* do4095 in k26734 in k26730 in k27360 in k27347 in k27344 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_26744(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word *a;
loop:
a=C_alloc(5);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_26744,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26754,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-freqs-set!");
f_24486(t4,((C_word*)t0)[5],((C_word*)t0)[3]);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t4);
t6=(C_word)C_i_cdr(t4);
t7=(C_word)C_i_set_cdr(t3,t6);
t8=(C_word)C_i_cdr(t3);
t9=t3=t8;
t10=(C_word)C_i_set_car(t2,t5);
t11=(C_word)C_i_cdr(t2);
t14=t1;
t15=t11;
t16=t3;
t1=t14;
t2=t15;
t3=t16;
goto loop;}}

/* k26752 in do4095 in k26734 in k26730 in k27360 in k27347 in k27344 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26754,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26757,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 18   spectrum-amps-set!");
f_24504(t2,((C_word*)t0)[3],t3);}

/* k26755 in k26752 in do4095 in k26734 in k26730 in k27360 in k27347 in k27344 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* do4197 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_27326(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27326,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_cdr(t2);
t6=t1;
t7=t4;
t1=t6;
t2=t7;
goto loop;}}

/* do4192 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_27296(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_27296,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_times(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_i_set_car(t2,t4);
t6=(C_word)C_i_cdr(t2);
t8=t1;
t9=t6;
t1=t8;
t2=t9;
goto loop;}}

/* k27283 in k27280 in k27277 in k27274 in k27271 in k27268 in spectrum-rescale! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* spectrum-flip! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27209(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27209,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27217,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-maxfreq");
t4=C_retrieve(lf[561]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k27215 in spectrum-flip! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27217,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27221,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-minfreq");
t3=C_retrieve(lf[560]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k27219 in k27215 in spectrum-flip! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27221,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27225,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-freqs");
t3=C_retrieve(lf[554]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[4]);}

/* k27223 in k27219 in k27215 in spectrum-flip! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27225,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27231,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word)li371),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_27231(t5,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* do4173 in k27223 in k27219 in k27215 in spectrum-flip! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_27231(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a;
loop:
a=C_alloc(15);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_27231,NULL,6,t0,t1,t2,t3,t4,t5);}
if(C_truep((C_word)C_i_nullp(t4))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27241,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-freqs-set!");
f_24486(t6,((C_word*)t0)[3],t5);}
else{
t6=(C_word)C_i_car(t4);
t7=(C_word)C_a_i_divide(&a,2,t2,t6);
t8=(C_word)C_a_i_times(&a,2,t3,t7);
t9=(C_word)C_a_i_cons(&a,2,t8,t5);
t10=t5=t9;
t11=(C_word)C_i_cdr(t4);
t14=t1;
t15=t2;
t16=t3;
t17=t11;
t18=t5;
t1=t14;
t2=t15;
t3=t16;
t4=t17;
t5=t18;
goto loop;}}

/* k27239 in do4173 in k27223 in k27219 in k27215 in spectrum-flip! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* rm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26997(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[17],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26997,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26999,a[2]=((C_word)li363),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27016,a[2]=((C_word)li364),tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27033,a[2]=((C_word)li365),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27065,a[2]=t4,a[3]=t2,a[4]=t3,a[5]=t5,a[6]=t6,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 18   getfreqs");
f_26999(t7,t2);}

/* k27063 in rm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27065,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27068,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t1,a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 18   getfreqs");
f_26999(t2,((C_word*)t0)[4]);}

/* k27066 in k27063 in rm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27068,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27071,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 18   getamps");
f_27016(t2,((C_word*)t0)[2]);}

/* k27069 in k27066 in k27063 in rm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27071,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27074,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   getamps");
f_27016(t2,((C_word*)t0)[2]);}

/* k27072 in k27069 in k27066 in k27063 in rm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27074,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27077,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   make-spectrum");
f_24438(t2,C_SCHEME_FALSE,C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}

/* k27075 in k27072 in k27069 in k27066 in k27063 in rm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27077,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27080,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[4]))){
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[3]))){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27094,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li367),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_27094(t6,t2,((C_word*)t0)[3]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27143,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li368),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_27143(t6,t2,((C_word*)t0)[4]);}}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[3]))){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27175,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li369),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_27175(t6,t2,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 18   sums-and-diffs");
f_27033(t2,t1,((C_word*)t0)[4],((C_word*)t0)[3]);}}}

/* do4166 in k27075 in k27072 in k27069 in k27066 in k27063 in rm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_27175(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27175,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27185,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 18   sums-and-diffs");
f_27033(t3,((C_word*)t0)[3],((C_word*)t0)[2],t4);}}

/* k27183 in do4166 in k27075 in k27072 in k27069 in k27066 in k27063 in rm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27175(t3,((C_word*)t0)[2],t2);}

/* do4161 in k27075 in k27072 in k27069 in k27066 in k27063 in rm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_27143(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27143,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27153,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 18   sums-and-diffs");
f_27033(t3,((C_word*)t0)[3],t4,((C_word*)t0)[2]);}}

/* k27151 in do4161 in k27075 in k27072 in k27069 in k27066 in k27063 in rm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27143(t3,((C_word*)t0)[2],t2);}

/* do4151 in k27075 in k27072 in k27069 in k27066 in k27063 in rm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_27094(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27094,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27104,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27113,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t5,a[6]=((C_word)li366),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_27113(t7,t3,((C_word*)t0)[2]);}}

/* do4154 in do4151 in k27075 in k27072 in k27069 in k27066 in k27063 in rm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_27113(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27113,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27123,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 18   sums-and-diffs");
f_27033(t3,((C_word*)t0)[2],t4,t5);}}

/* k27121 in do4154 in do4151 in k27075 in k27072 in k27069 in k27066 in k27063 in rm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27113(t3,((C_word*)t0)[2],t2);}

/* k27102 in do4151 in k27075 in k27072 in k27069 in k27066 in k27063 in rm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27094(t3,((C_word*)t0)[2],t2);}

/* k27078 in k27075 in k27072 in k27069 in k27066 in k27063 in rm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* sums-and-diffs in rm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_27033(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27033,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t3,t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27043,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_a_i_plus(&a,2,t3,t4);
C_trace("ChickenBridge.scm: 18   spectrum-add!");
t7=C_retrieve(lf[578]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,t2,t6,lf[583]);}}

/* k27041 in sums-and-diffs in rm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27043,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_abs(&a,1,t2);
C_trace("ChickenBridge.scm: 18   spectrum-add!");
t4=C_retrieve(lf[578]);
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3,lf[582]);}

/* getamps in rm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_27016(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27016,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27023,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum?");
f_24444(t3,t2);}

/* k27021 in getamps in rm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 18   spectrum-amps");
t2=C_retrieve(lf[556]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_pairp(((C_word*)t0)[2]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?lf[580]:lf[581]));}}

/* getfreqs in rm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_26999(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26999,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27006,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum?");
f_24444(t3,t2);}

/* k27004 in getfreqs in rm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_27006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 18   spectrum-freqs");
t2=C_retrieve(lf[554]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_pairp(((C_word*)t0)[2]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)t0)[2]:((C_word*)t0)[2]));}}

/* spectrum-add! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26818(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26818,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26826,a[2]=t1,a[3]=t3,a[4]=t4,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-freqs");
t6=C_retrieve(lf[554]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k26824 in spectrum-add! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26826,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26830,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-amps");
t3=C_retrieve(lf[556]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[5]);}

/* k26828 in k26824 in spectrum-add! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26830,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26832,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word)li361),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_26832(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}

/* do4111 in k26828 in k26824 in spectrum-add! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_26832(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26832,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26842,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t5,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t4,a[8]=t2,a[9]=((C_word*)t0)[5],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t6)){
t8=t7;
f_26842(t8,t6);}
else{
t8=(C_word)C_i_car(t2);
t9=t7;
f_26842(t9,(C_word)C_i_greater_or_equalp(t8,((C_word*)t0)[3]));}}

/* k26840 in do4111 in k26828 in k26824 in spectrum-add! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_26842(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26842,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26845,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[8]))){
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[7]))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26857,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 18   spectrum-freqs-set!");
f_24486(t3,((C_word*)t0)[9],t4);}
else{
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t6=(C_word)C_i_set_cdr(((C_word*)t0)[4],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26888,a[2]=((C_word*)t0)[9],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-size");
t8=C_retrieve(lf[552]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[9]);}}
else{
t3=(C_word)C_i_car(((C_word*)t0)[8]);
if(C_truep((C_word)C_i_nequalp(t3,((C_word*)t0)[5]))){
t4=(C_word)C_i_car(((C_word*)t0)[3]);
t5=(C_word)C_a_i_plus(&a,2,t4,((C_word*)t0)[6]);
t6=t2;
f_26845(2,t6,(C_word)C_i_set_car(((C_word*)t0)[3],t5));}
else{
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[7]))){
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26922,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 18   spectrum-freqs-set!");
f_24486(t4,((C_word*)t0)[9],t5);}
else{
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t6=(C_word)C_i_set_cdr(t4,((C_word*)t0)[8]);
t7=(C_word)C_i_set_cdr(((C_word*)t0)[7],t4);
t8=(C_word)C_i_set_cdr(t5,((C_word*)t0)[3]);
t9=(C_word)C_i_set_cdr(((C_word*)t0)[4],t5);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26973,a[2]=((C_word*)t0)[9],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-size");
t11=C_retrieve(lf[552]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)t0)[9]);}}}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
t4=((C_word*)((C_word*)t0)[2])[1];
f_26832(t4,((C_word*)t0)[10],t2,t3,((C_word*)t0)[8],((C_word*)t0)[3]);}}

/* k26971 in k26840 in do4111 in k26828 in k26824 in spectrum-add! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26973,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 18   spectrum-size-set!");
f_24468(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k26920 in k26840 in do4111 in k26828 in k26824 in spectrum-add! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26922,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26925,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 18   spectrum-amps-set!");
f_24504(t2,((C_word*)t0)[4],t3);}

/* k26923 in k26920 in k26840 in do4111 in k26828 in k26824 in spectrum-add! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26925,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26936,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-size");
t3=C_retrieve(lf[552]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k26934 in k26923 in k26920 in k26840 in do4111 in k26828 in k26824 in spectrum-add! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26936,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 18   spectrum-size-set!");
f_24468(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k26886 in k26840 in do4111 in k26828 in k26824 in spectrum-add! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26888,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 18   spectrum-size-set!");
f_24468(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k26855 in k26840 in do4111 in k26828 in k26824 in spectrum-add! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26857,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26860,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 18   spectrum-amps-set!");
f_24504(t2,((C_word*)t0)[3],t3);}

/* k26858 in k26855 in k26840 in do4111 in k26828 in k26824 in spectrum-add! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 18   spectrum-size-set!");
f_24468(((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}

/* k26843 in k26840 in do4111 in k26828 in k26824 in spectrum-add! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* fm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26412(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26412,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_times(&a,2,t2,t3);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26726,a[2]=t4,a[3]=t2,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   round");
t7=*((C_word*)lf[448]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t4);}

/* k26724 in fm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26726,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26425,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_26655,a[2]=t9,a[3]=t8,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t5,a[8]=t6,a[9]=t3,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 18   -");
C_minus(3,0,t10,t3);}

/* k26653 in k26724 in fm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26655,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26657,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word)li359),tmp=(C_word)a,a+=11,tmp));
t5=((C_word*)t3)[1];
f_26657(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do4033 in k26653 in k26724 in fm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_26657(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26657,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)t0)[9]))){
t7=(C_word)C_i_cdr(((C_word*)t0)[8]);
t8=C_mutate(((C_word *)((C_word*)t0)[7])+1,t7);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,t8);}
else{
t7=(C_word)C_a_i_times(&a,2,((C_word*)t0)[6],t2);
t8=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],t7);
t9=C_set_block_item(t5,0,t8);
t10=t2;
t11=((C_word*)t0)[4];
t12=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t13=(C_word)C_i_foreign_fixnum_argumentp(t10);
t14=(C_word)C_i_foreign_flonum_argumentp(t11);
t15=(C_word)stub226(t12,t13,t14);
t16=C_set_block_item(t6,0,t15);
t17=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26679,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t18=(C_word)C_i_nequalp(((C_word*)t6)[1],lf[576]);
t19=(C_truep(t18)?t18:(C_word)C_i_nequalp(((C_word*)t5)[1],lf[577]));
if(C_truep(t19)){
t20=t17;
f_26679(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_a_i_list(&a,2,((C_word*)t5)[1],((C_word*)t6)[1]);
t21=(C_word)C_a_i_list(&a,1,t20);
t22=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t21);
t23=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t24=C_mutate(((C_word *)((C_word*)t0)[2])+1,t23);
t25=t17;
f_26679(t25,t24);}}}

/* k26677 in do4033 in k26653 in k26724 in fm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_26679(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26679,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_26657(t3,((C_word*)t0)[4],t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k26423 in k26724 in fm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26425,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26428,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26498,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li358),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_26498(t6,t2,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do4045 in k26423 in k26724 in fm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_26498(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26498,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26651,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t4,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 18   caar");
t7=*((C_word*)lf[575]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k26649 in do4045 in k26423 in k26724 in fm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26651,2,t0,t1);}
if(C_truep((C_word)C_i_negativep(t1))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_abs(&a,1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_i_set_car(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26635,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=t10,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
C_trace("ChickenBridge.scm: 18   -");
C_minus(3,0,t11,t12);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k26633 in k26649 in do4045 in k26423 in k26724 in fm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26635,2,t0,t1);}
t2=(C_word)C_i_set_car(((C_word*)t0)[7],t1);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_i_assoc(t3,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26529,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t4)){
t6=(C_word)C_i_cdr(t4);
t7=(C_word)C_i_cadr(t4);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t9=(C_word)C_a_i_plus(&a,2,t7,t8);
t10=t5;
f_26529(t10,(C_word)C_i_set_car(t6,t9));}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26554,a[2]=t5,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_a_i_minus(&a,2,t7,C_fix(1));
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26587,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=((C_word*)t0)[5],a[5]=((C_word)li357),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_26587(t12,t6,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}}

/* do4051 in k26633 in k26649 in do4045 in k26423 in k26724 in fm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_26587(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26587,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=((C_word*)t5)[1];
t8=(C_truep(t7)?t7:(C_word)C_i_lessp(t2,C_fix(0)));
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,((C_word*)t5)[1]);}
else{
t9=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[4])[1],t2);
t10=(C_word)C_i_car(t9);
t11=C_set_block_item(t6,0,t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26601,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],((C_word*)((C_word*)t0)[2])[1]))){
t13=C_set_block_item(t5,0,t2);
t14=t12;
f_26601(t14,t13);}
else{
t13=t12;
f_26601(t13,C_SCHEME_UNDEFINED);}}}

/* k26599 in do4051 in k26633 in k26649 in do4045 in k26423 in k26724 in fm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_26601(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26601,NULL,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_26587(t3,((C_word*)t0)[4],t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k26552 in k26633 in k26649 in do4045 in k26423 in k26724 in fm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26554,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_list_tail(((C_word*)((C_word*)t0)[4])[1],t1);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=(C_word)C_i_cdr(t3);
t7=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t6);
t8=((C_word*)t0)[2];
f_26529(t8,(C_word)C_i_set_cdr(t3,((C_word*)((C_word*)t0)[3])[1]));}
else{
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_26529(t5,t4);}}

/* k26527 in k26633 in k26649 in do4045 in k26423 in k26724 in fm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_26529(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_26498(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k26426 in k26423 in k26724 in fm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26428,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26436,a[2]=t5,a[3]=t2,a[4]=t3,a[5]=((C_word)li356),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_26436(t7,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1],C_fix(0),t3);}

/* do4073 in k26426 in k26423 in k26724 in fm-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_26436(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a;
loop:
a=C_alloc(8);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_26436,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 18   make-spectrum");
f_24438(t1,C_SCHEME_FALSE,t3,((C_word*)t0)[3],t5);}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_car(t5);
t7=(C_word)C_i_cdr(t5);
t8=(C_word)C_i_cadr(t5);
t9=(C_word)C_a_i_abs(&a,1,t8);
t10=(C_word)C_i_set_car(t7,t9);
t11=(C_word)C_i_cdr(t5);
t12=(C_word)C_i_set_cdr(t4,t11);
t13=(C_word)C_i_cdr(t4);
t14=t4=t13;
t15=(C_word)C_i_set_car(t2,t6);
t16=(C_word)C_i_cdr(t2);
t17=(C_word)C_a_i_plus(&a,2,t3,C_fix(1));
t20=t1;
t21=t16;
t22=t17;
t23=t4;
t1=t20;
t2=t21;
t3=t22;
t4=t23;
goto loop;}}

/* spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24939(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+101)){
C_save_and_reclaim((void*)tr3r,(void*)f_24939r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_24939r(t0,t1,t2,t3);}}

static void C_ccall f_24939r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word *a=C_alloc(101);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=t3;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_24943,a[2]=t27,a[3]=t25,a[4]=t23,a[5]=t21,a[6]=t19,a[7]=t31,a[8]=t17,a[9]=t3,a[10]=t29,a[11]=t15,a[12]=t13,a[13]=t11,a[14]=t9,a[15]=t7,a[16]=t5,a[17]=t2,a[18]=t1,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t29)[1]))){
t33=t32;
f_24943(t33,C_SCHEME_UNDEFINED);}
else{
t33=(C_word)C_i_car(((C_word*)t29)[1]);
t34=(C_word)C_eqp(t33,lf[430]);
if(C_truep(t34)){
t35=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26185,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t17,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("error");
t36=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t36))(4,t36,t35,lf[349],lf[430]);}
else{
t36=t35;
f_26185(2,t36,C_SCHEME_UNDEFINED);}}
else{
t35=(C_word)C_eqp(t33,lf[571]);
if(C_truep(t35)){
t36=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26220,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t19,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t19)[1])){
C_trace("error");
t37=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t37))(4,t37,t36,lf[349],lf[571]);}
else{
t37=t36;
f_26220(2,t37,C_SCHEME_UNDEFINED);}}
else{
t36=(C_word)C_eqp(t33,lf[572]);
if(C_truep(t36)){
t37=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26255,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t21,a[7]=t9,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t21)[1])){
C_trace("error");
t38=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t38))(4,t38,t37,lf[349],lf[572]);}
else{
t38=t37;
f_26255(2,t38,C_SCHEME_UNDEFINED);}}
else{
t37=(C_word)C_eqp(t33,lf[573]);
if(C_truep(t37)){
t38=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26290,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t11,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t23)[1])){
C_trace("error");
t39=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t39))(4,t39,t38,lf[349],lf[573]);}
else{
t39=t38;
f_26290(2,t39,C_SCHEME_UNDEFINED);}}
else{
t38=(C_word)C_eqp(t33,lf[382]);
if(C_truep(t38)){
t39=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26325,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t25,a[7]=t13,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t25)[1])){
C_trace("error");
t40=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t40))(4,t40,t39,lf[349],lf[382]);}
else{
t40=t39;
f_26325(2,t40,C_SCHEME_UNDEFINED);}}
else{
t39=(C_word)C_eqp(t33,lf[383]);
if(C_truep(t39)){
t40=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26360,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t27,a[7]=t15,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t27)[1])){
C_trace("error");
t41=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t41))(4,t41,t40,lf[349],lf[383]);}
else{
t41=t40;
f_26360(2,t41,C_SCHEME_UNDEFINED);}}
else{
t40=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26389,a[2]=t32,a[3]=t17,a[4]=t5,a[5]=t29,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t31)[1])){
C_trace("error");
t41=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t41))(4,t41,t40,lf[353],t3);}
else{
t41=t40;
f_26389(2,t41,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k26387 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26389,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26396,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26404,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26402 in k26387 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26396(2,t2,C_SCHEME_UNDEFINED);}}

/* k26394 in k26387 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24943(t5,t4);}

/* k26358 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26360,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26364,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_26364(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26362 in k26358 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24943(t7,t6);}

/* k26323 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26325,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26329,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_26329(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26327 in k26323 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24943(t7,t6);}

/* k26288 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26290,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26294,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_26294(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26292 in k26288 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24943(t7,t6);}

/* k26253 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26255,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26259,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_26259(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26257 in k26253 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24943(t7,t6);}

/* k26218 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26220,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26224,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_26224(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26222 in k26218 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26224(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24943(t7,t6);}

/* k26183 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26185,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26189,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_26189(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26187 in k26183 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24943(t7,t6);}

/* k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_24943(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24943,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_24946,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_24946(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[430]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25945,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[430]);}
else{
t6=t5;
f_25945(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[571]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25980,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[571]);}
else{
t7=t6;
f_25980(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[572]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26015,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[572]);}
else{
t8=t7;
f_26015(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[573]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26050,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[573]);}
else{
t9=t8;
f_26050(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[382]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26085,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[349],lf[382]);}
else{
t10=t9;
f_26085(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[383]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26120,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[349],lf[383]);}
else{
t11=t10;
f_26120(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26149,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[15],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[353],((C_word*)t0)[9]);}
else{
t11=t10;
f_26149(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k26147 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26149,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26156,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26164,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26162 in k26147 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26156(2,t2,C_SCHEME_UNDEFINED);}}

/* k26154 in k26147 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24946(t5,t4);}

/* k26118 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26120,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26124,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_26124(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26122 in k26118 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24946(t7,t6);}

/* k26083 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26085,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26089,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_26089(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26087 in k26083 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24946(t7,t6);}

/* k26048 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26050,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26054,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_26054(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26052 in k26048 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24946(t7,t6);}

/* k26013 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26015,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26019,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_26019(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26017 in k26013 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_26019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24946(t7,t6);}

/* k25978 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25980,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25984,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25984(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25982 in k25978 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24946(t7,t6);}

/* k25943 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25945,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25949,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25949(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25947 in k25943 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24946(t7,t6);}

/* k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_24946(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24946,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_24949,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_24949(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[430]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25705,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[430]);}
else{
t6=t5;
f_25705(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[571]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25740,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[571]);}
else{
t7=t6;
f_25740(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[572]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25775,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[572]);}
else{
t8=t7;
f_25775(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[573]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25810,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[573]);}
else{
t9=t8;
f_25810(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[382]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25845,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[349],lf[382]);}
else{
t10=t9;
f_25845(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[383]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25880,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[349],lf[383]);}
else{
t11=t10;
f_25880(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25909,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[14],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[353],((C_word*)t0)[9]);}
else{
t11=t10;
f_25909(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k25907 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25909,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25916,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25924,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25922 in k25907 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25916(2,t2,C_SCHEME_UNDEFINED);}}

/* k25914 in k25907 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24949(t5,t4);}

/* k25878 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25880,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25884,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25884(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25882 in k25878 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24949(t7,t6);}

/* k25843 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25845,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25849,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25849(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25847 in k25843 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24949(t7,t6);}

/* k25808 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25810,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25814,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25814(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25812 in k25808 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24949(t7,t6);}

/* k25773 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25775,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25779,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25779(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25777 in k25773 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24949(t7,t6);}

/* k25738 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25740,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25744,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25744(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25742 in k25738 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24949(t7,t6);}

/* k25703 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25705,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25709,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25709(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25707 in k25703 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24949(t7,t6);}

/* k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_24949(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24949,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_24952,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_24952(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[430]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25465,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[430]);}
else{
t6=t5;
f_25465(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[571]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25500,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[571]);}
else{
t7=t6;
f_25500(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[572]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25535,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[572]);}
else{
t8=t7;
f_25535(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[573]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25570,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[573]);}
else{
t9=t8;
f_25570(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[382]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25605,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[349],lf[382]);}
else{
t10=t9;
f_25605(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[383]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25640,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[349],lf[383]);}
else{
t11=t10;
f_25640(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25669,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[353],((C_word*)t0)[9]);}
else{
t11=t10;
f_25669(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k25667 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25669,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25676,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25684,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25682 in k25667 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25676(2,t2,C_SCHEME_UNDEFINED);}}

/* k25674 in k25667 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24952(t5,t4);}

/* k25638 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25640,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25644,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25644(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25642 in k25638 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24952(t7,t6);}

/* k25603 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25605,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25609,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25609(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25607 in k25603 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24952(t7,t6);}

/* k25568 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25570,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25574,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25574(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25572 in k25568 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24952(t7,t6);}

/* k25533 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25535,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25539,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25539(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25537 in k25533 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24952(t7,t6);}

/* k25498 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25500,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25504,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25504(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25502 in k25498 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24952(t7,t6);}

/* k25463 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25465,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25469,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25469(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25467 in k25463 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24952(t7,t6);}

/* k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_24952(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24952,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_24955,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_24955(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[430]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25225,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[430]);}
else{
t6=t5;
f_25225(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[571]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25260,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[571]);}
else{
t7=t6;
f_25260(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[572]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25295,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[572]);}
else{
t8=t7;
f_25295(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[573]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25330,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[573]);}
else{
t9=t8;
f_25330(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[382]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25365,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[349],lf[382]);}
else{
t10=t9;
f_25365(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[383]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25400,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[349],lf[383]);}
else{
t11=t10;
f_25400(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25429,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[12],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[353],((C_word*)t0)[9]);}
else{
t11=t10;
f_25429(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k25427 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25429,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25436,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25444,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25442 in k25427 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25436(2,t2,C_SCHEME_UNDEFINED);}}

/* k25434 in k25427 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24955(t5,t4);}

/* k25398 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25400,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25404,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25404(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25402 in k25398 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24955(t7,t6);}

/* k25363 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25365,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25369,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25369(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25367 in k25363 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24955(t7,t6);}

/* k25328 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25330,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25334,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25334(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25332 in k25328 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24955(t7,t6);}

/* k25293 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25295,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25299,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25299(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25297 in k25293 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24955(t7,t6);}

/* k25258 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25260,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25264,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25264(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25262 in k25258 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24955(t7,t6);}

/* k25223 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25225,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25229,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25229(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25227 in k25223 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24955(t7,t6);}

/* k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_24955(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24955,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24958,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],a[11]=((C_word*)t0)[18],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_24958(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[430]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24985,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[430]);}
else{
t6=t5;
f_24985(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[571]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25020,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[571]);}
else{
t7=t6;
f_25020(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[572]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25055,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[572]);}
else{
t8=t7;
f_25055(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[573]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25090,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[349],lf[573]);}
else{
t9=t8;
f_25090(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[382]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25125,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[349],lf[382]);}
else{
t10=t9;
f_25125(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[383]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25160,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[349],lf[383]);}
else{
t11=t10;
f_25160(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25189,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[353],((C_word*)t0)[9]);}
else{
t11=t10;
f_25189(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k25187 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25189,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25196,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25204,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25202 in k25187 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25196(2,t2,C_SCHEME_UNDEFINED);}}

/* k25194 in k25187 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24958(t5,t4);}

/* k25158 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25160,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25164,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25164(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25162 in k25158 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24958(t7,t6);}

/* k25123 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25125,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25129,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25129(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25127 in k25123 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24958(t7,t6);}

/* k25088 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25090,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25094,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25094(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25092 in k25088 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24958(t7,t6);}

/* k25053 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25055,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25059,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25059(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25057 in k25053 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24958(t7,t6);}

/* k25018 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25020,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25024,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_25024(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25022 in k25018 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_25024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24958(t7,t6);}

/* k24983 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24985,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24989,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_24989(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24987 in k24983 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24958(t7,t6);}

/* k24956 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_24958(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24958,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24961,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_24961(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k24959 in k24956 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24961,2,t0,t1);}
t2=((C_word*)t0)[9];
t3=((C_word*)t0)[8];
t4=((C_word*)((C_word*)t0)[7])[1];
t5=((C_word*)((C_word*)t0)[6])[1];
t6=((C_word*)((C_word*)t0)[5])[1];
t7=((C_word*)((C_word*)t0)[4])[1];
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=((C_word*)((C_word*)t0)[3])[1];
t10=((C_word*)((C_word*)t0)[2])[1];
t11=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24707,a[2]=t3,a[3]=t8,a[4]=t5,a[5]=t2,a[6]=t4,a[7]=t6,a[8]=t10,a[9]=t9,tmp=(C_word)a,a+=10,tmp);
t12=(C_word)C_eqp(((C_word*)t8)[1],C_SCHEME_TRUE);
if(C_truep(t12)){
t13=C_set_block_item(t8,0,C_fix(1));
t14=t11;
f_24707(t14,t13);}
else{
t13=t11;
f_24707(t13,C_SCHEME_UNDEFINED);}}

/* k24705 in k24959 in k24956 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_24707(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24707,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24713,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t2,a[8]=t4,a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=t6,a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-freqs");
t8=C_retrieve(lf[554]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[2]);}

/* k24711 in k24705 in k24959 in k24956 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24713,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24716,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-amps");
t3=C_retrieve(lf[556]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k24714 in k24711 in k24705 in k24959 in k24956 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24716,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24718,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word)li348),tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24792,a[2]=((C_word*)t0)[8],a[3]=((C_word)li349),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24806,a[2]=t2,a[3]=t3,a[4]=((C_word)li350),tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24816,a[2]=t2,a[3]=t3,a[4]=((C_word*)t0)[7],a[5]=((C_word)li351),tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24840,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_not(((C_word*)t0)[4]);
t8=(C_truep(t7)?t7:(C_word)C_i_not(t1));
if(C_truep(t8)){
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("for-each");
t9=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t6,t5,((C_word*)t0)[2]);}
else{
C_trace("for-each");
t9=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t6,t4,((C_word*)t0)[2]);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24905,a[2]=t5,a[3]=((C_word*)t0)[4],a[4]=((C_word)li353),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 18   for-each");
t10=*((C_word*)lf[570]+1);
((C_proc5)C_retrieve_proc(t10))(5,t10,t6,t9,((C_word*)t0)[2],t1);}
else{
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24920,a[2]=t4,a[3]=((C_word*)t0)[4],a[4]=((C_word)li354),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 18   for-each");
t10=*((C_word*)lf[570]+1);
((C_proc5)C_retrieve_proc(t10))(5,t10,t6,t9,((C_word*)t0)[2],t1);}}}

/* a24919 in k24714 in k24711 in k24705 in k24959 in k24956 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24920(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_24920,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 18   addkey");
t4=((C_word*)t0)[2];
f_24806(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* a24904 in k24714 in k24711 in k24705 in k24959 in k24956 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24905(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_24905,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 18   adduniquekey");
t4=((C_word*)t0)[2];
f_24816(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* k24838 in k24714 in k24711 in k24705 in k24959 in k24956 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24840,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
switch(((C_word*)t0)[4]){
case C_fix(0):
C_trace("ChickenBridge.scm: 18   shuffle!");
t3=C_retrieve(lf[481]);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[3],t2);
case C_fix(-1):
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 18   sort!");
t3=C_retrieve(lf[567]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],t2,*((C_word*)lf[149]+1));}
else{
t3=(C_word)C_i_length(t2);
t4=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8019,a[2]=t2,a[3]=t6,a[4]=((C_word)li352),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_8019(t8,((C_word*)t0)[3],C_fix(0),t4,t2);}
default:
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 18   sort!");
t3=C_retrieve(lf[567]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],t2,*((C_word*)lf[145]+1));}
else{
t3=(C_word)C_eqp(((C_word*)t0)[4],C_fix(1));
if(C_truep(t3)){
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 18   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[3],lf[568],C_retrieve(lf[569]));}}}}

/* do556 in k24838 in k24714 in k24711 in k24705 in k24959 in k24956 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_8019(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a;
loop:
a=C_alloc(12);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_8019,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_lessp(t2,t3))){
t5=(C_word)C_i_car(t4);
t6=(C_word)C_a_i_minus(&a,2,t3,t2);
t7=(C_word)C_i_list_tail(t4,t6);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_i_set_car(t4,t8);
t10=(C_word)C_i_set_car(t7,t5);
t11=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t12=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t13=(C_word)C_i_cdr(t4);
t15=t1;
t16=t11;
t17=t12;
t18=t13;
t1=t15;
t2=t16;
t3=t17;
t4=t18;
goto loop;}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,((C_word*)t0)[2]);}}

/* adduniquekey in k24714 in k24711 in k24705 in k24959 in k24956 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24816(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24816,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24820,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 18   getkey");
t4=((C_word*)t0)[2];
f_24718(t4,t3,t2);}

/* k24818 in adduniquekey in k24714 in k24711 in k24705 in k24959 in k24956 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_member(t1,t2))){
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 18   add");
t3=((C_word*)t0)[2];
f_24792(t3,((C_word*)t0)[3],t1);}}

/* addkey in k24714 in k24711 in k24705 in k24959 in k24956 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24806(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24806,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24814,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   getkey");
t4=((C_word*)t0)[2];
f_24718(t4,t3,t2);}

/* k24812 in addkey in k24714 in k24711 in k24705 in k24959 in k24956 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 18   add");
t2=((C_word*)t0)[3];
f_24792(t2,((C_word*)t0)[2],t1);}

/* add in k24714 in k24711 in k24705 in k24959 in k24956 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_24792(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24792,NULL,3,t0,t1,t2);}
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}

/* getkey in k24714 in k24711 in k24705 in k24959 in k24956 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_24718(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24718,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24722,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t0)[2])){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24787,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   key");
t5=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
C_trace("ChickenBridge.scm: 18   key");
t4=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}

/* k24785 in getkey in k24714 in k24711 in k24705 in k24959 in k24956 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 18   quantize");
t2=C_retrieve(lf[447]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k24720 in getkey in k24714 in k24711 in k24705 in k24959 in k24956 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24722,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_truep(((C_word*)t0)[5])?(C_word)C_i_lessp(((C_word*)t3)[1],((C_word*)t0)[5]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24733,a[2]=t6,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word)li346),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_24733(t8,((C_word*)t0)[3]);}
else{
t5=(C_truep(((C_word*)t0)[2])?(C_word)C_i_greaterp(((C_word*)t3)[1],((C_word*)t0)[2]):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24759,a[2]=t7,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=((C_word)li347),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_24759(t9,((C_word*)t0)[3]);}
else{
t6=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}}}

/* do3791 in k24720 in getkey in k24714 in k24711 in k24705 in k24959 in k24956 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_24759(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_24759,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]))){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(12));
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=t1;
t1=t6;
goto loop;}}

/* do3786 in k24720 in getkey in k24714 in k24711 in k24705 in k24959 in k24956 in k24953 in k24950 in k24947 in k24944 in k24941 in spectrum-keys in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_24733(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_24733,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_greater_or_equalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]))){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(12));
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=t1;
t1=t6;
goto loop;}}

/* spectrum-maxamp in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24678(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24678,3,t0,t1,t2);}
t3=lf[565];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24682,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-amps");
t6=C_retrieve(lf[556]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k24680 in spectrum-maxamp in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24682,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24691,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24693,a[2]=((C_word*)t0)[2],a[3]=((C_word)li344),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a24692 in k24680 in spectrum-maxamp in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24693(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24693,3,t0,t1,t2);}
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)((C_word*)t0)[2])[1]))){
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}}

/* k24689 in k24680 in spectrum-maxamp in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-minamp in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24647(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24647,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24651,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-amps");
t6=C_retrieve(lf[556]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k24649 in spectrum-minamp in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24651,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24660,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24662,a[2]=((C_word*)t0)[2],a[3]=((C_word)li342),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[563]);}}

/* a24661 in k24649 in spectrum-minamp in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24662(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24662,3,t0,t1,t2);}
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_lessp(t2,((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_UNDEFINED);}}

/* k24658 in k24649 in spectrum-minamp in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-maxfreq in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24629(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24629,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24637,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-freqs");
t4=C_retrieve(lf[554]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k24635 in spectrum-maxfreq in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24637,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24645,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-size");
t3=C_retrieve(lf[552]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k24643 in k24635 in spectrum-maxfreq in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24645,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_list_ref(((C_word*)t0)[2],t2));}

/* spectrum-minfreq in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24619(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24619,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24627,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-freqs");
t4=C_retrieve(lf[554]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k24625 in spectrum-minfreq in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24627(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* spectrum-pairs in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24560(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24560,3,t0,t1,t2);}
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24567,a[2]=t2,a[3]=t1,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-freqs");
t7=C_retrieve(lf[554]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}

/* k24565 in spectrum-pairs in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24567,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24570,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-amps");
t3=C_retrieve(lf[556]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k24568 in k24565 in spectrum-pairs in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24570,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24573,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-size");
t3=C_retrieve(lf[552]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k24571 in k24568 in k24565 in spectrum-pairs in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24573,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24578,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word)li338),tmp=(C_word)a,a+=9,tmp));
t5=((C_word*)t3)[1];
f_24578(t5,((C_word*)t0)[2],C_fix(0));}

/* do3748 in k24571 in k24568 in k24565 in spectrum-pairs in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_24578(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(10);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_24578,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[6]));}
else{
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_truep(((C_word*)t0)[4])?(C_word)C_i_list_ref(((C_word*)t0)[4],t2):lf[559]);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t5);
t7=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t11=t1;
t12=t9;
t1=t11;
t2=t12;
goto loop;}}

/* spectrum-copy in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24522(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24522,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24530,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-time");
t4=C_retrieve(lf[550]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k24528 in spectrum-copy in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24530,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24534,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-size");
t3=C_retrieve(lf[552]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k24532 in k24528 in spectrum-copy in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24534,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24538,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24554,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-freqs");
t4=C_retrieve(lf[554]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k24552 in k24532 in k24528 in spectrum-copy in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 18   append");
t2=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k24536 in k24532 in k24528 in spectrum-copy in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24538,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24542,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24546,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 18   spectrum-amps");
t4=C_retrieve(lf[556]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k24544 in k24536 in k24532 in k24528 in spectrum-copy in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 18   append");
t2=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k24540 in k24536 in k24532 in k24528 in spectrum-copy in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 18   make-spectrum");
f_24438(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* spectrum-amps in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24513(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24513,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[548]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* spectrum-amps-set! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_24504(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24504,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[548]);
C_trace("ChickenBridge.scm: 18   ##sys#block-set!");
t5=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* spectrum-freqs in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24495(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24495,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[548]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* spectrum-freqs-set! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_24486(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24486,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[548]);
C_trace("ChickenBridge.scm: 18   ##sys#block-set!");
t5=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* spectrum-size in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24477(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24477,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[548]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* spectrum-size-set! in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_24468(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24468,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[548]);
C_trace("ChickenBridge.scm: 18   ##sys#block-set!");
t5=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* spectrum-time in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24459(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24459,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[548]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* spectrum? in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_24444(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24444,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[548]));}

/* make-spectrum in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_24438(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24438,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_record(&a,5,lf[548],t2,t3,t4,t5));}

/* full-pathname in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_24393(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24393,NULL,2,t1,t2);}
if(C_truep((C_word)C_i_stringp(t2))){
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7377,a[2]=t3,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t4)){
t7=(C_word)C_i_foreign_string_argumentp(t4);
C_trace("##sys#make-c-string");
t8=C_retrieve(lf[20]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}
else{
t7=t6;
f_7377(2,t7,C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 17   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[546],t2);}}

/* k7375 in full-pathname in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)stub314(((C_word*)t0)[3],t1);
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[46]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,C_fix(0));}

/* pathname-type in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_24351(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24351,NULL,2,t1,t2);}
if(C_truep((C_word)C_i_stringp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24361,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 17   ffi_pathname_type");
f_7350(t3,t2);}
else{
C_trace("ChickenBridge.scm: 17   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[544],t2);}}

/* k24359 in pathname-type in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_24361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_string_equal_p(t1,lf[543]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?C_SCHEME_FALSE:t1));}

/* chdir in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23503(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23503,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7305,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[20]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_7305(2,t4,C_SCHEME_FALSE);}}

/* k7303 in chdir in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub287(C_SCHEME_UNDEFINED,t1));}

/* cwd in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23497,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[46]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,(C_word)stub283(t2),C_fix(0));}

/* in-tempo in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23475(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23475,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_divide(&a,2,C_fix(60),t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_times(&a,2,t2,t4));}

/* rhythm in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23159(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_23159r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_23159r(t0,t1,t2,t3);}}

static void C_ccall f_23159r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a=C_alloc(10);
t4=C_retrieve(lf[524]);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_retrieve(lf[526]);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23163,a[2]=t1,a[3]=t5,a[4]=t7,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_pairp(t3))){
t9=(C_word)C_i_car(t3);
t10=C_set_block_item(t5,0,t9);
t11=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_pairp(t11))){
t12=(C_word)C_i_cadr(t3);
t13=C_set_block_item(t7,0,t12);
t14=t8;
f_23163(t14,t13);}
else{
t12=t8;
f_23163(t12,C_SCHEME_UNDEFINED);}}
else{
t9=t8;
f_23163(t9,C_SCHEME_UNDEFINED);}}

/* k23161 in rhythm in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_23163(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23163,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_numberp(((C_word*)t0)[5]))){
t2=(C_word)C_a_i_divide(&a,2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_divide(&a,2,C_fix(60),((C_word*)((C_word*)t0)[3])[1]);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_times(&a,2,t2,t3));}
else{
t2=(C_word)C_i_symbolp(((C_word*)t0)[5]);
t3=(C_truep(t2)?t2:(C_word)C_i_stringp(((C_word*)t0)[5]));
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23192,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 17   hash-ref");
t5=C_retrieve(lf[14]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,C_retrieve2(lf[528],"*rhythms*"),((C_word*)t0)[5]);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23220,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word)li321),tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t5=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,((C_word*)t0)[2],t4,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 17   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[2],lf[538],((C_word*)t0)[5]);}}}}

/* a23219 in k23161 in rhythm in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23220(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23220,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 17   rhythm");
t3=C_retrieve(lf[530]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k23190 in k23161 in rhythm in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23192,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_divide(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_divide(&a,2,C_fix(60),((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_times(&a,2,t2,t3));}
else{
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
t4=((C_word*)((C_word*)t0)[4])[1];
t5=((C_word*)((C_word*)t0)[5])[1];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23257,a[2]=t2,a[3]=t3,a[4]=t4,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_symbolp(t3))){
C_trace("ChickenBridge.scm: 17   symbol->string");
t7=*((C_word*)lf[507]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t3);}
else{
t7=t6;
f_23257(2,t7,t3);}}}

/* k23255 in k23190 in k23161 in rhythm in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23257,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23258,a[2]=((C_word)li319),tmp=(C_word)a,a+=3,tmp);
t3=(C_word)C_i_string_length(t1);
t4=C_fix(0);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_23294,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t5,a[8]=t1,a[9]=t3,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 17   next-token-start");
f_23258(t6,t1,((C_word*)t5)[1],t3);}

/* k23292 in k23255 in k23190 in k23161 in rhythm in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23294,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23297,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)((C_word*)t0)[7])[1],((C_word*)t3)[1]))){
t5=t4;
f_23297(2,t5,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 17   error");
t5=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[537],((C_word*)t0)[8]);}}

/* k23295 in k23292 in k23255 in k23190 in k23161 in rhythm in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23297,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23304,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23457,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 17   substring");
t4=*((C_word*)lf[414]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[10])[1]);}

/* k23455 in k23295 in k23292 in k23255 in k23190 in k23161 in rhythm in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 17   hash-ref");
t2=C_retrieve(lf[14]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[528],"*rhythms*"),t1);}

/* k23302 in k23295 in k23292 in k23255 in k23190 in k23161 in rhythm in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23304,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23307,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t1)){
t3=t2;
f_23307(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 17   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[536],((C_word*)t0)[3]);}}

/* k23305 in k23302 in k23295 in k23292 in k23255 in k23190 in k23161 in rhythm in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23307,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23309,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word)li320),tmp=(C_word)a,a+=12,tmp));
t5=((C_word*)t3)[1];
f_23309(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_fix(0));}

/* do3470 in k23305 in k23302 in k23295 in k23292 in k23255 in k23190 in k23161 in rhythm in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_23309(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23309,NULL,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9]))){
t11=(C_word)C_i_string_ref(((C_word*)t0)[8],((C_word*)((C_word*)t0)[10])[1]);
t12=C_set_block_item(t10,0,t11);
t13=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[10])[1],C_fix(1));
t14=C_mutate(((C_word *)((C_word*)t0)[7])+1,t13);
t15=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23355,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=t10,a[5]=t9,a[6]=t8,a[7]=t7,a[8]=t1,a[9]=((C_word*)t0)[6],a[10]=t6,a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 17   next-token-start");
f_23258(t15,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[9]);}
else{
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23319,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=t7,a[5]=t1,a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 17   hash-set!");
t12=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t12))(5,t12,t11,C_retrieve2(lf[528],"*rhythms*"),((C_word*)t0)[8],((C_word*)t7)[1]);}}

/* k23317 in do3470 in k23305 in k23302 in k23295 in k23292 in k23255 in k23190 in k23161 in rhythm in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23319,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23322,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_eqvp(((C_word*)t0)[3],((C_word*)t0)[2]))){
t3=t2;
f_23322(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 17   hash-set!");
t3=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve2(lf[528],"*rhythms*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);}}

/* k23320 in k23317 in do3470 in k23305 in k23302 in k23295 in k23292 in k23255 in k23190 in k23161 in rhythm in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23322,2,t0,t1);}
t2=(C_word)C_a_i_divide(&a,2,C_fix(1),((C_word*)t0)[5]);
t3=(C_word)C_a_i_divide(&a,2,C_fix(60),((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 17   *");
C_times(5,0,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2,t3);}

/* k23353 in do3470 in k23305 in k23302 in k23295 in k23292 in k23255 in k23190 in k23161 in rhythm in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23355,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_23358,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[11])[1]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23443,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   substring");
t5=*((C_word*)lf[414]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[11])[1]);}
else{
C_trace("ChickenBridge.scm: 17   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[535],((C_word*)t0)[3]);}}

/* k23441 in k23353 in do3470 in k23305 in k23302 in k23295 in k23292 in k23255 in k23190 in k23161 in rhythm in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_23358(2,t3,t2);}

/* k23356 in k23353 in do3470 in k23305 in k23302 in k23295 in k23292 in k23255 in k23190 in k23161 in rhythm in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23358,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23361,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
switch(((C_word*)((C_word*)t0)[3])[1]){
case C_make_character(43):
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23375,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 17   hash-ref");
t4=C_retrieve(lf[14]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,C_retrieve2(lf[528],"*rhythms*"),((C_word*)((C_word*)t0)[4])[1]);
case C_make_character(45):
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23395,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 17   hash-ref");
t4=C_retrieve(lf[14]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,C_retrieve2(lf[528],"*rhythms*"),((C_word*)((C_word*)t0)[4])[1]);
case C_make_character(42):
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23415,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 17   string->number");
C_string_to_number(3,0,t3,((C_word*)((C_word*)t0)[4])[1]);
case C_make_character(47):
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23429,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 17   string->number");
C_string_to_number(3,0,t3,((C_word*)((C_word*)t0)[4])[1]);
default:
C_trace("ChickenBridge.scm: 17   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[534],((C_word*)t0)[2]);}}

/* k23427 in k23356 in k23353 in do3470 in k23305 in k23302 in k23295 in k23292 in k23255 in k23190 in k23161 in rhythm in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23429,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_divide(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23361(2,t5,t4);}

/* k23413 in k23356 in k23353 in do3470 in k23305 in k23302 in k23295 in k23292 in k23255 in k23190 in k23161 in rhythm in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23415,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_times(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23361(2,t5,t4);}

/* k23393 in k23356 in k23353 in do3470 in k23305 in k23302 in k23295 in k23292 in k23255 in k23190 in k23161 in rhythm in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23395,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23398,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_23398(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 17   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[533],((C_word*)t0)[2]);}}

/* k23396 in k23393 in k23356 in k23353 in do3470 in k23305 in k23302 in k23295 in k23292 in k23255 in k23190 in k23161 in rhythm in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23398,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23361(2,t5,t4);}

/* k23373 in k23356 in k23353 in do3470 in k23305 in k23302 in k23295 in k23292 in k23255 in k23190 in k23161 in rhythm in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23375,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23378,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_23378(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 17   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[532],((C_word*)t0)[2]);}}

/* k23376 in k23373 in k23356 in k23353 in do3470 in k23305 in k23302 in k23295 in k23292 in k23255 in k23190 in k23161 in rhythm in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23378,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23361(2,t5,t4);}

/* k23359 in k23356 in k23353 in do3470 in k23305 in k23302 in k23295 in k23292 in k23255 in k23190 in k23161 in rhythm in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23361,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],C_fix(1));
t3=((C_word*)((C_word*)t0)[7])[1];
f_23309(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],t2);}

/* next-token-start in k23255 in k23190 in k23161 in rhythm in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_23258(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23258,NULL,4,t1,t2,t3,t4);}
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23264,a[2]=t2,a[3]=t6,a[4]=t4,a[5]=((C_word)li318),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_23264(t8,t1,lf[531],t3);}

/* do3460 in next-token-start in k23255 in k23190 in k23161 in rhythm in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_23264(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23264,NULL,4,t0,t1,t2,t3);}
t4=(C_word)C_i_nequalp(t3,((C_word*)t0)[4]);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23274,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep(t4)){
t6=t5;
f_23274(t6,t4);}
else{
t6=(C_word)C_i_string_ref(((C_word*)t0)[2],t3);
t7=t5;
f_23274(t7,(C_word)C_i_member(t6,t2));}}

/* k23272 in do3460 in next-token-start in k23255 in k23190 in k23161 in rhythm in k23155 in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_23274(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23274,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_23264(t3,((C_word*)t0)[5],((C_word*)t0)[2],t2);}}

/* addryth in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_23143(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23143,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23147,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 17   hash-set!");
t5=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_retrieve2(lf[528],"*rhythms*"),t2,t3);}

/* k23145 in addryth in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23147,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23154,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   string->symbol");
t3=*((C_word*)lf[529]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k23152 in k23145 in addryth in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 17   hash-set!");
t2=C_retrieve(lf[12]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],C_retrieve2(lf[528],"*rhythms*"),t1,((C_word*)t0)[2]);}

/* rsym in k23135 in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_23138(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23138,NULL,4,t1,t2,t3,t4);}
C_trace("ChickenBridge.scm: 17   string-append");
t5=*((C_word*)lf[417]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t1,t2,t3,t4);}

/* scale-order in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22991(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_22991r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_22991r(t0,t1,t2,t3);}}

static void C_ccall f_22991r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(7);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22995,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t4)[1]))){
t6=C_set_block_item(t4,0,C_fix(1));
t7=t5;
f_22995(t7,t6);}
else{
t6=(C_word)C_i_car(((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_22995(t8,t7);}}

/* k22993 in scale-order in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_22995(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22995,NULL,2,t0,t1);}
switch(((C_word*)((C_word*)t0)[4])[1]){
case C_fix(1):
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23006,a[2]=((C_word)li313),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 17   sort");
t3=C_retrieve(lf[422]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);
case C_fix(-1):
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23064,a[2]=((C_word)li314),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 17   sort");
t3=C_retrieve(lf[422]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);
case C_fix(0):
C_trace("ChickenBridge.scm: 17   shuffle");
t2=C_retrieve(lf[482]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);
default:
C_trace("ChickenBridge.scm: 17   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[523],((C_word*)((C_word*)t0)[4])[1]);}}

/* a23063 in k22993 in scale-order in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23064(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23064,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_greaterp(t2,t3));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23087,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   key");
t5=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23100,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   key");
t5=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23107,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   key");
t5=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}}

/* k23105 in a23063 in k22993 in scale-order in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23107,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23111,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   key");
t3=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k23109 in k23105 in a23063 in k22993 in scale-order in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(((C_word*)t0)[2],t1));}

/* k23098 in a23063 in k22993 in scale-order in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(t1,((C_word*)t0)[2]));}

/* k23085 in a23063 in k22993 in scale-order in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(((C_word*)t0)[2],t1));}

/* a23005 in k22993 in scale-order in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23006(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23006,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_lessp(t2,t3));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23029,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   key");
t5=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23042,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   key");
t5=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23049,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   key");
t5=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}}

/* k23047 in a23005 in k22993 in scale-order in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23049,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23053,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   key");
t3=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k23051 in k23047 in a23005 in k22993 in scale-order in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k23040 in a23005 in k22993 in scale-order in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(t1,((C_word*)t0)[2]));}

/* k23027 in a23005 in k22993 in scale-order in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_23029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* transpose in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22825(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22825,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=(C_word)C_i_lessp(t2,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t3,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(C_word)C_a_i_plus(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 17   modulo");
t7=*((C_word*)lf[428]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t6,C_fix(12));}
else{
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_plus(&a,2,t2,t3));}}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22871,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   key");
t5=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22878,a[2]=((C_word)li310),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22926,a[2]=t4,a[3]=t1,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_numberp(t3))){
t6=t5;
f_22926(2,t6,t3);}
else{
C_trace("ChickenBridge.scm: 17   key");
t6=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t3);}}
else{
C_trace("ChickenBridge.scm: 17   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,lf[520],t2);}}}

/* k22924 in transpose in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22926,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_numberp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_lessp(t3,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t1,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22943,a[2]=t1,a[3]=((C_word)li311),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t7=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],t6,((C_word*)t0)[4]);}
else{
C_trace("ChickenBridge.scm: 17   transpkeys");
f_22878(((C_word*)t0)[3],((C_word*)t0)[4],t1);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22971,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22975,a[2]=t1,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 17   key");
t5=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[4]);}}

/* k22973 in k22924 in transpose in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 17   transpkeys");
f_22878(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k22969 in k22924 in transpose in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 17   note");
t2=C_retrieve(lf[510]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a22942 in k22924 in transpose in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22943(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22943,3,t0,t1,t2);}
t3=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 17   modulo");
t4=*((C_word*)lf[428]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* transpkeys in transpose in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_22878(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22878,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22887,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word)li309),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_22887(t8,t1,t2,t4);}

/* do3399 in transpkeys in transpose in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_22887(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
loop:
a=C_alloc(7);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_22887,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
t7=(C_word)C_i_set_cdr(t3,t6);
t8=(C_word)C_i_cdr(t3);
t9=t3=t8;
t10=(C_word)C_i_cdr(t2);
t12=t1;
t13=t10;
t14=t3;
t1=t12;
t2=t13;
t3=t14;
goto loop;}}

/* k22869 in transpose in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22871,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 17   note");
t3=C_retrieve(lf[510]);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* invert in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22690(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22690,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_lessp(t2,C_fix(12)))){
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 17   modulo");
t4=*((C_word*)lf[428]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}
else{
C_trace("ChickenBridge.scm: 17   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[517],t2);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22720,a[2]=((C_word)li306),tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_lessp(t5,C_fix(12)))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22790,a[2]=((C_word)li307),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t6,t2);}
else{
C_trace("ChickenBridge.scm: 17   invkeys");
f_22720(t1,t2);}}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22812,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22816,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   key");
t7=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}}
else{
C_trace("ChickenBridge.scm: 17   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[518],t2);}}}

/* k22814 in invert in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 17   invkeys");
f_22720(((C_word*)t0)[2],t1);}

/* k22810 in invert in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 17   note");
t2=C_retrieve(lf[510]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a22789 in invert in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22790(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22790,3,t0,t1,t2);}
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 17   modulo");
t4=*((C_word*)lf[428]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* invkeys in invert in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_22720(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22720,NULL,2,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_cdr(t2);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22736,a[2]=t7,a[3]=t3,a[4]=t4,a[5]=((C_word)li305),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_22736(t9,t1,t5,t4);}

/* do3384 in invkeys in invert in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_22736(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_22736,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t0)[4]);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_minus(&a,2,t4,((C_word*)t0)[3]);
t6=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t5);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(t3,t7);
t9=(C_word)C_i_cdr(t3);
t10=t3=t9;
t11=(C_word)C_i_cdr(t2);
t13=t1;
t14=t11;
t15=t3;
t1=t13;
t2=t14;
t3=t15;
goto loop;}}

/* pc in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22645(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22645,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 17   modulo");
t3=*((C_word*)lf[428]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,t2,C_fix(12));}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t3))){
C_trace("map");
t4=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,C_retrieve(lf[515]),t2);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22677,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 17   key");
t5=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22688,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 17   key");
t4=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}}

/* k22686 in pc in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 17   modulo");
t2=*((C_word*)lf[428]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(12));}

/* k22675 in pc in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[2],C_retrieve(lf[515]),t1);}

/* hz in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22529(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22529,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22544,a[2]=t5,a[3]=t3,a[4]=((C_word)li302),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_22544(t7,t1,t2,lf[514],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 17   ffi_keynum_to_hertz");
f_7087(t1,t2);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22643,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 17   note-aux");
f_22257(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k22641 in hz in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22643(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_caddr(t1));}

/* do3364 in hz in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_22544(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22544,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22557,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_numberp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22574,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_22574(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_22574(t14,(C_word)C_i_listp(t13));}}}

/* k22572 in do3364 in hz in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_22574(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22574,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22578,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 17   hz");
t4=C_retrieve(lf[513]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22593,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 17   note-aux");
f_22257(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k22591 in k22572 in do3364 in hz in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22593,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_22557(t9,t8);}

/* k22576 in k22572 in do3364 in hz in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22578,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_22557(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k22555 in do3364 in hz in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_22557(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_22544(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* key in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22407(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22407,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22422,a[2]=t5,a[3]=t3,a[4]=((C_word)li300),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_22422(t7,t1,t2,lf[512],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_greaterp(t2,C_fix(0)))){
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t4);
t7=t3;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub148(t5,t6));}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(-1));}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22527,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 17   note-aux");
f_22257(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k22525 in key in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_cadr(t1));}

/* do3348 in key in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_22422(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22422,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22435,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_listp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22452,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_22452(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_22452(t14,(C_word)C_i_numberp(t13));}}}

/* k22450 in do3348 in key in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_22452(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22452,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22456,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 17   key");
t4=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22471,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 17   note-aux");
f_22257(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k22469 in k22450 in do3348 in key in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22471,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_22435(t9,t8);}

/* k22454 in k22450 in do3348 in key in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22456,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_22435(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k22433 in do3348 in key in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_22435(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_22422(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22310(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22310,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22325,a[2]=t5,a[3]=t3,a[4]=((C_word)li298),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_22325(t7,t1,t2,lf[511],C_SCHEME_FALSE,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22405,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 17   note-aux");
f_22257(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}

/* k22403 in note in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* do3334 in note in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_22325(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22325,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22338,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t10))){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22356,a[2]=t8,a[3]=t9,a[4]=t7,tmp=(C_word)a,a+=5,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 17   note");
t13=C_retrieve(lf[510]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t11,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22371,a[2]=t8,a[3]=t9,a[4]=t6,a[5]=t7,tmp=(C_word)a,a+=6,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 17   note-aux");
f_22257(t11,t12,((C_word*)t6)[1],C_SCHEME_TRUE);}}}

/* k22369 in do3334 in note in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22371,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_i_car(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=((C_word*)t0)[3];
f_22338(t8,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7));}

/* k22354 in do3334 in note in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22356,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_22338(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k22336 in do3334 in note in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_22338(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_22325(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note-aux in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_22257(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22257,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_numberp(t2))){
t5=t1;
t6=t2;
t7=t4;
if(C_truep((C_word)C_i_exactp(t6))){
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22205,a[2]=t6,a[3]=t7,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 17   hash-ref");
t9=C_retrieve(lf[14]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,C_retrieve2(lf[497],"*notes*"),t6);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22255,a[2]=t7,a[3]=t5,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 17   floor");
t9=*((C_word*)lf[506]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,t6);}}
else{
if(C_truep((C_word)C_i_symbolp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22280,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 17   symbol->string");
t6=*((C_word*)lf[507]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 17   string->note-entry");
f_22158(t1,t2,t3,t4);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22295,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 17   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}}}

/* k22293 in note-aux in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22295,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22302,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 17   keyword->string");
t3=C_retrieve(lf[508]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 17   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[509],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* k22300 in k22293 in note-aux in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 17   string->note-entry");
f_22158(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22278 in note-aux in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 17   string->note-entry");
f_22158(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22253 in note-aux in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22255,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22223,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22236,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_lessp(t3,lf[504]))){
t6=t5;
f_22236(t6,t2);}
else{
t6=(C_word)C_i_lessp(t3,lf[505]);
t7=t5;
f_22236(t7,(C_truep(t6)?(C_word)C_a_i_plus(&a,2,t2,C_fix(1000)):(C_word)C_a_i_plus(&a,2,t2,C_fix(1))));}}

/* k22234 in k22253 in note-aux in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_22236(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 17   hash-ref");
t2=C_retrieve(lf[14]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[497],"*notes*"),t1);}

/* k22221 in k22253 in note-aux in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 17   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[503],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* k22203 in note-aux in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 17   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[502],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* string->note-entry in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_22158(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22158,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22162,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 17   hash-ref");
t6=C_retrieve(lf[14]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,C_retrieve2(lf[497],"*notes*"),t2);}

/* k22160 in string->note-entry in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22162,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t1);}
else{
if(C_truep(((C_word*)t0)[4])){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22174,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22187,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 17   string-append");
t5=*((C_word*)lf[417]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 17   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[5],lf[500],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}}}

/* k22185 in k22160 in string->note-entry in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 17   hash-ref");
t2=C_retrieve(lf[14]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[497],"*notes*"),t1);}

/* k22172 in k22160 in string->note-entry in k22154 in k22151 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 17   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[499],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* rangamma in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22130(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_22130r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_22130r(t0,t1,t2);}}

static void C_ccall f_22130r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 17   ffi_rangamma");
f_7185(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 17   ffi_rangamma");
f_7185(t1,t3);}}

/* ranpoisson in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22111(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_22111r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_22111r(t0,t1,t2);}}

static void C_ccall f_22111r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 17   ffi_ranpoisson");
f_7195(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 17   ffi_ranpoisson");
f_7195(t1,t3);}}

/* rangauss in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22070(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_22070r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_22070r(t0,t1,t2);}}

static void C_ccall f_22070r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 17   ffi_rangauss");
f_7156(t1,C_fix(1),C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 17   ffi_rangauss");
f_7156(t1,t4,C_fix(0));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 17   ffi_rangauss");
f_7156(t1,t4,t5);}}}

/* ranexp in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22051(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_22051r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_22051r(t0,t1,t2);}}

static void C_ccall f_22051r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 17   ffi_ranexp");
f_7167(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 17   ffi_ranexp");
f_7167(t1,t3);}}

/* ranbeta in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21823(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_21823r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_21823r(t0,t1,t2);}}

static void C_ccall f_21823r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=lf[487];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21827,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t6,a[8]=t4,a[9]=t1,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_21827(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[488]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21964,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[349],lf[488]);}
else{
t19=t18;
f_21964(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[489]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21999,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[349],lf[489]);}
else{
t20=t19;
f_21999(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22028,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[353],t2);}
else{
t20=t19;
f_22028(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k22026 in ranbeta in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22028,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22035,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22043,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22041 in k22026 in ranbeta in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22035(2,t2,C_SCHEME_UNDEFINED);}}

/* k22033 in k22026 in ranbeta in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21827(t5,t4);}

/* k21997 in ranbeta in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21999,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22003,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_22003(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22001 in k21997 in ranbeta in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_22003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21827(t7,t6);}

/* k21962 in ranbeta in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21964,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21968,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_21968(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21966 in k21962 in ranbeta in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21827(t7,t6);}

/* k21825 in ranbeta in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_21827(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21827,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21830,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_21830(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[488]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21864,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[488]);}
else{
t6=t5;
f_21864(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[489]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21899,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[489]);}
else{
t7=t6;
f_21899(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21928,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[353],((C_word*)t0)[5]);}
else{
t7=t6;
f_21928(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k21926 in k21825 in ranbeta in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21928,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21935,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21943,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21941 in k21926 in k21825 in ranbeta in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21935(2,t2,C_SCHEME_UNDEFINED);}}

/* k21933 in k21926 in k21825 in ranbeta in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21830(t5,t4);}

/* k21897 in k21825 in ranbeta in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21899,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21903,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_21903(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21901 in k21897 in k21825 in ranbeta in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21830(t7,t6);}

/* k21862 in k21825 in ranbeta in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21864,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21868,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_21868(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21866 in k21862 in k21825 in ranbeta in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21830(t7,t6);}

/* k21828 in k21825 in ranbeta in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_21830(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21830,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21833,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_21833(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k21831 in k21828 in k21825 in ranbeta in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21833,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21836,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
if(C_truep(t3)){
t4=t2;
f_21836(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[3])[1]);
t5=t2;
f_21836(t5,t4);}}

/* k21834 in k21831 in k21828 in k21825 in ranbeta in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_21836(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21836,NULL,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=((C_word*)((C_word*)t0)[3])[1];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=(C_word)C_i_foreign_flonum_argumentp(t4);
t8=t2;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub201(t5,t6,t7));}

/* shuffle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21781(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_21781r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_21781r(t0,t1,t2);}}

static void C_ccall f_21781r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(6);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21795,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 17   append");
t6=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21810,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 17   append");
t5=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t2,C_SCHEME_END_OF_LIST);}}

/* k21808 in shuffle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 17   shuffle!");
t2=C_retrieve(lf[481]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k21793 in shuffle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 17   shuffle!");
t2=C_retrieve(lf[481]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* shuffle! in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21726(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21726,3,t0,t1,t2);}
t3=(C_word)C_i_length(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21737,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 17   ffi_ranint");
f_7111(t4,t3);}

/* k21735 in shuffle! in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21737,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21739,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word)li288),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_21739(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do3217 in k21735 in shuffle! in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_21739(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21739,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[4]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t0)[3]);}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(C_word)C_i_list_tail(((C_word*)t0)[3],t2);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
t10=(C_word)C_i_set_car(t8,t9);
t11=(C_word)C_i_list_tail(((C_word*)t0)[3],t3);
t12=(C_word)C_i_set_car(t11,((C_word*)t5)[1]);
t13=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t14=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21767,a[2]=t5,a[3]=t13,a[4]=t1,a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 17   ffi_ranint");
f_7111(t14,((C_word*)t0)[4]);}}

/* k21765 in do3217 in k21735 in shuffle! in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_21739(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* vary in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21627(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr4r,(void*)f_21627r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_21627r(t0,t1,t2,t3,t4);}}

static void C_ccall f_21627r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21631,a[2]=t1,a[3]=t5,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
t7=C_set_block_item(t5,0,C_fix(0));
t8=t6;
f_21631(t8,t7);}
else{
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=t6;
f_21631(t9,t8);}}

/* k21629 in vary in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_21631(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21631,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21634,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t3,C_fix(0)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(-1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(1)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t4=t2;
f_21634(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 17   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[480],((C_word*)((C_word*)t0)[3])[1]);}}

/* k21632 in k21629 in vary in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21634,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21636,a[2]=((C_word)li285),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21699,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word)li286),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 17   vary1");
f_21636(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);}}

/* a21698 in k21632 in k21629 in vary in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21699(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21699,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 17   vary1");
f_21636(t1,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* vary1 in k21632 in k21629 in vary in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_21636(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21636,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_less_or_equalp(t3,C_fix(0));
t6=(C_truep(t5)?t5:(C_word)C_i_nequalp(t2,C_fix(0)));
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t7=(C_word)C_a_i_times(&a,2,t2,t3);
t8=(C_word)C_a_i_abs(&a,1,t7);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21652,a[2]=t1,a[3]=t2,a[4]=t8,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 17   ffi_ranfloat");
f_7118(t9,t8);}}

/* k21650 in vary1 in k21632 in k21629 in vary in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21652,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[5],C_fix(0));
if(C_truep(t2)){
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[4],lf[479]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_plus(&a,2,t4,t1));}
else{
t3=(C_word)C_eqp(((C_word*)t0)[5],C_fix(1));
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1):(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t1)));}}

/* pick in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21356(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr2r,(void*)f_21356r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_21356r(t0,t1,t2);}}

static void C_ccall f_21356r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21374,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_length(t6);
C_trace("ChickenBridge.scm: 17   ffi_ranint");
f_7111(t5,t7);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21389,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_length(t2);
C_trace("ChickenBridge.scm: 17   ffi_ranint");
f_7111(t4,t5);}}

/* k21387 in pick in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* k21372 in pick in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* between in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21335(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21335,4,t0,t1,t2,t3);}
t4=(C_word)C_fixnump(t2);
t5=(C_truep(t4)?(C_word)C_fixnump(t3):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_i_foreign_fixnum_argumentp(t7);
t10=(C_word)C_i_foreign_fixnum_argumentp(t8);
t11=t6;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub167(C_SCHEME_UNDEFINED,t9,t10));}
else{
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t10=(C_word)C_i_foreign_flonum_argumentp(t7);
t11=(C_word)C_i_foreign_flonum_argumentp(t8);
t12=t6;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub173(t9,t10,t11));}}

/* ran in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21300(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_21300r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_21300r(t0,t1,t2);}}

static void C_ccall f_21300r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(6);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21304,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=C_set_block_item(t3,0,C_fix(1));
t6=t4;
f_21304(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)t3)[1]);
t6=C_set_block_item(t3,0,t5);
t7=t4;
f_21304(t7,t6);}}

/* k21302 in ran in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_21304(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
if(C_truep((C_word)C_fixnump(((C_word*)((C_word*)t0)[3])[1]))){
C_trace("ChickenBridge.scm: 17   ffi_ranint");
f_7111(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 17   ffi_ranfloat");
f_7118(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}
else{
C_trace("ChickenBridge.scm: 17   ffi_ranfloat");
f_7118(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}

/* segs in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21092(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr4r,(void*)f_21092r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_21092r(t0,t1,t2,t3,t4);}}

static void C_ccall f_21092r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(11);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(1)))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_END_OF_LIST);}
else{
t6=C_fix(1);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21105,a[2]=t1,a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t5)[1]))){
t9=(C_word)C_i_car(((C_word*)t5)[1]);
t10=C_set_block_item(t7,0,t9);
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
t12=C_set_block_item(t5,0,t11);
t13=t8;
f_21105(t13,t12);}
else{
t9=t8;
f_21105(t9,C_SCHEME_UNDEFINED);}}}

/* k21103 in segs in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_21105(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21105,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(2)));
if(C_truep(t3)){
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t5=(C_truep(t4)?C_retrieve2(lf[27],"ffi_explseg"):C_retrieve2(lf[28],"ffi_geoseg"));
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_truep(t6)?C_fix(2):(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]));
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=t8;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21126,a[2]=((C_word*)t0)[2],a[3]=t7,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t10,a[7]=t8,a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_lessp(t7,C_fix(0)))){
C_trace("ChickenBridge.scm: 17   error");
t12=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t12))(4,t12,t11,lf[473],t7);}
else{
t12=t11;
f_21126(2,t12,C_SCHEME_UNDEFINED);}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(3));
if(C_truep(t4)){
t5=C_retrieve(lf[466]);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21187,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t8=t7;
f_21187(t8,C_SCHEME_UNDEFINED);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t7;
f_21187(t12,t11);}}
else{
C_trace("ChickenBridge.scm: 17   error");
t5=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],lf[474],((C_word*)((C_word*)t0)[6])[1]);}}}

/* k21185 in k21103 in segs in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_21187(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21187,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21190,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_apply(4,0,t2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}

/* k21188 in k21185 in k21103 in segs in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21190,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t3)[1]);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21198,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t8,a[7]=t3,a[8]=t6,a[9]=((C_word*)t0)[6],a[10]=((C_word)li280),tmp=(C_word)a,a+=11,tmp));
t10=((C_word*)t8)[1];
f_21198(t10,((C_word*)t0)[2],C_fix(1),C_SCHEME_FALSE);}

/* do3136 in k21188 in k21185 in k21103 in segs in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_21198(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21198,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[9]))){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21239,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_apply(4,0,t5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21210,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=((C_word)li279),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_21210(t8,t1,((C_word*)t0)[3]);}}

/* do3140 in do3136 in k21188 in k21185 in k21103 in segs in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_21210(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21210,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21231,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 17   ffi_rescale");
f_6948(t3,t4,C_fix(0),((C_word*)((C_word*)t0)[3])[1],C_fix(0),((C_word*)t0)[2],C_fix(1));}}

/* k21229 in do3140 in do3136 in k21188 in k21185 in k21103 in segs in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_21210(t4,((C_word*)t0)[2],t3);}

/* k21237 in do3136 in k21188 in k21185 in k21103 in segs in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21239,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[7])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t10=((C_word*)((C_word*)t0)[3])[1];
f_21198(t10,((C_word*)t0)[2],t9,((C_word*)((C_word*)t0)[7])[1]);}

/* k21124 in k21103 in segs in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21126,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21131,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word)li278),tmp=(C_word)a,a+=10,tmp));
t5=((C_word*)t3)[1];
f_21131(t5,((C_word*)t0)[2],C_fix(0));}

/* do3124 in k21124 in k21103 in segs in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_21131(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21131,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[8]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[7]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21163,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 17   func");
t4=((C_word*)t0)[4];
((C_proc6)C_retrieve_proc(t4))(6,t4,t3,t2,((C_word*)t0)[8],((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k21161 in do3124 in k21124 in k21103 in segs in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21163,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t7=((C_word*)((C_word*)t0)[3])[1];
f_21131(t7,((C_word*)t0)[2],t6);}

/* scale in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20985(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+19)){
C_save_and_reclaim((void*)tr4r,(void*)f_20985r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_20985r(t0,t1,t2,t3,t4);}}

static void C_ccall f_20985r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(19);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20992,a[2]=t1,a[3]=t6,a[4]=t3,a[5]=t8,a[6]=t2,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_pairp(t10))){
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t11))){
t12=(C_word)C_i_car(((C_word*)t5)[1]);
t13=C_set_block_item(t5,0,t12);
t14=t9;
f_20992(t14,t13);}
else{
t12=(C_word)C_i_cadr(((C_word*)t5)[1]);
t13=C_set_block_item(t8,0,t12);
t14=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21072,a[2]=t9,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)t8)[1],t3))){
C_trace("ChickenBridge.scm: 17   error");
t15=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t14,lf[471],((C_word*)t8)[1]);}
else{
t15=t14;
f_21072(2,t15,C_SCHEME_UNDEFINED);}}}
else{
t11=t9;
f_20992(t11,C_SCHEME_UNDEFINED);}}

/* k21070 in scale in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_20992(t4,t3);}

/* k20990 in scale in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_20992(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20992,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[7])[1]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21001,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word)li276),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_21001(t6,((C_word*)t0)[2],C_fix(0),((C_word*)t0)[4],t2,((C_word*)t0)[3]);}

/* do3101 in k20990 in scale in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_21001(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21001,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[7]))){
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21014,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t6,tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21048,a[2]=t8,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   fit");
t10=C_retrieve(lf[467]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,((C_word*)t6)[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[4])[1],C_fix(1));}
else{
t9=t8;
f_21014(t9,C_SCHEME_UNDEFINED);}}
else{
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_cdr(((C_word*)t0)[2]));}}

/* k21046 in do3101 in k20990 in scale in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21014(t3,t2);}

/* k21012 in do3101 in k20990 in scale in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_21014(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21014,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[7])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21040,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 17   modulo");
t7=*((C_word*)lf[428]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t0)[5],((C_word*)t0)[2]);}

/* k21038 in k21012 in do3101 in k20990 in scale in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_21040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21040,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[8])[1],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[7])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t6=((C_word*)((C_word*)t0)[5])[1];
f_21001(t6,((C_word*)t0)[4],t5,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* fit in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20852(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr5r,(void*)f_20852r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_20852r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_20852r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(13);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20856,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t6,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t10=C_set_block_item(t8,0,C_fix(1));
t11=t9;
f_20856(t11,t10);}
else{
t10=(C_word)C_i_car(((C_word*)t8)[1]);
t11=C_set_block_item(t8,0,t10);
t12=t9;
f_20856(t12,t11);}}

/* k20854 in fit in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_20856(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20856,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20859,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]))){
t3=((C_word*)((C_word*)t0)[5])[1];
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t6=t2;
f_20859(t6,t5);}
else{
t3=t2;
f_20859(t3,C_SCHEME_UNDEFINED);}}

/* k20857 in k20854 in fit in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_20859(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20859,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20861,a[2]=((C_word)li273),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20963,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word)li274),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t4=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[6]);}
else{
C_trace("ChickenBridge.scm: 17   fit1");
f_20861(((C_word*)t0)[2],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a20962 in k20857 in k20854 in fit in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20963(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20963,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 17   fit1");
f_20861(t1,t2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* fit1 in k20857 in k20854 in fit in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_20861(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20861,NULL,5,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20868,a[2]=t5,a[3]=t3,a[4]=t4,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 17   <=");
C_less_or_equal_p(5,0,t6,t3,t2,t4);}

/* k20866 in fit1 in k20857 in k20854 in fit in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20868,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[5]);}
else{
t2=(C_word)C_i_greaterp(((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_truep(t2)?((C_word*)t0)[4]:((C_word*)t0)[3]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
switch(((C_word*)t0)[2]){
case C_fix(1):
t5=(C_word)C_i_nequalp(t3,((C_word*)t0)[4]);
t6=(C_truep(t5)?((C_word*)t0)[3]:((C_word*)t0)[4]);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20891,a[2]=t6,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 17   remainder");
t9=*((C_word*)lf[468]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,t4);
case C_fix(2):
t5=(C_word)C_a_i_times(&a,2,C_fix(2),t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20910,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 17   remainder");
t8=*((C_word*)lf[468]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t6,t7,t5);
case C_fix(3):
t5=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t3);
default:
C_trace("ChickenBridge.scm: 17   error");
t5=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[6],lf[469],((C_word*)t0)[2]);}}}

/* k20908 in k20866 in fit1 in k20857 in k20854 in fit in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20910,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20917,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_abs(&a,1,t1);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)t0)[3]))){
t4=(C_word)C_i_greater_or_equalp(t1,C_fix(0));
t5=(C_truep(t4)?*((C_word*)lf[142]+1):*((C_word*)lf[146]+1));
t6=t5;
((C_proc4)C_retrieve_proc(t6))(4,t6,t2,t1,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 17   -");
C_minus(3,0,t2,t1);}}

/* k20915 in k20908 in k20866 in fit1 in k20857 in k20854 in fit in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20917,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,t1,((C_word*)t0)[2]));}

/* k20889 in k20866 in fit1 in k20857 in k20854 in fit in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20891,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)t0)[2],t1));}

/* tendency in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20785(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr5r,(void*)f_20785r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_20785r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_20785r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word *a=C_alloc(16);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=C_retrieve(lf[466]);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20789,a[2]=t2,a[3]=t8,a[4]=t10,a[5]=t1,a[6]=t7,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t12=t11;
f_20789(t12,C_SCHEME_UNDEFINED);}
else{
t12=(C_word)C_i_car(((C_word*)t8)[1]);
t13=C_set_block_item(t10,0,t12);
t14=(C_word)C_i_cdr(((C_word*)t8)[1]);
t15=C_set_block_item(t8,0,t14);
t16=t11;
f_20789(t16,t15);}}

/* k20787 in tendency in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_20789(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20789,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20792,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[7])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20835,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   interp1");
f_20653(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[7])[1],C_fix(1));}
else{
t3=t2;
f_20792(t3,C_SCHEME_UNDEFINED);}}

/* k20833 in k20787 in tendency in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20792(t3,t2);}

/* k20790 in k20787 in tendency in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_20792(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20792,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20795,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[6])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20828,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   interp1");
f_20653(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1],C_fix(1));}
else{
t3=t2;
f_20795(t3,C_SCHEME_UNDEFINED);}}

/* k20826 in k20790 in k20787 in tendency in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20795(t3,t2);}

/* k20793 in k20790 in k20787 in tendency in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_20795(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20795,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20808,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_truep(t3)?(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]));
C_apply(5,0,t2,((C_word*)((C_word*)t0)[3])[1],t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k20806 in k20793 in k20790 in k20787 in tendency in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20808,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[2])[1],t1));}

/* interp in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20739(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_20739r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_20739r(t0,t1,t2,t3);}}

static void C_ccall f_20739r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20743,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 17   error");
t5=*((C_word*)lf[74]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[464]);}
else{
t5=t4;
f_20743(2,t5,C_SCHEME_UNDEFINED);}}

/* k20741 in interp in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=(C_word)C_i_nullp(t4);
t6=(C_truep(t5)?C_fix(1):(C_word)C_i_cadr(((C_word*)t0)[4]));
C_trace("ChickenBridge.scm: 17   interp1");
f_20653(((C_word*)t0)[3],((C_word*)t0)[2],t3,t6);}
else{
C_trace("ChickenBridge.scm: 17   interp1");
f_20653(((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4],C_fix(1));}}

/* interp1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_20653(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20653,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20657,a[2]=t1,a[3]=t2,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 17   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[462],t3);}
else{
t6=t5;
f_20657(2,t6,(C_word)C_i_car(t3));}}

/* k20655 in interp1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20657,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20660,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 17   err");
t6=C_retrieve(lf[460]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[461],((C_word*)t0)[4]);}
else{
t6=t4;
f_20660(2,t6,(C_word)C_i_cadr(((C_word*)t0)[4]));}}

/* k20658 in k20655 in interp1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20660,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)((C_word*)t0)[6])[1];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t3)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=((C_word*)t0)[5];
t9=(C_word)C_i_cddr(((C_word*)t0)[4]);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_set_block_item(t11,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20669,a[2]=((C_word*)t0)[4],a[3]=t11,a[4]=t8,a[5]=t7,a[6]=t3,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[3],a[9]=t5,a[10]=((C_word)li269),tmp=(C_word)a,a+=11,tmp));
t13=((C_word*)t11)[1];
f_20669(t13,((C_word*)t0)[2],t9);}

/* do3052 in k20658 in k20655 in interp1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_20669(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20669,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nullp(t2);
t4=(C_truep(t3)?t3:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]));
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 17   ffi_rescale");
f_6948(t1,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);}
else{
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[9])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t2);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t7);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20691,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 17   error");
t11=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t9,lf[459],((C_word*)t0)[2]);}
else{
t11=(C_word)C_i_cadr(t2);
t12=C_mutate(((C_word *)((C_word*)t0)[5])+1,t11);
t13=t9;
f_20691(2,t13,t12);}}}

/* k20689 in do3052 in k20658 in k20655 in interp1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_20669(t3,((C_word*)t0)[2],t2);}

/* ratio->cents in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20638(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20638,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[26],"ffi_scaler_to_cents"),t2);}
else{
C_trace("ChickenBridge.scm: 17   ffi_scaler_to_cents");
t3=C_retrieve2(lf[26],"ffi_scaler_to_cents");
f_7042(3,t3,t1,t2);}}

/* cents->ratio in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20623(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20623,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[25],"ffi_cents_to_scaler"),t2);}
else{
C_trace("ChickenBridge.scm: 17   ffi_cents_to_scaler");
t3=C_retrieve2(lf[25],"ffi_cents_to_scaler");
f_7035(3,t3,t1,t2);}}

/* rhythm->seconds in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20387(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_20387r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_20387r(t0,t1,t2,t3);}}

static void C_ccall f_20387r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=lf[452];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=lf[453];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20391,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t1,a[8]=t7,a[9]=t5,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_20391(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[454]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20536,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[349],lf[454]);}
else{
t20=t19;
f_20536(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[455]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20571,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[349],lf[455]);}
else{
t21=t20;
f_20571(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20600,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[353],t3);}
else{
t21=t20;
f_20600(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k20598 in rhythm->seconds in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20600,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20607,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20615,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20613 in k20598 in rhythm->seconds in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20607(2,t2,C_SCHEME_UNDEFINED);}}

/* k20605 in k20598 in rhythm->seconds in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20391(t5,t4);}

/* k20569 in rhythm->seconds in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20571,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20575,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_20575(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20573 in k20569 in rhythm->seconds in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20391(t7,t6);}

/* k20534 in rhythm->seconds in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20536,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20540,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_20540(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20538 in k20534 in rhythm->seconds in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20391(t7,t6);}

/* k20389 in rhythm->seconds in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_20391(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20391,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20394,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_20394(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[454]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20436,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[454]);}
else{
t6=t5;
f_20436(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[455]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20471,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[455]);}
else{
t7=t6;
f_20471(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20500,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[353],((C_word*)t0)[5]);}
else{
t7=t6;
f_20500(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k20498 in k20389 in rhythm->seconds in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20500,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20507,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20515,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20513 in k20498 in k20389 in rhythm->seconds in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20507(2,t2,C_SCHEME_UNDEFINED);}}

/* k20505 in k20498 in k20389 in rhythm->seconds in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20394(t5,t4);}

/* k20469 in k20389 in rhythm->seconds in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20471,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20475,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_20475(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20473 in k20469 in k20389 in rhythm->seconds in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20394(t7,t6);}

/* k20434 in k20389 in rhythm->seconds in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20436,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20440,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_20440(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20438 in k20434 in k20389 in rhythm->seconds in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20394(t7,t6);}

/* k20392 in k20389 in rhythm->seconds in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_20394(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20394,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20397,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_20397(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k20395 in k20392 in k20389 in rhythm->seconds in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20397,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20408,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li265),tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t3=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 17   ffi_rhythm_to_seconds");
f_7020(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a20407 in k20395 in k20392 in k20389 in rhythm->seconds in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20408(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20408,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 17   ffi_rhythm_to_seconds");
f_7020(t1,t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* decimals in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20347(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_20347,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20351,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   expt");
t5=*((C_word*)lf[449]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[450],t3);}

/* k20349 in decimals in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20351,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[3]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20362,a[2]=t1,a[3]=((C_word)li263),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t3=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20381,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 17   round");
t4=*((C_word*)lf[448]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}}

/* k20379 in k20349 in decimals in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20381,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* a20361 in k20349 in decimals in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20362(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20362,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20370,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 17   round");
t5=*((C_word*)lf[448]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k20368 in a20361 in k20349 in decimals in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20370,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* quantize in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20326(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_20326,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20338,a[2]=t3,a[3]=((C_word)li261),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_trace("ChickenBridge.scm: 17   ffi_quantize");
f_7009(t1,t2,t3);}}

/* a20337 in quantize in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20338(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20338,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 17   ffi_quantize");
f_7009(t1,t2,((C_word*)t0)[2]);}

/* divide in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20283(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr3r,(void*)f_20283r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_20283r(t0,t1,t2,t3);}}

static void C_ccall f_20283r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t3))){
if(C_truep((C_word)C_i_listp(t2))){
C_apply(4,0,t1,*((C_word*)lf[446]+1),t2);}
else{
C_trace("ChickenBridge.scm: 17   /");
C_divide(3,0,t1,t2);}}
else{
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20313,a[2]=t3,a[3]=((C_word)li259),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_apply(5,0,t1,*((C_word*)lf[446]+1),t2,t3);}}}

/* a20312 in divide in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20313(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20313,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_divide(&a,2,t2,t3));}

/* minus in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20240(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr3r,(void*)f_20240r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_20240r(t0,t1,t2,t3);}}

static void C_ccall f_20240r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t3))){
if(C_truep((C_word)C_i_listp(t2))){
C_apply(4,0,t1,*((C_word*)lf[142]+1),t2);}
else{
C_trace("ChickenBridge.scm: 17   -");
C_minus(3,0,t1,t2);}}
else{
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20270,a[2]=t3,a[3]=((C_word)li257),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_apply(5,0,t1,*((C_word*)lf[142]+1),t2,t3);}}}

/* a20269 in minus in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20270(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20270,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_minus(&a,2,t2,t3));}

/* times in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20171(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_20171r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_20171r(t0,t1,t2);}}

static void C_ccall f_20171r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(1));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t4))){
t5=(C_word)C_i_car(t2);
C_apply(4,0,t1,*((C_word*)lf[387]+1),t5);}
else{
C_apply(4,0,t1,*((C_word*)lf[387]+1),t2);}}
else{
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20215,a[2]=t2,a[3]=((C_word)li255),tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("map");
t7=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t5,t6);}
else{
C_apply(4,0,t1,*((C_word*)lf[387]+1),t2);}}}}

/* a20214 in times in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20215(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20215,3,t0,t1,t2);}
t3=(C_word)C_i_cadr(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_times(&a,2,t2,t3));}

/* plus in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20102(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_20102r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_20102r(t0,t1,t2);}}

static void C_ccall f_20102r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t4))){
t5=(C_word)C_i_car(t2);
C_apply(4,0,t1,*((C_word*)lf[146]+1),t5);}
else{
C_apply(4,0,t1,*((C_word*)lf[146]+1),t2);}}
else{
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20146,a[2]=t2,a[3]=((C_word)li253),tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("map");
t7=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t5,t6);}
else{
C_apply(4,0,t1,*((C_word*)lf[146]+1),t2);}}}}

/* a20145 in plus in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20146(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20146,3,t0,t1,t2);}
t3=(C_word)C_i_cadr(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_plus(&a,2,t2,t3));}

/* log2 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20096(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20096,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub237(t3,t4));}

/* log10 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20090(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20090,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub232(t3,t4));}

/* float in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20069(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20069,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20081,a[2]=((C_word)li249),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t4=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,t3,t2);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_times(&a,2,t2,lf[439]));}}

/* a20080 in float in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20081(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20081,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_times(&a,2,t2,lf[438]));}

/* int in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20054(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20054,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[22],"ffi_float_to_fixnum"),t2);}
else{
C_trace("ChickenBridge.scm: 17   ffi_float_to_fixnum");
t3=C_retrieve2(lf[22],"ffi_float_to_fixnum");
f_7002(3,t3,t1,t2);}}

/* discrete in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19943(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...){
C_word tmp;
C_word t6;
va_list v;
C_word *a,c2=c;
C_save_rest(t5,c2,6);
if(c<6) C_bad_min_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+21)){
C_save_and_reclaim((void*)tr6r,(void*)f_19943r,6,t0,t1,t2,t3,t4,t5);}
else{
a=C_alloc((c-6)*3);
t6=C_restore_rest(a,C_rest_count(0));
f_19943r(t0,t1,t2,t3,t4,t5,t6);}}

static void C_ccall f_19943r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word *a=C_alloc(21);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_fix(1);
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19947,a[2]=t5,a[3]=t1,a[4]=t12,a[5]=t8,a[6]=t4,a[7]=t3,a[8]=t2,a[9]=t10,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(t5))){
t14=C_set_block_item(t10,0,t5);
if(C_truep((C_word)C_i_nullp(t6))){
t15=(C_word)C_i_length(((C_word*)t10)[1]);
t16=C_set_block_item(t8,0,t15);
t17=t13;
f_19947(t17,t16);}
else{
t15=(C_word)C_i_car(t6);
t16=C_set_block_item(t8,0,t15);
t17=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20018,a[2]=t13,a[3]=t12,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t18=(C_word)C_i_cdr(t6);
t19=(C_word)C_i_nullp(t18);
C_trace("ChickenBridge.scm: 17   not?");
t20=C_retrieve(lf[435]);
((C_proc3)C_retrieve_proc(t20))(3,t20,t17,t19);}}
else{
t14=(C_word)C_i_car(t6);
t15=C_set_block_item(t8,0,t14);
t16=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t16))){
t17=t13;
f_19947(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_cadr(t6);
t18=C_set_block_item(t12,0,t17);
t19=t13;
f_19947(t19,t18);}}}

/* k20016 in discrete in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_20018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_19947(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_19947(t2,C_SCHEME_UNDEFINED);}}

/* k19945 in discrete in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_19947(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19947,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19961,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[9],a[7]=((C_word)li245),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19976,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   ffi_discrete");
t3=C_retrieve(lf[434]);
((C_proc8)C_retrieve_proc(t3))(8,t3,t2,((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],C_fix(0),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19987,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word)li246),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
C_trace("ChickenBridge.scm: 17   ffi_discrete");
t2=C_retrieve(lf[434]);
((C_proc8)C_retrieve_proc(t2))(8,t2,((C_word*)t0)[3],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}}

/* a19986 in k19945 in discrete in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19987(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19987,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 17   ffi_discrete");
t3=C_retrieve(lf[434]);
((C_proc8)C_retrieve_proc(t3))(8,t3,t1,t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k19974 in k19945 in discrete in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* a19960 in k19945 in discrete in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19961(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19961,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19969,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 17   ffi_discrete");
t4=C_retrieve(lf[434]);
((C_proc8)C_retrieve_proc(t4))(8,t4,t3,t2,((C_word*)t0)[5],((C_word*)t0)[4],C_fix(0),((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k19967 in a19960 in k19945 in discrete in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* rescale in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19909(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...){
C_word tmp;
C_word t7;
va_list v;
C_word *a,c2=c;
C_save_rest(t6,c2,7);
if(c<7) C_bad_min_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr7r,(void*)f_19909r,7,t0,t1,t2,t3,t4,t5,t6);}
else{
a=C_alloc((c-7)*3);
t7=C_restore_rest(a,C_rest_count(0));
f_19909r(t0,t1,t2,t3,t4,t5,t6,t7);}}

static void C_ccall f_19909r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
if(C_truep((C_word)C_i_listp(t2))){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19921,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t4,a[6]=t3,a[7]=((C_word)li243),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t9=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t1,t8,t2);}
else{
if(C_truep((C_word)C_i_nullp(t7))){
C_trace("ChickenBridge.scm: 17   ffi_rescale");
f_6948(t1,t2,t3,t4,t5,t6,C_fix(1));}
else{
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 17   ffi_rescale");
f_6948(t1,t2,t3,t4,t5,t6,t8);}}}

/* a19920 in rescale in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19921(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19921,3,t0,t1,t2);}
C_apply(9,0,t1,C_retrieve(lf[432]),t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18862(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+61)){
C_save_and_reclaim((void*)tr3r,(void*)f_18862r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18862r(t0,t1,t2,t3);}}

static void C_ccall f_18862r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(61);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_length(t2);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_fix(8);
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_fix(1);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_fix(1);
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=t3;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_18872,a[2]=t22,a[3]=t26,a[4]=t20,a[5]=t3,a[6]=t24,a[7]=t2,a[8]=t8,a[9]=t14,a[10]=t10,a[11]=t1,a[12]=t12,a[13]=t18,a[14]=t7,a[15]=t16,a[16]=t5,tmp=(C_word)a,a+=17,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t24)[1]))){
t28=t27;
f_18872(t28,C_SCHEME_UNDEFINED);}
else{
t28=(C_word)C_i_car(((C_word*)t24)[1]);
t29=(C_word)C_eqp(t28,lf[430]);
if(C_truep(t29)){
t30=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19822,a[2]=t3,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t20,a[7]=t16,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t20)[1])){
C_trace("error");
t31=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t31))(4,t31,t30,lf[349],lf[430]);}
else{
t31=t30;
f_19822(2,t31,C_SCHEME_UNDEFINED);}}
else{
t30=(C_word)C_eqp(t28,lf[431]);
if(C_truep(t30)){
t31=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19857,a[2]=t3,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t22,a[7]=t18,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t32=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[349],lf[431]);}
else{
t32=t31;
f_19857(2,t32,C_SCHEME_UNDEFINED);}}
else{
t31=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19886,a[2]=t27,a[3]=t20,a[4]=t16,a[5]=t24,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t26)[1])){
C_trace("error");
t32=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[353],t3);}
else{
t32=t31;
f_19886(2,t32,C_SCHEME_UNDEFINED);}}}}}

/* k19884 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19886,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19893,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19901,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19899 in k19884 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19893(2,t2,C_SCHEME_UNDEFINED);}}

/* k19891 in k19884 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18872(t5,t4);}

/* k19855 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19857,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19861,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_19861(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19859 in k19855 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18872(t7,t6);}

/* k19820 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19822,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19826,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_19826(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19824 in k19820 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18872(t7,t6);}

/* k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_18872(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18872,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_18875,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],a[13]=((C_word*)t0)[16],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_18875(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[430]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19722,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[430]);}
else{
t6=t5;
f_19722(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[431]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19757,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[431]);}
else{
t7=t6;
f_19757(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19786,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[353],((C_word*)t0)[5]);}
else{
t7=t6;
f_19786(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k19784 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19786,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19793,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19801,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19799 in k19784 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19793(2,t2,C_SCHEME_UNDEFINED);}}

/* k19791 in k19784 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18875(t5,t4);}

/* k19755 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19757,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19761,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_19761(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19759 in k19755 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18875(t7,t6);}

/* k19720 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19722,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19726,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_19726(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19724 in k19720 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18875(t7,t6);}

/* k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_18875(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18875,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18878,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18878(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18878,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,((C_word*)((C_word*)t0)[10])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18883,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
t5=((C_word*)((C_word*)t0)[9])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t5,C_fix(1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,C_fix(2)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,C_fix(3)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t6=t4;
f_18883(2,t6,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[429],((C_word*)((C_word*)t0)[9])[1]);}}

/* k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18883,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18885,a[2]=((C_word*)t0)[9],a[3]=((C_word)li221),tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18967,a[2]=t4,a[3]=((C_word)li224),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19077,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19615,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=t8,a[7]=((C_word*)t0)[4],a[8]=((C_word)li241),tmp=(C_word)a,a+=9,tmp));
t10=((C_word*)t8)[1];
f_19615(t10,t6,C_fix(0));}

/* do2793 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_19615(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19615,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19625,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19638,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=t5,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=((C_word)li240),tmp=(C_word)a,a+=10,tmp));
t7=((C_word*)t5)[1];
f_19638(t7,t3,C_SCHEME_END_OF_LIST,C_fix(0),C_SCHEME_FALSE);}}

/* do2796 in do2793 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_19638(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19638,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)((C_word*)t0)[8])[1]))){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19648,a[2]=t1,a[3]=((C_word*)t0)[7],a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19666,a[2]=t6,a[3]=t7,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   reverse");
t9=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t5)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19691,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t6,a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t8=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 16   modulo");
t9=*((C_word*)lf[428]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,((C_word*)t0)[2]);}}

/* k19689 in do2796 in do2793 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19691,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)t0)[8],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19673,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[2])[1]))){
t5=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t4;
f_19673(t7,t6);}
else{
t5=t4;
f_19673(t5,C_SCHEME_UNDEFINED);}}

/* k19671 in k19689 in do2796 in do2793 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_19673(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19673,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_19638(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k19664 in do2796 in do2793 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   add-outcome");
t2=((C_word*)t0)[4];
f_18885(t2,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k19646 in do2796 in do2793 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19648,2,t0,t1);}
if(C_truep((C_word)C_i_member(((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]))){
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}}

/* k19623 in do2793 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19625,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_19615(t3,((C_word*)t0)[2],t2);}

/* k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19077,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19080,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19571,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   sort");
t5=C_retrieve(lf[422]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[4])[1],*((C_word*)lf[145]+1));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19577,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=t4;
f_19577(t6,(C_word)C_i_symbolp(t5));}
else{
t5=t4;
f_19577(t5,C_SCHEME_FALSE);}}}

/* k19575 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_19577(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19577,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19581,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19583,a[2]=((C_word)li239),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   sort");
t4=C_retrieve(lf[422]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[3])[1],t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19599,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   reverse");
t3=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k19597 in k19575 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19080(t3,t2);}

/* a19582 in k19575 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19583(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_19583,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19591,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   format");
t5=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_SCHEME_FALSE,lf[427],t2);}

/* k19589 in a19582 in k19575 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19591,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19595,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   format");
t3=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_SCHEME_FALSE,lf[426],((C_word*)t0)[2]);}

/* k19593 in k19589 in a19582 in k19575 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   string-ci<?");
t2=*((C_word*)lf[425]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k19579 in k19575 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19080(t3,t2);}

/* k19569 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19080(t3,t2);}

/* k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_19080(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19080,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19083,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19448,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li238),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_19448(t6,t2,((C_word*)((C_word*)t0)[7])[1],C_fix(0));}

/* do2809 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_19448(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19448,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19459,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   max");
t6=*((C_word*)lf[342]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=(C_word)C_i_cddr(t5);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19472,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t9=(C_word)C_i_string_length(t6);
C_trace("ChickenBridge.scm: 16   max");
t10=*((C_word*)lf[342]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t8,((C_word*)t4)[1],t9);}}

/* k19470 in do2809 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19472,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19475,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19534,a[2]=t5,a[3]=((C_word)li237),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_19534(t7,t3,((C_word*)t0)[2],C_fix(0));}

/* do2817 in k19470 in do2809 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_19534(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_19534,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t4);
t6=(C_word)C_a_i_plus(&a,2,t3,t5);
t7=t3=t6;
t8=(C_word)C_i_cdr(t2);
t10=t1;
t11=t8;
t12=t3;
t1=t10;
t2=t11;
t3=t12;
goto loop;}}

/* k19473 in k19470 in do2809 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19475,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_times(&a,2,((C_word*)t3)[1],lf[423]);
t5=C_set_block_item(t3,0,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19482,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19491,a[2]=t3,a[3]=t8,a[4]=((C_word)li236),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_19491(t10,t6,((C_word*)t0)[2]);}

/* do2823 in k19473 in k19470 in do2809 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_19491(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19491,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cdr(t3);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19516,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t6);
t8=(C_word)C_a_i_divide(&a,2,t7,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 16   decimals");
t9=C_retrieve(lf[424]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,t8,C_fix(3));}}

/* k19514 in do2823 in k19473 in k19470 in do2809 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[5],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_19491(t4,((C_word*)t0)[2],t3);}

/* k19480 in k19473 in k19470 in do2809 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_19448(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k19457 in do2809 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19083,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19087,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19434,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word)li235),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   sort");
t4=C_retrieve(lf[422]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[7])[1],t3);}

/* a19433 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19434(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_19434,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 16   before?");
t6=((C_word*)((C_word*)t0)[3])[1];
f_18967(t6,t1,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19087,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19090,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],C_fix(1));
if(C_truep(t4)){
t5=lf[411];
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19131,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 16   make-string");
t7=*((C_word*)lf[421]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,C_fix(5),C_make_character(45));}
else{
t5=t3;
f_19090(2,t5,C_SCHEME_UNDEFINED);}}

/* k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19131,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19134,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 16   newline");
t3=*((C_word*)lf[118]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19134,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19137,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19415,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li234),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_19415(t6,t2,C_fix(0));}

/* do2836 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_19415(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19415,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)((C_word*)t0)[3])[1]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19425,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("write-char/port");
t4=C_retrieve(lf[412]);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t3,C_make_character(42),*((C_word*)lf[413]+1));}}

/* k19423 in do2836 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19425,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_19415(t3,((C_word*)t0)[2],t2);}

/* k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19137,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19140,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19353,a[2]=((C_word*)t0)[6],a[3]=t4,a[4]=((C_word)li233),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_19353(t6,t2,((C_word*)((C_word*)t0)[4])[1]);}

/* do2841 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_19353(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19353,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19363,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   display");
t4=*((C_word*)lf[119]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k19361 in do2841 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19363,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19366,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 16   format");
t4=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_SCHEME_FALSE,lf[420],t3);}

/* k19364 in k19361 in do2841 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19366,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19372,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19386,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,C_fix(5),t2);
C_trace("ChickenBridge.scm: 16   max");
t6=*((C_word*)lf[342]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k19384 in k19364 in k19361 in do2841 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19386,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19388,a[2]=t3,a[3]=((C_word)li232),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_19388(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2846 in k19384 in k19364 in k19361 in do2841 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_19388(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19388,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19398,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[412]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[413]+1));}}

/* k19396 in do2846 in k19384 in k19364 in k19361 in do2841 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19398,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_19388(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k19370 in k19364 in k19361 in do2841 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19372,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19375,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   display");
t3=*((C_word*)lf[119]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k19373 in k19370 in k19364 in k19361 in do2841 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19353(t3,((C_word*)t0)[2],t2);}

/* k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19140,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19143,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19148,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t4,a[7]=((C_word)li231),tmp=(C_word)a,a+=8,tmp));
t6=((C_word*)t4)[1];
f_19148(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_19148(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19148,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19161,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,a[7]=t1,a[8]=((C_word*)t0)[6],a[9]=t2,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 16   newline");
t5=*((C_word*)lf[118]+1);
((C_proc2)C_retrieve_proc(t5))(2,t5,t4);}}

/* k19159 in do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19161,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19164,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_19164(2,t4,lf[416]);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19035,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 16   format");
t6=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[419],t5);}}

/* k19033 in k19159 in do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19035,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19044,a[2]=t6,a[3]=t3,a[4]=((C_word)li230),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_19044(t8,((C_word*)t0)[2],t4);}

/* do2788 in k19033 in k19159 in do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_19044(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19044,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19055,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19066,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 16   format");
t6=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[418],t5);}}

/* k19064 in do2788 in k19033 in k19159 in do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   string-append");
t2=*((C_word*)lf[417]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k19053 in do2788 in k19033 in k19159 in do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_19044(t4,((C_word*)t0)[2],t3);}

/* k19162 in k19159 in do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19164,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19170,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19324,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[2])[1],t2);
C_trace("ChickenBridge.scm: 16   max");
t6=*((C_word*)lf[342]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k19322 in k19162 in k19159 in do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19324,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19326,a[2]=t3,a[3]=((C_word)li229),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_19326(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2862 in k19322 in k19162 in k19159 in do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_19326(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19326,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19336,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[412]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[413]+1));}}

/* k19334 in do2862 in k19322 in k19162 in k19159 in do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19336,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_19326(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k19168 in k19162 in k19159 in do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19170,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19173,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19297,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   min");
t4=*((C_word*)lf[415]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k19295 in k19168 in k19162 in k19159 in do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19297,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19299,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li228),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_19299(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2868 in k19295 in k19168 in k19162 in k19159 in do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_19299(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19299,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19309,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_string_ref(((C_word*)t0)[2],t2);
C_trace("write-char/port");
t6=C_retrieve(lf[412]);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,*((C_word*)lf[413]+1));}}

/* k19307 in do2868 in k19295 in k19168 in k19162 in k19159 in do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19309,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_19299(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k19171 in k19168 in k19162 in k19159 in do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19173,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19176,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19185,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word*)t0)[5],a[6]=((C_word)li227),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_19185(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do2875 in k19171 in k19168 in k19162 in k19159 in do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_19185(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19185,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[5]);
t5=(C_word)C_i_assoc(t3,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19198,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19217,a[2]=((C_word*)t0)[3],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(t5);
C_trace("ChickenBridge.scm: 16   number->string");
C_number_to_string(3,0,t7,t8);}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19211,a[2]=((C_word*)t0)[2],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   display");
t8=*((C_word*)lf[119]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[3]);}}}

/* k19209 in do2875 in k19171 in k19168 in k19162 in k19159 in do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   display");
t2=*((C_word*)lf[119]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k19215 in do2875 in k19171 in k19168 in k19162 in k19159 in do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19217,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_string_length(((C_word*)t3)[1]);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19223,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   display");
t8=*((C_word*)lf[119]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[2]);}

/* k19221 in k19215 in do2875 in k19171 in k19168 in k19162 in k19159 in do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19223,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19226,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_greater_or_equalp(((C_word*)((C_word*)t0)[2])[1],C_fix(5)))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19265,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   position");
t4=C_retrieve(lf[90]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,C_make_character(46),((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=t2;
f_19226(t3,C_SCHEME_UNDEFINED);}}

/* k19263 in k19221 in k19215 in do2875 in k19171 in k19168 in k19162 in k19159 in do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19265,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19269,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19277,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_plus(&a,2,t1,C_fix(4));
C_trace("ChickenBridge.scm: 16   min");
t5=*((C_word*)lf[415]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k19275 in k19263 in k19221 in k19215 in do2875 in k19171 in k19168 in k19162 in k19159 in do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   substring");
t2=*((C_word*)lf[414]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t1);}

/* k19267 in k19263 in k19221 in k19215 in do2875 in k19171 in k19168 in k19162 in k19159 in do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_i_string_length(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19226(t5,t4);}

/* k19224 in k19221 in k19215 in do2875 in k19171 in k19168 in k19162 in k19159 in do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_19226(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19226,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19229,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19236,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,C_fix(5),((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 16   max");
t5=*((C_word*)lf[342]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_fix(0));}

/* k19234 in k19224 in k19221 in k19215 in do2875 in k19171 in k19168 in k19162 in k19159 in do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19236,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19238,a[2]=t3,a[3]=((C_word)li226),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_19238(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2884 in k19234 in k19224 in k19221 in k19215 in do2875 in k19171 in k19168 in k19162 in k19159 in do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_19238(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19238,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19248,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[412]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[413]+1));}}

/* k19246 in do2884 in k19234 in k19224 in k19221 in k19215 in do2875 in k19171 in k19168 in k19162 in k19159 in do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19248,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_19238(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k19227 in k19224 in k19221 in k19215 in do2875 in k19171 in k19168 in k19162 in k19159 in do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   display");
t2=*((C_word*)lf[119]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k19196 in do2875 in k19171 in k19168 in k19162 in k19159 in do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19185(t3,((C_word*)t0)[2],t2);}

/* k19174 in k19171 in k19168 in k19162 in k19159 in do2856 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19148(t3,((C_word*)t0)[2],t2);}

/* k19141 in k19138 in k19135 in k19132 in k19129 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   newline");
t2=*((C_word*)lf[118]+1);
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[2]);}

/* k19088 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19090,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(1)))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_retrieve(lf[409]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19102,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19113,a[2]=((C_word)li225),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t4=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a19112 in k19088 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19113(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19113,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(t2);
C_trace("ChickenBridge.scm: 16   append");
t5=*((C_word*)lf[112]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t1,t3,lf[410],t4);}

/* k19100 in k19088 in k19085 in k19081 in k19078 in k19075 in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],C_fix(2)))){
C_trace("ChickenBridge.scm: 16   make-markov");
t2=C_retrieve(lf[386]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}}

/* before? in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_18967(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18967,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_TRUE);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18977,a[2]=t4,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19015,a[2]=t2,a[3]=((C_word)li223),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   list-index");
f_8166(t5,t6,t4);}}

/* a19014 in before? in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19015(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19015,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k18975 in before? in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18977,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18980,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19005,a[2]=((C_word*)t0)[4],a[3]=((C_word)li222),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   list-index");
f_8166(t2,t3,((C_word*)t0)[2]);}

/* a19004 in k18975 in before? in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_19005(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19005,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k18978 in k18975 in before? in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[7],t1))){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}
else{
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[7],t1))){
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 16   before?");
t4=((C_word*)((C_word*)t0)[3])[1];
f_18967(t4,((C_word*)t0)[6],t2,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* add-outcome in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_18885(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18885,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18889,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18957,a[2]=t2,a[3]=((C_word)li219),tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8212,a[2]=t5,a[3]=t8,a[4]=((C_word)li220),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_8212(t10,t4,t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do590 in add-outcome in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_8212(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8212,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_truep(t6)?t6:(C_word)C_i_nullp(t2));
if(C_truep(t7)){
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,((C_word*)t5)[1]);}
else{
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8222,a[2]=t5,a[3]=t3,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8232,a[2]=t8,a[3]=t5,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 14   p");
t11=((C_word*)t0)[2];
f_18957(t11,t9,t10);}}

/* k8230 in do590 in add-outcome in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8222(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_8222(t2,C_SCHEME_UNDEFINED);}}

/* k8220 in do590 in add-outcome in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_8222(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_8212(t3,((C_word*)t0)[4],t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* a18956 in add-outcome in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_18957(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18957,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(((C_word*)t0)[2],t3));}

/* k18887 in add-outcome in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18889,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_cddr(t1);
t4=(C_word)C_i_assoc(((C_word*)t0)[5],t3);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t4);
t6=(C_word)C_i_cadr(t4);
t7=(C_word)C_a_i_plus(&a,2,C_fix(1),t6);
t8=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_set_car(t5,t7));}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18939,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 16   tail");
t7=C_retrieve(lf[71]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18907,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   format");
t4=C_retrieve(lf[407]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,C_SCHEME_FALSE,lf[408],((C_word*)t0)[3]);}}

/* k18905 in k18887 in add-outcome in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18907,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],C_fix(1));
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* k18937 in k18887 in add-outcome in k18881 in k18876 in k18873 in k18870 in markov-analyze in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18939,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_fix(1));
t3=(C_word)C_a_i_list(&a,1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_set_cdr(t1,t3));}

/* next-in-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18768(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18768,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18772,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12380(t3,t2);}

/* k18770 in next-in-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18772,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
t3=(C_word)C_i_car(t1);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18801,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_check_structure(t3,lf[398]);
t6=(C_word)C_i_block_ref(t3,C_fix(2));
C_trace("ChickenBridge.scm: 16   next-1");
f_13006(t4,t6);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_set_car(t1,t4);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 16   graph-node-datum");
f_18187(((C_word*)t0)[2],t6);}}

/* k18799 in k18770 in next-in-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18801,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18806,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=t3,a[6]=((C_word)li217),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_18806(t7,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2711 in k18799 in k18770 in next-in-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_18806(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18806,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[5])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nullp(t2));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18816,a[2]=((C_word*)t0)[5],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t6)){
t7=t5;
f_18816(2,t7,(C_word)C_i_set_car(((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]));}
else{
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[405],((C_word*)t0)[3]);}}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18831,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_check_structure(t6,lf[398]);
t8=(C_word)C_i_block_ref(t6,C_fix(3));
if(C_truep((C_word)C_i_eqvp(((C_word*)t0)[3],t8))){
t9=(C_word)C_i_car(t2);
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t5;
f_18831(t11,t10);}
else{
t9=t5;
f_18831(t9,C_SCHEME_UNDEFINED);}}}

/* k18829 in do2711 in k18799 in k18770 in next-in-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_18831(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18806(t3,((C_word*)t0)[2],t2);}

/* k18814 in do2711 in k18799 in k18770 in next-in-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   graph-node-datum");
f_18187(((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18250(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr3r,(void*)f_18250r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18250r(t0,t1,t2,t3);}}

static void C_ccall f_18250r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(17);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18254,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18512,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=C_fix(1);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18521,a[2]=t9,a[3]=((C_word)li215),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t11=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t6,t10,t7);}
else{
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[404],((C_word*)t4)[1]);}}

/* parse-graph-item in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18521(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18521,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18525,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=t3;
f_18525(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[403],t2);}}

/* k18523 in parse-graph-item in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18525,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18530,a[2]=((C_word*)t0)[4],a[3]=((C_word)li214),tmp=(C_word)a,a+=4,tmp);
C_apply(4,0,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* a18529 in k18523 in parse-graph-item in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18530(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+46)){
C_save_and_reclaim((void*)tr3r,(void*)f_18530r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18530r(t0,t1,t2,t3);}}

static void C_ccall f_18530r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(46);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18534,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t2,a[10]=t1,a[11]=((C_word*)t0)[2],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_18534(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[401]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18672,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[349],lf[401]);}
else{
t20=t19;
f_18672(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[402]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18707,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[349],lf[402]);}
else{
t21=t20;
f_18707(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18736,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[353],t3);}
else{
t21=t20;
f_18736(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k18734 in a18529 in k18523 in parse-graph-item in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18736,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18743,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18751,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18749 in k18734 in a18529 in k18523 in parse-graph-item in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18743(2,t2,C_SCHEME_UNDEFINED);}}

/* k18741 in k18734 in a18529 in k18523 in parse-graph-item in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18534(t5,t4);}

/* k18705 in a18529 in k18523 in parse-graph-item in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18707,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18711,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_18711(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18709 in k18705 in a18529 in k18523 in parse-graph-item in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18534(t7,t6);}

/* k18670 in a18529 in k18523 in parse-graph-item in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18672,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18676,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_18676(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18674 in k18670 in a18529 in k18523 in parse-graph-item in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18534(t7,t6);}

/* k18532 in a18529 in k18523 in parse-graph-item in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_18534(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18534,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18537,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_18537(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[401]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18572,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[401]);}
else{
t6=t5;
f_18572(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[402]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18607,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[402]);}
else{
t7=t6;
f_18607(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18636,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[353],((C_word*)t0)[5]);}
else{
t7=t6;
f_18636(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k18634 in k18532 in a18529 in k18523 in parse-graph-item in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18636,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18643,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18651,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18649 in k18634 in k18532 in a18529 in k18523 in parse-graph-item in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18643(2,t2,C_SCHEME_UNDEFINED);}}

/* k18641 in k18634 in k18532 in a18529 in k18523 in parse-graph-item in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18643(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18537(t5,t4);}

/* k18605 in k18532 in a18529 in k18523 in parse-graph-item in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18607,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18611,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_18611(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18609 in k18605 in k18532 in a18529 in k18523 in parse-graph-item in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18537(t7,t6);}

/* k18570 in k18532 in a18529 in k18523 in parse-graph-item in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18572,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18576,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_18576(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18574 in k18570 in k18532 in a18529 in k18523 in parse-graph-item in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18537(t7,t6);}

/* k18535 in k18532 in a18529 in k18523 in parse-graph-item in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_18537(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18537,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18540,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18540(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k18538 in k18535 in k18532 in a18529 in k18523 in parse-graph-item in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18540,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18543,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=t2;
f_18543(t3,C_SCHEME_UNDEFINED);}
else{
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[6])[1]);
t4=t2;
f_18543(t4,t3);}}

/* k18541 in k18538 in k18535 in k18532 in a18529 in k18523 in parse-graph-item in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_18543(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18543,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=((C_word*)t0)[5];
t5=((C_word*)t0)[4];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=t4;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,4,lf[398],t5,t6,t7));}

/* k18510 in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18254(2,t3,t2);}

/* k18252 in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18254,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18257,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_18257(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[347]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18417,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 16   error");
t18=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[349],lf[347]);}
else{
t18=t17;
f_18417(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[350]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18452,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 16   error");
t19=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[349],lf[350]);}
else{
t19=t18;
f_18452(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18481,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 16   error");
t19=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[353],((C_word*)t0)[4]);}
else{
t19=t18;
f_18481(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k18479 in k18252 in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18481,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18488,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18496,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18494 in k18479 in k18252 in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18488(2,t2,C_SCHEME_UNDEFINED);}}

/* k18486 in k18479 in k18252 in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18257(t5,t4);}

/* k18450 in k18252 in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18452,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18456,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_18456(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18454 in k18450 in k18252 in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18257(t7,t6);}

/* k18415 in k18252 in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18417,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18421,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_18421(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18419 in k18415 in k18252 in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18257(t7,t6);}

/* k18255 in k18252 in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_18257(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18257,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18260,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_18260(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[347]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18317,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[347]);}
else{
t6=t5;
f_18317(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[350]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18352,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[350]);}
else{
t7=t6;
f_18352(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18381,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[353],((C_word*)t0)[5]);}
else{
t7=t6;
f_18381(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k18379 in k18255 in k18252 in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18381,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18388,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18396,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18394 in k18379 in k18255 in k18252 in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18388(2,t2,C_SCHEME_UNDEFINED);}}

/* k18386 in k18379 in k18255 in k18252 in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18260(t5,t4);}

/* k18350 in k18255 in k18252 in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18352,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18356,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_18356(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18354 in k18350 in k18255 in k18252 in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18260(t7,t6);}

/* k18315 in k18255 in k18252 in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18317,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18321,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_18321(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18319 in k18315 in k18255 in k18252 in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18260(t7,t6);}

/* k18258 in k18255 in k18252 in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_18260(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18260,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18263,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18263(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 16   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k18261 in k18258 in k18255 in k18252 in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18263,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18266,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   %alloc-pattern");
f_12655(t2);}

/* k18264 in k18261 in k18258 in k18255 in k18252 in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18266,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18272,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18278,a[2]=((C_word)li213),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   initialize-pattern");
f_12665(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[400],"next-in-graph"),t5);}

/* a18277 in k18264 in k18261 in k18258 in k18255 in k18252 in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18278(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_18278,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18284,a[2]=((C_word)li212),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18296,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12380(t5,t3);}

/* k18294 in a18277 in k18264 in k18261 in k18258 in k18255 in k18252 in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(t1);
C_trace("for-each");
t3=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a18283 in a18277 in k18264 in k18261 in k18258 in k18255 in k18252 in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18284(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18284,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 16   graph-node-datum");
f_18187(t1,t2);}

/* k18270 in k18264 in k18261 in k18258 in k18255 in k18252 in make-graph in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* graph-node-datum in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_18187(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18187,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[398]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17847(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17847,3,t0,t1,t2);}
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17850,a[2]=t4,a[3]=((C_word)li206),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18029,a[2]=t1,a[3]=t4,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12380(t6,t2);}

/* k18027 in next-in-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18029,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18033,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   pattern-cache");
f_12596(t2,((C_word*)t0)[4]);}

/* k18031 in k18027 in next-in-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18033,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18035,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word)li209),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_18035(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do2552 in k18031 in k18027 in next-in-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_18035(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18035,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18045,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t1,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
t8=t7;
f_18045(2,t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
if(C_truep(t8)){
t9=t7;
f_18045(2,t9,t8);}
else{
t9=(C_word)C_i_car(t2);
t10=(C_word)C_i_car(t9);
t11=t3;
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17960,a[2]=t13,a[3]=((C_word)li208),tmp=(C_word)a,a+=4,tmp));
t15=((C_word*)t13)[1];
f_17960(t15,t7,t10,t11,C_SCHEME_TRUE);}}}

/* do2537 in do2552 in k18031 in k18027 in next-in-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_17960(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17960,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17970,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t6)){
t8=t7;
f_17970(t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
t9=t7;
f_17970(t9,(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t5)[1])));}}

/* k17968 in do2537 in do2552 in k18031 in k18027 in next-in-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_17970(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17970,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(C_word)C_eqp(t2,lf[387]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17977,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t3)){
t5=t4;
f_17977(t5,t3);}
else{
t5=(C_word)C_i_car(((C_word*)t0)[4]);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
t7=(C_word)C_i_equalp(t5,t6);
if(C_truep(t7)){
t8=t4;
f_17977(t8,t7);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[3]);
t9=t4;
f_17977(t9,(C_word)C_eqp(t8,lf[387]));}}}}

/* k17975 in k17968 in do2537 in do2552 in k18031 in k18027 in next-in-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_17977(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_17960(t5,((C_word*)t0)[2],t3,t4,((C_word*)((C_word*)t0)[6])[1]);}

/* k18043 in do2552 in k18031 in k18027 in next-in-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18045,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18048,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 16   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[396],((C_word*)t0)[6]);}
else{
t3=t2;
f_18048(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_18035(t3,((C_word*)t0)[7],t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[8])[1]);}}

/* k18046 in k18043 in do2552 in k18031 in k18027 in next-in-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18048,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18052,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_i_cadr(t3);
t5=(C_word)C_i_car(((C_word*)t0)[3]);
t6=(C_word)C_i_cddr(t5);
C_trace("ChickenBridge.scm: 16   select-output");
t7=((C_word*)((C_word*)t0)[2])[1];
f_17850(t7,t2,t4,t6);}

/* k18050 in k18046 in k18043 in do2552 in k18031 in k18027 in next-in-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18052(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18052,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18055,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[3]))){
t4=t3;
f_18055(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_18055(2,t5,(C_word)C_i_set_car(((C_word*)t0)[3],((C_word*)((C_word*)t0)[5])[1]));}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18072,a[2]=t6,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word)li207),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_18072(t8,t3,((C_word*)t0)[3]);}}}

/* do2561 in k18050 in k18046 in k18043 in do2552 in k18031 in k18027 in next-in-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_18072(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_18072,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_set_car(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_set_cdr(t2,((C_word*)t0)[5]);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18088,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 16   pattern-cache-set!");
f_12587(t6,((C_word*)t0)[3],t7);}
else{
t4=(C_word)C_i_cdr(t2);
t10=t1;
t11=t4;
t1=t10;
t2=t11;
goto loop;}}

/* k18086 in do2561 in k18050 in k18046 in k18043 in do2552 in k18031 in k18027 in next-in-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_set_cdr(t2,C_SCHEME_END_OF_LIST));}

/* k18053 in k18050 in k18046 in k18043 in do2552 in k18031 in k18027 in next-in-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_18055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* select-output in next-in-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_17850(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17850,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17918,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   ffi_ranfloat");
f_7118(t5,t2);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17862,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word)li205),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_17862(t8,t1,t3,C_SCHEME_FALSE,C_fix(0));}}

/* do2521 in select-output in next-in-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_17862(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17862,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 16   select-output");
t7=((C_word*)((C_word*)t0)[4])[1];
f_17850(t7,t1,((C_word*)t6)[1],((C_word*)t0)[3]);}
else{
t7=(C_word)C_i_car(t2);
t8=C_set_block_item(t5,0,t7);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17898,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t5,a[6]=t6,tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_caddr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_numberp(t10))){
t11=t9;
f_17898(2,t11,(C_word)C_i_caddr(((C_word*)t5)[1]));}
else{
t11=(C_word)C_i_caddr(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 16   next-1");
f_13006(t9,t11);}}}

/* k17896 in do2521 in select-output in next-in-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17898,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_i_set_car(t4,((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_17862(t7,((C_word*)t0)[2],t6,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* k17916 in select-output in next-in-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17918,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17923,a[2]=t3,a[3]=t1,a[4]=((C_word)li204),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_17923(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2531 in k17916 in select-output in next-in-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_17923(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17923,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cadr(t3);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[3],t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_car(t5));}
else{
t5=(C_word)C_i_cdr(t2);
t8=t1;
t9=t5;
t1=t8;
t2=t9;
goto loop;}}

/* make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17360(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr3r,(void*)f_17360r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_17360r(t0,t1,t2,t3);}}

static void C_ccall f_17360r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a=C_alloc(22);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17364,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17841,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17287,a[2]=t7,a[3]=t10,a[4]=t8,a[5]=((C_word)li202),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_17287(t12,t6,t7,C_SCHEME_FALSE,t8,C_SCHEME_FALSE);}
else{
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[395],((C_word*)t4)[1]);}}

/* do2422 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_17287(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17287,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_i_car(t2);
t10=t9;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17132,a[2]=((C_word*)t0)[2],a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t7,a[8]=t8,a[9]=t11,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t11)[1]))){
t13=t12;
f_17132(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 16   error");
t13=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[394],((C_word*)t11)[1]);}}}

/* k17130 in do2422 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17132,2,t0,t1);}
t2=(C_word)C_i_member(lf[390],((C_word*)((C_word*)t0)[9])[1]);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17138,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
if(C_truep(t2)){
t4=t3;
f_17138(2,t4,t2);}
else{
t4=(C_word)C_i_member(lf[392],((C_word*)((C_word*)t0)[9])[1]);
if(C_truep(t4)){
t5=t3;
f_17138(2,t5,t4);}
else{
C_trace("ChickenBridge.scm: 16   error");
t5=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[393],((C_word*)((C_word*)t0)[9])[1]);}}}

/* k17136 in k17130 in do2422 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17138,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t11=t10;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17150,a[2]=t3,a[3]=t9,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=t7,tmp=(C_word)a,a+=13,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17223,a[2]=t15,a[3]=t12,a[4]=t5,a[5]=t10,a[6]=t3,a[7]=((C_word*)t0)[2],a[8]=((C_word)li201),tmp=(C_word)a,a+=9,tmp));
t17=((C_word*)t15)[1];
f_17223(t17,t13);}

/* do2400 in k17136 in k17130 in do2422 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_17223(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_17223,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]))){
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[7])+1,t7);
t14=t1;
t1=t14;
goto loop;}}

/* k17148 in k17136 in k17130 in do2422 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17150,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_17153,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17166,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[12],a[4]=((C_word)li200),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t4=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* a17165 in k17148 in k17136 in k17130 in do2422 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17166(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17166,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17170,a[2]=t8,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t6,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t10=(C_word)C_i_car(t2);
t11=C_set_block_item(t4,0,t10);
t12=(C_word)C_i_cdr(t2);
t13=(C_word)C_i_nullp(t12);
t14=(C_truep(t13)?C_fix(1):(C_word)C_i_cadr(t2));
t15=C_set_block_item(t8,0,t14);
t16=C_set_block_item(t6,0,((C_word*)t8)[1]);
if(C_truep((C_word)C_i_numberp(((C_word*)t8)[1]))){
t17=t9;
f_17170(t17,C_SCHEME_UNDEFINED);}
else{
t17=C_set_block_item(t8,0,C_SCHEME_FALSE);
t18=t9;
f_17170(t18,t17);}}
else{
t10=C_set_block_item(t4,0,t2);
t11=C_set_block_item(t8,0,C_fix(1));
t12=C_set_block_item(t6,0,C_fix(1));
t13=t9;
f_17170(t13,t12);}}

/* k17168 in a17165 in k17148 in k17136 in k17130 in do2422 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_17170(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17170,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17173,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_truep(((C_word*)((C_word*)t0)[2])[1])?((C_word*)((C_word*)t0)[6])[1]:C_SCHEME_FALSE);
if(C_truep(t3)){
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=t2;
f_17173(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t5=t2;
f_17173(t5,t4);}}

/* k17171 in k17168 in a17165 in k17148 in k17136 in k17130 in do2422 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_17173(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17173,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k17151 in k17148 in k17136 in k17130 in do2422 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17153,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17164,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 16   reverse");
t3=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k17162 in k17151 in k17148 in k17136 in k17130 in do2422 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17164,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[10])[1],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[9])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17304,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t6=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t6)){
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],t8))){
t9=t5;
f_17304(2,t9,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 16   error");
t9=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,lf[391],((C_word*)t0)[2]);}}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_17304(2,t10,t9);}}

/* k17302 in k17162 in k17151 in k17148 in k17136 in k17130 in do2422 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17304,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=((C_word*)((C_word*)t0)[4])[1];
f_17287(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k17839 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17364(2,t3,t2);}

/* k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17364,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17367,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_17367(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[347]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17711,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 16   error");
t22=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[349],lf[347]);}
else{
t22=t21;
f_17711(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[350]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17746,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 16   error");
t23=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[349],lf[350]);}
else{
t23=t22;
f_17746(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[389]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17781,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 16   error");
t24=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[349],lf[389]);}
else{
t24=t23;
f_17781(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17810,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 16   error");
t24=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[353],((C_word*)t0)[4]);}
else{
t24=t23;
f_17810(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k17808 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17810,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17817,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17825,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17823 in k17808 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17817(2,t2,C_SCHEME_UNDEFINED);}}

/* k17815 in k17808 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17367(t5,t4);}

/* k17779 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17781,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17785,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_17785(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17783 in k17779 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17367(t7,t6);}

/* k17744 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17746,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17750,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_17750(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17748 in k17744 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17367(t7,t6);}

/* k17709 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17711,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17715,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_17715(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17713 in k17709 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17367(t7,t6);}

/* k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_17367(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17367,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17370,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_17370(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[347]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17576,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[347]);}
else{
t6=t5;
f_17576(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[350]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17611,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[350]);}
else{
t7=t6;
f_17611(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[389]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17646,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[389]);}
else{
t8=t7;
f_17646(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17675,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_17675(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k17673 in k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17675,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17682,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17690,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17688 in k17673 in k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17682(2,t2,C_SCHEME_UNDEFINED);}}

/* k17680 in k17673 in k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17370(t5,t4);}

/* k17644 in k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17646,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17650,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_17650(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17648 in k17644 in k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17370(t7,t6);}

/* k17609 in k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17611,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17615,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_17615(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17613 in k17609 in k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17370(t7,t6);}

/* k17574 in k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17576,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17580,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_17580(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17578 in k17574 in k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17370(t7,t6);}

/* k17368 in k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_17370(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17370,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17373,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_17373(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[347]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17441,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[347]);}
else{
t6=t5;
f_17441(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[350]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17476,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[350]);}
else{
t7=t6;
f_17476(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[389]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17511,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[389]);}
else{
t8=t7;
f_17511(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17540,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_17540(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k17538 in k17368 in k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17540,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17547,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17555,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17553 in k17538 in k17368 in k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17547(2,t2,C_SCHEME_UNDEFINED);}}

/* k17545 in k17538 in k17368 in k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17373(t5,t4);}

/* k17509 in k17368 in k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17511,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17515,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_17515(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17513 in k17509 in k17368 in k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17373(t7,t6);}

/* k17474 in k17368 in k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17476,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17480,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_17480(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17478 in k17474 in k17368 in k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17373(t7,t6);}

/* k17439 in k17368 in k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17441,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17445,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_17445(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17443 in k17439 in k17368 in k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17373(t7,t6);}

/* k17371 in k17368 in k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_17373(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17373,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17376,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_17376(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 16   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k17374 in k17371 in k17368 in k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17376,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17379,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 16   %alloc-pattern");
f_12655(t2);}

/* k17377 in k17374 in k17371 in k17368 in k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17379,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17385,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17412,a[2]=((C_word)li199),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   initialize-pattern");
f_12665(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[388],"next-in-markov"),t4);}

/* a17411 in k17377 in k17374 in k17371 in k17368 in k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17412(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17412,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17420,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12380(t4,t3);}

/* k17418 in a17411 in k17377 in k17374 in k17371 in k17368 in k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k17383 in k17377 in k17374 in k17371 in k17368 in k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17385,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17388,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_17388(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17398,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_i_car(t4);
t6=(C_word)C_i_length(t5);
C_trace("ChickenBridge.scm: 16   make-list");
t7=C_retrieve(lf[73]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t3,t6,lf[387]);}}

/* k17396 in k17383 in k17377 in k17374 in k17371 in k17368 in k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17388(t3,t2);}

/* k17386 in k17383 in k17377 in k17374 in k17371 in k17368 in k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_17388(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17388,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17391,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-cache-set!");
f_12587(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k17389 in k17386 in k17383 in k17377 in k17374 in k17371 in k17368 in k17365 in k17362 in make-markov in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16927(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16927,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16931,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12380(t3,t2);}

/* k16929 in next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16931,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16934,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   pattern-period");
f_12434(t2,((C_word*)t0)[2]);}

/* k16932 in k16929 in next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16934,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16937,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   pattern-flags");
f_12362(t2,((C_word*)t0)[2]);}

/* k16935 in k16932 in k16929 in next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16937,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16943,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17106,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   logtest");
t5=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t1,C_fix(4));}

/* k17104 in k16935 in k16932 in k16929 in next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17106,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_16943(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17119,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   period-count");
f_12212(t2,((C_word*)t0)[2]);}}

/* k17117 in k17104 in k16935 in k16932 in k16929 in next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17119,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17123,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   period-length");
f_12230(t2,((C_word*)t0)[2]);}

/* k17121 in k17117 in k17104 in k16935 in k16932 in k16929 in next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[4],t1))){
C_trace("ChickenBridge.scm: 16   recalc-weightings");
f_16827(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t2=((C_word*)t0)[3];
f_16943(2,t2,C_SCHEME_UNDEFINED);}}

/* k16941 in k16935 in k16932 in k16929 in next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16943,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16949,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
t3=t2;
f_16949(t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17080,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17099,a[2]=((C_word*)t0)[4],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   random-item-count");
f_15977(t4,((C_word*)t0)[4]);}}

/* k17097 in k16941 in k16935 in k16932 in k16929 in next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17099,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
C_trace("ChickenBridge.scm: 16   random-item-count-set!");
f_15968(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k17078 in k16941 in k16935 in k16932 in k16929 in next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17080,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17087,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   random-item-count");
f_15977(t2,((C_word*)t0)[2]);}

/* k17085 in k17078 in k16941 in k16935 in k16932 in k16929 in next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17087,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17091,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   random-item-min");
f_15941(t2,((C_word*)t0)[2]);}

/* k17089 in k17085 in k17078 in k16941 in k16935 in k16932 in k16929 in next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_16949(t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k16947 in k16941 in k16935 in k16932 in k16929 in next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_16949(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16949,NULL,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   random-item-datum");
f_15887(((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16955,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   pattern-cache");
f_12596(t2,((C_word*)t0)[2]);}}

/* k16953 in k16947 in k16941 in k16935 in k16932 in k16929 in next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16955,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16959,a[2]=((C_word)li195),tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16997,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17039,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=t2,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 16   pick");
f_16959(t7,t2,t1);}

/* k17037 in k16953 in k16947 in k16941 in k16935 in k16932 in k16929 in next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17039,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17041,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word)li197),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_17041(t5,((C_word*)t0)[2],t1);}

/* do2374 in k17037 in k16953 in k16947 in k16941 in k16935 in k16932 in k16929 in next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_17041(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17041,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17060,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17063,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   random-item-max");
f_15959(t4,t2);}

/* k17061 in do2374 in k17037 in k16953 in k16947 in k16941 in k16935 in k16932 in k16929 in next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17063,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17070,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   random-item-count");
f_15977(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_17060(t2,C_SCHEME_FALSE);}}

/* k17068 in k17061 in do2374 in k17037 in k16953 in k16947 in k16941 in k16935 in k16932 in k16929 in next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17070,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17074,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   random-item-max");
f_15959(t2,((C_word*)t0)[2]);}

/* k17072 in k17068 in k17061 in do2374 in k17037 in k16953 in k16947 in k16941 in k16935 in k16932 in k16929 in next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_17060(t2,(C_word)C_i_nequalp(((C_word*)t0)[2],t1));}

/* k17058 in do2374 in k17037 in k16953 in k16947 in k16941 in k16935 in k16932 in k16929 in next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_17060(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17060,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17056,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pick");
f_16959(t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)t0)[2]);
t3=((C_word*)t0)[7];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k17054 in k17058 in do2374 in k17037 in k16953 in k16947 in k16941 in k16935 in k16932 in k16929 in next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_17041(t2,((C_word*)t0)[2],t1);}

/* k16995 in k16953 in k16947 in k16941 in k16935 in k16932 in k16929 in next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16997,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17000,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[3]))){
t3=t2;
f_17000(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17014,a[2]=t4,a[3]=((C_word)li196),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_17014(t6,t2,((C_word*)t0)[2]);}}

/* do2378 in k16995 in k16953 in k16947 in k16941 in k16935 in k16932 in k16929 in next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_17014(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17014,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17024,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 16   random-item-count-set!");
f_15968(t3,t4,C_fix(0));}}

/* k17022 in do2378 in k16995 in k16953 in k16947 in k16941 in k16935 in k16932 in k16929 in next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_17014(t3,((C_word*)t0)[2],t2);}

/* k16998 in k16995 in k16953 in k16947 in k16941 in k16935 in k16932 in k16929 in next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_17000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 16   random-item-datum");
f_15887(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* pick in k16953 in k16947 in k16941 in k16935 in k16932 in k16929 in next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_16959(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16959,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16967,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   ffi_ranfloat");
f_7118(t4,t3);}

/* k16965 in pick in k16953 in k16947 in k16941 in k16935 in k16932 in k16929 in next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16967,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16969,a[2]=t3,a[3]=((C_word)li194),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_16969(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do2369 in k16965 in pick in k16953 in k16947 in k16941 in k16935 in k16932 in k16929 in next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_16969(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16969,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16990,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 16   random-item-index");
f_15905(t4,t5);}

/* k16988 in do2369 in k16965 in pick in k16953 in k16947 in k16941 in k16935 in k16932 in k16929 in next-in-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[5],t1))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_16969(t3,((C_word*)t0)[4],t2,((C_word*)t0)[5]);}}

/* recalc-weightings in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_16827(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16827,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16925,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12380(t4,t2);}

/* k16923 in recalc-weightings in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16925,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=lf[385];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16834,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16884,a[2]=t7,a[3]=t4,a[4]=((C_word)li192),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_16884(t9,t5,t2);}

/* do2341 in k16923 in recalc-weightings in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_16884(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16884,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16913,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16917,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 16   random-item-weight");
f_15923(t4,t5);}}

/* k16915 in do2341 in k16923 in recalc-weightings in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   next-1");
f_13006(((C_word*)t0)[2],t1);}

/* k16911 in do2341 in k16923 in recalc-weightings in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16913,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16898,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 16   random-item-index-set!");
f_15896(t4,t5,((C_word*)((C_word*)t0)[5])[1]);}

/* k16896 in k16911 in do2341 in k16923 in recalc-weightings in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_16884(t3,((C_word*)t0)[2],t2);}

/* k16832 in k16923 in recalc-weightings in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16834,2,t0,t1);}
if(C_truep(((C_word*)t0)[6])){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16842,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word)li191),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_16842(t5,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 16   pattern-cache-set!");
f_12587(((C_word*)t0)[3],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);}}

/* do2347 in k16832 in k16923 in recalc-weightings in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_16842(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16842,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 16   pattern-cache-set!");
f_12587(t1,((C_word*)t0)[4],((C_word*)t6)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16875,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t6,a[6]=t5,a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
t8=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 16   random-item-index");
f_15905(t7,t8);}}

/* k16873 in do2347 in k16832 in k16923 in recalc-weightings in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16875,2,t0,t1);}
t2=(C_word)C_a_i_divide(&a,2,t1,((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16859,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 16   random-item-index-set!");
f_15896(t4,t5,((C_word*)((C_word*)t0)[6])[1]);}

/* k16857 in k16873 in do2347 in k16832 in k16923 in recalc-weightings in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_16842(t4,((C_word*)t0)[2],t3,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16060(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_16060r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_16060r(t0,t1,t2,t3);}}

static void C_ccall f_16060r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(7);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16064,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16377,a[2]=((C_word)li189),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t6=*((C_word*)lf[384]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,t2);}

/* %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16377(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16377,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16384,a[2]=t4,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t8=(C_word)C_i_car(t2);
t9=C_set_block_item(t4,0,t8);
t10=(C_word)C_i_cdr(t2);
t11=C_set_block_item(t6,0,t10);
t12=t7;
f_16384(t12,t11);}
else{
t8=C_set_block_item(t4,0,t2);
t9=t7;
f_16384(t9,t8);}}

/* k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_16384(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16384,NULL,2,t0,t1);}
t2=C_fix(1);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)((C_word*)t0)[4])[1];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16387,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t7,a[9]=t5,a[10]=t3,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_16387(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[381]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16690,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 16   error");
t22=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[349],lf[381]);}
else{
t22=t21;
f_16690(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[382]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16725,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 16   error");
t23=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[349],lf[382]);}
else{
t23=t22;
f_16725(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[383]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16760,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 16   error");
t24=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[349],lf[383]);}
else{
t24=t23;
f_16760(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16789,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 16   error");
t24=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[353],((C_word*)((C_word*)t0)[4])[1]);}
else{
t24=t23;
f_16789(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k16787 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16789,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16796,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16804,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16802 in k16787 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16796(2,t2,C_SCHEME_UNDEFINED);}}

/* k16794 in k16787 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16387(t5,t4);}

/* k16758 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16760,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16764,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16764(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16762 in k16758 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16387(t7,t6);}

/* k16723 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16725,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16729,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16729(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16727 in k16723 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16387(t7,t6);}

/* k16688 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16690,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16694,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16694(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16692 in k16688 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16387(t7,t6);}

/* k16385 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_16387(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16387,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16390,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_16390(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[381]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16555,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[381]);}
else{
t6=t5;
f_16555(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[382]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16590,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[382]);}
else{
t7=t6;
f_16590(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[383]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16625,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[383]);}
else{
t8=t7;
f_16625(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16654,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_16654(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k16652 in k16385 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16654,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16661,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16669,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16667 in k16652 in k16385 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16661(2,t2,C_SCHEME_UNDEFINED);}}

/* k16659 in k16652 in k16385 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16390(t5,t4);}

/* k16623 in k16385 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16625,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16629,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16629(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16627 in k16623 in k16385 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16390(t7,t6);}

/* k16588 in k16385 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16590,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16594,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16594(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16592 in k16588 in k16385 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16390(t7,t6);}

/* k16553 in k16385 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16555,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16559,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16559(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16557 in k16553 in k16385 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16390(t7,t6);}

/* k16388 in k16385 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_16390(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16390,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16393,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_16393(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[381]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16420,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[381]);}
else{
t6=t5;
f_16420(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[382]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16455,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[382]);}
else{
t7=t6;
f_16455(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[383]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16490,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[383]);}
else{
t8=t7;
f_16490(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16519,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_16519(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k16517 in k16388 in k16385 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16519,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16526,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16534,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16532 in k16517 in k16388 in k16385 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16526(2,t2,C_SCHEME_UNDEFINED);}}

/* k16524 in k16517 in k16388 in k16385 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16393(t5,t4);}

/* k16488 in k16388 in k16385 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16490,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16494,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16494(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16492 in k16488 in k16388 in k16385 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16393(t7,t6);}

/* k16453 in k16388 in k16385 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16455,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16459,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16459(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16457 in k16453 in k16388 in k16385 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16393(t7,t6);}

/* k16418 in k16388 in k16385 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16420,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16424,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16424(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16422 in k16418 in k16388 in k16385 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16393(t7,t6);}

/* k16391 in k16388 in k16385 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_16393(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16393,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16396,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_16396(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 16   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)((C_word*)t0)[2])[1]);}}

/* k16394 in k16391 in k16388 in k16385 in k16382 in %make-random-item in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16396,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=((C_word*)((C_word*)t0)[5])[1];
t4=((C_word*)((C_word*)t0)[4])[1];
t5=((C_word*)((C_word*)t0)[3])[1];
t6=((C_word*)((C_word*)t0)[2])[1];
t7=t2;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,9,lf[370],t3,C_SCHEME_FALSE,t4,t5,t6,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16064,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16067,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   %alloc-pattern");
f_12655(t2);}

/* k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16067,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)t0)[4]);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_TRUE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16073,a[2]=t10,a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t4,a[9]=t2,a[10]=t8,tmp=(C_word)a,a+=11,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16341,a[2]=t8,a[3]=t6,a[4]=((C_word)li188),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t13=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t11,t12,((C_word*)t0)[4]);}

/* a16340 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16341(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16341,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16345,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   random-item-min");
f_15941(t3,t2);}

/* k16343 in a16340 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16345,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16348,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   random-item-max");
f_15959(t2,((C_word*)t0)[2]);}

/* k16346 in k16343 in a16340 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16348,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16351,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   random-item-weight");
f_15923(t2,((C_word*)t0)[2]);}

/* k16349 in k16346 in k16343 in a16340 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16351,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16354,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   random-item-datum");
f_15887(t2,((C_word*)t0)[2]);}

/* k16352 in k16349 in k16346 in k16343 in a16340 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16354,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16357,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16367,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern?");
f_12347(t3,t1);}

/* k16365 in k16352 in k16349 in k16346 in k16343 in a16340 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16367,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_16357(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_16357(t2,C_SCHEME_UNDEFINED);}}

/* k16355 in k16352 in k16349 in k16346 in k16343 in a16340 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_16357(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_numberp(((C_word*)t0)[4]))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k16071 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16073,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9]);
t3=(C_truep(t2)?C_fix(1):((C_word*)t0)[9]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_16080,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16336,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   logior");
t7=C_retrieve(lf[329]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)((C_word*)t0)[2])[1],C_fix(4));}
else{
t6=t5;
f_16080(t6,C_SCHEME_UNDEFINED);}}

/* k16334 in k16071 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16080(t3,t2);}

/* k16078 in k16071 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_16080(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[50],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16080,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[9];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_16083,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[9],a[6]=t11,a[7]=((C_word*)t0)[2],a[8]=((C_word*)t0)[3],a[9]=((C_word*)t0)[4],a[10]=t5,a[11]=t3,a[12]=((C_word*)t0)[5],a[13]=((C_word*)t0)[6],a[14]=((C_word*)t0)[7],a[15]=((C_word*)t0)[8],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_16083(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[347]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16247,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 16   error");
t18=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[349],lf[347]);}
else{
t18=t17;
f_16247(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[350]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16282,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 16   error");
t19=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[349],lf[350]);}
else{
t19=t18;
f_16282(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16311,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 16   error");
t19=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[353],((C_word*)t0)[9]);}
else{
t19=t18;
f_16311(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k16309 in k16078 in k16071 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16311,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16318,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16326,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16324 in k16309 in k16078 in k16071 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16318(2,t2,C_SCHEME_UNDEFINED);}}

/* k16316 in k16309 in k16078 in k16071 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16083(t5,t4);}

/* k16280 in k16078 in k16071 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16282,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16286,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_16286(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16284 in k16280 in k16078 in k16071 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16083(t7,t6);}

/* k16245 in k16078 in k16071 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16247,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16251,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_16251(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16249 in k16245 in k16078 in k16071 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16083(t7,t6);}

/* k16081 in k16078 in k16071 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_16083(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16083,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16086,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_16086(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[347]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16147,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[347]);}
else{
t6=t5;
f_16147(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[350]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16182,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[350]);}
else{
t7=t6;
f_16182(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16211,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[353],((C_word*)t0)[5]);}
else{
t7=t6;
f_16211(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k16209 in k16081 in k16078 in k16071 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16211,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16218,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16226,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16224 in k16209 in k16081 in k16078 in k16071 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16218(2,t2,C_SCHEME_UNDEFINED);}}

/* k16216 in k16209 in k16081 in k16078 in k16071 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16086(t5,t4);}

/* k16180 in k16081 in k16078 in k16071 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16182,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16186,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_16186(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16184 in k16180 in k16081 in k16078 in k16071 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16086(t7,t6);}

/* k16145 in k16081 in k16078 in k16071 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16147,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16151,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_16151(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16149 in k16145 in k16081 in k16078 in k16071 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16086(t7,t6);}

/* k16084 in k16081 in k16078 in k16071 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_16086(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16086,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16089,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_16089(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 16   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k16087 in k16084 in k16081 in k16078 in k16071 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16089,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16092,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16104,a[2]=((C_word)li187),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   initialize-pattern");
f_12665(t2,((C_word*)t0)[9],t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_retrieve2(lf[380],"next-in-weighting"),t4);}

/* a16103 in k16087 in k16084 in k16081 in k16078 in k16071 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16104(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16104,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16110,a[2]=t2,a[3]=((C_word)li186),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16126,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12380(t5,t3);}

/* k16124 in a16103 in k16087 in k16084 in k16081 in k16078 in k16071 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a16109 in a16103 in k16087 in k16084 in k16081 in k16078 in k16071 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16110(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16110,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16118,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   random-item-datum");
f_15887(t3,t2);}

/* k16116 in a16109 in a16103 in k16087 in k16084 in k16081 in k16078 in k16071 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   fn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k16090 in k16087 in k16084 in k16081 in k16078 in k16071 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16092,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16095,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 16   recalc-weightings");
f_16827(t2,((C_word*)t0)[3],C_SCHEME_TRUE);}
else{
t3=t2;
f_16095(2,t3,C_SCHEME_UNDEFINED);}}

/* k16093 in k16090 in k16087 in k16084 in k16081 in k16078 in k16071 in k16065 in k16062 in make-weighting in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_16095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* random-item-count in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_15977(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15977,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[370]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* random-item-count-set! in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_15968(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15968,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[370]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t5=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* random-item-max in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_15959(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15959,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[370]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* random-item-min in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_15941(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15941,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[370]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* random-item-weight in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_15923(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15923,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[370]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* random-item-index in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_15905(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15905,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[370]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* random-item-index-set! in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_15896(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15896,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[370]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t5=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* random-item-datum in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_15887(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15887,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[370]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15665(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15665,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15668,a[2]=((C_word)li176),tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15715,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12380(t4,t2);}

/* k15713 in next-in-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15715,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15718,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15741,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15860,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   pattern-cache");
f_12596(t6,((C_word*)t0)[2]);}
else{
t4=t2;
f_15718(t4,C_SCHEME_UNDEFINED);}}

/* k15858 in k15713 in next-in-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   next-1");
f_13006(((C_word*)t0)[2],t1);}

/* k15739 in k15713 in next-in-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15741,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15748,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t1))){
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_pairp(t3))){
t4=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_cdddr(t1);
if(C_truep((C_word)C_i_pairp(t5))){
C_apply(5,0,t2,((C_word*)t0)[4],((C_word*)t0)[3],t1);}
else{
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_cadr(t1);
t8=(C_word)C_i_caddr(t1);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15795,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=((C_word*)t0)[4],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 16   pattern-length");
f_12398(t9,((C_word*)t0)[2]);}}
else{
t5=(C_word)C_i_car(t1);
t6=(C_word)C_i_cadr(t1);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15822,a[2]=t6,a[3]=t5,a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 16   pattern-length");
f_12398(t7,((C_word*)t0)[2]);}}
else{
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15841,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   pattern-length");
f_12398(t5,((C_word*)t0)[2]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15856,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   pattern-length");
f_12398(t3,((C_word*)t0)[2]);}}

/* k15854 in k15739 in k15713 in next-in-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15856,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 16   rotate-items");
t3=((C_word*)t0)[5];
f_15668(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k15839 in k15739 in k15713 in next-in-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15841,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 16   rotate-items");
t3=((C_word*)t0)[5];
f_15668(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k15820 in k15739 in k15713 in next-in-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15822,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 16   rotate-items");
t3=((C_word*)t0)[6];
f_15668(7,t3,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),t2);}

/* k15793 in k15739 in k15713 in next-in-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15795,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[8]);
t3=(C_word)C_a_i_minus(&a,2,t1,t2);
C_trace("ChickenBridge.scm: 16   rotate-items");
t4=((C_word*)t0)[7];
f_15668(7,t4,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k15746 in k15739 in k15713 in next-in-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_15718(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k15716 in k15713 in next-in-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_15718(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[3]);
t5=(C_word)C_i_set_cdr(((C_word*)t0)[3],t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t3);}

/* rotate-items in next-in-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15668(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[10],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_15668,7,t0,t1,t2,t3,t4,t5,t6);}
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15674,a[2]=t8,a[3]=t4,a[4]=t5,a[5]=t2,a[6]=t6,a[7]=((C_word)li175),tmp=(C_word)a,a+=8,tmp));
t10=((C_word*)t8)[1];
f_15674(t10,t1,t3);}

/* do2110 in rotate-items in next-in-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_15674(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15674,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[6]))){
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[4]);
t5=(C_word)C_i_list_ref(((C_word*)t0)[5],t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15690,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 16   list-set!");
t7=C_retrieve(lf[6]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t6,((C_word*)t0)[5],t2,t5);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}}

/* k15688 in do2110 in rotate-items in next-in-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15690,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15693,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 16   list-set!");
t4=C_retrieve(lf[6]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,((C_word*)t0)[3],t3,((C_word*)t0)[2]);}

/* k15691 in k15688 in do2110 in rotate-items in next-in-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15693,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_15674(t3,((C_word*)t0)[2],t2);}

/* make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15191(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_15191r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15191r(t0,t1,t2,t3);}}

static void C_ccall f_15191r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15195,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15655,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   append");
t7=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_15195(t8,t7);}}

/* k15653 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15195(t3,t2);}

/* k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_15195(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15195,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_15198,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_15198(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[347]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15528,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 16   error");
t22=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[349],lf[347]);}
else{
t22=t21;
f_15528(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[350]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15563,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 16   error");
t23=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[349],lf[350]);}
else{
t23=t22;
f_15563(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[368]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15598,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 16   error");
t24=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[349],lf[368]);}
else{
t24=t23;
f_15598(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15627,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 16   error");
t24=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[353],((C_word*)t0)[4]);}
else{
t24=t23;
f_15627(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k15625 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15627(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15627,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15634,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15642,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15640 in k15625 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15634(2,t2,C_SCHEME_UNDEFINED);}}

/* k15632 in k15625 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15198(t5,t4);}

/* k15596 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15598,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15602,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_15602(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15600 in k15596 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15198(t7,t6);}

/* k15561 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15563,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15567,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_15567(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15565 in k15561 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15198(t7,t6);}

/* k15526 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15528,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15532,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_15532(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15530 in k15526 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15198(t7,t6);}

/* k15196 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_15198(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15198,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_15201,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_15201(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[347]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15393,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[347]);}
else{
t6=t5;
f_15393(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[350]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15428,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[350]);}
else{
t7=t6;
f_15428(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[368]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15463,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[368]);}
else{
t8=t7;
f_15463(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15492,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_15492(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k15490 in k15196 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15492,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15499,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15507,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15505 in k15490 in k15196 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15499(2,t2,C_SCHEME_UNDEFINED);}}

/* k15497 in k15490 in k15196 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15201(t5,t4);}

/* k15461 in k15196 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15463,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15467,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_15467(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15465 in k15461 in k15196 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15201(t7,t6);}

/* k15426 in k15196 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15428,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15432,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_15432(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15430 in k15426 in k15196 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15201(t7,t6);}

/* k15391 in k15196 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15393,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15397,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_15397(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15395 in k15391 in k15196 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15201(t7,t6);}

/* k15199 in k15196 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_15201(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15201,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15204,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_15204(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[347]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15258,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[347]);}
else{
t6=t5;
f_15258(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[350]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15293,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[350]);}
else{
t7=t6;
f_15293(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[368]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15328,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[368]);}
else{
t8=t7;
f_15328(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15357,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_15357(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k15355 in k15199 in k15196 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15357,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15364,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15372,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15370 in k15355 in k15199 in k15196 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15364(2,t2,C_SCHEME_UNDEFINED);}}

/* k15362 in k15355 in k15199 in k15196 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15204(t5,t4);}

/* k15326 in k15199 in k15196 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15328,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15332,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_15332(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15330 in k15326 in k15199 in k15196 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15204(t7,t6);}

/* k15291 in k15199 in k15196 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15293,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15297,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_15297(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15295 in k15291 in k15199 in k15196 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15204(t7,t6);}

/* k15256 in k15199 in k15196 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15258,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15262,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_15262(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15260 in k15256 in k15199 in k15196 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15204(t7,t6);}

/* k15202 in k15199 in k15196 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_15204(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15204,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15207,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15207(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 16   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k15205 in k15202 in k15199 in k15196 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15207,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15210,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 16   %alloc-pattern");
f_12655(t2);}

/* k15208 in k15205 in k15202 in k15199 in k15196 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15210,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15216,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15225,a[2]=((C_word)li173),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   initialize-pattern");
f_12665(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[367],"next-in-rotation"),t5);}

/* a15224 in k15208 in k15205 in k15202 in k15199 in k15196 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15225(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15225,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15237,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12380(t4,t3);}

/* k15235 in a15224 in k15208 in k15205 in k15202 in k15199 in k15196 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15214 in k15208 in k15205 in k15202 in k15199 in k15196 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15216,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15219,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-cache-set!");
f_12587(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k15217 in k15214 in k15208 in k15205 in k15202 in k15199 in k15196 in k15193 in make-rotation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15115(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15115,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15119,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12380(t3,t2);}

/* k15117 in next-in-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15119,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15122,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15138,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-length");
f_12398(t4,((C_word*)t0)[2]);}
else{
t4=t2;
f_15122(2,t4,C_SCHEME_UNDEFINED);}}

/* k15136 in k15117 in next-in-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15138,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15148,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   ffi_ranint");
f_7111(t3,t1);}

/* k15146 in k15136 in k15117 in next-in-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15148,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15150,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word)li171),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_15150(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do2010 in k15146 in k15136 in k15117 in next-in-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_15150(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15150,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[5]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)t0)[3]));}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15167,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t5,a[6]=t1,a[7]=((C_word*)t0)[2],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 16   list-set!");
t10=C_retrieve(lf[6]);
((C_proc5)C_retrieve_proc(t10))(5,t10,t8,((C_word*)t0)[3],t2,t9);}}

/* k15165 in do2010 in k15146 in k15136 in k15117 in next-in-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15167,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15170,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 16   list-set!");
t3=C_retrieve(lf[6]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k15168 in k15165 in do2010 in k15146 in k15136 in k15117 in next-in-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15170,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15181,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   ffi_ranint");
f_7111(t3,((C_word*)t0)[2]);}

/* k15179 in k15168 in k15165 in do2010 in k15146 in k15136 in k15117 in next-in-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_15150(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k15120 in k15117 in next-in-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14852(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_14852r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_14852r(t0,t1,t2,t3);}}

static void C_ccall f_14852r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14856,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15105,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   append");
t7=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_14856(t8,t7);}}

/* k15103 in make-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14856(t3,t2);}

/* k14854 in make-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_14856(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14856,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14859,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_14859(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[347]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15013,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 16   error");
t18=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[349],lf[347]);}
else{
t18=t17;
f_15013(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[350]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15048,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 16   error");
t19=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[349],lf[350]);}
else{
t19=t18;
f_15048(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15077,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 16   error");
t19=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[353],((C_word*)t0)[4]);}
else{
t19=t18;
f_15077(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k15075 in k14854 in make-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15077,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15084,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15092,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15090 in k15075 in k14854 in make-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15084(2,t2,C_SCHEME_UNDEFINED);}}

/* k15082 in k15075 in k14854 in make-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14859(t5,t4);}

/* k15046 in k14854 in make-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15048,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15052,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_15052(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15050 in k15046 in k14854 in make-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15052(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14859(t7,t6);}

/* k15011 in k14854 in make-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15013,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15017,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_15017(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15015 in k15011 in k14854 in make-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_15017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14859(t7,t6);}

/* k14857 in k14854 in make-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_14859(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14859,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14862,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_14862(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[347]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14913,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[347]);}
else{
t6=t5;
f_14913(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[350]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14948,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[350]);}
else{
t7=t6;
f_14948(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14977,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[353],((C_word*)t0)[5]);}
else{
t7=t6;
f_14977(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k14975 in k14857 in k14854 in make-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14977,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14984,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14992,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14990 in k14975 in k14857 in k14854 in make-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14984(2,t2,C_SCHEME_UNDEFINED);}}

/* k14982 in k14975 in k14857 in k14854 in make-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14862(t5,t4);}

/* k14946 in k14857 in k14854 in make-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14948,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14952,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_14952(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14950 in k14946 in k14857 in k14854 in make-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14862(t7,t6);}

/* k14911 in k14857 in k14854 in make-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14913,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14917,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_14917(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14915 in k14911 in k14857 in k14854 in make-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14862(t7,t6);}

/* k14860 in k14857 in k14854 in make-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_14862(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14862,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14865,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_14865(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 16   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k14863 in k14860 in k14857 in k14854 in make-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14865,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14868,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   %alloc-pattern");
f_12655(t2);}

/* k14866 in k14863 in k14860 in k14857 in k14854 in make-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14868,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14874,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14880,a[2]=((C_word)li169),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   initialize-pattern");
f_12665(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[365],"next-in-heap"),t5);}

/* a14879 in k14866 in k14863 in k14860 in k14857 in k14854 in make-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14880(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14880,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14892,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12380(t4,t3);}

/* k14890 in a14879 in k14866 in k14863 in k14860 in k14857 in k14854 in make-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k14872 in k14866 in k14863 in k14860 in k14857 in k14854 in make-heap in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-line in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14816(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14816,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14820,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12380(t3,t2);}

/* k14818 in next-in-line in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14820,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14829,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14836,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   pattern-period");
f_12434(t4,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(t1);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14842,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 16   pattern-data-set!");
f_12371(t4,((C_word*)t0)[2],t5);}}

/* k14840 in k14818 in next-in-line in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k14834 in k14818 in next-in-line in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   period-count-set!");
f_12203(((C_word*)t0)[2],t1,C_fix(1));}

/* k14827 in k14818 in next-in-line in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}

/* make-line in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14569(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_14569r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_14569r(t0,t1,t2,t3);}}

static void C_ccall f_14569r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14573,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_14573(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_14573(t8,t7);}}

/* k14571 in make-line in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_14573(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14573,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14576,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_14576(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[347]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14722,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 16   error");
t18=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[349],lf[347]);}
else{
t18=t17;
f_14722(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[350]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14757,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 16   error");
t19=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[349],lf[350]);}
else{
t19=t18;
f_14757(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14786,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 16   error");
t19=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[353],((C_word*)t0)[4]);}
else{
t19=t18;
f_14786(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k14784 in k14571 in make-line in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14786,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14793,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14801,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14799 in k14784 in k14571 in make-line in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14793(2,t2,C_SCHEME_UNDEFINED);}}

/* k14791 in k14784 in k14571 in make-line in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14576(t5,t4);}

/* k14755 in k14571 in make-line in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14757,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14761,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_14761(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14759 in k14755 in k14571 in make-line in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14576(t7,t6);}

/* k14720 in k14571 in make-line in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14722,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14726,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_14726(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14724 in k14720 in k14571 in make-line in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14576(t7,t6);}

/* k14574 in k14571 in make-line in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_14576(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14576,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14579,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_14579(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[347]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14622,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[347]);}
else{
t6=t5;
f_14622(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[350]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14657,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[350]);}
else{
t7=t6;
f_14657(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14686,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[353],((C_word*)t0)[5]);}
else{
t7=t6;
f_14686(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k14684 in k14574 in k14571 in make-line in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14686,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14693,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14701,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14699 in k14684 in k14574 in k14571 in make-line in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14693(2,t2,C_SCHEME_UNDEFINED);}}

/* k14691 in k14684 in k14574 in k14571 in make-line in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14579(t5,t4);}

/* k14655 in k14574 in k14571 in make-line in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14657,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14661,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_14661(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14659 in k14655 in k14574 in k14571 in make-line in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14579(t7,t6);}

/* k14620 in k14574 in k14571 in make-line in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14622,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14626,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_14626(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14624 in k14620 in k14574 in k14571 in make-line in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14579(t7,t6);}

/* k14577 in k14574 in k14571 in make-line in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_14579(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14579,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14582,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_14582(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 16   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k14580 in k14577 in k14574 in k14571 in make-line in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14582,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14585,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   %alloc-pattern");
f_12655(t2);}

/* k14583 in k14580 in k14577 in k14574 in k14571 in make-line in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14585,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14591,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14593,a[2]=((C_word)li166),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   initialize-pattern");
f_12665(t3,t1,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[363],"next-in-line"),t4);}

/* a14592 in k14583 in k14580 in k14577 in k14574 in k14571 in make-line in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14593(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14593,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14601,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12380(t4,t3);}

/* k14599 in a14592 in k14583 in k14580 in k14577 in k14574 in k14571 in make-line in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k14589 in k14583 in k14580 in k14577 in k14574 in k14571 in make-line in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14354(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14354,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14358,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-cache");
f_12596(t3,t2);}

/* k14356 in next-in-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14358,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[355]);
t4=(C_word)C_i_block_ref(t2,C_fix(1));
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14364,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t6,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],C_fix(0)))){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14388,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t9=t1;
t10=(C_word)C_i_check_structure(t9,lf[355]);
t11=(C_word)C_i_block_ref(t9,C_fix(5));
C_trace("ChickenBridge.scm: 16   next-1");
f_13006(t8,t11);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14567,a[2]=t7,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   palin-len");
f_13795(t8,t1);}}

/* k14565 in k14356 in next-in-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14567,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],t1))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14520,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   palin-inc-set!");
f_13804(t2,((C_word*)t0)[3],C_fix(-1));}
else{
t2=((C_word*)t0)[2];
f_14364(2,t2,C_SCHEME_UNDEFINED);}}

/* k14518 in k14565 in k14356 in next-in-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14520,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[355]);
t4=(C_word)C_i_block_ref(t2,C_fix(4));
t5=(C_word)C_eqp(t4,C_SCHEME_TRUE);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14532,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t5)){
t7=t6;
f_14532(t7,t5);}
else{
if(C_truep((C_word)C_i_pairp(t4))){
t7=(C_word)C_i_cdr(t4);
if(C_truep((C_word)C_i_pairp(t7))){
t8=(C_word)C_i_cadr(t4);
t9=t6;
f_14532(t9,(C_word)C_eqp(t8,C_SCHEME_TRUE));}
else{
t8=t6;
f_14532(t8,C_SCHEME_FALSE);}}
else{
t7=t6;
f_14532(t7,C_SCHEME_FALSE);}}}

/* k14530 in k14518 in k14565 in k14356 in next-in-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_14532(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14532,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(2));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_14364(2,t4,t3);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_14364(2,t4,t3);}}

/* k14386 in k14356 in next-in-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14388,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14391,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 16   palin-len");
f_13795(t2,((C_word*)t0)[2]);}

/* k14389 in k14386 in k14356 in next-in-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14391,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],C_fix(-2));
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14397,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t4=((C_word*)t0)[2];
t5=((C_word*)t0)[5];
t6=(C_word)C_i_check_structure(t4,lf[355]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t7=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t7+1)))(5,t7,t3,t4,C_fix(4),t5);}

/* k14395 in k14389 in k14386 in k14356 in next-in-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14397,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14400,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 16   palin-inc-set!");
f_13804(t2,((C_word*)t0)[2],C_fix(1));}

/* k14398 in k14395 in k14389 in k14386 in k14356 in next-in-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14400,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14403,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[6],C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14488,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t3)){
t5=t4;
f_14488(t5,t3);}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t5=(C_word)C_i_car(((C_word*)t0)[6]);
t6=t4;
f_14488(t6,(C_word)C_eqp(t5,C_SCHEME_TRUE));}
else{
t5=t4;
f_14488(t5,C_SCHEME_FALSE);}}}

/* k14486 in k14398 in k14395 in k14389 in k14386 in k14356 in next-in-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_14488(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
if(C_truep(((C_word*)t0)[4])){
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_14403(t3,t2);}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(1));
t3=((C_word*)t0)[2];
f_14403(t3,t2);}}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_14403(t3,t2);}}

/* k14401 in k14398 in k14395 in k14389 in k14386 in k14356 in next-in-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_14403(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14403,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14409,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14482,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   pattern-flags");
f_12362(t3,((C_word*)t0)[2]);}

/* k14480 in k14401 in k14398 in k14395 in k14389 in k14386 in k14356 in next-in-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   logtest");
t2=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(2));}

/* k14407 in k14401 in k14398 in k14395 in k14389 in k14386 in k14356 in next-in-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14409,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14412,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   pattern-period");
f_12434(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_14364(2,t2,C_SCHEME_UNDEFINED);}}

/* k14410 in k14407 in k14401 in k14398 in k14395 in k14389 in k14386 in k14356 in next-in-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14412,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],C_fix(2));
switch(((C_word*)t0)[4]){
case C_SCHEME_FALSE:
C_trace("ChickenBridge.scm: 16   period-count-set!");
f_12203(((C_word*)t0)[3],t1,t2);
case C_SCHEME_TRUE:
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(2)):(C_word)C_a_i_minus(&a,2,t2,C_fix(3)));
C_trace("ChickenBridge.scm: 16   period-count-set!");
f_12203(((C_word*)t0)[3],t1,t3);
default:
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[360]))){
t3=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 16   period-count-set!");
f_12203(((C_word*)t0)[3],t1,t3);}
else{
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[361]))){
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(1)):(C_word)C_a_i_minus(&a,2,t2,C_fix(2)));
C_trace("ChickenBridge.scm: 16   period-count-set!");
f_12203(((C_word*)t0)[3],t1,t3);}
else{
C_trace("ChickenBridge.scm: 16   period-count-set!");
f_12203(((C_word*)t0)[3],t1,t2);}}}}

/* k14362 in k14356 in next-in-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14364,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14367,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)t0)[2];
t4=(C_word)C_i_check_structure(t3,lf[355]);
t5=(C_word)C_i_block_ref(t3,C_fix(3));
t6=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],t5);
t7=((C_word*)t0)[2];
t8=(C_word)C_i_check_structure(t7,lf[355]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t9=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t9+1)))(5,t9,t2,t7,C_fix(1),t6);}

/* k14365 in k14362 in k14356 in next-in-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14367,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14374,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12380(t2,((C_word*)t0)[2]);}

/* k14372 in k14365 in k14362 in k14356 in next-in-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)((C_word*)t0)[2])[1]));}

/* make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13884(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_13884r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_13884r(t0,t1,t2,t3);}}

static void C_ccall f_13884r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13888,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_13888(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_13888(t8,t7);}}

/* k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_13888(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13888,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13891,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_13891(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[347]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14225,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 16   error");
t22=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[349],lf[347]);}
else{
t22=t21;
f_14225(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[350]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14260,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 16   error");
t23=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[349],lf[350]);}
else{
t23=t22;
f_14260(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[359]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14295,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 16   error");
t24=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[349],lf[359]);}
else{
t24=t23;
f_14295(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14324,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 16   error");
t24=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[353],((C_word*)t0)[4]);}
else{
t24=t23;
f_14324(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k14322 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14324,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14331,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14339,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14337 in k14322 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14331(2,t2,C_SCHEME_UNDEFINED);}}

/* k14329 in k14322 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13891(t5,t4);}

/* k14293 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14295,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14299,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_14299(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14297 in k14293 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13891(t7,t6);}

/* k14258 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14260,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14264,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_14264(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14262 in k14258 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13891(t7,t6);}

/* k14223 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14225,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14229,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_14229(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14227 in k14223 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13891(t7,t6);}

/* k13889 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_13891(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13891,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13894,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_13894(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[347]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14090,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[347]);}
else{
t6=t5;
f_14090(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[350]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14125,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[350]);}
else{
t7=t6;
f_14125(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[359]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14160,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[359]);}
else{
t8=t7;
f_14160(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14189,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_14189(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k14187 in k13889 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14189,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14196,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14204,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14202 in k14187 in k13889 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14196(2,t2,C_SCHEME_UNDEFINED);}}

/* k14194 in k14187 in k13889 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13894(t5,t4);}

/* k14158 in k13889 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14160,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14164,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_14164(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14162 in k14158 in k13889 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13894(t7,t6);}

/* k14123 in k13889 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14125,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14129,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_14129(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14127 in k14123 in k13889 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13894(t7,t6);}

/* k14088 in k13889 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14090,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14094,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_14094(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14092 in k14088 in k13889 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13894(t7,t6);}

/* k13892 in k13889 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_13894(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13894,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13897,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_13897(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[347]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13955,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[347]);}
else{
t6=t5;
f_13955(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[350]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13990,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[350]);}
else{
t7=t6;
f_13990(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[359]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14025,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[349],lf[359]);}
else{
t8=t7;
f_14025(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14054,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[353],((C_word*)t0)[6]);}
else{
t8=t7;
f_14054(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k14052 in k13892 in k13889 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14054,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14061,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14069,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14067 in k14052 in k13892 in k13889 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14061(2,t2,C_SCHEME_UNDEFINED);}}

/* k14059 in k14052 in k13892 in k13889 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13897(t5,t4);}

/* k14023 in k13892 in k13889 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14025,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14029,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_14029(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14027 in k14023 in k13892 in k13889 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_14029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13897(t7,t6);}

/* k13988 in k13892 in k13889 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13990,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13994,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_13994(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13992 in k13988 in k13892 in k13889 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13897(t7,t6);}

/* k13953 in k13892 in k13889 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13955,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13959,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_13959(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13957 in k13953 in k13892 in k13889 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13897(t7,t6);}

/* k13895 in k13892 in k13889 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_13897(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13897,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13900,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_13900(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 16   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k13898 in k13895 in k13892 in k13889 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13900,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13903,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 16   %alloc-pattern");
f_12655(t2);}

/* k13901 in k13898 in k13895 in k13892 in k13889 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13903,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13909,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,C_fix(2));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13926,a[2]=((C_word)li163),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   initialize-pattern");
f_12665(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t4,C_retrieve2(lf[358],"next-in-palindrome"),t5);}

/* a13925 in k13901 in k13898 in k13895 in k13892 in k13889 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13926(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13926,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13934,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12380(t4,t3);}

/* k13932 in a13925 in k13901 in k13898 in k13895 in k13892 in k13889 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k13907 in k13901 in k13898 in k13895 in k13892 in k13889 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13909,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13912,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_record(&a,6,lf[355],C_fix(-2),t3,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);
C_trace("ChickenBridge.scm: 16   pattern-cache-set!");
f_12587(t2,((C_word*)t0)[4],t5);}

/* k13910 in k13907 in k13901 in k13898 in k13895 in k13892 in k13889 in k13886 in make-palindrome in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* palin-inc-set! in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_13804(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13804,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[355]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t5=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* palin-len in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_13795(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13795,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[355]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* next-in-cycle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13723(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13723,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13727,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12380(t3,t2);}

/* k13725 in next-in-cycle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13727,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13730,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=t2;
f_13730(t5,(C_word)C_i_set_cdr(t1,t4));}
else{
t4=t2;
f_13730(t4,C_SCHEME_UNDEFINED);}}

/* k13728 in k13725 in next-in-cycle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_13730(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-cycle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13468(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_13468r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_13468r(t0,t1,t2,t3);}}

static void C_ccall f_13468r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13472,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_13472(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_13472(t8,t7);}}

/* k13470 in make-cycle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_13472(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13472,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13475,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_13475(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[347]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13629,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 16   error");
t18=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[349],lf[347]);}
else{
t18=t17;
f_13629(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[350]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13664,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 16   error");
t19=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[349],lf[350]);}
else{
t19=t18;
f_13664(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13693,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 16   error");
t19=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[353],((C_word*)t0)[4]);}
else{
t19=t18;
f_13693(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k13691 in k13470 in make-cycle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13693,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13700,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13708,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13706 in k13691 in k13470 in make-cycle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13700(2,t2,C_SCHEME_UNDEFINED);}}

/* k13698 in k13691 in k13470 in make-cycle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13475(t5,t4);}

/* k13662 in k13470 in make-cycle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13664,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13668,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_13668(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13666 in k13662 in k13470 in make-cycle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13475(t7,t6);}

/* k13627 in k13470 in make-cycle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13629,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13633,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_13633(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13631 in k13627 in k13470 in make-cycle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13475(t7,t6);}

/* k13473 in k13470 in make-cycle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_13475(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13475,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13478,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_13478(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[347]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13529,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 16   error");
t6=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[349],lf[347]);}
else{
t6=t5;
f_13529(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[350]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13564,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[349],lf[350]);}
else{
t7=t6;
f_13564(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13593,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 16   error");
t7=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[353],((C_word*)t0)[5]);}
else{
t7=t6;
f_13593(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k13591 in k13473 in k13470 in make-cycle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13593,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13600,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13608,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   keyword?");
t6=C_retrieve(lf[352]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13606 in k13591 in k13473 in k13470 in make-cycle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   error");
t2=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[351],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13600(2,t2,C_SCHEME_UNDEFINED);}}

/* k13598 in k13591 in k13473 in k13470 in make-cycle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13478(t5,t4);}

/* k13562 in k13473 in k13470 in make-cycle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13564,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13568,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_13568(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13566 in k13562 in k13473 in k13470 in make-cycle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13478(t7,t6);}

/* k13527 in k13473 in k13470 in make-cycle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13529,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13533,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 16   error");
t4=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[348],((C_word*)t0)[2]);}
else{
t4=t2;
f_13533(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13531 in k13527 in k13473 in k13470 in make-cycle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13478(t7,t6);}

/* k13476 in k13473 in k13470 in make-cycle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_13478(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13478,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13481,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_13481(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 16   error");
t3=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[346],((C_word*)t0)[2]);}}

/* k13479 in k13476 in k13473 in k13470 in make-cycle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13481,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13484,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   %alloc-pattern");
f_12655(t2);}

/* k13482 in k13479 in k13476 in k13473 in k13470 in make-cycle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13484,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13490,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13496,a[2]=((C_word)li158),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   initialize-pattern");
f_12665(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[345],"next-in-cycle"),t5);}

/* a13495 in k13482 in k13479 in k13476 in k13473 in k13470 in make-cycle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13496(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13496,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13508,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data");
f_12380(t4,t3);}

/* k13506 in a13495 in k13482 in k13479 in k13476 in k13473 in k13470 in make-cycle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[344]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13488 in k13482 in k13479 in k13476 in k13473 in k13470 in make-cycle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* reset-period in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_13353(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13353,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13466,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern?");
f_12347(t3,t2);}

/* k13464 in reset-period in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13466,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13363,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-period");
f_12434(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(1));}}

/* k13361 in k13464 in reset-period in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13363,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13366,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13451,a[2]=t6,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   period-stream");
f_12248(t7,t1);}

/* k13449 in k13361 in k13464 in reset-period in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13451,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13458,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13462,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   period-stream");
f_12248(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
f_13366(2,t2,C_SCHEME_UNDEFINED);}}

/* k13460 in k13449 in k13361 in k13464 in reset-period in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   next-1");
f_13006(((C_word*)t0)[2],t1);}

/* k13456 in k13449 in k13361 in k13464 in reset-period in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[300]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t4=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(2),t1);}

/* k13364 in k13361 in k13464 in reset-period in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13366,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13448,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 16   period-length");
f_12230(t2,((C_word*)t0)[3]);}

/* k13446 in k13364 in k13361 in k13464 in reset-period in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13448,2,t0,t1);}
t2=(C_word)C_eqp(t1,C_SCHEME_TRUE);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13374,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=((C_word*)t0)[3];
t6=(C_word)C_i_check_structure(t5,lf[300]);
t7=t4;
f_13374(2,t7,(C_word)C_i_block_ref(t5,C_fix(4)));}
else{
C_trace("ChickenBridge.scm: 16   period-length");
f_12230(t4,((C_word*)t0)[3]);}}

/* k13372 in k13446 in k13364 in k13361 in k13464 in reset-period in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13374,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13377,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13383,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13438,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   pattern-flags");
f_12362(t5,((C_word*)t0)[3]);}
else{
t5=t4;
f_13383(2,t5,C_SCHEME_FALSE);}}

/* k13436 in k13372 in k13446 in k13364 in k13361 in k13464 in reset-period in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   logtest");
t2=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(8));}

/* k13381 in k13372 in k13446 in k13364 in k13361 in k13464 in reset-period in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13383,2,t0,t1);}
if(C_truep(t1)){
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13386,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13402,a[2]=t3,a[3]=((C_word)li156),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   map-pattern-data");
f_13307(t4,t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_13377(t2,C_SCHEME_UNDEFINED);}}

/* a13401 in k13381 in k13372 in k13446 in k13364 in k13361 in k13464 in reset-period in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13402(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13402,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13431,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   reset-period");
f_13353(t3,t2);}

/* k13429 in a13401 in k13381 in k13372 in k13446 in k13364 in k13361 in k13464 in reset-period in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13431,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13412,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-period");
f_12434(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k13410 in k13429 in a13401 in k13381 in k13372 in k13446 in k13364 in k13361 in k13464 in reset-period in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13412,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13415,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13427,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   period-omit");
f_12284(t3,t1);}

/* k13425 in k13410 in k13429 in a13401 in k13381 in k13372 in k13446 in k13364 in k13361 in k13464 in reset-period in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13427,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 16   period-omit-set!");
f_12275(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13413 in k13410 in k13429 in a13401 in k13381 in k13372 in k13446 in k13364 in k13361 in k13464 in reset-period in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13415,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k13384 in k13381 in k13372 in k13446 in k13364 in k13361 in k13464 in reset-period in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13386,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13396,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 16   max");
t4=*((C_word*)lf[342]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(0));}
else{
t2=((C_word*)t0)[2];
f_13377(t2,C_SCHEME_UNDEFINED);}}

/* k13394 in k13384 in k13381 in k13372 in k13446 in k13364 in k13361 in k13464 in reset-period in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13377(t3,t2);}

/* k13375 in k13372 in k13446 in k13364 in k13361 in k13464 in reset-period in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_13377(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13377,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13380,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   period-count-set!");
f_12203(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k13378 in k13375 in k13372 in k13446 in k13364 in k13361 in k13464 in reset-period in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* map-pattern-data in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_13307(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13307,NULL,3,t1,t2,t3);}
t4=t3;
t5=(C_word)C_i_check_structure(t4,lf[310]);
t6=(C_word)C_i_block_ref(t4,C_fix(13));
t7=t6;
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t2,t3);}

/* next-in-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_13298(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13298,NULL,2,t1,t2);}
t3=t2;
t4=(C_word)C_i_check_structure(t3,lf[310]);
t5=(C_word)C_i_block_ref(t3,C_fix(12));
t6=t5;
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}

/* next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_13006(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13006,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13013,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern?");
f_12347(t3,t2);}

/* k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13013,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13016,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-period");
f_12434(t2,((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_closurep(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 16   obj");
t2=((C_word*)t0)[2];
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}}

/* k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13016,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13019,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13287,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   period-count");
f_12212(t5,t1);}

/* k13285 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13287,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13242,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13279,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   period-reps");
f_12302(t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_13019(2,t2,C_SCHEME_UNDEFINED);}}

/* k13277 in k13285 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13279,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[310]);
t4=(C_word)C_i_block_ref(t2,C_fix(8));
if(C_truep((C_word)C_i_greater_or_equalp(t1,t4))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13271,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   pattern-value-set!");
f_12443(t5,((C_word*)t0)[4],lf[338]);}
else{
t5=((C_word*)t0)[2];
f_13242(t5,C_SCHEME_UNDEFINED);}}

/* k13269 in k13277 in k13285 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13271,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13274,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-state-set!");
f_12461(t2,((C_word*)t0)[2],lf[337]);}

/* k13272 in k13269 in k13277 in k13285 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[338]);
t3=((C_word*)t0)[2];
f_13242(t3,t2);}

/* k13240 in k13285 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_13242(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13242,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13248,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[4])[1];
if(C_truep(t3)){
t4=t2;
f_13248(t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13265,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   reset-period");
f_13353(t4,((C_word*)t0)[2]);}}

/* k13263 in k13240 in k13285 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_13248(t2,(C_word)C_i_nequalp(t1,C_fix(0)));}

/* k13246 in k13240 in k13285 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_13248(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13248,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[325]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13252,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-value-set!");
f_12443(t3,((C_word*)t0)[2],lf[325]);}
else{
t2=((C_word*)t0)[3];
f_13019(2,t2,C_SCHEME_UNDEFINED);}}

/* k13250 in k13246 in k13240 in k13285 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   pattern-state-set!");
f_12461(((C_word*)t0)[3],((C_word*)t0)[2],lf[337]);}

/* k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13019,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13025,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   pattern-flags");
f_12362(t2,((C_word*)t0)[3]);}}

/* k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13025,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[310]);
t4=(C_word)C_i_block_ref(t2,C_fix(9));
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13031,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t8,a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=((C_word*)t0)[3],tmp=(C_word)a,a+=9,tmp);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13117,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=t9,a[6]=t8,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 16   logtest");
t11=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,t1,C_fix(1));}

/* k13115 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13117,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13120,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13133,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   next-in-pattern");
f_13298(t3,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13140,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13229,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   logtest");
t4=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)t0)[2],C_fix(8));}}

/* k13227 in k13115 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13229,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13236,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   period-length");
f_12230(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_13140(t2,C_SCHEME_FALSE);}}

/* k13234 in k13227 in k13115 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_13140(t2,(C_word)C_eqp(t1,C_SCHEME_TRUE));}

/* k13138 in k13115 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_13140(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13140,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13142,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li152),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_13142(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1658 in k13138 in k13115 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_13142(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13142,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep(((C_word*)t4)[1])){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13149,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13191,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=t7,a[5]=((C_word)li151),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_13191(t9,t5);}}

/* do1662 in do1658 in k13138 in k13115 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_13191(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13191,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13226,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   pattern-datum");
f_12416(t2,((C_word*)t0)[3]);}

/* k13224 in do1662 in do1658 in k13138 in k13115 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13226,2,t0,t1);}
if(C_truep((C_word)C_i_eqvp(t1,lf[325]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13201,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13208,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)t0)[2])){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13215,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   next-in-pattern");
f_13298(t4,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 16   next-in-pattern");
f_13298(t3,((C_word*)t0)[3]);}}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k13213 in k13224 in do1662 in do1658 in k13138 in k13115 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13215,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13351,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern?");
f_12347(t2,t1);}

/* k13349 in k13213 in k13224 in do1662 in do1658 in k13138 in k13115 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13351,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13326,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-period");
f_12434(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_13208(2,t2,((C_word*)t0)[2]);}}

/* k13324 in k13349 in k13213 in k13224 in do1662 in do1658 in k13138 in k13115 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13326,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13347,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   period-omit");
f_12284(t2,t1);}

/* k13345 in k13324 in k13349 in k13213 in k13224 in do1662 in do1658 in k13138 in k13115 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13347,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13335,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13343,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   period-omit");
f_12284(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[4];
f_13208(2,t2,((C_word*)t0)[2]);}}

/* k13341 in k13345 in k13324 in k13349 in k13213 in k13224 in do1662 in do1658 in k13138 in k13115 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13343,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 16   period-omit-set!");
f_12275(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13333 in k13345 in k13324 in k13349 in k13213 in k13224 in do1662 in do1658 in k13138 in k13115 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_13208(2,t2,lf[325]);}

/* k13206 in k13224 in do1662 in do1658 in k13138 in k13115 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   pattern-datum-set!");
f_12407(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k13199 in k13224 in do1662 in do1658 in k13138 in k13115 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_13191(t2,((C_word*)t0)[2]);}

/* k13147 in do1658 in k13138 in k13115 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13149,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13153,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13189,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   pattern-datum");
f_12416(t3,((C_word*)t0)[3]);}

/* k13187 in k13147 in do1658 in k13138 in k13115 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   next-1");
f_13006(((C_word*)t0)[2],t1);}

/* k13151 in k13147 in do1658 in k13138 in k13115 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13153,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13156,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13172,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13185,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   pattern-datum");
f_12416(t5,((C_word*)t0)[3]);}

/* k13183 in k13151 in k13147 in do1658 in k13138 in k13115 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   pattern?");
f_12347(((C_word*)t0)[2],t1);}

/* k13170 in k13151 in k13147 in do1658 in k13138 in k13115 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13172,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13176,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13180,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   pattern-datum");
f_12416(t3,((C_word*)t0)[2]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[337]);
t3=((C_word*)t0)[3];
f_13156(t3,t2);}}

/* k13178 in k13170 in k13151 in k13147 in do1658 in k13138 in k13115 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   pattern-state");
f_12470(((C_word*)t0)[2],t1);}

/* k13174 in k13170 in k13151 in k13147 in do1658 in k13138 in k13115 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13156(t3,t2);}

/* k13154 in k13151 in k13147 in do1658 in k13138 in k13115 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_13156(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13156,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13159,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[3])[1],lf[325]))){
C_trace("ChickenBridge.scm: 16   pattern-datum-set!");
f_12407(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=t2;
f_13159(2,t4,t3);}}

/* k13157 in k13154 in k13151 in k13147 in do1658 in k13138 in k13115 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_13142(t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k13131 in k13115 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   pattern-datum-set!");
f_12407(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k13118 in k13115 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13120,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13124,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13129,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   pattern-datum");
f_12416(t3,((C_word*)t0)[2]);}

/* k13127 in k13118 in k13115 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   next-1");
f_13006(((C_word*)t0)[2],t1);}

/* k13122 in k13118 in k13115 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[337]);
t4=((C_word*)t0)[2];
f_13031(2,t4,t3);}

/* k13029 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13031,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13034,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[5])[1],lf[337]))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13076,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13088,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   period-count");
f_12212(t4,((C_word*)t0)[3]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13091,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13111,a[2]=((C_word*)t0)[6],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   logtest");
t5=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)t0)[2],C_fix(64));}}

/* k13109 in k13029 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 16   pattern-datum-set!");
f_12407(((C_word*)t0)[3],((C_word*)t0)[2],lf[325]);}
else{
t2=((C_word*)t0)[3];
f_13091(2,t2,C_SCHEME_UNDEFINED);}}

/* k13089 in k13029 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13091,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13097,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   logtest");
t3=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],C_fix(16));}

/* k13095 in k13089 in k13029 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13097,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13108,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   period-count");
f_12212(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_13034(2,t2,C_SCHEME_UNDEFINED);}}

/* k13106 in k13095 in k13089 in k13029 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13108,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 16   period-count-set!");
f_12203(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13086 in k13029 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13088,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 16   period-count-set!");
f_12203(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13074 in k13029 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13076,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13079,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-datum-set!");
f_12407(t2,((C_word*)t0)[2],lf[325]);}

/* k13077 in k13074 in k13029 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
f_13034(2,t3,t2);}

/* k13032 in k13029 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13034,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13037,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13070,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   period-count");
f_12212(t3,((C_word*)t0)[2]);}

/* k13068 in k13032 in k13029 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13070,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[337]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13065,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   period-reps");
f_12302(t3,((C_word*)t0)[3]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[2];
f_13037(2,t3,t2);}}

/* k13063 in k13068 in k13032 in k13029 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13065,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
t3=((C_word*)t0)[3];
t4=(C_word)C_i_check_structure(t3,lf[300]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t5=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,((C_word*)t0)[2],t3,C_fix(6),t2);}

/* k13035 in k13032 in k13029 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13037,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13040,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t0)[2])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13050,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   retfn");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=t2;
f_13040(t3,C_SCHEME_UNDEFINED);}}

/* k13048 in k13035 in k13032 in k13029 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13040(t3,t2);}

/* k13038 in k13035 in k13032 in k13029 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_13040(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13040,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13043,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   pattern-state-set!");
f_12461(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k13041 in k13038 in k13035 in k13032 in k13029 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13043,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13046,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern-value-set!");
f_12443(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k13044 in k13041 in k13038 in k13035 in k13032 in k13029 in k13023 in k13017 in k13014 in k13011 in next-1 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_13046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* next in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12883(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr3rv,(void*)f_12883r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_12883r(t0,t1,t2,t3);}}

static void C_ccall f_12883r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(16);
t4=(C_word)C_vemptyp(t3);
t5=(C_truep(t4)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t3,C_fix(0)));
if(C_truep(t5)){
if(C_truep((C_word)C_i_numberp(t5))){
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12904,a[2]=t2,a[3]=t8,a[4]=t6,a[5]=t5,a[6]=((C_word)li148),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_12904(t10,t1,C_fix(0),t6);}
else{
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12942,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern?");
f_12347(t6,t2);}}
else{
C_trace("ChickenBridge.scm: 16   next-1");
f_13006(t1,t2);}}

/* k12940 in next in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12942,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12952,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 16   next-1");
f_13006(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k12950 in k12940 in next in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12952,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12954,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li149),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_12954(t5,((C_word*)t0)[2],t1,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* do1634 in k12950 in k12940 in next in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12954(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12954,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_eqvp(((C_word*)t5)[1],lf[338]);
t8=(C_truep(t7)?t7:((C_word*)t6)[1]);
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_a_i_list(&a,1,((C_word*)t5)[1]);
t10=(C_word)C_i_set_cdr(t3,t9);
t11=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12973,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12983,a[2]=((C_word*)t0)[2],a[3]=t5,a[4]=t11,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   eop?");
t13=C_retrieve(lf[336]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t12,((C_word*)t0)[2]);}}

/* k12981 in do1634 in k12950 in k12940 in next in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12983,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[4];
f_12973(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12988,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   next-1");
f_13006(t2,((C_word*)t0)[2]);}}

/* k12986 in k12981 in do1634 in k12950 in k12940 in next in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12973(t3,t2);}

/* k12971 in do1634 in k12950 in k12940 in next in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12973(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_12954(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do1627 in next in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12904(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12904,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t2,((C_word*)t0)[5]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12936,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 16   next-1");
f_13006(t4,((C_word*)t0)[2]);}}

/* k12934 in do1627 in next in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12936,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,C_fix(1),((C_word*)t0)[4]);
t5=(C_word)C_i_cdr(((C_word*)t0)[5]);
t6=((C_word*)((C_word*)t0)[3])[1];
f_12904(t6,((C_word*)t0)[2],t4,t5);}

/* eod? in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12864(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12864,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12871,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern?");
f_12347(t3,t2);}

/* k12869 in eod? in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12871,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12878,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   pattern-value");
t3=C_retrieve2(lf[319],"pattern-value");
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_eqvp(((C_word*)t0)[2],lf[338]));}}

/* k12876 in k12869 in eod? in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   eod?");
t2=C_retrieve(lf[182]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* eop? in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12845(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12845,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12852,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern?");
f_12347(t3,t2);}

/* k12850 in eop? in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12852,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12859,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 16   pattern-state");
f_12470(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_eqvp(((C_word*)t0)[2],lf[337]));}}

/* k12857 in k12850 in eop? in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   eop?");
t2=C_retrieve(lf[336]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12665(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10){
C_word tmp;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12665,NULL,10,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10);}
t11=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12669,a[2]=t7,a[3]=t10,a[4]=t9,a[5]=t5,a[6]=t11,a[7]=t1,a[8]=t8,a[9]=t4,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 16   pattern-data-set!");
f_12371(t12,t2,t3);}

/* k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12669,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_12672,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=((C_word*)t0)[10];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[310]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t6=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(3),t4);}

/* k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12672,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12675,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[9];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[310]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t6=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(13),t4);}

/* k12673 in k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12675,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12678,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[8];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[310]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t6=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(12),t4);}

/* k12676 in k12673 in k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12678,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12681,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12835,a[2]=t3,a[3]=((C_word)li144),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   map-pattern-data");
f_13307(t4,t5,((C_word*)t0)[7]);}

/* a12834 in k12676 in k12673 in k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12835(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12835,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12842,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   pattern?");
f_12347(t3,t2);}

/* k12840 in a12834 in k12676 in k12673 in k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k12679 in k12676 in k12673 in k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12681,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12684,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12833,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   logior");
t4=C_retrieve(lf[329]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[4])[1],C_fix(1));}
else{
t3=t2;
f_12684(t3,C_SCHEME_UNDEFINED);}}

/* k12831 in k12679 in k12676 in k12673 in k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12684(t3,t2);}

/* k12682 in k12679 in k12676 in k12673 in k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12684(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12684,NULL,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[310]);
t4=(C_word)C_i_block_ref(t2,C_fix(10));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12690,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[326]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12816,a[2]=t5,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   logior");
t8=C_retrieve(lf[329]);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,((C_word*)((C_word*)t0)[3])[1],C_fix(8));}
else{
t7=(C_word)C_eqp(t4,lf[333]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12826,a[2]=t5,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   logior");
t9=C_retrieve(lf[329]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,((C_word*)((C_word*)t0)[3])[1],C_fix(16));}
else{
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[334],t4);}}}

/* k12824 in k12682 in k12679 in k12676 in k12673 in k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12690(2,t3,t2);}

/* k12814 in k12682 in k12679 in k12676 in k12673 in k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12690(2,t3,t2);}

/* k12688 in k12682 in k12679 in k12676 in k12673 in k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12690,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[310]);
t4=(C_word)C_i_block_ref(t2,C_fix(11));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12696,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[327]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12796,a[2]=t5,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   logior");
t8=C_retrieve(lf[329]);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,((C_word*)((C_word*)t0)[3])[1],C_fix(32));}
else{
t7=(C_word)C_eqp(t4,lf[331]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12806,a[2]=t5,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   logior");
t9=C_retrieve(lf[329]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,((C_word*)((C_word*)t0)[3])[1],C_fix(64));}
else{
C_trace("ChickenBridge.scm: 16   error");
t8=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[332],t4);}}}

/* k12804 in k12688 in k12682 in k12679 in k12676 in k12673 in k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12696(2,t3,t2);}

/* k12794 in k12688 in k12682 in k12679 in k12676 in k12673 in k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12696(2,t3,t2);}

/* k12694 in k12688 in k12682 in k12679 in k12676 in k12673 in k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12696,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12699,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12759,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   logtest");
t4=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[3])[1],C_fix(16));}

/* k12757 in k12694 in k12688 in k12682 in k12679 in k12676 in k12673 in k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12759,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12763,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12767,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   lognot");
t4=C_retrieve(lf[330]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_fix(8));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12773,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   logtest");
t3=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));}}

/* k12771 in k12757 in k12694 in k12688 in k12682 in k12679 in k12676 in k12673 in k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12773,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12777,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12781,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12785,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   lognot");
t5=C_retrieve(lf[330]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_fix(8));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12789,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   logior");
t3=C_retrieve(lf[329]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));}}

/* k12787 in k12771 in k12757 in k12694 in k12688 in k12682 in k12679 in k12676 in k12673 in k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12699(t3,t2);}

/* k12783 in k12771 in k12757 in k12694 in k12688 in k12682 in k12679 in k12676 in k12673 in k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   logand");
t2=C_retrieve(lf[1]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k12779 in k12771 in k12757 in k12694 in k12688 in k12682 in k12679 in k12676 in k12673 in k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   logior");
t2=C_retrieve(lf[329]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(16));}

/* k12775 in k12771 in k12757 in k12694 in k12688 in k12682 in k12679 in k12676 in k12673 in k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12699(t3,t2);}

/* k12765 in k12757 in k12694 in k12688 in k12682 in k12679 in k12676 in k12673 in k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   logand");
t2=C_retrieve(lf[1]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k12761 in k12757 in k12694 in k12688 in k12682 in k12679 in k12676 in k12673 in k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12699(t3,t2);}

/* k12697 in k12694 in k12688 in k12682 in k12679 in k12676 in k12673 in k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12699(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12699,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12702,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_numberp(((C_word*)t0)[2]);
t4=(C_truep(t3)?(C_word)C_i_greaterp(((C_word*)t0)[2],C_fix(0)):C_SCHEME_FALSE);
t5=(C_truep(t4)?((C_word*)t0)[2]:*((C_word*)lf[2]+1));
t6=((C_word*)t0)[4];
t7=(C_word)C_i_check_structure(t6,lf[310]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t8=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t8+1)))(5,t8,t2,t6,C_fix(8),t5);}

/* k12700 in k12697 in k12694 in k12688 in k12682 in k12679 in k12676 in k12673 in k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12702,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=(C_truep(t2)?t2:((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12708,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t5=((C_word*)t0)[6];
if(C_truep(t5)){
t6=t4;
f_12708(t6,C_SCHEME_UNDEFINED);}
else{
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12743,a[2]=t4,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 16   logior");
t7=C_retrieve(lf[329]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)((C_word*)t0)[2])[1],C_fix(2));}}

/* k12741 in k12700 in k12697 in k12694 in k12688 in k12682 in k12679 in k12676 in k12673 in k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12708(t3,t2);}

/* k12706 in k12700 in k12697 in k12694 in k12688 in k12682 in k12679 in k12676 in k12673 in k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12708(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12708,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12711,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12721,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_numberp(((C_word*)t0)[3]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(((C_word*)t0)[3],C_SCHEME_TRUE));
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 16   make-period");
f_12191(t3,C_fix(0),((C_word*)t0)[3],C_SCHEME_FALSE,((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 16   make-period");
f_12191(t3,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}}

/* k12719 in k12706 in k12700 in k12697 in k12694 in k12688 in k12682 in k12679 in k12676 in k12673 in k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[310]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t4=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(5),t1);}

/* k12709 in k12706 in k12700 in k12697 in k12694 in k12688 in k12682 in k12679 in k12676 in k12673 in k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12711,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12714,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)t0)[3];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_i_check_structure(t3,lf[310]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t6=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(1),t4);}

/* k12712 in k12709 in k12706 in k12700 in k12697 in k12694 in k12688 in k12682 in k12679 in k12676 in k12673 in k12670 in k12667 in initialize-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 16   values");
C_values(2,0,((C_word*)t0)[2]);}

/* %alloc-pattern in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12655(C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12655,NULL,1,t1);}
t2=lf[325];
t3=lf[325];
t4=lf[325];
t5=*((C_word*)lf[2]+1);
t6=lf[326];
t7=lf[327];
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,15,lf[310],C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_FALSE,t2,C_SCHEME_FALSE,t3,t4,t5,C_SCHEME_FALSE,t6,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* pattern-cache in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12596(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12596,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[310]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(14)));}

/* pattern-cache-set! in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12587(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12587,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[310]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t5=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(14),t3);}

/* pattern-state in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12470(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12470,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[310]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(7)));}

/* pattern-state-set! in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12461(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12461,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[310]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t5=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(7),t3);}

/* f_12452 in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_12452(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12452,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[310]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* pattern-value-set! in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12443(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12443,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[310]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t5=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* pattern-period in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12434(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12434,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[310]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* pattern-datum in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12416(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12416,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[310]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* pattern-datum-set! in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12407(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12407,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[310]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t5=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* pattern-length in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12398(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12398,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[310]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* pattern-data in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12380(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12380,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[310]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* pattern-data-set! in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12371(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12371,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[310]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t5=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* pattern-flags in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12362(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12362,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[310]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* pattern? in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12347(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12347,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[310]));}

/* period-reps in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12302(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12302,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[300]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* period-omit in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12284(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12284,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[300]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* period-omit-set! in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12275(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12275,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[300]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t5=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(5),t3);}

/* period-stream in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12248(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12248,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[300]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* period-length in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12230(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12230,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[300]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* period-count in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12212(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12212,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[300]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* period-count-set! in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12203(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12203,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[300]);
C_trace("ChickenBridge.scm: 16   ##sys#block-set!");
t5=*((C_word*)lf[302]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(1),t3);}

/* make-period in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_12191(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12191,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,7,lf[300],t2,t3,t4,t5,t6,t7));}

/* parse-conditional in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11442(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[34],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11442,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_cons(&a,2,lf[287],t4);
t7=((C_word*)t5)[1];
t8=(C_word)C_i_car(((C_word*)t5)[1]);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_END_OF_LIST;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11464,a[2]=t8,a[3]=t7,a[4]=t3,a[5]=t6,a[6]=t16,a[7]=t14,a[8]=t1,a[9]=t10,a[10]=t12,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
t18=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t18))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t17,t6,t7,(C_word)C_a_i_list(&a,3,lf[291],t8,lf[292]));}
else{
t19=t17;
f_11464(2,t19,C_SCHEME_UNDEFINED);}}

/* k11462 in parse-conditional in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11464,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[11])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[10])+1,t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11479,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t8,((C_word*)t0)[5],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,1,lf[290]));}
else{
t9=t8;
f_11479(2,t9,C_SCHEME_UNDEFINED);}}

/* k11477 in k11462 in parse-conditional in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11479,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11482,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[289]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[178],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_11482(t6,t5);}
else{
t4=t2;
f_11482(t4,C_SCHEME_UNDEFINED);}}

/* k11480 in k11477 in k11462 in parse-conditional in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_11482(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11482,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11485,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11652,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word)li118),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11658,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word)li119),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 15   call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a11657 in k11480 in k11477 in k11462 in parse-conditional in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11658(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11658,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a11651 in k11480 in k11477 in k11462 in parse-conditional in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11652,2,t0,t1);}
C_trace("ChickenBridge.scm: 15   parse-then-else-dependents");
f_11311(t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k11483 in k11480 in k11477 in k11462 in parse-conditional in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11485,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11488,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=t2;
f_11488(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11634,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   gather-clauses");
f_8791(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[7])[1]);}}

/* k11632 in k11483 in k11480 in k11477 in k11462 in parse-conditional in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_11488(t3,t2);}

/* k11486 in k11483 in k11480 in k11477 in k11462 in parse-conditional in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_11488(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11488,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11491,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 15   loop-operator-set!");
f_8538(t2,((C_word*)((C_word*)t0)[7])[1],lf[234]);}

/* k11489 in k11486 in k11483 in k11480 in k11477 in k11462 in parse-conditional in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11491,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11615,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11627,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 15   loop-looping");
t4=C_retrieve2(lf[96],"loop-looping");
f_8592(3,t4,t3,((C_word*)((C_word*)t0)[7])[1]);}

/* k11625 in k11489 in k11486 in k11483 in k11480 in k11477 in k11462 in parse-conditional in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11627(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11627,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[183],t1);
C_trace("ChickenBridge.scm: 15   append");
t3=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],t2,C_SCHEME_END_OF_LIST);}

/* k11613 in k11489 in k11486 in k11483 in k11480 in k11477 in k11462 in parse-conditional in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11615,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,lf[234],((C_word*)((C_word*)t0)[10])[1],t1,C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11498,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11511,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t6=t5;
f_11511(t6,C_SCHEME_FALSE);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t7=t5;
f_11511(t7,(C_word)C_eqp(t6,lf[281]));}}

/* k11509 in k11613 in k11489 in k11486 in k11483 in k11480 in k11477 in k11462 in parse-conditional in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_11511(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11511,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11518,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t4,((C_word*)t0)[4],((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,lf[288]));}
else{
t5=t4;
f_11518(2,t5,C_SCHEME_UNDEFINED);}}
else{
t2=((C_word*)t0)[6];
f_11498(t2,C_SCHEME_UNDEFINED);}}

/* k11516 in k11509 in k11613 in k11489 in k11486 in k11483 in k11480 in k11477 in k11462 in parse-conditional in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11518,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11521,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11574,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word)li116),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11588,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word)li117),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 15   call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a11587 in k11516 in k11509 in k11613 in k11489 in k11486 in k11483 in k11480 in k11477 in k11462 in parse-conditional in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11588(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11588,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a11573 in k11516 in k11509 in k11613 in k11489 in k11486 in k11483 in k11480 in k11477 in k11462 in parse-conditional in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11574,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11582,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 15   append");
t4=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)t0)[2],t3);}

/* k11580 in a11573 in k11516 in k11509 in k11613 in k11489 in k11486 in k11483 in k11480 in k11477 in k11462 in parse-conditional in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   parse-then-else-dependents");
f_11311(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k11519 in k11516 in k11509 in k11613 in k11489 in k11486 in k11483 in k11480 in k11477 in k11462 in parse-conditional in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11521,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11524,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=t2;
f_11524(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11560,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   gather-clauses");
f_8791(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k11558 in k11519 in k11516 in k11509 in k11613 in k11489 in k11486 in k11483 in k11480 in k11477 in k11462 in parse-conditional in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_11524(t3,t2);}

/* k11522 in k11519 in k11516 in k11509 in k11613 in k11489 in k11486 in k11483 in k11480 in k11477 in k11462 in parse-conditional in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_11524(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11524,NULL,2,t0,t1);}
t2=(C_word)C_i_cdddr(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11553,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 15   loop-looping");
t4=C_retrieve2(lf[96],"loop-looping");
f_8592(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k11551 in k11522 in k11519 in k11516 in k11509 in k11613 in k11489 in k11486 in k11483 in k11480 in k11477 in k11462 in parse-conditional in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11553,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[183],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[5],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11530,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 15   loop-looping-set!");
f_8598(t4,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_END_OF_LIST);}

/* k11528 in k11551 in k11522 in k11519 in k11516 in k11509 in k11613 in k11489 in k11486 in k11483 in k11480 in k11477 in k11462 in parse-conditional in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11530,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11533,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 15   loop-looping-set!");
f_8598(t2,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_END_OF_LIST);}

/* k11531 in k11528 in k11551 in k11522 in k11519 in k11516 in k11509 in k11613 in k11489 in k11486 in k11483 in k11480 in k11477 in k11462 in parse-conditional in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11533,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11537,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 15   gather-clauses");
f_8791(t2,lf[234],t3);}

/* k11535 in k11531 in k11528 in k11551 in k11522 in k11519 in k11516 in k11509 in k11613 in k11489 in k11486 in k11483 in k11480 in k11477 in k11462 in parse-conditional in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_11498(t3,t2);}

/* k11496 in k11613 in k11489 in k11486 in k11483 in k11480 in k11477 in k11462 in parse-conditional in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_11498(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11498,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11501,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 15   loop-looping-set!");
f_8598(t2,((C_word*)((C_word*)t0)[4])[1],t3);}

/* k11499 in k11496 in k11613 in k11489 in k11486 in k11483 in k11480 in k11477 in k11462 in parse-conditional in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-then-else-dependents in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_11311(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11311,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11315,a[2]=t5,a[3]=t11,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11320,a[2]=t3,a[3]=t14,a[4]=t7,a[5]=t11,a[6]=t4,a[7]=t9,a[8]=t5,a[9]=((C_word)li114),tmp=(C_word)a,a+=10,tmp));
t16=((C_word*)t14)[1];
f_11320(t16,t12,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do1267 in parse-then-else-dependents in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_11320(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11320,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t9=(C_truep(t8)?t8:((C_word*)((C_word*)t0)[7])[1]);
if(C_truep(t9)){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t11=((C_word*)t0)[6];
t12=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11268,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t7,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[4],a[11]=((C_word*)t0)[5],a[12]=t5,tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 15   loop-op?");
f_8862(t12,t10,t11);}}

/* k11266 in do1267 in parse-then-else-dependents in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11268,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_11274,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_11274(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_caddr(t1);
t5=(C_word)C_eqp(t4,lf[284]);
if(C_truep(t5)){
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_member(t6,lf[285]);
t8=t2;
f_11274(t8,(C_word)C_i_not(t7));}
else{
t6=t2;
f_11274(t6,C_SCHEME_FALSE);}}}
else{
t3=t2;
f_11274(t3,C_SCHEME_FALSE);}}

/* k11272 in k11266 in do1267 in parse-then-else-dependents in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_11274(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11274,NULL,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)t0)[13]:C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11337,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t5=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t5)){
t6=t4;
f_11337(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t4,((C_word*)t0)[4],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,3,lf[282],t6,lf[283]));}}

/* k11335 in k11272 in k11266 in do1267 in parse-then-else-dependents in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11337,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11340,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11410,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[6],a[7]=((C_word)li112),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11423,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[5],a[4]=((C_word)li113),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 15   call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a11422 in k11335 in k11272 in k11266 in do1267 in parse-then-else-dependents in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11423(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11423,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a11409 in k11335 in k11272 in k11266 in do1267 in parse-then-else-dependents in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11410,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11418,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 15   append");
t3=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k11416 in a11409 in k11335 in k11272 in k11266 in do1267 in parse-then-else-dependents in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k11338 in k11335 in k11272 in k11266 in do1267 in parse-then-else-dependents in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11340,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11344,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 15   append");
t4=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[11])[1],t3);}

/* k11342 in k11338 in k11335 in k11272 in k11266 in do1267 in parse-then-else-dependents in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11344,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11349,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t6=t5;
f_11349(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t7=(C_word)C_eqp(t6,lf[214]);
if(C_truep(t7)){
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[9])+1,t8);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,1,lf[280]));}
else{
t10=t5;
f_11349(2,t10,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t9=(C_word)C_eqp(t8,lf[281]);
if(C_truep(t9)){
t10=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t11=t5;
f_11349(2,t11,t10);}
else{
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11387,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 15   loop-op?");
f_8862(t10,t11,((C_word*)t0)[3]);}}}}

/* k11385 in k11342 in k11338 in k11335 in k11272 in k11266 in do1267 in parse-then-else-dependents in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[2];
f_11349(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
f_11349(2,t2,C_SCHEME_UNDEFINED);}}

/* k11347 in k11342 in k11338 in k11335 in k11272 in k11266 in do1267 in parse-then-else-dependents in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_11320(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k11313 in parse-then-else-dependents in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-return in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11210(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[23],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11210,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11217,a[2]=t4,a[3]=t6,a[4]=t1,a[5]=t10,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[277],t13,lf[278]));}
else{
t13=t11;
f_11217(2,t13,C_SCHEME_UNDEFINED);}}

/* k11215 in parse-return in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11217,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11248,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 15   loop-op?");
f_8862(t6,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k11246 in k11215 in parse-return in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11248,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11236,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11244,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 15   func");
t6=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k11242 in k11246 in k11215 in parse-return in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11244,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 15   make-loop-clause");
f_8640(((C_word*)t0)[2],(C_word)C_a_i_list(&a,4,lf[102],lf[263],lf[107],t2));}

/* k11234 in k11246 in k11215 in parse-return in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-thereis in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11119(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[26],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11119,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11126,a[2]=t4,a[3]=t6,a[4]=t10,a[5]=t1,a[6]=t12,a[7]=t8,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t14))){
t15=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t13,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[274],t15,lf[275]));}
else{
t15=t13;
f_11126(2,t15,C_SCHEME_UNDEFINED);}}

/* k11124 in parse-thereis in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11126,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11194,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 15   loop-op?");
f_8862(t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k11192 in k11124 in parse-thereis in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11194,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11137,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[2],lf[271]);
if(C_truep(t5)){
t6=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t7=t4;
f_11137(t7,t6);}
else{
t6=(C_word)C_eqp(((C_word*)t0)[2],lf[272]);
if(C_truep(t6)){
t7=(C_word)C_a_i_list(&a,2,lf[178],((C_word*)((C_word*)t0)[4])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t10=t4;
f_11137(t10,t9);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[2],lf[273]);
if(C_truep(t7)){
t8=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t9=t4;
f_11137(t9,t8);}
else{
t8=t4;
f_11137(t8,C_SCHEME_UNDEFINED);}}}}

/* k11135 in k11192 in k11124 in parse-thereis in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_11137(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11137,NULL,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11148,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11164,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_not(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 15   func");
t7=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}

/* k11162 in k11135 in k11192 in k11124 in parse-thereis in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11164,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[234],((C_word*)((C_word*)t0)[4])[1],t1);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 15   make-loop-clause");
f_8640(((C_word*)t0)[2],(C_word)C_a_i_list(&a,6,lf[102],lf[271],lf[107],t3,lf[110],t4));}

/* k11146 in k11135 in k11192 in k11124 in parse-thereis in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-while-until in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11053(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11053,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11064,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[268],t7,lf[269]));}
else{
t13=t12;
f_11064(2,t13,C_SCHEME_UNDEFINED);}}

/* k11062 in parse-while-until in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11064,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11067,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[266]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_11067(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[267]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[178],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_11067(t10,t9);}
else{
t5=t2;
f_11067(t5,C_SCHEME_UNDEFINED);}}}

/* k11065 in k11062 in parse-while-until in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_11067(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11067,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11074,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[234],((C_word*)((C_word*)t0)[3])[1],lf[265]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 15   make-loop-clause");
f_8640(t2,(C_word)C_a_i_list(&a,4,lf[102],((C_word*)t0)[2],lf[107],t4));}

/* k11072 in k11065 in k11062 in parse-while-until in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* loop-return in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11047(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11047,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,2,lf[263],t2));}

/* parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10501(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word ab[55],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10501,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10510,a[2]=((C_word)li102),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10515,a[2]=((C_word)li103),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10520,a[2]=((C_word)li104),tmp=(C_word)a,a+=3,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_END_OF_LIST;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_END_OF_LIST;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_END_OF_LIST;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_SCHEME_END_OF_LIST;
t28=(*a=C_VECTOR_TYPE|1,a[1]=t27,tmp=(C_word)a,a+=2,tmp);
t29=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_10532,a[2]=t3,a[3]=t11,a[4]=t6,a[5]=t4,a[6]=t12,a[7]=t10,a[8]=t20,a[9]=t24,a[10]=t26,a[11]=t22,a[12]=t28,a[13]=t7,a[14]=t18,a[15]=t1,a[16]=t16,a[17]=t14,a[18]=t5,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t29,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[260],t7,lf[261]));}
else{
t30=t29;
f_10532(2,t30,C_SCHEME_UNDEFINED);}}

/* k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10532,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[18])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[17])+1,t2);
t6=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_10543,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[17],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[15],a[18]=((C_word*)t0)[16],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[18])[1]))){
t7=t6;
f_10543(2,t7,C_SCHEME_UNDEFINED);}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t8=(C_word)C_eqp(t7,lf[256]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10996,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t9,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[259]));}
else{
t11=t9;
f_10996(2,t11,C_SCHEME_UNDEFINED);}}
else{
t9=t6;
f_10543(2,t9,C_SCHEME_UNDEFINED);}}}

/* k10994 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10996,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11002,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 15   loop-variable?");
f_8868(t2,t3);}

/* k11000 in k10994 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_11002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11002,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=((C_word*)t0)[4];
f_10543(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[257],t2,lf[258]));}}

/* k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10543,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_10547,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[16],a[16]=((C_word*)t0)[17],a[17]=((C_word*)t0)[18],tmp=(C_word)a,a+=18,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
t4=((C_word*)t0)[2];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10428,a[2]=t3,a[3]=t7,a[4]=t5,a[5]=((C_word)li106),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_10428(t9,t2,C_SCHEME_FALSE);}

/* do1089 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_10428(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10428,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10442,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10453,a[2]=t6,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 15   loop-collectors");
t9=C_retrieve2(lf[93],"loop-collectors");
f_8556(3,t9,t7,t8);}}

/* k10451 in do1089 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10453,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10388,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t3,a[5]=((C_word)li105),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_10388(t7,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do1081 in k10451 in do1089 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_10388(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10388,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10401,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_eqp(((C_word*)t0)[2],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t11=C_set_block_item(t3,0,t10);
t12=t6;
f_10401(t12,t11);}
else{
t10=t6;
f_10401(t10,C_SCHEME_UNDEFINED);}}}

/* k10399 in do1081 in k10451 in do1089 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_10401(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=((C_word*)((C_word*)t0)[4])[1];
f_10388(t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k10440 in do1089 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_10428(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10547,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_10550,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[17],a[12]=((C_word*)t0)[14],a[13]=((C_word*)t0)[15],a[14]=((C_word*)t0)[16],tmp=(C_word)a,a+=15,tmp);
t4=((C_word*)((C_word*)t0)[17])[1];
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10980,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10984,a[2]=t5,a[3]=((C_word*)t0)[13],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   collector-type");
f_10515(t6,((C_word*)((C_word*)t0)[17])[1]);}
else{
t5=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t6=t3;
f_10550(2,t6,t5);}}

/* k10982 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
t2=lf[253];
t3=lf[254];
t4=lf[255];
t5=(C_word)C_eqp(((C_word*)t0)[3],t1);
if(C_truep(t5)){
t6=((C_word*)t0)[2];
f_10980(t6,t5);}
else{
t6=(C_word)C_i_member(((C_word*)t0)[3],t2);
t7=(C_truep(t6)?(C_word)C_i_member(t1,t2):C_SCHEME_FALSE);
if(C_truep(t7)){
t8=((C_word*)t0)[2];
f_10980(t8,t7);}
else{
t8=(C_word)C_i_member(((C_word*)t0)[3],t3);
t9=(C_truep(t8)?(C_word)C_i_member(t1,t3):C_SCHEME_FALSE);
if(C_truep(t9)){
t10=((C_word*)t0)[2];
f_10980(t10,t9);}
else{
t10=(C_word)C_i_member(((C_word*)t0)[3],t4);
t11=((C_word*)t0)[2];
f_10980(t11,(C_truep(t10)?(C_word)C_i_member(t1,t4):C_SCHEME_FALSE));}}}}

/* k10978 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_10980(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10980,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[7];
f_10550(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10976,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 15   collector-type");
f_10515(t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* k10974 in k10978 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10976,2,t0,t1);}
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,5,lf[250],t1,lf[251],((C_word*)t0)[2],lf[252]));}

/* k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[61],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10550,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10553,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[14],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[10],lf[232]);
t4=(C_truep(t3)?t3:(C_word)C_eqp(((C_word*)t0)[10],lf[233]));
if(C_truep(t4)){
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10596,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
t8=((C_word*)((C_word*)t0)[4])[1];
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10634,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[6],a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t8)){
t10=t9;
f_10634(2,t10,t8);}
else{
C_trace("ChickenBridge.scm: 15   gensym");
t10=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[235]);}}
else{
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10663,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   collector-acc");
f_10520(t8,((C_word*)((C_word*)t0)[11])[1]);}}
else{
t5=(C_word)C_eqp(((C_word*)t0)[10],lf[236]);
t6=(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)t0)[10],lf[237]));
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10675,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],a[8]=t2,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[5],a[11]=((C_word*)t0)[6],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 15   gensym");
t8=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[240]);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[10],lf[112]);
t8=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_10770,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[5],a[10]=((C_word*)t0)[10],a[11]=t2,a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[4],tmp=(C_word)a,a+=14,tmp);
if(C_truep(t7)){
t9=t8;
f_10770(t9,t7);}
else{
t9=(C_word)C_eqp(((C_word*)t0)[10],lf[244]);
t10=t8;
f_10770(t10,(C_truep(t9)?t9:(C_word)C_eqp(((C_word*)t0)[10],lf[249])));}}}}

/* k10768 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_10770(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10770,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10773,a[2]=t5,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=t3,a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
t7=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10886,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
if(C_truep(((C_word*)((C_word*)t0)[13])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10944,a[2]=t8,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8874(t9,((C_word*)((C_word*)t0)[13])[1],lf[248]);}
else{
t9=t8;
f_10886(t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10879,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=t5,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 15   collector-acc");
f_10520(t8,((C_word*)((C_word*)t0)[5])[1]);}}
else{
t2=((C_word*)t0)[11];
f_10553(t2,C_SCHEME_UNDEFINED);}}

/* k10877 in k10768 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_cadddr(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_10773(t6,t5);}

/* k10942 in k10768 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10944,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_10886(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k10884 in k10768 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_10886(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10886,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10890,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 15   gensym");
t3=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[247]);}

/* k10888 in k10884 in k10768 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10890,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10894,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 15   gensym");
t4=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[246]);}

/* k10892 in k10888 in k10884 in k10768 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10894,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10936,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8874(t3,((C_word*)((C_word*)t0)[11])[1],lf[245]);}

/* k10934 in k10892 in k10888 in k10884 in k10768 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10936,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10932,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8874(t4,((C_word*)((C_word*)t0)[10])[1],C_SCHEME_FALSE);}

/* k10930 in k10934 in k10892 in k10888 in k10884 in k10768 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10932,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10910,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 15   make-collector");
f_10510(t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k10908 in k10930 in k10934 in k10892 in k10888 in k10884 in k10768 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10910,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_10773(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,2,lf[188],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_10773(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k10771 in k10768 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_10773(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[114],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10773,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10776,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[4],lf[112]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,lf[241]);
t5=(C_word)C_a_i_list(&a,3,lf[112],((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[242],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[243],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_10776(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[4],lf[244]);
if(C_truep(t4)){
t5=(C_word)C_a_i_list(&a,2,lf[241],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_list(&a,3,lf[242],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[188],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_10776(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t5=(C_word)C_a_i_list(&a,3,lf[242],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[6])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[6])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[243],((C_word*)((C_word*)t0)[2])[1]);
t9=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t2;
f_10776(t12,((C_word*)((C_word*)t0)[6])[1]);}}}

/* k10774 in k10771 in k10768 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_10776(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10776,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=(C_word)C_a_i_list(&a,2,lf[188],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_10553(t6,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
f_10553(t2,C_SCHEME_UNDEFINED);}}

/* k10673 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10675,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[12],lf[236]);
t3=(C_truep(t2)?lf[145]:lf[149]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10681,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t3,a[5]=t5,a[6]=((C_word*)t0)[10],a[7]=t1,a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t7=((C_word*)((C_word*)t0)[6])[1];
t8=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10725,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=t5,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t7)){
t9=t8;
f_10725(2,t9,t7);}
else{
C_trace("ChickenBridge.scm: 15   gensym");
t9=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[239]);}}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10758,a[2]=t6,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   collector-acc");
f_10520(t7,((C_word*)((C_word*)t0)[5])[1]);}}

/* k10756 in k10673 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_10681(t3,t2);}

/* k10723 in k10673 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10725,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10751,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8874(t3,((C_word*)((C_word*)t0)[9])[1],C_SCHEME_FALSE);}

/* k10749 in k10723 in k10673 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10751,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10733,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 15   make-collector");
f_10510(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k10731 in k10749 in k10723 in k10673 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10733,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_10681(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[238],((C_word*)((C_word*)t0)[3])[1],C_fix(0));
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_10681(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k10679 in k10673 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_10681(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10681,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10721,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8874(t2,((C_word*)t0)[7],C_SCHEME_FALSE);}

/* k10719 in k10679 in k10673 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10721,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[178],((C_word*)((C_word*)t0)[5])[1]);
t6=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],((C_word*)t0)[7],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,3,lf[238],t5,t6);
t8=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[234],t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[183],t4,t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[3])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[3])+1,t11);
t13=((C_word*)t0)[2];
f_10553(t13,((C_word*)((C_word*)t0)[3])[1]);}

/* k10661 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_10596(t3,t2);}

/* k10632 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10634,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10656,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8874(t3,((C_word*)((C_word*)t0)[9])[1],C_fix(0));}

/* k10654 in k10632 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10656,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10642,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 15   make-collector");
f_10510(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k10640 in k10654 in k10632 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10642,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_10596(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[4];
f_10596(t6,((C_word*)((C_word*)t0)[2])[1]);}}

/* k10594 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_10596(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10596,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],lf[232]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,3,lf[146],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10553(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(C_word)C_a_i_list(&a,3,lf[146],((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t4=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[234],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=((C_word*)t0)[2];
f_10553(t8,((C_word*)((C_word*)t0)[3])[1]);}}

/* k10551 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_10553(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10553,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10560,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10564,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 15   reverse");
t4=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k10562 in k10551 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10564,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10568,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 15   reverse");
t3=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k10566 in k10562 in k10551 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10568,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10572,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 15   reverse");
t3=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k10570 in k10566 in k10562 in k10551 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10572,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10576,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 15   reverse");
t3=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k10574 in k10570 in k10566 in k10562 in k10551 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10576,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 15   make-loop-clause");
f_8640(((C_word*)t0)[6],(C_word)C_a_i_list(&a,14,lf[102],((C_word*)t0)[5],lf[103],((C_word*)t0)[4],lf[105],((C_word*)t0)[3],lf[107],((C_word*)t0)[2],lf[110],t1,lf[104],t2,lf[106],C_SCHEME_END_OF_LIST));}

/* k10558 in k10551 in k10548 in k10545 in k10541 in k10530 in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* collector-acc in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_10520(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10520,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_caddr(t2));}

/* collector-type in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_10515(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10515,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cadr(t2));}

/* make-collector in parse-accumulation in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_10510(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10510,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,4,t2,t3,t4,t5));}

/* parse-initially in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10342(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10342,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10353,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[229],t6,lf[230]));}
else{
t12=t11;
f_10353(2,t12,C_SCHEME_UNDEFINED);}}

/* k10351 in parse-initially in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10353,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10368,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 15   make-loop-clause");
f_8640(t6,(C_word)C_a_i_list(&a,4,lf[102],((C_word*)t0)[2],lf[105],t7));}

/* k10366 in k10351 in parse-initially in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-finally in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10304(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10304,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10315,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[226],t6,lf[227]));}
else{
t12=t11;
f_10315(2,t12,C_SCHEME_UNDEFINED);}}

/* k10313 in parse-finally in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10315,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10330,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 15   make-loop-clause");
f_8640(t6,(C_word)C_a_i_list(&a,4,lf[102],((C_word*)t0)[2],lf[109],t7));}

/* k10328 in k10313 in parse-finally in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-do in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10237(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10237,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10248,a[2]=t11,a[3]=t7,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10257,a[2]=t14,a[3]=t7,a[4]=t6,a[5]=t4,a[6]=t11,a[7]=t5,a[8]=((C_word)li98),tmp=(C_word)a,a+=9,tmp));
t16=((C_word*)t14)[1];
f_10257(t16,t12);}

/* do1038 in parse-do in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_10257(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10257,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10267,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t2)){
t4=t3;
f_10267(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 15   loop-op?");
f_8862(t3,t4,((C_word*)t0)[5]);}}

/* k10265 in do1038 in parse-do in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10267,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[223],((C_word*)t0)[4],lf[224]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10280,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   reverse");
t3=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[8])[1]);}}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)((C_word*)t0)[2])[1];
f_10257(t7,((C_word*)t0)[7]);}}

/* k10278 in k10265 in do1038 in parse-do in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k10246 in parse-do in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10248,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10255,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   make-loop-clause");
f_8640(t2,(C_word)C_a_i_list(&a,4,lf[102],((C_word*)t0)[3],lf[107],((C_word*)((C_word*)t0)[2])[1]));}

/* k10253 in k10246 in parse-do in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-with in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10044(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[37],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10044,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cdr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10051,a[2]=t12,a[3]=t10,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t16,a[8]=t18,a[9]=t8,a[10]=t1,tmp=(C_word)a,a+=11,tmp);
t20=C_SCHEME_UNDEFINED;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_set_block_item(t21,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10104,a[2]=t18,a[3]=t16,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t12,a[8]=t10,a[9]=t21,a[10]=t8,a[11]=((C_word)li96),tmp=(C_word)a,a+=12,tmp));
t23=((C_word*)t21)[1];
f_10104(t23,t19,C_SCHEME_TRUE,C_SCHEME_FALSE);}

/* do994 in parse-with in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_10104(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10104,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t7=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_10114,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t4,a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=((C_word*)t0)[10],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t6)){
t8=t7;
f_10114(2,t8,t6);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 15   loop-op?");
f_8862(t7,t8,((C_word*)t0)[5]);}}

/* k10112 in do994 in parse-with in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10114,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[12])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10125,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10228,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t6,a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 15   loop-variable?");
f_8868(t7,((C_word*)((C_word*)t0)[11])[1]);}}

/* k10226 in k10112 in do994 in parse-with in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[64],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10228,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)((C_word*)t0)[12])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10134,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[212],((C_word*)((C_word*)t0)[10])[1],lf[213]));}
else{
t4=t3;
f_10134(2,t4,C_SCHEME_UNDEFINED);}}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[214]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10156,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[11],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[215]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10185,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8874(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10193,a[2]=t4,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8874(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[216]));}}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[200]);
if(C_truep(t4)){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[217]));}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t9=((C_word*)t0)[7];
f_10125(2,t9,t8);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[218],((C_word*)((C_word*)t0)[10])[1],lf[219]));}
else{
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[220],((C_word*)((C_word*)t0)[10])[1],lf[221]));}}}}}

/* k10191 in k10226 in k10112 in do994 in parse-with in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10193,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_10156(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k10183 in k10226 in k10112 in do994 in parse-with in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10185,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10156(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k10154 in k10226 in k10112 in do994 in parse-with in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t6=((C_word*)t0)[2];
f_10125(2,t6,t5);}

/* k10132 in k10226 in k10112 in do994 in parse-with in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10134,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10137,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t2,((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[210],((C_word*)((C_word*)t0)[8])[1],lf[211]));}
else{
t3=t2;
f_10137(2,t3,C_SCHEME_UNDEFINED);}}

/* k10135 in k10132 in k10226 in k10112 in do994 in parse-with in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t6=((C_word*)t0)[2];
f_10125(2,t6,t5);}

/* k10123 in k10112 in do994 in parse-with in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_10104(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k10049 in parse-with in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10051,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10054,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[209]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10094,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8874(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10102,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8874(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}}
else{
t3=t2;
f_10054(2,t3,C_SCHEME_UNDEFINED);}}}

/* k10100 in k10049 in parse-with in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10102,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_10054(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k10092 in k10049 in parse-with in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10094,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10054(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k10052 in k10049 in parse-with in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10054,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10061,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10065,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   reverse");
t4=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k10063 in k10052 in k10049 in parse-with in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10065,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10069,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   reverse");
t3=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k10067 in k10063 in k10052 in k10049 in parse-with in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10069,2,t0,t1);}
C_trace("ChickenBridge.scm: 15   make-loop-clause");
f_8640(((C_word*)t0)[3],(C_word)C_a_i_list(&a,6,lf[102],lf[208],lf[103],((C_word*)t0)[2],lf[105],t1));}

/* k10059 in k10052 in k10049 in parse-with in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-general-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9902(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word ab[32],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_9902,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_cddr(t2);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9912,a[2]=t6,a[3]=t17,a[4]=t15,a[5]=t11,a[6]=t9,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t19=C_SCHEME_UNDEFINED;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_set_block_item(t20,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_9950,a[2]=t17,a[3]=t11,a[4]=t5,a[5]=t4,a[6]=t13,a[7]=t15,a[8]=t6,a[9]=t20,a[10]=t9,a[11]=((C_word)li94),tmp=(C_word)a,a+=12,tmp));
t22=((C_word*)t20)[1];
f_9950(t22,t18,C_SCHEME_FALSE);}

/* do956 in parse-general-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_9950(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9950,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_9960,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_9960(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 15   loop-op?");
f_8862(t5,t6,((C_word*)t0)[5]);}}

/* k9958 in do956 in parse-general-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9960,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_9971,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[206]));}
else{
t7=t6;
f_9971(2,t7,C_SCHEME_UNDEFINED);}}}

/* k9969 in k9958 in do956 in parse-general-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9971,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9974,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[200]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9983,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t5,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[201]));}
else{
t6=t5;
f_9983(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t2,lf[202]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10008,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[3],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[203]));}
else{
t7=t6;
f_10008(2,t7,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t3,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[204],((C_word*)((C_word*)t0)[12])[1],lf[205]));}}}

/* k10006 in k9969 in k9958 in do956 in parse-general-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_10008(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10008,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[7])+1,t5);
t7=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[6],t4);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t10=((C_word*)t0)[2];
f_9974(2,t10,t9);}

/* k9981 in k9969 in k9958 in do956 in parse-general-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9983,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[6],t2);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t8=((C_word*)t0)[2];
f_9974(2,t8,t7);}

/* k9972 in k9969 in k9958 in do956 in parse-general-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_9950(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k9910 in parse-general-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9912,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9919,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9948,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8874(t3,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* k9946 in k9910 in parse-general-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9948,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[5])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]):C_SCHEME_END_OF_LIST);
t4=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
t5=(C_truep(((C_word*)((C_word*)t0)[3])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 15   make-loop-clause");
f_8640(((C_word*)t0)[2],(C_word)C_a_i_list(&a,10,lf[102],lf[137],lf[103],t2,lf[105],t3,lf[107],t4,lf[108],t5));}

/* k9917 in k9910 in parse-general-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-sequence-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9551(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_9551,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9558,a[2]=t5,a[3]=t4,a[4]=t6,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 15   gensym");
t8=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[198]);}

/* k9556 in parse-sequence-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[44],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9558,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_9564,a[2]=t8,a[3]=t14,a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t20,a[7]=t18,a[8]=t12,a[9]=t10,a[10]=t16,a[11]=t4,a[12]=((C_word*)t0)[5],a[13]=t6,tmp=(C_word)a,a+=14,tmp);
t22=C_SCHEME_UNDEFINED;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_set_block_item(t23,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9792,a[2]=t14,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t20,a[7]=t23,a[8]=t4,a[9]=((C_word)li92),tmp=(C_word)a,a+=10,tmp));
t25=((C_word*)t23)[1];
f_9792(t25,t21,C_SCHEME_FALSE);}

/* do889 in k9556 in parse-sequence-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_9792(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9792,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9802,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t3,a[9]=((C_word*)t0)[8],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_9802(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
C_trace("ChickenBridge.scm: 15   loop-op?");
f_8862(t5,t6,((C_word*)t0)[4]);}}

/* k9800 in do889 in k9556 in parse-sequence-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9802,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[10];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t6=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9813,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t6,((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,1,lf[197]));}
else{
t7=t6;
f_9813(2,t7,C_SCHEME_UNDEFINED);}}}

/* k9811 in k9800 in do889 in k9556 in parse-sequence-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9813,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9816,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[186]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9825,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_9825(t6,t4);}
else{
t6=(C_word)C_eqp(t2,lf[196]);
if(C_truep(t6)){
t7=t5;
f_9825(t7,t6);}
else{
t7=(C_word)C_eqp(t2,lf[177]);
t8=t5;
f_9825(t8,(C_truep(t7)?t7:(C_word)C_eqp(t2,lf[181])));}}}

/* k9823 in k9811 in k9800 in do889 in k9556 in parse-sequence-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_9825(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9825,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9828,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[10])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,5,lf[189],((C_word*)((C_word*)t0)[9])[1],lf[190],((C_word*)((C_word*)t0)[10])[1],lf[191]));}
else{
t3=t2;
f_9828(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],lf[168]);
if(C_truep(t2)){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[192]));}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[177]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[193]));}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=((C_word*)t0)[6];
f_9816(2,t8,t7);}}}
else{
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[194],((C_word*)((C_word*)t0)[9])[1],lf[195]));}}}

/* k9826 in k9823 in k9811 in k9800 in do889 in k9556 in parse-sequence-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_9816(2,t7,t6);}

/* k9814 in k9811 in k9800 in do889 in k9556 in parse-sequence-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_9792(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k9562 in k9556 in parse-sequence-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9564,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_9790,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8874(t2,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* k9788 in k9562 in k9556 in parse-sequence-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9790,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_9786,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8874(t4,((C_word*)t0)[5],((C_word*)((C_word*)t0)[2])[1]);}

/* k9784 in k9788 in k9562 in k9556 in parse-sequence-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[92],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9786,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[12])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9575,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[177]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9592,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[4],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 15   gensym");
t7=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[180]);}
else{
t6=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[181]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9668,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(C_word)C_a_i_list(&a,3,lf[184],((C_word*)t0)[4],((C_word*)((C_word*)t0)[2])[1]);
t9=t7;
f_9668(t9,(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[3],t8));}
else{
t8=(C_word)C_a_i_list(&a,2,lf[184],((C_word*)t0)[4]);
t9=t7;
f_9668(t9,(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[3],t8));}}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9697,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t4,a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9732,a[2]=t7,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)((C_word*)t0)[2])[1]))){
t9=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t10=t8;
f_9732(t10,(C_word)C_eqp(t9,lf[187]));}
else{
t9=t8;
f_9732(t9,C_SCHEME_FALSE);}}
else{
t8=(C_word)C_a_i_list(&a,2,lf[188],((C_word*)t0)[4]);
t9=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[4],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t7;
f_9697(t12,((C_word*)((C_word*)t0)[6])[1]);}}}}

/* k9730 in k9784 in k9788 in k9562 in k9556 in parse-sequence-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_9732(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9732,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_list(&a,2,t2,((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[4],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9697(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_9697(t6,((C_word*)((C_word*)t0)[3])[1]);}}

/* k9695 in k9784 in k9788 in k9562 in k9556 in parse-sequence-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_9697(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9697,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9713,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[186]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[53],((C_word*)t0)[6]);
t5=t2;
f_9713(t5,(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[2],t4));}
else{
t4=t2;
f_9713(t4,(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[2],((C_word*)t0)[6]));}}

/* k9711 in k9695 in k9784 in k9788 in k9562 in k9556 in parse-sequence-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_9713(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9713,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[185],((C_word*)t0)[4]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9575(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k9666 in k9784 in k9788 in k9562 in k9556 in parse-sequence-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_9668(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9668,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[182],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[183],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_9575(t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k9590 in k9784 in k9788 in k9562 in k9556 in parse-sequence-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9592,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9595,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 15   gensym");
t3=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[179]);}

/* k9593 in k9590 in k9784 in k9788 in k9562 in k9556 in parse-sequence-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9595,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_9659,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t1,a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8874(t2,((C_word*)t0)[7],C_fix(0));}

/* k9657 in k9593 in k9590 in k9784 in k9788 in k9562 in k9556 in parse-sequence-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9659,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_9655,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8874(t4,((C_word*)t0)[9],C_SCHEME_FALSE);}

/* k9653 in k9657 in k9593 in k9590 in k9784 in k9788 in k9562 in k9556 in parse-sequence-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9655,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[83],((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[9],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[8])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[8])+1,t6);
t8=(C_word)C_a_i_list(&a,3,lf[146],C_fix(1),((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[7],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=(C_word)C_a_i_list(&a,3,lf[82],((C_word*)t0)[10],((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[5],t12);
t14=(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[4])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(C_word)C_a_i_list(&a,3,lf[145],((C_word*)t0)[7],((C_word*)t0)[9]);
t17=(C_word)C_a_i_list(&a,2,lf[178],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,((C_word*)((C_word*)t0)[3])[1]);
t19=C_mutate(((C_word *)((C_word*)t0)[3])+1,t18);
t20=((C_word*)t0)[2];
f_9575(t20,((C_word*)((C_word*)t0)[3])[1]);}

/* k9573 in k9784 in k9788 in k9562 in k9556 in parse-sequence-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_9575(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9575,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9582,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9586,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 15   reverse");
t4=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k9584 in k9573 in k9784 in k9788 in k9562 in k9556 in parse-sequence-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9586,2,t0,t1);}
C_trace("ChickenBridge.scm: 15   make-loop-clause");
f_8640(((C_word*)t0)[6],(C_word)C_a_i_list(&a,12,lf[102],lf[137],lf[103],t1,lf[106],((C_word*)((C_word*)t0)[5])[1],lf[105],((C_word*)((C_word*)t0)[4])[1],lf[107],((C_word*)((C_word*)t0)[3])[1],lf[108],((C_word*)((C_word*)t0)[2])[1]));}

/* k9580 in k9573 in k9784 in k9788 in k9562 in k9556 in parse-sequence-iteration in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-repeat in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9504(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_9504,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t1,t4,t2,(C_word)C_a_i_list(&a,1,lf[174]));}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9519,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=((C_word)li89),tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9537,a[2]=t2,a[3]=((C_word)li90),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   call-with-values");
C_call_with_values(4,0,t1,t6,t7);}}

/* a9536 in parse-repeat in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9537(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_9537,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 15   values");
C_values(4,0,t1,t2,t4);}

/* a9518 in parse-repeat in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9519,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9531,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 15   gensym");
t3=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[175]);}

/* k9529 in a9518 in parse-repeat in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9531,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,4,lf[137],t1,lf[147],t2);
C_trace("ChickenBridge.scm: 15   parse-numerical-for");
t4=C_retrieve2(lf[135],"parse-numerical-for");
f_9122(5,t4,((C_word*)t0)[4],t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9122(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word ab[48],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_9122,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_i_cddr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_FALSE;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_9132,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t24,a[6]=t10,a[7]=t12,a[8]=t20,a[9]=t8,a[10]=t1,a[11]=t22,a[12]=t5,a[13]=t26,tmp=(C_word)a,a+=14,tmp);
t28=C_SCHEME_UNDEFINED;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_set_block_item(t29,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_9331,a[2]=t22,a[3]=t18,a[4]=t20,a[5]=t2,a[6]=t4,a[7]=t14,a[8]=t16,a[9]=t29,a[10]=t8,a[11]=((C_word)li87),tmp=(C_word)a,a+=12,tmp));
t31=((C_word*)t29)[1];
f_9331(t31,t27,C_SCHEME_FALSE);}

/* do790 in parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_9331(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9331,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_9341,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_9341(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 15   loop-op?");
f_8862(t5,t6,((C_word*)t0)[6]);}}

/* k9339 in do790 in parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9341,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_9352,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[172]));}
else{
t7=t6;
f_9352(2,t7,C_SCHEME_UNDEFINED);}}}

/* k9350 in k9339 in do790 in parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[132],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9352,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9355,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[151]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(t2,lf[141]));
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9367,a[2]=t3,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[152],((C_word*)((C_word*)t0)[12])[1],lf[153],((C_word*)((C_word*)t0)[9])[1],lf[154]));}
else{
t7=t6;
f_9367(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t2,lf[147]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9388,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t7,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[155],((C_word*)((C_word*)t0)[12])[1],lf[156],((C_word*)((C_word*)t0)[3])[1],lf[157]));}
else{
t8=t7;
f_9388(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t2,lf[158]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9409,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t8,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[159],((C_word*)((C_word*)t0)[12])[1],lf[160],((C_word*)((C_word*)t0)[3])[1],lf[161]));}
else{
t9=t8;
f_9409(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t2,lf[143]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9430,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t9,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[162],((C_word*)((C_word*)t0)[12])[1],lf[163],((C_word*)((C_word*)t0)[3])[1],lf[164]));}
else{
t10=t9;
f_9430(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t2,lf[150]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9451,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t10,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[165],((C_word*)((C_word*)t0)[12])[1],lf[166],((C_word*)((C_word*)t0)[3])[1],lf[167]));}
else{
t11=t10;
f_9451(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(C_word)C_eqp(t2,lf[168]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9472,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t11,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[169]));}
else{
t12=t11;
f_9472(2,t12,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[12])[1],lf[171]));}}}}}}}

/* k9470 in k9350 in k9339 in do790 in parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t6=((C_word*)t0)[2];
f_9355(2,t6,t5);}

/* k9449 in k9350 in k9339 in do790 in parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_9355(2,t7,t6);}

/* k9428 in k9350 in k9339 in do790 in parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_9355(2,t7,t6);}

/* k9407 in k9350 in k9339 in do790 in parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_9355(2,t7,t6);}

/* k9386 in k9350 in k9339 in do790 in parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_9355(2,t7,t6);}

/* k9365 in k9350 in k9339 in do790 in parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_9355(2,t7,t6);}

/* k9353 in k9350 in k9339 in do790 in parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_9331(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k9130 in parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9132,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_9135,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_9135(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[151]);
t5=t2;
f_9135(t5,t4);}}

/* k9133 in k9130 in parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_9135(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9135,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_9138,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[141]);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9298,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[13],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t3)){
t5=t4;
f_9298(t5,t3);}
else{
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[150]);
t6=t4;
f_9298(t6,(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[143])));}}

/* k9296 in k9133 in k9130 in parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_9298(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[142]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[143]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[144]);
t5=((C_word*)t0)[2];
f_9138(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[145]);
t5=((C_word*)t0)[2];
f_9138(t5,t4);}}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[146]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[147]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[148]);
t5=((C_word*)t0)[2];
f_9138(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[149]);
t5=((C_word*)t0)[2];
f_9138(t5,t4);}}}

/* k9136 in k9133 in k9130 in parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_9138(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9138,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9141,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9269,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=(C_truep(t6)?t6:C_fix(0));
C_trace("ChickenBridge.scm: 15   make-binding");
f_8874(t5,((C_word*)t0)[10],t7);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9289,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8874(t5,((C_word*)t0)[10],C_SCHEME_FALSE);}}

/* k9287 in k9136 in k9133 in k9130 in parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9289,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9141(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k9267 in k9136 in k9133 in k9130 in parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9269,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9141(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k9139 in k9136 in k9133 in k9130 in parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_9141(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9141,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9144,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t3)){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t2;
f_9144(t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9234,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 15   gensym");
t5=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[140]);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_fix(1));
t5=t2;
f_9144(t5,t4);}}

/* k9232 in k9139 in k9136 in k9133 in k9130 in parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9234,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9251,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8874(t2,t1,C_SCHEME_FALSE);}

/* k9249 in k9232 in k9139 in k9136 in k9133 in k9130 in parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9251,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[5]);
t8=((C_word*)t0)[2];
f_9144(t8,t7);}

/* k9142 in k9139 in k9136 in k9133 in k9130 in parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_9144(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9144,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[9],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9151,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9183,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[2],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 15   gensym");
t7=C_retrieve(lf[138]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[139]);}
else{
t6=t5;
f_9151(t6,C_SCHEME_UNDEFINED);}}

/* k9181 in k9142 in k9139 in k9136 in k9133 in k9130 in parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9183,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9186,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9201,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8874(t3,t1,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9217,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 15   make-binding");
f_8874(t3,t1,C_SCHEME_FALSE);}}

/* k9215 in k9181 in k9142 in k9139 in k9136 in k9133 in k9130 in parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9217,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[136],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9186(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k9199 in k9181 in k9142 in k9139 in k9136 in k9133 in k9130 in parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9201,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9186(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k9184 in k9181 in k9142 in k9139 in k9136 in k9133 in k9130 in parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_9186(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9186,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9151(t4,t3);}

/* k9149 in k9142 in k9139 in k9136 in k9133 in k9130 in parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_9151(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9151,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9158,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9162,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 15   reverse");
t4=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k9160 in k9149 in k9142 in k9139 in k9136 in k9133 in k9130 in parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9162,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9166,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 15   reverse");
t3=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k9164 in k9160 in k9149 in k9142 in k9139 in k9136 in k9133 in k9130 in parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9166,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_truep(t3)?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 15   make-loop-clause");
f_8640(((C_word*)t0)[3],(C_word)C_a_i_list(&a,10,lf[102],lf[137],lf[103],((C_word*)t0)[2],lf[105],t1,lf[108],t2,lf[106],t4));}

/* k9156 in k9149 in k9142 in k9139 in k9136 in k9133 in k9130 in parse-numerical-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9040(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_9040,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9044,a[2]=t3,a[3]=t4,a[4]=t1,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 15   loop-op?");
f_8862(t5,t6,t4);}

/* k9042 in parse-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9044,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[128]));}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9062,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 15   loop-variable?");
f_8868(t4,t3);}}

/* k9060 in k9042 in parse-for in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9062,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,1,lf[129]));}
else{
t3=(C_word)C_i_caddr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdddr(((C_word*)t0)[3]);
t5=(C_word)C_i_assoc(t3,t4);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t5);
t7=t6;
((C_proc5)C_retrieve_proc(t7))(5,t7,((C_word*)t0)[5],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t6=(C_word)C_i_caddr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,4,lf[130],t6,lf[131],lf[132]));}}}
else{
t2=(C_word)C_i_cadr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 15   loop-error");
f_8880(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,3,lf[133],t2,lf[134]));}}

/* loop-error in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_8880(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8880,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8936,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8888,a[2]=t2,a[3]=t9,a[4]=t7,a[5]=((C_word)li84),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_8888(t11,t5,((C_word*)t7)[1],C_SCHEME_END_OF_LIST);}

/* do741 in loop-error in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_8888(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8888,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8898,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t4,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t5)){
t7=t6;
f_8898(2,t7,t5);}
else{
t7=(C_word)C_eqp(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t7)){
t8=t6;
f_8898(2,t8,C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 15   loop-op?");
f_8862(t6,t8,((C_word*)t0)[2]);}}}

/* k8896 in do741 in loop-error in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8898,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 15   reverse");
t2=*((C_word*)lf[126]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)((C_word*)t0)[3])[1];
f_8888(t7,((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}}

/* k8934 in loop-error in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8936,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8939,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 15   newline");
t3=*((C_word*)lf[118]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k8937 in k8934 in loop-error in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8939,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8942,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 15   display");
t3=*((C_word*)lf[119]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[125]);}

/* k8940 in k8937 in k8934 in loop-error in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8942,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8945,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9017,a[2]=t4,a[3]=((C_word)li83),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_9017(t6,t2,((C_word*)t0)[2]);}

/* do751 in k8940 in k8937 in k8934 in loop-error in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_9017(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9017,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9027,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 15   display");
t5=*((C_word*)lf[119]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k9025 in do751 in k8940 in k8937 in k8934 in loop-error in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_9027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_9017(t3,((C_word*)t0)[2],t2);}

/* k8943 in k8940 in k8937 in k8934 in loop-error in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8945,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8948,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   newline");
t3=*((C_word*)lf[118]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k8946 in k8943 in k8940 in k8937 in k8934 in loop-error in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8948,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8951,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 15   display");
t3=*((C_word*)lf[119]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[124]);}

/* k8949 in k8946 in k8943 in k8940 in k8937 in k8934 in loop-error in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8951,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8954,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 15   display");
t3=*((C_word*)lf[119]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[120]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8971,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word)li82),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_8971(t6,t2,((C_word*)t0)[2]);}}

/* do756 in k8949 in k8946 in k8943 in k8940 in k8937 in k8934 in loop-error in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_8971(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8971,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8981,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,((C_word*)t0)[2]);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 15   display");
t5=*((C_word*)lf[119]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,lf[123]);}
else{
t5=t3;
f_8981(2,t5,C_SCHEME_UNDEFINED);}}}

/* k8979 in do756 in k8949 in k8946 in k8943 in k8940 in k8937 in k8934 in loop-error in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8981,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8984,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 15   display");
t4=*((C_word*)lf[119]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k8982 in k8979 in do756 in k8949 in k8946 in k8943 in k8940 in k8937 in k8934 in loop-error in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8984,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8987,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?lf[121]:lf[122]);
C_trace("ChickenBridge.scm: 15   display");
t6=*((C_word*)lf[119]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t2,t5);}

/* k8985 in k8982 in k8979 in do756 in k8949 in k8946 in k8943 in k8940 in k8937 in k8934 in loop-error in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_8971(t3,((C_word*)t0)[2],t2);}

/* k8952 in k8949 in k8946 in k8943 in k8940 in k8937 in k8934 in loop-error in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8954,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8957,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 15   newline");
t3=*((C_word*)lf[118]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k8955 in k8952 in k8949 in k8946 in k8943 in k8940 in k8937 in k8934 in loop-error in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   error");
t2=*((C_word*)lf[74]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[117]);}

/* make-binding in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_8874(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8874,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* loop-variable? in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_8868(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8868,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_symbolp(t2));}

/* loop-op? in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_8862(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8862,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_assoc(t2,t3));}

/* gather-clauses in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_8791(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8791,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8793,a[2]=((C_word)li77),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8832,a[2]=t3,a[3]=t4,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 15   gather-clause");
f_8793(t5,t3,C_retrieve2(lf[92],"loop-bindings"));}

/* k8830 in gather-clauses in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8832,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8836,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 15   gather-clause");
f_8793(t2,((C_word*)t0)[2],C_retrieve2(lf[93],"loop-collectors"));}

/* k8834 in k8830 in gather-clauses in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8836,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8840,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 15   gather-clause");
f_8793(t2,((C_word*)t0)[2],C_retrieve2(lf[94],"loop-initially"));}

/* k8838 in k8834 in k8830 in gather-clauses in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8840,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8844,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 15   gather-clause");
f_8793(t2,((C_word*)t0)[2],C_retrieve2(lf[95],"loop-end-tests"));}

/* k8842 in k8838 in k8834 in k8830 in gather-clauses in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8844,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_8848,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 15   gather-clause");
f_8793(t2,((C_word*)t0)[2],C_retrieve2(lf[96],"loop-looping"));}

/* k8846 in k8842 in k8838 in k8834 in k8830 in gather-clauses in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8848,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8852,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 15   gather-clause");
f_8793(t2,((C_word*)t0)[2],C_retrieve2(lf[98],"loop-stepping"));}

/* k8850 in k8846 in k8842 in k8838 in k8834 in k8830 in gather-clauses in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8852,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_8856,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 15   gather-clause");
f_8793(t2,((C_word*)t0)[2],C_retrieve2(lf[99],"loop-finally"));}

/* k8854 in k8850 in k8846 in k8842 in k8838 in k8834 in k8830 in gather-clauses in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8856,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8860,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 15   gather-clause");
f_8793(t2,((C_word*)t0)[2],C_retrieve2(lf[100],"loop-returning"));}

/* k8858 in k8854 in k8850 in k8846 in k8842 in k8838 in k8834 in k8830 in gather-clauses in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8860,2,t0,t1);}
C_trace("ChickenBridge.scm: 15   make-loop-clause");
f_8640(((C_word*)t0)[10],(C_word)C_a_i_list(&a,18,lf[102],((C_word*)t0)[9],lf[103],((C_word*)t0)[8],lf[104],((C_word*)t0)[7],lf[105],((C_word*)t0)[6],lf[106],((C_word*)t0)[5],lf[107],((C_word*)t0)[4],lf[108],((C_word*)t0)[3],lf[109],((C_word*)t0)[2],lf[110],t1));}

/* gather-clause in gather-clauses in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_8793(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8793,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8799,a[2]=t3,a[3]=t6,a[4]=t4,a[5]=((C_word)li76),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_8799(t8,t1,C_SCHEME_END_OF_LIST);}

/* do724 in gather-clause in gather-clauses in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_8799(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8799,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8810,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8821,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 15   accessor");
t7=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k8819 in do724 in gather-clause in gather-clauses in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 15   append");
t2=*((C_word*)lf[112]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k8808 in do724 in gather-clause in gather-clauses in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_8799(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* make-loop-clause in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_8640(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8640,NULL,2,t1,t2);}
t3=(C_word)C_a_i_vector(&a,9,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8655,a[2]=t5,a[3]=t3,a[4]=((C_word)li74),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_8655(t7,t1,t2);}}

/* do712 in make-loop-clause in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_8655(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8655,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[3]);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8668,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_eqp(t3,lf[102]);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 15   loop-operator-set!");
f_8538(t4,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_eqp(t3,lf[103]);
if(C_truep(t6)){
t7=(C_word)C_i_cadr(t2);
t8=t4;
f_8668(2,t8,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(1),t7));}
else{
t7=(C_word)C_eqp(t3,lf[104]);
if(C_truep(t7)){
t8=(C_word)C_i_cadr(t2);
t9=t4;
f_8668(2,t9,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(2),t8));}
else{
t8=(C_word)C_eqp(t3,lf[105]);
if(C_truep(t8)){
t9=(C_word)C_i_cadr(t2);
t10=t4;
f_8668(2,t10,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(3),t9));}
else{
t9=(C_word)C_eqp(t3,lf[106]);
if(C_truep(t9)){
t10=(C_word)C_i_cadr(t2);
t11=t4;
f_8668(2,t11,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(4),t10));}
else{
t10=(C_word)C_eqp(t3,lf[107]);
if(C_truep(t10)){
t11=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 15   loop-looping-set!");
f_8598(t4,((C_word*)t0)[3],t11);}
else{
t11=(C_word)C_eqp(t3,lf[108]);
if(C_truep(t11)){
t12=(C_word)C_i_cadr(t2);
t13=t4;
f_8668(2,t13,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(6),t12));}
else{
t12=(C_word)C_eqp(t3,lf[109]);
if(C_truep(t12)){
t13=(C_word)C_i_cadr(t2);
t14=t4;
f_8668(2,t14,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(7),t13));}
else{
t13=(C_word)C_eqp(t3,lf[110]);
if(C_truep(t13)){
t14=(C_word)C_i_cadr(t2);
t15=t4;
f_8668(2,t15,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(8),t14));}
else{
t14=t4;
f_8668(2,t14,C_SCHEME_UNDEFINED);}}}}}}}}}}}

/* k8666 in do712 in make-loop-clause in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_8655(t3,((C_word*)t0)[2],t2);}

/* loop-returning in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8628(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8628,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(8)));}

/* loop-finally in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8616(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8616,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(7)));}

/* loop-stepping in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8604(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8604,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(6)));}

/* loop-looping-set! in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_8598(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8598,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(5),t3));}

/* loop-looping in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8592(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8592,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(5)));}

/* loop-end-tests in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8580(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8580,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(4)));}

/* loop-initially in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8568(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8568,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(3)));}

/* loop-collectors in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8556(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8556,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(2)));}

/* loop-bindings in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8544(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8544,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(1)));}

/* loop-operator-set! in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_8538(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8538,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(0),t3));}

/* position in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8488(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr4r,(void*)f_8488r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_8488r(t0,t1,t2,t3,t4);}}

static void C_ccall f_8488r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8496,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8522,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 14   key");
t7=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,C_SCHEME_FALSE);}

/* k8520 in position in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8522,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8526,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 14   start");
t3=C_retrieve(lf[88]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_fix(0));}

/* k8524 in k8520 in position in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8526,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8530,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 14   end");
t3=C_retrieve(lf[89]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k8528 in k8524 in k8520 in position in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 14   args");
t2=((C_word*)t0)[5];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k8494 in position in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8496,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8500,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_truep(C_retrieve(lf[87]))?(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8505,a[2]=((C_word*)t0)[3],a[3]=((C_word)li61),tmp=(C_word)a,a+=4,tmp):(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8514,a[2]=((C_word*)t0)[3],a[3]=((C_word)li62),tmp=(C_word)a,a+=4,tmp));
C_trace("ChickenBridge.scm: 14   %mapseq");
f_8370(t2,t3,((C_word*)t0)[2],C_SCHEME_FALSE,C_retrieve(lf[88]),C_retrieve(lf[89]));}

/* f_8514 in k8494 in position in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8514(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8514,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_equalp(t2,((C_word*)t0)[2]));}

/* f_8505 in k8494 in position in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8505(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8505,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8513,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 14   key");
t4=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k8511 */
static void C_ccall f_8513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_equalp(t1,((C_word*)t0)[2]));}

/* k8498 in k8494 in position in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 14   with-optkeys");
t2=C_retrieve(lf[86]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* find in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8444(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr4r,(void*)f_8444r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_8444r(t0,t1,t2,t3,t4);}}

static void C_ccall f_8444r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8452,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8478,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 14   key");
t7=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,C_SCHEME_FALSE);}

/* k8476 in find in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8478,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8482,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 14   start");
t3=C_retrieve(lf[88]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_fix(0));}

/* k8480 in k8476 in find in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8482,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8486,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 14   end");
t3=C_retrieve(lf[89]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k8484 in k8480 in k8476 in find in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 14   args");
t2=((C_word*)t0)[5];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k8450 in find in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8452,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8456,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_truep(C_retrieve(lf[87]))?(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8461,a[2]=((C_word*)t0)[3],a[3]=((C_word)li58),tmp=(C_word)a,a+=4,tmp):(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8470,a[2]=((C_word*)t0)[3],a[3]=((C_word)li59),tmp=(C_word)a,a+=4,tmp));
C_trace("ChickenBridge.scm: 14   %mapseq");
f_8370(t2,t3,((C_word*)t0)[2],C_SCHEME_TRUE,C_retrieve(lf[88]),C_retrieve(lf[89]));}

/* f_8470 in k8450 in find in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8470(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8470,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_equalp(t2,((C_word*)t0)[2]));}

/* f_8461 in k8450 in find in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8461(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8461,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8469,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 14   key");
t4=C_retrieve(lf[87]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k8467 */
static void C_ccall f_8469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_equalp(t1,((C_word*)t0)[2]));}

/* k8454 in k8450 in find in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 14   with-optkeys");
t2=C_retrieve(lf[86]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* %mapseq in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_8370(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8370,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_8374,a[2]=t8,a[3]=t5,a[4]=t1,a[5]=t3,a[6]=t10,a[7]=t2,a[8]=t4,a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_listp(t3))){
t12=C_set_block_item(t10,0,*((C_word*)lf[67]+1));
t13=C_set_block_item(t8,0,*((C_word*)lf[79]+1));
t14=t11;
f_8374(2,t14,t13);}
else{
if(C_truep((C_word)C_i_stringp(t3))){
t12=C_set_block_item(t10,0,*((C_word*)lf[80]+1));
t13=C_set_block_item(t8,0,*((C_word*)lf[81]+1));
t14=t11;
f_8374(2,t14,t13);}
else{
if(C_truep((C_word)C_i_vectorp(t3))){
t12=C_set_block_item(t10,0,*((C_word*)lf[82]+1));
t13=C_set_block_item(t8,0,*((C_word*)lf[83]+1));
t14=t11;
f_8374(2,t14,t13);}
else{
C_trace("ChickenBridge.scm: 14   error");
t12=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t12))(4,t12,t11,lf[84],t3);}}}}

/* k8372 in %mapseq in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8374,2,t0,t1);}
t2=((C_word*)t0)[9];
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8381,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t2)){
t4=t3;
f_8381(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 14   seqlen");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[5]);}}

/* k8379 in k8372 in %mapseq in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8381,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8383,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=t3,a[7]=((C_word)li56),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_8383(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do625 in k8379 in k8372 in %mapseq in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_8383(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8383,NULL,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t10=(C_word)C_i_greater_or_equalp(t2,t3);
t11=(C_truep(t10)?t10:((C_word*)t8)[1]);
if(C_truep(t11)){
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t9)[1]);}
else{
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8397,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t9,a[5]=t8,a[6]=t3,a[7]=t1,a[8]=((C_word*)t0)[6],a[9]=t2,a[10]=t7,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 14   getter");
t13=((C_word*)((C_word*)t0)[3])[1];
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,((C_word*)t0)[2],t2);}}

/* k8395 in do625 in k8379 in k8372 in %mapseq in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8397,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8400,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8410,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 14   func");
t5=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[10])[1]);}

/* k8408 in k8395 in do625 in k8379 in k8372 in %mapseq in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
t2=(C_truep(((C_word*)t0)[7])?((C_word*)((C_word*)t0)[6])[1]:((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t5=((C_word*)t0)[2];
f_8400(t5,t4);}
else{
t2=((C_word*)t0)[2];
f_8400(t2,C_SCHEME_UNDEFINED);}}

/* k8398 in k8395 in do625 in k8379 in k8372 in %mapseq in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_8400(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8400,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],C_fix(1));
t3=((C_word*)((C_word*)t0)[7])[1];
f_8383(t3,((C_word*)t0)[6],t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* list-prop in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8284(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr4r,(void*)f_8284r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_8284r(t0,t1,t2,t3,t4);}}

static void C_ccall f_8284r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
if(C_truep((C_word)C_i_nullp(t2))){
t5=(C_word)C_i_nullp(t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_truep(t5)?C_SCHEME_FALSE:(C_word)C_i_car(t4)));}
else{
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_eqvp(t5,t3))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_cadr(t2));}
else{
t6=(C_word)C_i_cddr(t2);
C_apply(6,0,t1,C_retrieve2(lf[77],"list-prop"),t6,t3,t4);}}}

/* list-index in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_8166(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8166,NULL,3,t1,t2,t3);}
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8172,a[2]=t2,a[3]=t5,a[4]=((C_word)li53),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_8172(t7,t1,t3,C_fix(0),C_SCHEME_FALSE);}

/* do579 in list-index in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_8172(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8172,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_truep(t6)?t6:(C_word)C_i_nullp(t2));
if(C_truep(t7)){
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,((C_word*)t5)[1]);}
else{
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8182,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8196,a[2]=t8,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 14   p");
t11=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t11))(3,t11,t9,t10);}}

/* k8194 in do579 in list-index in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_8182(t3,t2);}
else{
t2=((C_word*)t0)[2];
f_8182(t2,C_SCHEME_UNDEFINED);}}

/* k8180 in do579 in list-index in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_8182(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8182,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t4=((C_word*)((C_word*)t0)[4])[1];
f_8172(t4,((C_word*)t0)[3],t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* make-list in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8067(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_8067r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8067r(t0,t1,t2,t3);}}

static void C_ccall f_8067r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8071,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(0)))){
C_trace("ChickenBridge.scm: 14   error");
t5=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[75],t2);}
else{
t5=t4;
f_8071(2,t5,C_SCHEME_UNDEFINED);}}

/* k8069 in make-list in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8071,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8073,a[2]=t3,a[3]=((C_word)li50),tmp=(C_word)a,a+=4,tmp));
t7=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8096,a[2]=t5,a[3]=((C_word)li51),tmp=(C_word)a,a+=4,tmp));
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 14   l1");
t8=((C_word*)t3)[1];
f_8073(t8,((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_closurep(t8))){
C_trace("ChickenBridge.scm: 14   l2");
t9=((C_word*)t5)[1];
f_8096(t9,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t9=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 14   l1");
t10=((C_word*)t3)[1];
f_8073(t10,((C_word*)t0)[3],((C_word*)t0)[2],t9);}}}

/* l2 in k8069 in make-list in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_8096(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8096,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8113,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cdr(t3);
C_apply(4,0,t4,t5,t6);}}

/* k8111 in l2 in k8069 in make-list in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8113,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8117,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],C_fix(1));
C_trace("ChickenBridge.scm: 14   l2");
t4=((C_word*)((C_word*)t0)[3])[1];
f_8096(t4,t2,t3,((C_word*)t0)[2]);}

/* k8115 in k8111 in l2 in k8069 in make-list in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8117,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* l1 in k8069 in make-list in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_8073(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(8);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_8073,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8090,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 14   l1");
t7=t4;
t8=t5;
t9=t3;
t1=t7;
t2=t8;
t3=t9;
goto loop;}}

/* k8088 in l1 in k8069 in make-list in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_8090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8090,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* concat in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7905(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_7905r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7905r(t0,t1,t2);}}

static void C_ccall f_7905r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7914,a[2]=t5,a[3]=t7,a[4]=t3,a[5]=((C_word)li48),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_7914(t9,t1,t2);}

/* do540 in concat in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_7914(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7914,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_nullp(t3);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7930,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t4)){
t6=t5;
f_7930(2,t6,t4);}
else{
t6=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_car(t2);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7952,a[2]=t9,a[3]=((C_word*)t0)[2],a[4]=((C_word)li47),tmp=(C_word)a,a+=5,tmp));
t11=((C_word*)t9)[1];
f_7952(t11,t5,t7);}
else{
t7=(C_word)C_i_car(t2);
t8=(C_word)C_a_i_list(&a,1,t7);
t9=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[2])+1,t10);
t12=t5;
f_7930(2,t12,t11);}}}}

/* do545 in do540 in concat in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_7952(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_7952,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=(C_word)C_i_cdr(t2);
t10=t1;
t11=t8;
t1=t10;
t2=t11;
goto loop;}}

/* k7928 in do540 in concat in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_7914(t3,((C_word*)t0)[2],t2);}

/* tail in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7815(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7815,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 14   tail");
t5=C_retrieve(lf[71]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* butlast in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7767(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7767,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,1,t5));}
else{
t5=(C_word)C_i_car(t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7801,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 14   butlast");
t8=C_retrieve(lf[70]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}}

/* k7799 in butlast in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7801,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* last in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7744(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7744,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 14   last");
t5=C_retrieve(lf[69]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* rest in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7738(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7738,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* tenth in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7723(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7723,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cadr(t4));}

/* ninth in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7709(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7709,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_car(t4));}

/* eighth in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7699(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7699,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadddr(t3));}

/* seventh in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7689(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7689,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_caddr(t3));}

/* sixth in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7679(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7679,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t3));}

/* fifth in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7669(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7669,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t3));}

/* shell in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7659(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7659,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6925,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[20]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_6925(2,t4,C_SCHEME_FALSE);}}

/* k6923 in shell in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_6925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub47(C_SCHEME_UNDEFINED,t1));}

/* print-output in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7628(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr3rv,(void*)f_7628r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_7628r(t0,t1,t2,t3);}}

static void C_ccall f_7628r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(4);
t4=(C_word)C_vemptyp(t3);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7638,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t4)){
t6=t5;
f_7638(t6,t4);}
else{
t6=(C_word)C_i_vector_ref(t3,C_fix(0));
t7=t5;
f_7638(t7,(C_word)C_i_not(t6));}}

/* k7636 in print-output in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_7638(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 14   ffi_print_output");
f_6892(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
C_trace("ChickenBridge.scm: 14   ffi_print_output");
f_6892(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_TRUE);}}

/* print-error in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7622(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7622,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6883,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[20]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_6883(2,t4,C_SCHEME_FALSE);}}

/* k6881 in print-error in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_6883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub27(C_SCHEME_UNDEFINED,t1));}

/* quit in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7616,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub24(C_SCHEME_UNDEFINED));}

/* ffi_mp_send_data in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_7499(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7499,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub380(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* ffi_pathname_type in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_7350(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7350,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7359,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t2)){
t5=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t6=C_retrieve(lf[20]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t5=t4;
f_7359(2,t5,C_SCHEME_FALSE);}}

/* k7357 in ffi_pathname_type in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)stub307(((C_word*)t0)[3],t1);
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[46]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,C_fix(0));}

/* ffi_sched_stop in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_7256(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7256,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub259(C_SCHEME_UNDEFINED,t3));}

/* ffi_sched_sprout in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_7236(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7236,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=(C_word)C_i_foreign_fixnum_argumentp(t4);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub247(C_SCHEME_UNDEFINED,t2,t5,t6));}

/* ffi_ranbrown in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7205,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub221(t2));}

/* ffi_ranpink in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7202,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub218(t2));}

/* ffi_ranpoisson in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_7195(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7195,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub215(C_SCHEME_UNDEFINED,t3));}

/* ffi_rancauchy in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7192,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub211(t2));}

/* ffi_rangamma in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_7185(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7185,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub207(t3,t4));}

/* ffi_ranexp in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_7167(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7167,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub195(t3,t4));}

/* ffi_rangauss in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_7156(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7156,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub189(t4,t5,t6));}

/* ffi_ranmiddle in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7153,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub184(t2));}

/* ffi_ranhigh in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7150,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub181(t2));}

/* ffi_ranlow in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7147,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub178(t2));}

/* ffi_ranfloat in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_7118(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7118,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub161(t3,t4));}

/* ffi_ranint in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_7111(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7111,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub157(C_SCHEME_UNDEFINED,t3));}

/* ffi_ranseed in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7108(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7108,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub153(C_SCHEME_UNDEFINED,t2));}

/* ffi_keynum_to_hertz in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_7087(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7087,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub139(t3,t4));}

/* ffi_geoseg in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7068(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_7068,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub131(t6,t7,t8,t9,t10));}

/* ffi_explseg in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7049(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_7049,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub120(t6,t7,t8,t9,t10));}

/* ffi_scaler_to_cents in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7042(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7042,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub113(C_SCHEME_UNDEFINED,t3));}

/* ffi_cents_to_scaler in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7035(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7035,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_fixnum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub108(t3,t4));}

/* ffi_rhythm_to_seconds in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_7020(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7020,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t2);
t7=(C_word)C_i_foreign_flonum_argumentp(t3);
t8=(C_word)C_i_foreign_flonum_argumentp(t4);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)stub101(t5,t6,t7,t8));}

/* ffi_quantize in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_7009(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7009,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub93(t4,t5,t6));}

/* ffi_float_to_fixnum in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_7002(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7002,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub88(C_SCHEME_UNDEFINED,t3));}

/* ffi_rescale in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_6948(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6948,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t9=(C_word)C_i_foreign_flonum_argumentp(t2);
t10=(C_word)C_i_foreign_flonum_argumentp(t3);
t11=(C_word)C_i_foreign_flonum_argumentp(t4);
t12=(C_word)C_i_foreign_flonum_argumentp(t5);
t13=(C_word)C_i_foreign_flonum_argumentp(t6);
t14=(C_word)C_i_foreign_flonum_argumentp(t7);
t15=t1;
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)stub64(t8,t9,t10,t11,t12,t13,t14));}

/* ffi_print_output in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_6892(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6892,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6897,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t2)){
t5=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t6=C_retrieve(lf[20]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t5=t4;
f_6897(2,t5,C_SCHEME_FALSE);}}

/* k6895 in ffi_print_output in k6871 in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_6897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub34(C_SCHEME_UNDEFINED,t1,((C_word*)t0)[2]));}

/* read-from-string in k6758 in k6755 in k6752 in k6749 */
static void C_fcall f_6811(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6811,NULL,2,t1,t2);}
C_trace("ChickenBridge.scm: 12   call-with-input-string");
t3=C_retrieve(lf[17]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,t2,*((C_word*)lf[18]+1));}

/* hash-ref in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_6805(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_6805,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 12   hash-table-ref/default");
t4=C_retrieve(lf[15]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t1,t2,t3,C_SCHEME_FALSE);}

/* make-eq-hash-table in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_6798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6798,2,t0,t1);}
C_trace("ChickenBridge.scm: 12   make-hash-table");
t2=C_retrieve(lf[8]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,*((C_word*)lf[11]+1));}

/* make-equal-hash-table in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_6792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6792,2,t0,t1);}
C_trace("ChickenBridge.scm: 12   make-hash-table");
t2=C_retrieve(lf[8]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,*((C_word*)lf[9]+1));}

/* list-set! in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_6782(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6782,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_list_tail(t2,t3);
t6=(C_word)C_i_set_car(t5,t4);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t4);}

/* logtest in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_6762(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_6762,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6774,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 12   logand");
t5=C_retrieve(lf[1]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t2,t3);}

/* k6772 in logtest in k6758 in k6755 in k6752 in k6749 */
static void C_ccall f_6774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_zerop(t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_not(t2));}

#ifdef C_ENABLE_PTABLES
static C_PTABLE_ENTRY ptable[2880] = {
{"toplevelChickenBridge.scm",(void*)C_cm_toplevel},
{"f_6751ChickenBridge.scm",(void*)f_6751},
{"f_6754ChickenBridge.scm",(void*)f_6754},
{"f_6757ChickenBridge.scm",(void*)f_6757},
{"f_6760ChickenBridge.scm",(void*)f_6760},
{"f_6873ChickenBridge.scm",(void*)f_6873},
{"f_22153ChickenBridge.scm",(void*)f_22153},
{"f_44521ChickenBridge.scm",(void*)f_44521},
{"f_44747ChickenBridge.scm",(void*)f_44747},
{"f_44555ChickenBridge.scm",(void*)f_44555},
{"f_44567ChickenBridge.scm",(void*)f_44567},
{"f_44571ChickenBridge.scm",(void*)f_44571},
{"f_44575ChickenBridge.scm",(void*)f_44575},
{"f_44731ChickenBridge.scm",(void*)f_44731},
{"f_44581ChickenBridge.scm",(void*)f_44581},
{"f_44601ChickenBridge.scm",(void*)f_44601},
{"f_44604ChickenBridge.scm",(void*)f_44604},
{"f_44612ChickenBridge.scm",(void*)f_44612},
{"f_44619ChickenBridge.scm",(void*)f_44619},
{"f_44622ChickenBridge.scm",(void*)f_44622},
{"f_44626ChickenBridge.scm",(void*)f_44626},
{"f_44633ChickenBridge.scm",(void*)f_44633},
{"f_44636ChickenBridge.scm",(void*)f_44636},
{"f_44640ChickenBridge.scm",(void*)f_44640},
{"f_44647ChickenBridge.scm",(void*)f_44647},
{"f_44591ChickenBridge.scm",(void*)f_44591},
{"f_44544ChickenBridge.scm",(void*)f_44544},
{"f_44534ChickenBridge.scm",(void*)f_44534},
{"f_44537ChickenBridge.scm",(void*)f_44537},
{"f_22156ChickenBridge.scm",(void*)f_22156},
{"f_23137ChickenBridge.scm",(void*)f_23137},
{"f_44426ChickenBridge.scm",(void*)f_44426},
{"f_44439ChickenBridge.scm",(void*)f_44439},
{"f_44515ChickenBridge.scm",(void*)f_44515},
{"f_44442ChickenBridge.scm",(void*)f_44442},
{"f_44447ChickenBridge.scm",(void*)f_44447},
{"f_44499ChickenBridge.scm",(void*)f_44499},
{"f_44469ChickenBridge.scm",(void*)f_44469},
{"f_44483ChickenBridge.scm",(void*)f_44483},
{"f_44495ChickenBridge.scm",(void*)f_44495},
{"f_44472ChickenBridge.scm",(void*)f_44472},
{"f_23157ChickenBridge.scm",(void*)f_23157},
{"f_28210ChickenBridge.scm",(void*)f_28210},
{"f_44404ChickenBridge.scm",(void*)f_44404},
{"f_29867ChickenBridge.scm",(void*)f_29867},
{"f_44384ChickenBridge.scm",(void*)f_44384},
{"f_29870ChickenBridge.scm",(void*)f_29870},
{"f_44344ChickenBridge.scm",(void*)f_44344},
{"f_29873ChickenBridge.scm",(void*)f_29873},
{"f_44250ChickenBridge.scm",(void*)f_44250},
{"f_44254ChickenBridge.scm",(void*)f_44254},
{"f_44257ChickenBridge.scm",(void*)f_44257},
{"f_44275ChickenBridge.scm",(void*)f_44275},
{"f_44278ChickenBridge.scm",(void*)f_44278},
{"f_44309ChickenBridge.scm",(void*)f_44309},
{"f_44281ChickenBridge.scm",(void*)f_44281},
{"f_44287ChickenBridge.scm",(void*)f_44287},
{"f_44240ChickenBridge.scm",(void*)f_44240},
{"f_44234ChickenBridge.scm",(void*)f_44234},
{"f_29876ChickenBridge.scm",(void*)f_29876},
{"f_44138ChickenBridge.scm",(void*)f_44138},
{"f_44140ChickenBridge.scm",(void*)f_44140},
{"f_44144ChickenBridge.scm",(void*)f_44144},
{"f_44147ChickenBridge.scm",(void*)f_44147},
{"f_44150ChickenBridge.scm",(void*)f_44150},
{"f_44194ChickenBridge.scm",(void*)f_44194},
{"f_44186ChickenBridge.scm",(void*)f_44186},
{"f_44153ChickenBridge.scm",(void*)f_44153},
{"f_28646ChickenBridge.scm",(void*)f_28646},
{"f_28692ChickenBridge.scm",(void*)f_28692},
{"f_28659ChickenBridge.scm",(void*)f_28659},
{"f_44176ChickenBridge.scm",(void*)f_44176},
{"f_44156ChickenBridge.scm",(void*)f_44156},
{"f_44159ChickenBridge.scm",(void*)f_44159},
{"f_44130ChickenBridge.scm",(void*)f_44130},
{"f_29879ChickenBridge.scm",(void*)f_29879},
{"f_44102ChickenBridge.scm",(void*)f_44102},
{"f_29882ChickenBridge.scm",(void*)f_29882},
{"f_44066ChickenBridge.scm",(void*)f_44066},
{"f_44078ChickenBridge.scm",(void*)f_44078},
{"f_44074ChickenBridge.scm",(void*)f_44074},
{"f_44048ChickenBridge.scm",(void*)f_44048},
{"f_44042ChickenBridge.scm",(void*)f_44042},
{"f_29885ChickenBridge.scm",(void*)f_29885},
{"f_43956ChickenBridge.scm",(void*)f_43956},
{"f_43960ChickenBridge.scm",(void*)f_43960},
{"f_43963ChickenBridge.scm",(void*)f_43963},
{"f_43966ChickenBridge.scm",(void*)f_43966},
{"f_43979ChickenBridge.scm",(void*)f_43979},
{"f_43925ChickenBridge.scm",(void*)f_43925},
{"f_43929ChickenBridge.scm",(void*)f_43929},
{"f_43944ChickenBridge.scm",(void*)f_43944},
{"f_43919ChickenBridge.scm",(void*)f_43919},
{"f_29888ChickenBridge.scm",(void*)f_29888},
{"f_43805ChickenBridge.scm",(void*)f_43805},
{"f_43821ChickenBridge.scm",(void*)f_43821},
{"f_43832ChickenBridge.scm",(void*)f_43832},
{"f_43799ChickenBridge.scm",(void*)f_43799},
{"f_29944ChickenBridge.scm",(void*)f_29944},
{"f_43666ChickenBridge.scm",(void*)f_43666},
{"f_43689ChickenBridge.scm",(void*)f_43689},
{"f_43686ChickenBridge.scm",(void*)f_43686},
{"f_43660ChickenBridge.scm",(void*)f_43660},
{"f_29947ChickenBridge.scm",(void*)f_29947},
{"f_43514ChickenBridge.scm",(void*)f_43514},
{"f_43532ChickenBridge.scm",(void*)f_43532},
{"f_43541ChickenBridge.scm",(void*)f_43541},
{"f_43508ChickenBridge.scm",(void*)f_43508},
{"f_29950ChickenBridge.scm",(void*)f_29950},
{"f_43461ChickenBridge.scm",(void*)f_43461},
{"f_43465ChickenBridge.scm",(void*)f_43465},
{"f_43468ChickenBridge.scm",(void*)f_43468},
{"f_43484ChickenBridge.scm",(void*)f_43484},
{"f_43443ChickenBridge.scm",(void*)f_43443},
{"f_43437ChickenBridge.scm",(void*)f_43437},
{"f_29953ChickenBridge.scm",(void*)f_29953},
{"f_43361ChickenBridge.scm",(void*)f_43361},
{"f_30092ChickenBridge.scm",(void*)f_30092},
{"f_43287ChickenBridge.scm",(void*)f_43287},
{"f_43294ChickenBridge.scm",(void*)f_43294},
{"f_43281ChickenBridge.scm",(void*)f_43281},
{"f_30095ChickenBridge.scm",(void*)f_30095},
{"f_43177ChickenBridge.scm",(void*)f_43177},
{"f_43185ChickenBridge.scm",(void*)f_43185},
{"f_43151ChickenBridge.scm",(void*)f_43151},
{"f_43168ChickenBridge.scm",(void*)f_43168},
{"f_43159ChickenBridge.scm",(void*)f_43159},
{"f_43145ChickenBridge.scm",(void*)f_43145},
{"f_30098ChickenBridge.scm",(void*)f_30098},
{"f_43101ChickenBridge.scm",(void*)f_43101},
{"f_30101ChickenBridge.scm",(void*)f_30101},
{"f_43019ChickenBridge.scm",(void*)f_43019},
{"f_43030ChickenBridge.scm",(void*)f_43030},
{"f_43032ChickenBridge.scm",(void*)f_43032},
{"f_43061ChickenBridge.scm",(void*)f_43061},
{"f_42997ChickenBridge.scm",(void*)f_42997},
{"f_43013ChickenBridge.scm",(void*)f_43013},
{"f_42991ChickenBridge.scm",(void*)f_42991},
{"f_30104ChickenBridge.scm",(void*)f_30104},
{"f_42920ChickenBridge.scm",(void*)f_42920},
{"f_42924ChickenBridge.scm",(void*)f_42924},
{"f_42931ChickenBridge.scm",(void*)f_42931},
{"f_42886ChickenBridge.scm",(void*)f_42886},
{"f_42906ChickenBridge.scm",(void*)f_42906},
{"f_42910ChickenBridge.scm",(void*)f_42910},
{"f_42902ChickenBridge.scm",(void*)f_42902},
{"f_42880ChickenBridge.scm",(void*)f_42880},
{"f_30107ChickenBridge.scm",(void*)f_30107},
{"f_42752ChickenBridge.scm",(void*)f_42752},
{"f_42788ChickenBridge.scm",(void*)f_42788},
{"f_42756ChickenBridge.scm",(void*)f_42756},
{"f_38452ChickenBridge.scm",(void*)f_38452},
{"f_38461ChickenBridge.scm",(void*)f_38461},
{"f_38474ChickenBridge.scm",(void*)f_38474},
{"f_38477ChickenBridge.scm",(void*)f_38477},
{"f_38493ChickenBridge.scm",(void*)f_38493},
{"f_42772ChickenBridge.scm",(void*)f_42772},
{"f_42784ChickenBridge.scm",(void*)f_42784},
{"f_42780ChickenBridge.scm",(void*)f_42780},
{"f_42677ChickenBridge.scm",(void*)f_42677},
{"f_42720ChickenBridge.scm",(void*)f_42720},
{"f_42724ChickenBridge.scm",(void*)f_42724},
{"f_42684ChickenBridge.scm",(void*)f_42684},
{"f_42695ChickenBridge.scm",(void*)f_42695},
{"f_42671ChickenBridge.scm",(void*)f_42671},
{"f_30110ChickenBridge.scm",(void*)f_30110},
{"f_42651ChickenBridge.scm",(void*)f_42651},
{"f_42645ChickenBridge.scm",(void*)f_42645},
{"f_30113ChickenBridge.scm",(void*)f_30113},
{"f_42625ChickenBridge.scm",(void*)f_42625},
{"f_42629ChickenBridge.scm",(void*)f_42629},
{"f_42617ChickenBridge.scm",(void*)f_42617},
{"f_30116ChickenBridge.scm",(void*)f_30116},
{"f_42597ChickenBridge.scm",(void*)f_42597},
{"f_42601ChickenBridge.scm",(void*)f_42601},
{"f_42589ChickenBridge.scm",(void*)f_42589},
{"f_30119ChickenBridge.scm",(void*)f_30119},
{"f_42569ChickenBridge.scm",(void*)f_42569},
{"f_42573ChickenBridge.scm",(void*)f_42573},
{"f_42561ChickenBridge.scm",(void*)f_42561},
{"f_30122ChickenBridge.scm",(void*)f_30122},
{"f_42541ChickenBridge.scm",(void*)f_42541},
{"f_42545ChickenBridge.scm",(void*)f_42545},
{"f_42533ChickenBridge.scm",(void*)f_42533},
{"f_30125ChickenBridge.scm",(void*)f_30125},
{"f_42432ChickenBridge.scm",(void*)f_42432},
{"f_42402ChickenBridge.scm",(void*)f_42402},
{"f_42426ChickenBridge.scm",(void*)f_42426},
{"f_42396ChickenBridge.scm",(void*)f_42396},
{"f_30128ChickenBridge.scm",(void*)f_30128},
{"f_42346ChickenBridge.scm",(void*)f_42346},
{"f_42348ChickenBridge.scm",(void*)f_42348},
{"f_42352ChickenBridge.scm",(void*)f_42352},
{"f_42380ChickenBridge.scm",(void*)f_42380},
{"f_42372ChickenBridge.scm",(void*)f_42372},
{"f_42368ChickenBridge.scm",(void*)f_42368},
{"f_42355ChickenBridge.scm",(void*)f_42355},
{"f_42338ChickenBridge.scm",(void*)f_42338},
{"f_30131ChickenBridge.scm",(void*)f_30131},
{"f_42285ChickenBridge.scm",(void*)f_42285},
{"f_42287ChickenBridge.scm",(void*)f_42287},
{"f_42291ChickenBridge.scm",(void*)f_42291},
{"f_42322ChickenBridge.scm",(void*)f_42322},
{"f_42314ChickenBridge.scm",(void*)f_42314},
{"f_42310ChickenBridge.scm",(void*)f_42310},
{"f_42294ChickenBridge.scm",(void*)f_42294},
{"f_42297ChickenBridge.scm",(void*)f_42297},
{"f_42277ChickenBridge.scm",(void*)f_42277},
{"f_30134ChickenBridge.scm",(void*)f_30134},
{"f_42227ChickenBridge.scm",(void*)f_42227},
{"f_42241ChickenBridge.scm",(void*)f_42241},
{"f_42233ChickenBridge.scm",(void*)f_42233},
{"f_42192ChickenBridge.scm",(void*)f_42192},
{"f_42225ChickenBridge.scm",(void*)f_42225},
{"f_42186ChickenBridge.scm",(void*)f_42186},
{"f_30137ChickenBridge.scm",(void*)f_30137},
{"f_42133ChickenBridge.scm",(void*)f_42133},
{"f_42137ChickenBridge.scm",(void*)f_42137},
{"f_42150ChickenBridge.scm",(void*)f_42150},
{"f_42142ChickenBridge.scm",(void*)f_42142},
{"f_42090ChickenBridge.scm",(void*)f_42090},
{"f_42123ChickenBridge.scm",(void*)f_42123},
{"f_42084ChickenBridge.scm",(void*)f_42084},
{"f_30140ChickenBridge.scm",(void*)f_30140},
{"f_42004ChickenBridge.scm",(void*)f_42004},
{"f_41998ChickenBridge.scm",(void*)f_41998},
{"f_30143ChickenBridge.scm",(void*)f_30143},
{"f_41767ChickenBridge.scm",(void*)f_41767},
{"f_41771ChickenBridge.scm",(void*)f_41771},
{"f_41779ChickenBridge.scm",(void*)f_41779},
{"f_41802ChickenBridge.scm",(void*)f_41802},
{"f_41805ChickenBridge.scm",(void*)f_41805},
{"f_41808ChickenBridge.scm",(void*)f_41808},
{"f_41811ChickenBridge.scm",(void*)f_41811},
{"f_41871ChickenBridge.scm",(void*)f_41871},
{"f_41878ChickenBridge.scm",(void*)f_41878},
{"f_41888ChickenBridge.scm",(void*)f_41888},
{"f_41898ChickenBridge.scm",(void*)f_41898},
{"f_41912ChickenBridge.scm",(void*)f_41912},
{"f_41922ChickenBridge.scm",(void*)f_41922},
{"f_41932ChickenBridge.scm",(void*)f_41932},
{"f_41942ChickenBridge.scm",(void*)f_41942},
{"f_41814ChickenBridge.scm",(void*)f_41814},
{"f_41838ChickenBridge.scm",(void*)f_41838},
{"f_41817ChickenBridge.scm",(void*)f_41817},
{"f_41724ChickenBridge.scm",(void*)f_41724},
{"f_41757ChickenBridge.scm",(void*)f_41757},
{"f_41718ChickenBridge.scm",(void*)f_41718},
{"f_30146ChickenBridge.scm",(void*)f_30146},
{"f_41636ChickenBridge.scm",(void*)f_41636},
{"f_41640ChickenBridge.scm",(void*)f_41640},
{"f_41646ChickenBridge.scm",(void*)f_41646},
{"f_41666ChickenBridge.scm",(void*)f_41666},
{"f_41610ChickenBridge.scm",(void*)f_41610},
{"f_41620ChickenBridge.scm",(void*)f_41620},
{"f_41604ChickenBridge.scm",(void*)f_41604},
{"f_30149ChickenBridge.scm",(void*)f_30149},
{"f_41419ChickenBridge.scm",(void*)f_41419},
{"f_41423ChickenBridge.scm",(void*)f_41423},
{"f_41429ChickenBridge.scm",(void*)f_41429},
{"f_41438ChickenBridge.scm",(void*)f_41438},
{"f_41476ChickenBridge.scm",(void*)f_41476},
{"f_41468ChickenBridge.scm",(void*)f_41468},
{"f_41445ChickenBridge.scm",(void*)f_41445},
{"f_41449ChickenBridge.scm",(void*)f_41449},
{"f_41351ChickenBridge.scm",(void*)f_41351},
{"f_41370ChickenBridge.scm",(void*)f_41370},
{"f_41405ChickenBridge.scm",(void*)f_41405},
{"f_41376ChickenBridge.scm",(void*)f_41376},
{"f_41380ChickenBridge.scm",(void*)f_41380},
{"f_41394ChickenBridge.scm",(void*)f_41394},
{"f_41383ChickenBridge.scm",(void*)f_41383},
{"f_41364ChickenBridge.scm",(void*)f_41364},
{"f_41345ChickenBridge.scm",(void*)f_41345},
{"f_30152ChickenBridge.scm",(void*)f_30152},
{"f_41073ChickenBridge.scm",(void*)f_41073},
{"f_30675ChickenBridge.scm",(void*)f_30675},
{"f_41025ChickenBridge.scm",(void*)f_41025},
{"f_41017ChickenBridge.scm",(void*)f_41017},
{"f_30678ChickenBridge.scm",(void*)f_30678},
{"f_40897ChickenBridge.scm",(void*)f_40897},
{"f_30684ChickenBridge.scm",(void*)f_30684},
{"f_31168ChickenBridge.scm",(void*)f_31168},
{"f_31202ChickenBridge.scm",(void*)f_31202},
{"f_31194ChickenBridge.scm",(void*)f_31194},
{"f_31190ChickenBridge.scm",(void*)f_31190},
{"f_31175ChickenBridge.scm",(void*)f_31175},
{"f_31179ChickenBridge.scm",(void*)f_31179},
{"f_31172ChickenBridge.scm",(void*)f_31172},
{"f_30708ChickenBridge.scm",(void*)f_30708},
{"f_31161ChickenBridge.scm",(void*)f_31161},
{"f_31157ChickenBridge.scm",(void*)f_31157},
{"f_30715ChickenBridge.scm",(void*)f_30715},
{"f_31032ChickenBridge.scm",(void*)f_31032},
{"f_31053ChickenBridge.scm",(void*)f_31053},
{"f_31055ChickenBridge.scm",(void*)f_31055},
{"f_31069ChickenBridge.scm",(void*)f_31069},
{"f_31122ChickenBridge.scm",(void*)f_31122},
{"f_31072ChickenBridge.scm",(void*)f_31072},
{"f_31107ChickenBridge.scm",(void*)f_31107},
{"f_31075ChickenBridge.scm",(void*)f_31075},
{"f_31088ChickenBridge.scm",(void*)f_31088},
{"f_31100ChickenBridge.scm",(void*)f_31100},
{"f_31092ChickenBridge.scm",(void*)f_31092},
{"f_31078ChickenBridge.scm",(void*)f_31078},
{"f_31042ChickenBridge.scm",(void*)f_31042},
{"f_30718ChickenBridge.scm",(void*)f_30718},
{"f_30996ChickenBridge.scm",(void*)f_30996},
{"f_31022ChickenBridge.scm",(void*)f_31022},
{"f_31007ChickenBridge.scm",(void*)f_31007},
{"f_30721ChickenBridge.scm",(void*)f_30721},
{"f_30936ChickenBridge.scm",(void*)f_30936},
{"f_30946ChickenBridge.scm",(void*)f_30946},
{"f_30949ChickenBridge.scm",(void*)f_30949},
{"f_30970ChickenBridge.scm",(void*)f_30970},
{"f_30952ChickenBridge.scm",(void*)f_30952},
{"f_30956ChickenBridge.scm",(void*)f_30956},
{"f_30904ChickenBridge.scm",(void*)f_30904},
{"f_30907ChickenBridge.scm",(void*)f_30907},
{"f_30724ChickenBridge.scm",(void*)f_30724},
{"f_30727ChickenBridge.scm",(void*)f_30727},
{"f_30861ChickenBridge.scm",(void*)f_30861},
{"f_30869ChickenBridge.scm",(void*)f_30869},
{"f_30865ChickenBridge.scm",(void*)f_30865},
{"f_30730ChickenBridge.scm",(void*)f_30730},
{"f_30824ChickenBridge.scm",(void*)f_30824},
{"f_30820ChickenBridge.scm",(void*)f_30820},
{"f_30816ChickenBridge.scm",(void*)f_30816},
{"f_30769ChickenBridge.scm",(void*)f_30769},
{"f_30765ChickenBridge.scm",(void*)f_30765},
{"f_30847ChickenBridge.scm",(void*)f_30847},
{"f_30831ChickenBridge.scm",(void*)f_30831},
{"f_11696ChickenBridge.scm",(void*)f_11696},
{"f_11731ChickenBridge.scm",(void*)f_11731},
{"f_11741ChickenBridge.scm",(void*)f_11741},
{"f_11745ChickenBridge.scm",(void*)f_11745},
{"f_11748ChickenBridge.scm",(void*)f_11748},
{"f_11809ChickenBridge.scm",(void*)f_11809},
{"f_11800ChickenBridge.scm",(void*)f_11800},
{"f_11751ChickenBridge.scm",(void*)f_11751},
{"f_11770ChickenBridge.scm",(void*)f_11770},
{"f_11777ChickenBridge.scm",(void*)f_11777},
{"f_11754ChickenBridge.scm",(void*)f_11754},
{"f_11760ChickenBridge.scm",(void*)f_11760},
{"f_11729ChickenBridge.scm",(void*)f_11729},
{"f_11704ChickenBridge.scm",(void*)f_11704},
{"f_11703ChickenBridge.scm",(void*)f_11703},
{"f_11864ChickenBridge.scm",(void*)f_11864},
{"f_39178ChickenBridge.scm",(void*)f_39178},
{"f_39181ChickenBridge.scm",(void*)f_39181},
{"f_39184ChickenBridge.scm",(void*)f_39184},
{"f_39188ChickenBridge.scm",(void*)f_39188},
{"f_39402ChickenBridge.scm",(void*)f_39402},
{"f_39390ChickenBridge.scm",(void*)f_39390},
{"f_39386ChickenBridge.scm",(void*)f_39386},
{"f_39191ChickenBridge.scm",(void*)f_39191},
{"f_39335ChickenBridge.scm",(void*)f_39335},
{"f_39371ChickenBridge.scm",(void*)f_39371},
{"f_39364ChickenBridge.scm",(void*)f_39364},
{"f_39194ChickenBridge.scm",(void*)f_39194},
{"f_39265ChickenBridge.scm",(void*)f_39265},
{"f_39269ChickenBridge.scm",(void*)f_39269},
{"f_39261ChickenBridge.scm",(void*)f_39261},
{"f_6827ChickenBridge.scm",(void*)f_6827},
{"f_39241ChickenBridge.scm",(void*)f_39241},
{"f_39237ChickenBridge.scm",(void*)f_39237},
{"f_39204ChickenBridge.scm",(void*)f_39204},
{"f_39215ChickenBridge.scm",(void*)f_39215},
{"f_39223ChickenBridge.scm",(void*)f_39223},
{"f_39219ChickenBridge.scm",(void*)f_39219},
{"f_40851ChickenBridge.scm",(void*)f_40851},
{"f_40867ChickenBridge.scm",(void*)f_40867},
{"f_40870ChickenBridge.scm",(void*)f_40870},
{"f_40873ChickenBridge.scm",(void*)f_40873},
{"f_40876ChickenBridge.scm",(void*)f_40876},
{"f_40887ChickenBridge.scm",(void*)f_40887},
{"f_40845ChickenBridge.scm",(void*)f_40845},
{"f_31209ChickenBridge.scm",(void*)f_31209},
{"f_40706ChickenBridge.scm",(void*)f_40706},
{"f_40745ChickenBridge.scm",(void*)f_40745},
{"f_40719ChickenBridge.scm",(void*)f_40719},
{"f_40700ChickenBridge.scm",(void*)f_40700},
{"f_31212ChickenBridge.scm",(void*)f_31212},
{"f_40288ChickenBridge.scm",(void*)f_40288},
{"f_40292ChickenBridge.scm",(void*)f_40292},
{"f_40304ChickenBridge.scm",(void*)f_40304},
{"f_40362ChickenBridge.scm",(void*)f_40362},
{"f_40365ChickenBridge.scm",(void*)f_40365},
{"f_40368ChickenBridge.scm",(void*)f_40368},
{"f_40580ChickenBridge.scm",(void*)f_40580},
{"f_40518ChickenBridge.scm",(void*)f_40518},
{"f_40552ChickenBridge.scm",(void*)f_40552},
{"f_40527ChickenBridge.scm",(void*)f_40527},
{"f_40538ChickenBridge.scm",(void*)f_40538},
{"f_40534ChickenBridge.scm",(void*)f_40534},
{"f_40377ChickenBridge.scm",(void*)f_40377},
{"f_40455ChickenBridge.scm",(void*)f_40455},
{"f_40496ChickenBridge.scm",(void*)f_40496},
{"f_40500ChickenBridge.scm",(void*)f_40500},
{"f_40504ChickenBridge.scm",(void*)f_40504},
{"f_40459ChickenBridge.scm",(void*)f_40459},
{"f_40463ChickenBridge.scm",(void*)f_40463},
{"f_40490ChickenBridge.scm",(void*)f_40490},
{"f_40466ChickenBridge.scm",(void*)f_40466},
{"f_40380ChickenBridge.scm",(void*)f_40380},
{"f_40452ChickenBridge.scm",(void*)f_40452},
{"f_40394ChickenBridge.scm",(void*)f_40394},
{"f_40396ChickenBridge.scm",(void*)f_40396},
{"f_40444ChickenBridge.scm",(void*)f_40444},
{"f_40415ChickenBridge.scm",(void*)f_40415},
{"f_40432ChickenBridge.scm",(void*)f_40432},
{"f_40418ChickenBridge.scm",(void*)f_40418},
{"f_40411ChickenBridge.scm",(void*)f_40411},
{"f_40383ChickenBridge.scm",(void*)f_40383},
{"f_40313ChickenBridge.scm",(void*)f_40313},
{"f_40323ChickenBridge.scm",(void*)f_40323},
{"f_40329ChickenBridge.scm",(void*)f_40329},
{"f_40301ChickenBridge.scm",(void*)f_40301},
{"f_40249ChickenBridge.scm",(void*)f_40249},
{"f_40266ChickenBridge.scm",(void*)f_40266},
{"f_40282ChickenBridge.scm",(void*)f_40282},
{"f_40260ChickenBridge.scm",(void*)f_40260},
{"f_40243ChickenBridge.scm",(void*)f_40243},
{"f_31215ChickenBridge.scm",(void*)f_31215},
{"f_40167ChickenBridge.scm",(void*)f_40167},
{"f_31218ChickenBridge.scm",(void*)f_31218},
{"f_40143ChickenBridge.scm",(void*)f_40143},
{"f_40155ChickenBridge.scm",(void*)f_40155},
{"f_40151ChickenBridge.scm",(void*)f_40151},
{"f_40129ChickenBridge.scm",(void*)f_40129},
{"f_40137ChickenBridge.scm",(void*)f_40137},
{"f_40123ChickenBridge.scm",(void*)f_40123},
{"f_31221ChickenBridge.scm",(void*)f_31221},
{"f_38446ChickenBridge.scm",(void*)f_38446},
{"f_40119ChickenBridge.scm",(void*)f_40119},
{"f_38996ChickenBridge.scm",(void*)f_38996},
{"f_40111ChickenBridge.scm",(void*)f_40111},
{"f_38999ChickenBridge.scm",(void*)f_38999},
{"f_40103ChickenBridge.scm",(void*)f_40103},
{"f_39002ChickenBridge.scm",(void*)f_39002},
{"f_40095ChickenBridge.scm",(void*)f_40095},
{"f_39005ChickenBridge.scm",(void*)f_39005},
{"f_40087ChickenBridge.scm",(void*)f_40087},
{"f_39008ChickenBridge.scm",(void*)f_39008},
{"f_40079ChickenBridge.scm",(void*)f_40079},
{"f_39011ChickenBridge.scm",(void*)f_39011},
{"f_40071ChickenBridge.scm",(void*)f_40071},
{"f_39014ChickenBridge.scm",(void*)f_39014},
{"f_40063ChickenBridge.scm",(void*)f_40063},
{"f_39017ChickenBridge.scm",(void*)f_39017},
{"f_40055ChickenBridge.scm",(void*)f_40055},
{"f_39020ChickenBridge.scm",(void*)f_39020},
{"f_40047ChickenBridge.scm",(void*)f_40047},
{"f_39023ChickenBridge.scm",(void*)f_39023},
{"f_40039ChickenBridge.scm",(void*)f_40039},
{"f_39026ChickenBridge.scm",(void*)f_39026},
{"f_40031ChickenBridge.scm",(void*)f_40031},
{"f_39029ChickenBridge.scm",(void*)f_39029},
{"f_40023ChickenBridge.scm",(void*)f_40023},
{"f_39032ChickenBridge.scm",(void*)f_39032},
{"f_40015ChickenBridge.scm",(void*)f_40015},
{"f_39035ChickenBridge.scm",(void*)f_39035},
{"f_40007ChickenBridge.scm",(void*)f_40007},
{"f_39038ChickenBridge.scm",(void*)f_39038},
{"f_39999ChickenBridge.scm",(void*)f_39999},
{"f_39041ChickenBridge.scm",(void*)f_39041},
{"f_39991ChickenBridge.scm",(void*)f_39991},
{"f_39044ChickenBridge.scm",(void*)f_39044},
{"f_39983ChickenBridge.scm",(void*)f_39983},
{"f_39047ChickenBridge.scm",(void*)f_39047},
{"f_39975ChickenBridge.scm",(void*)f_39975},
{"f_39050ChickenBridge.scm",(void*)f_39050},
{"f_39967ChickenBridge.scm",(void*)f_39967},
{"f_39053ChickenBridge.scm",(void*)f_39053},
{"f_39959ChickenBridge.scm",(void*)f_39959},
{"f_39056ChickenBridge.scm",(void*)f_39056},
{"f_39951ChickenBridge.scm",(void*)f_39951},
{"f_39059ChickenBridge.scm",(void*)f_39059},
{"f_39882ChickenBridge.scm",(void*)f_39882},
{"f_39910ChickenBridge.scm",(void*)f_39910},
{"f_39133ChickenBridge.scm",(void*)f_39133},
{"f_39880ChickenBridge.scm",(void*)f_39880},
{"f_39862ChickenBridge.scm",(void*)f_39862},
{"f_39804ChickenBridge.scm",(void*)f_39804},
{"f_39822ChickenBridge.scm",(void*)f_39822},
{"f_39832ChickenBridge.scm",(void*)f_39832},
{"f_39808ChickenBridge.scm",(void*)f_39808},
{"f_39798ChickenBridge.scm",(void*)f_39798},
{"f_39792ChickenBridge.scm",(void*)f_39792},
{"f_39786ChickenBridge.scm",(void*)f_39786},
{"f_39780ChickenBridge.scm",(void*)f_39780},
{"f_39410ChickenBridge.scm",(void*)f_39410},
{"f_39747ChickenBridge.scm",(void*)f_39747},
{"f_39757ChickenBridge.scm",(void*)f_39757},
{"f_39733ChickenBridge.scm",(void*)f_39733},
{"f_39417ChickenBridge.scm",(void*)f_39417},
{"f_39671ChickenBridge.scm",(void*)f_39671},
{"f_39685ChickenBridge.scm",(void*)f_39685},
{"f_39420ChickenBridge.scm",(void*)f_39420},
{"f_39618ChickenBridge.scm",(void*)f_39618},
{"f_39641ChickenBridge.scm",(void*)f_39641},
{"f_39628ChickenBridge.scm",(void*)f_39628},
{"f_39604ChickenBridge.scm",(void*)f_39604},
{"f_39426ChickenBridge.scm",(void*)f_39426},
{"f_39566ChickenBridge.scm",(void*)f_39566},
{"f_39576ChickenBridge.scm",(void*)f_39576},
{"f_39552ChickenBridge.scm",(void*)f_39552},
{"f_39432ChickenBridge.scm",(void*)f_39432},
{"f_39549ChickenBridge.scm",(void*)f_39549},
{"f_39435ChickenBridge.scm",(void*)f_39435},
{"f_39541ChickenBridge.scm",(void*)f_39541},
{"f_39545ChickenBridge.scm",(void*)f_39545},
{"f_39505ChickenBridge.scm",(void*)f_39505},
{"f_39530ChickenBridge.scm",(void*)f_39530},
{"f_39534ChickenBridge.scm",(void*)f_39534},
{"f_39515ChickenBridge.scm",(void*)f_39515},
{"f_39494ChickenBridge.scm",(void*)f_39494},
{"f_39464ChickenBridge.scm",(void*)f_39464},
{"f_39436ChickenBridge.scm",(void*)f_39436},
{"f_39135ChickenBridge.scm",(void*)f_39135},
{"f_39151ChickenBridge.scm",(void*)f_39151},
{"f_39062ChickenBridge.scm",(void*)f_39062},
{"f_39073ChickenBridge.scm",(void*)f_39073},
{"f_39076ChickenBridge.scm",(void*)f_39076},
{"f_39083ChickenBridge.scm",(void*)f_39083},
{"f_38522ChickenBridge.scm",(void*)f_38522},
{"f_38855ChickenBridge.scm",(void*)f_38855},
{"f_38875ChickenBridge.scm",(void*)f_38875},
{"f_38944ChickenBridge.scm",(void*)f_38944},
{"f_38940ChickenBridge.scm",(void*)f_38940},
{"f_38901ChickenBridge.scm",(void*)f_38901},
{"f_38913ChickenBridge.scm",(void*)f_38913},
{"f_38909ChickenBridge.scm",(void*)f_38909},
{"f_38865ChickenBridge.scm",(void*)f_38865},
{"f_38526ChickenBridge.scm",(void*)f_38526},
{"f_38530ChickenBridge.scm",(void*)f_38530},
{"f_38534ChickenBridge.scm",(void*)f_38534},
{"f_38538ChickenBridge.scm",(void*)f_38538},
{"f_38542ChickenBridge.scm",(void*)f_38542},
{"f_38543ChickenBridge.scm",(void*)f_38543},
{"f_38549ChickenBridge.scm",(void*)f_38549},
{"f_38553ChickenBridge.scm",(void*)f_38553},
{"f_38782ChickenBridge.scm",(void*)f_38782},
{"f_38829ChickenBridge.scm",(void*)f_38829},
{"f_38819ChickenBridge.scm",(void*)f_38819},
{"f_38826ChickenBridge.scm",(void*)f_38826},
{"f_38813ChickenBridge.scm",(void*)f_38813},
{"f_38792ChickenBridge.scm",(void*)f_38792},
{"f_38556ChickenBridge.scm",(void*)f_38556},
{"f_38737ChickenBridge.scm",(void*)f_38737},
{"f_38742ChickenBridge.scm",(void*)f_38742},
{"f_38752ChickenBridge.scm",(void*)f_38752},
{"f_38559ChickenBridge.scm",(void*)f_38559},
{"f_38691ChickenBridge.scm",(void*)f_38691},
{"f_38696ChickenBridge.scm",(void*)f_38696},
{"f_38706ChickenBridge.scm",(void*)f_38706},
{"f_38562ChickenBridge.scm",(void*)f_38562},
{"f_38588ChickenBridge.scm",(void*)f_38588},
{"f_38597ChickenBridge.scm",(void*)f_38597},
{"f_38613ChickenBridge.scm",(void*)f_38613},
{"f_38666ChickenBridge.scm",(void*)f_38666},
{"f_38647ChickenBridge.scm",(void*)f_38647},
{"f_38616ChickenBridge.scm",(void*)f_38616},
{"f_38637ChickenBridge.scm",(void*)f_38637},
{"f_38623ChickenBridge.scm",(void*)f_38623},
{"f_38607ChickenBridge.scm",(void*)f_38607},
{"f_38565ChickenBridge.scm",(void*)f_38565},
{"f_38578ChickenBridge.scm",(void*)f_38578},
{"f_38405ChickenBridge.scm",(void*)f_38405},
{"f_38399ChickenBridge.scm",(void*)f_38399},
{"f_38206ChickenBridge.scm",(void*)f_38206},
{"f_38379ChickenBridge.scm",(void*)f_38379},
{"f_38210ChickenBridge.scm",(void*)f_38210},
{"f_38213ChickenBridge.scm",(void*)f_38213},
{"f_38216ChickenBridge.scm",(void*)f_38216},
{"f_38221ChickenBridge.scm",(void*)f_38221},
{"f_38291ChickenBridge.scm",(void*)f_38291},
{"f_38287ChickenBridge.scm",(void*)f_38287},
{"f_38273ChickenBridge.scm",(void*)f_38273},
{"f_38259ChickenBridge.scm",(void*)f_38259},
{"f_38255ChickenBridge.scm",(void*)f_38255},
{"f_38241ChickenBridge.scm",(void*)f_38241},
{"f_7589ChickenBridge.scm",(void*)f_7589},
{"f_38034ChickenBridge.scm",(void*)f_38034},
{"f_38038ChickenBridge.scm",(void*)f_38038},
{"f_38041ChickenBridge.scm",(void*)f_38041},
{"f_38046ChickenBridge.scm",(void*)f_38046},
{"f_38167ChickenBridge.scm",(void*)f_38167},
{"f_38171ChickenBridge.scm",(void*)f_38171},
{"f_38140ChickenBridge.scm",(void*)f_38140},
{"f_38144ChickenBridge.scm",(void*)f_38144},
{"f_38113ChickenBridge.scm",(void*)f_38113},
{"f_38117ChickenBridge.scm",(void*)f_38117},
{"f_38097ChickenBridge.scm",(void*)f_38097},
{"f_38080ChickenBridge.scm",(void*)f_38080},
{"f_38066ChickenBridge.scm",(void*)f_38066},
{"f_7563ChickenBridge.scm",(void*)f_7563},
{"f_37921ChickenBridge.scm",(void*)f_37921},
{"f_37926ChickenBridge.scm",(void*)f_37926},
{"f_37930ChickenBridge.scm",(void*)f_37930},
{"f_37981ChickenBridge.scm",(void*)f_37981},
{"f_37977ChickenBridge.scm",(void*)f_37977},
{"f_37973ChickenBridge.scm",(void*)f_37973},
{"f_37933ChickenBridge.scm",(void*)f_37933},
{"f_37966ChickenBridge.scm",(void*)f_37966},
{"f_37962ChickenBridge.scm",(void*)f_37962},
{"f_37958ChickenBridge.scm",(void*)f_37958},
{"f_37936ChickenBridge.scm",(void*)f_37936},
{"f_37939ChickenBridge.scm",(void*)f_37939},
{"f_37951ChickenBridge.scm",(void*)f_37951},
{"f_37943ChickenBridge.scm",(void*)f_37943},
{"f_37848ChickenBridge.scm",(void*)f_37848},
{"f_37739ChickenBridge.scm",(void*)f_37739},
{"f_37758ChickenBridge.scm",(void*)f_37758},
{"f_37765ChickenBridge.scm",(void*)f_37765},
{"f_37771ChickenBridge.scm",(void*)f_37771},
{"f_37791ChickenBridge.scm",(void*)f_37791},
{"f_37799ChickenBridge.scm",(void*)f_37799},
{"f_37795ChickenBridge.scm",(void*)f_37795},
{"f_37781ChickenBridge.scm",(void*)f_37781},
{"f_37743ChickenBridge.scm",(void*)f_37743},
{"f_37634ChickenBridge.scm",(void*)f_37634},
{"f_37653ChickenBridge.scm",(void*)f_37653},
{"f_37660ChickenBridge.scm",(void*)f_37660},
{"f_37666ChickenBridge.scm",(void*)f_37666},
{"f_37686ChickenBridge.scm",(void*)f_37686},
{"f_37694ChickenBridge.scm",(void*)f_37694},
{"f_37690ChickenBridge.scm",(void*)f_37690},
{"f_37676ChickenBridge.scm",(void*)f_37676},
{"f_37638ChickenBridge.scm",(void*)f_37638},
{"f_37628ChickenBridge.scm",(void*)f_37628},
{"f_37613ChickenBridge.scm",(void*)f_37613},
{"f_37607ChickenBridge.scm",(void*)f_37607},
{"f_37601ChickenBridge.scm",(void*)f_37601},
{"f_37595ChickenBridge.scm",(void*)f_37595},
{"f_37589ChickenBridge.scm",(void*)f_37589},
{"f_37583ChickenBridge.scm",(void*)f_37583},
{"f_37553ChickenBridge.scm",(void*)f_37553},
{"f_37563ChickenBridge.scm",(void*)f_37563},
{"f_37124ChickenBridge.scm",(void*)f_37124},
{"f_37530ChickenBridge.scm",(void*)f_37530},
{"f_37545ChickenBridge.scm",(void*)f_37545},
{"f_37537ChickenBridge.scm",(void*)f_37537},
{"f_37501ChickenBridge.scm",(void*)f_37501},
{"f_37505ChickenBridge.scm",(void*)f_37505},
{"f_37466ChickenBridge.scm",(void*)f_37466},
{"f_37470ChickenBridge.scm",(void*)f_37470},
{"f_37431ChickenBridge.scm",(void*)f_37431},
{"f_37435ChickenBridge.scm",(void*)f_37435},
{"f_37128ChickenBridge.scm",(void*)f_37128},
{"f_37395ChickenBridge.scm",(void*)f_37395},
{"f_37410ChickenBridge.scm",(void*)f_37410},
{"f_37402ChickenBridge.scm",(void*)f_37402},
{"f_37366ChickenBridge.scm",(void*)f_37366},
{"f_37370ChickenBridge.scm",(void*)f_37370},
{"f_37331ChickenBridge.scm",(void*)f_37331},
{"f_37335ChickenBridge.scm",(void*)f_37335},
{"f_37296ChickenBridge.scm",(void*)f_37296},
{"f_37300ChickenBridge.scm",(void*)f_37300},
{"f_37131ChickenBridge.scm",(void*)f_37131},
{"f_37260ChickenBridge.scm",(void*)f_37260},
{"f_37275ChickenBridge.scm",(void*)f_37275},
{"f_37267ChickenBridge.scm",(void*)f_37267},
{"f_37231ChickenBridge.scm",(void*)f_37231},
{"f_37235ChickenBridge.scm",(void*)f_37235},
{"f_37196ChickenBridge.scm",(void*)f_37196},
{"f_37200ChickenBridge.scm",(void*)f_37200},
{"f_37161ChickenBridge.scm",(void*)f_37161},
{"f_37165ChickenBridge.scm",(void*)f_37165},
{"f_37134ChickenBridge.scm",(void*)f_37134},
{"f_37137ChickenBridge.scm",(void*)f_37137},
{"f_36695ChickenBridge.scm",(void*)f_36695},
{"f_37101ChickenBridge.scm",(void*)f_37101},
{"f_37116ChickenBridge.scm",(void*)f_37116},
{"f_37108ChickenBridge.scm",(void*)f_37108},
{"f_37072ChickenBridge.scm",(void*)f_37072},
{"f_37076ChickenBridge.scm",(void*)f_37076},
{"f_37037ChickenBridge.scm",(void*)f_37037},
{"f_37041ChickenBridge.scm",(void*)f_37041},
{"f_37002ChickenBridge.scm",(void*)f_37002},
{"f_37006ChickenBridge.scm",(void*)f_37006},
{"f_36699ChickenBridge.scm",(void*)f_36699},
{"f_36966ChickenBridge.scm",(void*)f_36966},
{"f_36981ChickenBridge.scm",(void*)f_36981},
{"f_36973ChickenBridge.scm",(void*)f_36973},
{"f_36937ChickenBridge.scm",(void*)f_36937},
{"f_36941ChickenBridge.scm",(void*)f_36941},
{"f_36902ChickenBridge.scm",(void*)f_36902},
{"f_36906ChickenBridge.scm",(void*)f_36906},
{"f_36867ChickenBridge.scm",(void*)f_36867},
{"f_36871ChickenBridge.scm",(void*)f_36871},
{"f_36702ChickenBridge.scm",(void*)f_36702},
{"f_36831ChickenBridge.scm",(void*)f_36831},
{"f_36846ChickenBridge.scm",(void*)f_36846},
{"f_36838ChickenBridge.scm",(void*)f_36838},
{"f_36802ChickenBridge.scm",(void*)f_36802},
{"f_36806ChickenBridge.scm",(void*)f_36806},
{"f_36767ChickenBridge.scm",(void*)f_36767},
{"f_36771ChickenBridge.scm",(void*)f_36771},
{"f_36732ChickenBridge.scm",(void*)f_36732},
{"f_36736ChickenBridge.scm",(void*)f_36736},
{"f_36705ChickenBridge.scm",(void*)f_36705},
{"f_36708ChickenBridge.scm",(void*)f_36708},
{"f_36266ChickenBridge.scm",(void*)f_36266},
{"f_36672ChickenBridge.scm",(void*)f_36672},
{"f_36687ChickenBridge.scm",(void*)f_36687},
{"f_36679ChickenBridge.scm",(void*)f_36679},
{"f_36643ChickenBridge.scm",(void*)f_36643},
{"f_36647ChickenBridge.scm",(void*)f_36647},
{"f_36608ChickenBridge.scm",(void*)f_36608},
{"f_36612ChickenBridge.scm",(void*)f_36612},
{"f_36573ChickenBridge.scm",(void*)f_36573},
{"f_36577ChickenBridge.scm",(void*)f_36577},
{"f_36270ChickenBridge.scm",(void*)f_36270},
{"f_36537ChickenBridge.scm",(void*)f_36537},
{"f_36552ChickenBridge.scm",(void*)f_36552},
{"f_36544ChickenBridge.scm",(void*)f_36544},
{"f_36508ChickenBridge.scm",(void*)f_36508},
{"f_36512ChickenBridge.scm",(void*)f_36512},
{"f_36473ChickenBridge.scm",(void*)f_36473},
{"f_36477ChickenBridge.scm",(void*)f_36477},
{"f_36438ChickenBridge.scm",(void*)f_36438},
{"f_36442ChickenBridge.scm",(void*)f_36442},
{"f_36273ChickenBridge.scm",(void*)f_36273},
{"f_36402ChickenBridge.scm",(void*)f_36402},
{"f_36417ChickenBridge.scm",(void*)f_36417},
{"f_36409ChickenBridge.scm",(void*)f_36409},
{"f_36373ChickenBridge.scm",(void*)f_36373},
{"f_36377ChickenBridge.scm",(void*)f_36377},
{"f_36338ChickenBridge.scm",(void*)f_36338},
{"f_36342ChickenBridge.scm",(void*)f_36342},
{"f_36303ChickenBridge.scm",(void*)f_36303},
{"f_36307ChickenBridge.scm",(void*)f_36307},
{"f_36276ChickenBridge.scm",(void*)f_36276},
{"f_36279ChickenBridge.scm",(void*)f_36279},
{"f_35559ChickenBridge.scm",(void*)f_35559},
{"f_36243ChickenBridge.scm",(void*)f_36243},
{"f_36258ChickenBridge.scm",(void*)f_36258},
{"f_36250ChickenBridge.scm",(void*)f_36250},
{"f_36214ChickenBridge.scm",(void*)f_36214},
{"f_36218ChickenBridge.scm",(void*)f_36218},
{"f_36179ChickenBridge.scm",(void*)f_36179},
{"f_36183ChickenBridge.scm",(void*)f_36183},
{"f_36144ChickenBridge.scm",(void*)f_36144},
{"f_36148ChickenBridge.scm",(void*)f_36148},
{"f_36109ChickenBridge.scm",(void*)f_36109},
{"f_36113ChickenBridge.scm",(void*)f_36113},
{"f_35563ChickenBridge.scm",(void*)f_35563},
{"f_36073ChickenBridge.scm",(void*)f_36073},
{"f_36088ChickenBridge.scm",(void*)f_36088},
{"f_36080ChickenBridge.scm",(void*)f_36080},
{"f_36044ChickenBridge.scm",(void*)f_36044},
{"f_36048ChickenBridge.scm",(void*)f_36048},
{"f_36009ChickenBridge.scm",(void*)f_36009},
{"f_36013ChickenBridge.scm",(void*)f_36013},
{"f_35974ChickenBridge.scm",(void*)f_35974},
{"f_35978ChickenBridge.scm",(void*)f_35978},
{"f_35939ChickenBridge.scm",(void*)f_35939},
{"f_35943ChickenBridge.scm",(void*)f_35943},
{"f_35566ChickenBridge.scm",(void*)f_35566},
{"f_35903ChickenBridge.scm",(void*)f_35903},
{"f_35918ChickenBridge.scm",(void*)f_35918},
{"f_35910ChickenBridge.scm",(void*)f_35910},
{"f_35874ChickenBridge.scm",(void*)f_35874},
{"f_35878ChickenBridge.scm",(void*)f_35878},
{"f_35839ChickenBridge.scm",(void*)f_35839},
{"f_35843ChickenBridge.scm",(void*)f_35843},
{"f_35804ChickenBridge.scm",(void*)f_35804},
{"f_35808ChickenBridge.scm",(void*)f_35808},
{"f_35769ChickenBridge.scm",(void*)f_35769},
{"f_35773ChickenBridge.scm",(void*)f_35773},
{"f_35569ChickenBridge.scm",(void*)f_35569},
{"f_35733ChickenBridge.scm",(void*)f_35733},
{"f_35748ChickenBridge.scm",(void*)f_35748},
{"f_35740ChickenBridge.scm",(void*)f_35740},
{"f_35704ChickenBridge.scm",(void*)f_35704},
{"f_35708ChickenBridge.scm",(void*)f_35708},
{"f_35669ChickenBridge.scm",(void*)f_35669},
{"f_35673ChickenBridge.scm",(void*)f_35673},
{"f_35634ChickenBridge.scm",(void*)f_35634},
{"f_35638ChickenBridge.scm",(void*)f_35638},
{"f_35599ChickenBridge.scm",(void*)f_35599},
{"f_35603ChickenBridge.scm",(void*)f_35603},
{"f_35572ChickenBridge.scm",(void*)f_35572},
{"f_35575ChickenBridge.scm",(void*)f_35575},
{"f_34852ChickenBridge.scm",(void*)f_34852},
{"f_35536ChickenBridge.scm",(void*)f_35536},
{"f_35551ChickenBridge.scm",(void*)f_35551},
{"f_35543ChickenBridge.scm",(void*)f_35543},
{"f_35507ChickenBridge.scm",(void*)f_35507},
{"f_35511ChickenBridge.scm",(void*)f_35511},
{"f_35472ChickenBridge.scm",(void*)f_35472},
{"f_35476ChickenBridge.scm",(void*)f_35476},
{"f_35437ChickenBridge.scm",(void*)f_35437},
{"f_35441ChickenBridge.scm",(void*)f_35441},
{"f_35402ChickenBridge.scm",(void*)f_35402},
{"f_35406ChickenBridge.scm",(void*)f_35406},
{"f_34856ChickenBridge.scm",(void*)f_34856},
{"f_35366ChickenBridge.scm",(void*)f_35366},
{"f_35381ChickenBridge.scm",(void*)f_35381},
{"f_35373ChickenBridge.scm",(void*)f_35373},
{"f_35337ChickenBridge.scm",(void*)f_35337},
{"f_35341ChickenBridge.scm",(void*)f_35341},
{"f_35302ChickenBridge.scm",(void*)f_35302},
{"f_35306ChickenBridge.scm",(void*)f_35306},
{"f_35267ChickenBridge.scm",(void*)f_35267},
{"f_35271ChickenBridge.scm",(void*)f_35271},
{"f_35232ChickenBridge.scm",(void*)f_35232},
{"f_35236ChickenBridge.scm",(void*)f_35236},
{"f_34859ChickenBridge.scm",(void*)f_34859},
{"f_35196ChickenBridge.scm",(void*)f_35196},
{"f_35211ChickenBridge.scm",(void*)f_35211},
{"f_35203ChickenBridge.scm",(void*)f_35203},
{"f_35167ChickenBridge.scm",(void*)f_35167},
{"f_35171ChickenBridge.scm",(void*)f_35171},
{"f_35132ChickenBridge.scm",(void*)f_35132},
{"f_35136ChickenBridge.scm",(void*)f_35136},
{"f_35097ChickenBridge.scm",(void*)f_35097},
{"f_35101ChickenBridge.scm",(void*)f_35101},
{"f_35062ChickenBridge.scm",(void*)f_35062},
{"f_35066ChickenBridge.scm",(void*)f_35066},
{"f_34862ChickenBridge.scm",(void*)f_34862},
{"f_35026ChickenBridge.scm",(void*)f_35026},
{"f_35041ChickenBridge.scm",(void*)f_35041},
{"f_35033ChickenBridge.scm",(void*)f_35033},
{"f_34997ChickenBridge.scm",(void*)f_34997},
{"f_35001ChickenBridge.scm",(void*)f_35001},
{"f_34962ChickenBridge.scm",(void*)f_34962},
{"f_34966ChickenBridge.scm",(void*)f_34966},
{"f_34927ChickenBridge.scm",(void*)f_34927},
{"f_34931ChickenBridge.scm",(void*)f_34931},
{"f_34892ChickenBridge.scm",(void*)f_34892},
{"f_34896ChickenBridge.scm",(void*)f_34896},
{"f_34865ChickenBridge.scm",(void*)f_34865},
{"f_34868ChickenBridge.scm",(void*)f_34868},
{"f_34145ChickenBridge.scm",(void*)f_34145},
{"f_34829ChickenBridge.scm",(void*)f_34829},
{"f_34844ChickenBridge.scm",(void*)f_34844},
{"f_34836ChickenBridge.scm",(void*)f_34836},
{"f_34800ChickenBridge.scm",(void*)f_34800},
{"f_34804ChickenBridge.scm",(void*)f_34804},
{"f_34765ChickenBridge.scm",(void*)f_34765},
{"f_34769ChickenBridge.scm",(void*)f_34769},
{"f_34730ChickenBridge.scm",(void*)f_34730},
{"f_34734ChickenBridge.scm",(void*)f_34734},
{"f_34695ChickenBridge.scm",(void*)f_34695},
{"f_34699ChickenBridge.scm",(void*)f_34699},
{"f_34149ChickenBridge.scm",(void*)f_34149},
{"f_34659ChickenBridge.scm",(void*)f_34659},
{"f_34674ChickenBridge.scm",(void*)f_34674},
{"f_34666ChickenBridge.scm",(void*)f_34666},
{"f_34630ChickenBridge.scm",(void*)f_34630},
{"f_34634ChickenBridge.scm",(void*)f_34634},
{"f_34595ChickenBridge.scm",(void*)f_34595},
{"f_34599ChickenBridge.scm",(void*)f_34599},
{"f_34560ChickenBridge.scm",(void*)f_34560},
{"f_34564ChickenBridge.scm",(void*)f_34564},
{"f_34525ChickenBridge.scm",(void*)f_34525},
{"f_34529ChickenBridge.scm",(void*)f_34529},
{"f_34152ChickenBridge.scm",(void*)f_34152},
{"f_34489ChickenBridge.scm",(void*)f_34489},
{"f_34504ChickenBridge.scm",(void*)f_34504},
{"f_34496ChickenBridge.scm",(void*)f_34496},
{"f_34460ChickenBridge.scm",(void*)f_34460},
{"f_34464ChickenBridge.scm",(void*)f_34464},
{"f_34425ChickenBridge.scm",(void*)f_34425},
{"f_34429ChickenBridge.scm",(void*)f_34429},
{"f_34390ChickenBridge.scm",(void*)f_34390},
{"f_34394ChickenBridge.scm",(void*)f_34394},
{"f_34355ChickenBridge.scm",(void*)f_34355},
{"f_34359ChickenBridge.scm",(void*)f_34359},
{"f_34155ChickenBridge.scm",(void*)f_34155},
{"f_34319ChickenBridge.scm",(void*)f_34319},
{"f_34334ChickenBridge.scm",(void*)f_34334},
{"f_34326ChickenBridge.scm",(void*)f_34326},
{"f_34290ChickenBridge.scm",(void*)f_34290},
{"f_34294ChickenBridge.scm",(void*)f_34294},
{"f_34255ChickenBridge.scm",(void*)f_34255},
{"f_34259ChickenBridge.scm",(void*)f_34259},
{"f_34220ChickenBridge.scm",(void*)f_34220},
{"f_34224ChickenBridge.scm",(void*)f_34224},
{"f_34185ChickenBridge.scm",(void*)f_34185},
{"f_34189ChickenBridge.scm",(void*)f_34189},
{"f_34158ChickenBridge.scm",(void*)f_34158},
{"f_34161ChickenBridge.scm",(void*)f_34161},
{"f_33716ChickenBridge.scm",(void*)f_33716},
{"f_34122ChickenBridge.scm",(void*)f_34122},
{"f_34137ChickenBridge.scm",(void*)f_34137},
{"f_34129ChickenBridge.scm",(void*)f_34129},
{"f_34093ChickenBridge.scm",(void*)f_34093},
{"f_34097ChickenBridge.scm",(void*)f_34097},
{"f_34058ChickenBridge.scm",(void*)f_34058},
{"f_34062ChickenBridge.scm",(void*)f_34062},
{"f_34023ChickenBridge.scm",(void*)f_34023},
{"f_34027ChickenBridge.scm",(void*)f_34027},
{"f_33720ChickenBridge.scm",(void*)f_33720},
{"f_33987ChickenBridge.scm",(void*)f_33987},
{"f_34002ChickenBridge.scm",(void*)f_34002},
{"f_33994ChickenBridge.scm",(void*)f_33994},
{"f_33958ChickenBridge.scm",(void*)f_33958},
{"f_33962ChickenBridge.scm",(void*)f_33962},
{"f_33923ChickenBridge.scm",(void*)f_33923},
{"f_33927ChickenBridge.scm",(void*)f_33927},
{"f_33888ChickenBridge.scm",(void*)f_33888},
{"f_33892ChickenBridge.scm",(void*)f_33892},
{"f_33723ChickenBridge.scm",(void*)f_33723},
{"f_33852ChickenBridge.scm",(void*)f_33852},
{"f_33867ChickenBridge.scm",(void*)f_33867},
{"f_33859ChickenBridge.scm",(void*)f_33859},
{"f_33823ChickenBridge.scm",(void*)f_33823},
{"f_33827ChickenBridge.scm",(void*)f_33827},
{"f_33788ChickenBridge.scm",(void*)f_33788},
{"f_33792ChickenBridge.scm",(void*)f_33792},
{"f_33753ChickenBridge.scm",(void*)f_33753},
{"f_33757ChickenBridge.scm",(void*)f_33757},
{"f_33726ChickenBridge.scm",(void*)f_33726},
{"f_33729ChickenBridge.scm",(void*)f_33729},
{"f_32661ChickenBridge.scm",(void*)f_32661},
{"f_33693ChickenBridge.scm",(void*)f_33693},
{"f_33708ChickenBridge.scm",(void*)f_33708},
{"f_33700ChickenBridge.scm",(void*)f_33700},
{"f_33664ChickenBridge.scm",(void*)f_33664},
{"f_33668ChickenBridge.scm",(void*)f_33668},
{"f_33629ChickenBridge.scm",(void*)f_33629},
{"f_33633ChickenBridge.scm",(void*)f_33633},
{"f_33594ChickenBridge.scm",(void*)f_33594},
{"f_33598ChickenBridge.scm",(void*)f_33598},
{"f_33559ChickenBridge.scm",(void*)f_33559},
{"f_33563ChickenBridge.scm",(void*)f_33563},
{"f_33524ChickenBridge.scm",(void*)f_33524},
{"f_33528ChickenBridge.scm",(void*)f_33528},
{"f_32665ChickenBridge.scm",(void*)f_32665},
{"f_33488ChickenBridge.scm",(void*)f_33488},
{"f_33503ChickenBridge.scm",(void*)f_33503},
{"f_33495ChickenBridge.scm",(void*)f_33495},
{"f_33459ChickenBridge.scm",(void*)f_33459},
{"f_33463ChickenBridge.scm",(void*)f_33463},
{"f_33424ChickenBridge.scm",(void*)f_33424},
{"f_33428ChickenBridge.scm",(void*)f_33428},
{"f_33389ChickenBridge.scm",(void*)f_33389},
{"f_33393ChickenBridge.scm",(void*)f_33393},
{"f_33354ChickenBridge.scm",(void*)f_33354},
{"f_33358ChickenBridge.scm",(void*)f_33358},
{"f_33319ChickenBridge.scm",(void*)f_33319},
{"f_33323ChickenBridge.scm",(void*)f_33323},
{"f_32668ChickenBridge.scm",(void*)f_32668},
{"f_33283ChickenBridge.scm",(void*)f_33283},
{"f_33298ChickenBridge.scm",(void*)f_33298},
{"f_33290ChickenBridge.scm",(void*)f_33290},
{"f_33254ChickenBridge.scm",(void*)f_33254},
{"f_33258ChickenBridge.scm",(void*)f_33258},
{"f_33219ChickenBridge.scm",(void*)f_33219},
{"f_33223ChickenBridge.scm",(void*)f_33223},
{"f_33184ChickenBridge.scm",(void*)f_33184},
{"f_33188ChickenBridge.scm",(void*)f_33188},
{"f_33149ChickenBridge.scm",(void*)f_33149},
{"f_33153ChickenBridge.scm",(void*)f_33153},
{"f_33114ChickenBridge.scm",(void*)f_33114},
{"f_33118ChickenBridge.scm",(void*)f_33118},
{"f_32671ChickenBridge.scm",(void*)f_32671},
{"f_33078ChickenBridge.scm",(void*)f_33078},
{"f_33093ChickenBridge.scm",(void*)f_33093},
{"f_33085ChickenBridge.scm",(void*)f_33085},
{"f_33049ChickenBridge.scm",(void*)f_33049},
{"f_33053ChickenBridge.scm",(void*)f_33053},
{"f_33014ChickenBridge.scm",(void*)f_33014},
{"f_33018ChickenBridge.scm",(void*)f_33018},
{"f_32979ChickenBridge.scm",(void*)f_32979},
{"f_32983ChickenBridge.scm",(void*)f_32983},
{"f_32944ChickenBridge.scm",(void*)f_32944},
{"f_32948ChickenBridge.scm",(void*)f_32948},
{"f_32909ChickenBridge.scm",(void*)f_32909},
{"f_32913ChickenBridge.scm",(void*)f_32913},
{"f_32674ChickenBridge.scm",(void*)f_32674},
{"f_32873ChickenBridge.scm",(void*)f_32873},
{"f_32888ChickenBridge.scm",(void*)f_32888},
{"f_32880ChickenBridge.scm",(void*)f_32880},
{"f_32844ChickenBridge.scm",(void*)f_32844},
{"f_32848ChickenBridge.scm",(void*)f_32848},
{"f_32809ChickenBridge.scm",(void*)f_32809},
{"f_32813ChickenBridge.scm",(void*)f_32813},
{"f_32774ChickenBridge.scm",(void*)f_32774},
{"f_32778ChickenBridge.scm",(void*)f_32778},
{"f_32739ChickenBridge.scm",(void*)f_32739},
{"f_32743ChickenBridge.scm",(void*)f_32743},
{"f_32704ChickenBridge.scm",(void*)f_32704},
{"f_32708ChickenBridge.scm",(void*)f_32708},
{"f_32677ChickenBridge.scm",(void*)f_32677},
{"f_32680ChickenBridge.scm",(void*)f_32680},
{"f_32655ChickenBridge.scm",(void*)f_32655},
{"f_7467ChickenBridge.scm",(void*)f_7467},
{"f_32502ChickenBridge.scm",(void*)f_32502},
{"f_32509ChickenBridge.scm",(void*)f_32509},
{"f_32447ChickenBridge.scm",(void*)f_32447},
{"f_32454ChickenBridge.scm",(void*)f_32454},
{"f_32200ChickenBridge.scm",(void*)f_32200},
{"f_32424ChickenBridge.scm",(void*)f_32424},
{"f_32439ChickenBridge.scm",(void*)f_32439},
{"f_32431ChickenBridge.scm",(void*)f_32431},
{"f_32395ChickenBridge.scm",(void*)f_32395},
{"f_32399ChickenBridge.scm",(void*)f_32399},
{"f_32360ChickenBridge.scm",(void*)f_32360},
{"f_32364ChickenBridge.scm",(void*)f_32364},
{"f_32204ChickenBridge.scm",(void*)f_32204},
{"f_32324ChickenBridge.scm",(void*)f_32324},
{"f_32339ChickenBridge.scm",(void*)f_32339},
{"f_32331ChickenBridge.scm",(void*)f_32331},
{"f_32295ChickenBridge.scm",(void*)f_32295},
{"f_32299ChickenBridge.scm",(void*)f_32299},
{"f_32260ChickenBridge.scm",(void*)f_32260},
{"f_32264ChickenBridge.scm",(void*)f_32264},
{"f_32207ChickenBridge.scm",(void*)f_32207},
{"f_32210ChickenBridge.scm",(void*)f_32210},
{"f_32223ChickenBridge.scm",(void*)f_32223},
{"f_32227ChickenBridge.scm",(void*)f_32227},
{"f_32129ChickenBridge.scm",(void*)f_32129},
{"f_32133ChickenBridge.scm",(void*)f_32133},
{"f_32136ChickenBridge.scm",(void*)f_32136},
{"f_7405ChickenBridge.scm",(void*)f_7405},
{"f_32139ChickenBridge.scm",(void*)f_32139},
{"f_32171ChickenBridge.scm",(void*)f_32171},
{"f_32161ChickenBridge.scm",(void*)f_32161},
{"f_32151ChickenBridge.scm",(void*)f_32151},
{"f_32142ChickenBridge.scm",(void*)f_32142},
{"f_32101ChickenBridge.scm",(void*)f_32101},
{"f_32105ChickenBridge.scm",(void*)f_32105},
{"f_32077ChickenBridge.scm",(void*)f_32077},
{"f_32028ChickenBridge.scm",(void*)f_32028},
{"f_7391ChickenBridge.scm",(void*)f_7391},
{"f_32032ChickenBridge.scm",(void*)f_32032},
{"f_32048ChickenBridge.scm",(void*)f_32048},
{"f_32075ChickenBridge.scm",(void*)f_32075},
{"f_32051ChickenBridge.scm",(void*)f_32051},
{"f_32071ChickenBridge.scm",(void*)f_32071},
{"f_32067ChickenBridge.scm",(void*)f_32067},
{"f_32035ChickenBridge.scm",(void*)f_32035},
{"f_32019ChickenBridge.scm",(void*)f_32019},
{"f_32023ChickenBridge.scm",(void*)f_32023},
{"f_31866ChickenBridge.scm",(void*)f_31866},
{"f_31993ChickenBridge.scm",(void*)f_31993},
{"f_32006ChickenBridge.scm",(void*)f_32006},
{"f_31988ChickenBridge.scm",(void*)f_31988},
{"f_31869ChickenBridge.scm",(void*)f_31869},
{"f_31985ChickenBridge.scm",(void*)f_31985},
{"f_31969ChickenBridge.scm",(void*)f_31969},
{"f_31897ChickenBridge.scm",(void*)f_31897},
{"f_31905ChickenBridge.scm",(void*)f_31905},
{"f_31915ChickenBridge.scm",(void*)f_31915},
{"f_31918ChickenBridge.scm",(void*)f_31918},
{"f_31900ChickenBridge.scm",(void*)f_31900},
{"f_31707ChickenBridge.scm",(void*)f_31707},
{"f_7607ChickenBridge.scm",(void*)f_7607},
{"f_31729ChickenBridge.scm",(void*)f_31729},
{"f_31733ChickenBridge.scm",(void*)f_31733},
{"f_31711ChickenBridge.scm",(void*)f_31711},
{"f_31223ChickenBridge.scm",(void*)f_31223},
{"f_31684ChickenBridge.scm",(void*)f_31684},
{"f_31699ChickenBridge.scm",(void*)f_31699},
{"f_31691ChickenBridge.scm",(void*)f_31691},
{"f_31655ChickenBridge.scm",(void*)f_31655},
{"f_31659ChickenBridge.scm",(void*)f_31659},
{"f_31620ChickenBridge.scm",(void*)f_31620},
{"f_31624ChickenBridge.scm",(void*)f_31624},
{"f_31585ChickenBridge.scm",(void*)f_31585},
{"f_31589ChickenBridge.scm",(void*)f_31589},
{"f_31227ChickenBridge.scm",(void*)f_31227},
{"f_31549ChickenBridge.scm",(void*)f_31549},
{"f_31564ChickenBridge.scm",(void*)f_31564},
{"f_31556ChickenBridge.scm",(void*)f_31556},
{"f_31520ChickenBridge.scm",(void*)f_31520},
{"f_31524ChickenBridge.scm",(void*)f_31524},
{"f_31485ChickenBridge.scm",(void*)f_31485},
{"f_31489ChickenBridge.scm",(void*)f_31489},
{"f_31450ChickenBridge.scm",(void*)f_31450},
{"f_31454ChickenBridge.scm",(void*)f_31454},
{"f_31230ChickenBridge.scm",(void*)f_31230},
{"f_31414ChickenBridge.scm",(void*)f_31414},
{"f_31429ChickenBridge.scm",(void*)f_31429},
{"f_31421ChickenBridge.scm",(void*)f_31421},
{"f_31385ChickenBridge.scm",(void*)f_31385},
{"f_31389ChickenBridge.scm",(void*)f_31389},
{"f_31350ChickenBridge.scm",(void*)f_31350},
{"f_31354ChickenBridge.scm",(void*)f_31354},
{"f_31315ChickenBridge.scm",(void*)f_31315},
{"f_31319ChickenBridge.scm",(void*)f_31319},
{"f_31233ChickenBridge.scm",(void*)f_31233},
{"f_31236ChickenBridge.scm",(void*)f_31236},
{"f_31291ChickenBridge.scm",(void*)f_31291},
{"f_31287ChickenBridge.scm",(void*)f_31287},
{"f_31239ChickenBridge.scm",(void*)f_31239},
{"f_29027ChickenBridge.scm",(void*)f_29027},
{"f_29040ChickenBridge.scm",(void*)f_29040},
{"f_29047ChickenBridge.scm",(void*)f_29047},
{"f_29054ChickenBridge.scm",(void*)f_29054},
{"f_29033ChickenBridge.scm",(void*)f_29033},
{"f_31251ChickenBridge.scm",(void*)f_31251},
{"f_31273ChickenBridge.scm",(void*)f_31273},
{"f_31835ChickenBridge.scm",(void*)f_31835},
{"f_31845ChickenBridge.scm",(void*)f_31845},
{"f_31748ChickenBridge.scm",(void*)f_31748},
{"f_31805ChickenBridge.scm",(void*)f_31805},
{"f_31815ChickenBridge.scm",(void*)f_31815},
{"f_31756ChickenBridge.scm",(void*)f_31756},
{"f_31774ChickenBridge.scm",(void*)f_31774},
{"f_31778ChickenBridge.scm",(void*)f_31778},
{"f_31782ChickenBridge.scm",(void*)f_31782},
{"f_31789ChickenBridge.scm",(void*)f_31789},
{"f_31766ChickenBridge.scm",(void*)f_31766},
{"f_31759ChickenBridge.scm",(void*)f_31759},
{"f_31242ChickenBridge.scm",(void*)f_31242},
{"f_30154ChickenBridge.scm",(void*)f_30154},
{"f_30167ChickenBridge.scm",(void*)f_30167},
{"f_30217ChickenBridge.scm",(void*)f_30217},
{"f_30314ChickenBridge.scm",(void*)f_30314},
{"f_30382ChickenBridge.scm",(void*)f_30382},
{"f_30639ChickenBridge.scm",(void*)f_30639},
{"f_30389ChickenBridge.scm",(void*)f_30389},
{"f_30627ChickenBridge.scm",(void*)f_30627},
{"f_30578ChickenBridge.scm",(void*)f_30578},
{"f_30584ChickenBridge.scm",(void*)f_30584},
{"f_30608ChickenBridge.scm",(void*)f_30608},
{"f_30604ChickenBridge.scm",(void*)f_30604},
{"f_30592ChickenBridge.scm",(void*)f_30592},
{"f_30392ChickenBridge.scm",(void*)f_30392},
{"f_30554ChickenBridge.scm",(void*)f_30554},
{"f_30558ChickenBridge.scm",(void*)f_30558},
{"f_30395ChickenBridge.scm",(void*)f_30395},
{"f_30531ChickenBridge.scm",(void*)f_30531},
{"f_30535ChickenBridge.scm",(void*)f_30535},
{"f_30398ChickenBridge.scm",(void*)f_30398},
{"f_30508ChickenBridge.scm",(void*)f_30508},
{"f_30512ChickenBridge.scm",(void*)f_30512},
{"f_30401ChickenBridge.scm",(void*)f_30401},
{"f_30433ChickenBridge.scm",(void*)f_30433},
{"f_30451ChickenBridge.scm",(void*)f_30451},
{"f_30469ChickenBridge.scm",(void*)f_30469},
{"f_30487ChickenBridge.scm",(void*)f_30487},
{"f_30404ChickenBridge.scm",(void*)f_30404},
{"f_30408ChickenBridge.scm",(void*)f_30408},
{"f_30318ChickenBridge.scm",(void*)f_30318},
{"f_30322ChickenBridge.scm",(void*)f_30322},
{"f_30326ChickenBridge.scm",(void*)f_30326},
{"f_30221ChickenBridge.scm",(void*)f_30221},
{"f_30225ChickenBridge.scm",(void*)f_30225},
{"f_30229ChickenBridge.scm",(void*)f_30229},
{"f_30248ChickenBridge.scm",(void*)f_30248},
{"f_30252ChickenBridge.scm",(void*)f_30252},
{"f_30232ChickenBridge.scm",(void*)f_30232},
{"f_30236ChickenBridge.scm",(void*)f_30236},
{"f_30171ChickenBridge.scm",(void*)f_30171},
{"f_30175ChickenBridge.scm",(void*)f_30175},
{"f_30179ChickenBridge.scm",(void*)f_30179},
{"f_30161ChickenBridge.scm",(void*)f_30161},
{"f_29976ChickenBridge.scm",(void*)f_29976},
{"f_29988ChickenBridge.scm",(void*)f_29988},
{"f_30007ChickenBridge.scm",(void*)f_30007},
{"f_30025ChickenBridge.scm",(void*)f_30025},
{"f_30057ChickenBridge.scm",(void*)f_30057},
{"f_30060ChickenBridge.scm",(void*)f_30060},
{"f_30053ChickenBridge.scm",(void*)f_30053},
{"f_30039ChickenBridge.scm",(void*)f_30039},
{"f_30010ChickenBridge.scm",(void*)f_30010},
{"f_29955ChickenBridge.scm",(void*)f_29955},
{"f_29962ChickenBridge.scm",(void*)f_29962},
{"f_29965ChickenBridge.scm",(void*)f_29965},
{"f_29971ChickenBridge.scm",(void*)f_29971},
{"f_29890ChickenBridge.scm",(void*)f_29890},
{"f_29899ChickenBridge.scm",(void*)f_29899},
{"f_29922ChickenBridge.scm",(void*)f_29922},
{"f_29912ChickenBridge.scm",(void*)f_29912},
{"f_29846ChickenBridge.scm",(void*)f_29846},
{"f_29854ChickenBridge.scm",(void*)f_29854},
{"f_29858ChickenBridge.scm",(void*)f_29858},
{"f_29834ChickenBridge.scm",(void*)f_29834},
{"f_29732ChickenBridge.scm",(void*)f_29732},
{"f_29684ChickenBridge.scm",(void*)f_29684},
{"f_29065ChickenBridge.scm",(void*)f_29065},
{"f_29069ChickenBridge.scm",(void*)f_29069},
{"f_29072ChickenBridge.scm",(void*)f_29072},
{"f_29498ChickenBridge.scm",(void*)f_29498},
{"f_29494ChickenBridge.scm",(void*)f_29494},
{"f_29490ChickenBridge.scm",(void*)f_29490},
{"f_29075ChickenBridge.scm",(void*)f_29075},
{"f_29198ChickenBridge.scm",(void*)f_29198},
{"f_28380ChickenBridge.scm",(void*)f_28380},
{"f_29204ChickenBridge.scm",(void*)f_29204},
{"f_28396ChickenBridge.scm",(void*)f_28396},
{"f_29292ChickenBridge.scm",(void*)f_29292},
{"f_29362ChickenBridge.scm",(void*)f_29362},
{"f_28412ChickenBridge.scm",(void*)f_28412},
{"f_29365ChickenBridge.scm",(void*)f_29365},
{"f_28444ChickenBridge.scm",(void*)f_28444},
{"f_29443ChickenBridge.scm",(void*)f_29443},
{"f_29469ChickenBridge.scm",(void*)f_29469},
{"f_29463ChickenBridge.scm",(void*)f_29463},
{"f_29452ChickenBridge.scm",(void*)f_29452},
{"f_29394ChickenBridge.scm",(void*)f_29394},
{"f_29404ChickenBridge.scm",(void*)f_29404},
{"f_29430ChickenBridge.scm",(void*)f_29430},
{"f_29424ChickenBridge.scm",(void*)f_29424},
{"f_29407ChickenBridge.scm",(void*)f_29407},
{"f_29417ChickenBridge.scm",(void*)f_29417},
{"f_29410ChickenBridge.scm",(void*)f_29410},
{"f_29371ChickenBridge.scm",(void*)f_29371},
{"f_29380ChickenBridge.scm",(void*)f_29380},
{"f_29374ChickenBridge.scm",(void*)f_29374},
{"f_29298ChickenBridge.scm",(void*)f_29298},
{"f_29316ChickenBridge.scm",(void*)f_29316},
{"f_29349ChickenBridge.scm",(void*)f_29349},
{"f_29335ChickenBridge.scm",(void*)f_29335},
{"f_29343ChickenBridge.scm",(void*)f_29343},
{"f_29326ChickenBridge.scm",(void*)f_29326},
{"f_29301ChickenBridge.scm",(void*)f_29301},
{"f_29213ChickenBridge.scm",(void*)f_29213},
{"f_29235ChickenBridge.scm",(void*)f_29235},
{"f_29282ChickenBridge.scm",(void*)f_29282},
{"f_29268ChickenBridge.scm",(void*)f_29268},
{"f_29276ChickenBridge.scm",(void*)f_29276},
{"f_29248ChickenBridge.scm",(void*)f_29248},
{"f_29251ChickenBridge.scm",(void*)f_29251},
{"f_29216ChickenBridge.scm",(void*)f_29216},
{"f_29233ChickenBridge.scm",(void*)f_29233},
{"f_29219ChickenBridge.scm",(void*)f_29219},
{"f_29084ChickenBridge.scm",(void*)f_29084},
{"f_29090ChickenBridge.scm",(void*)f_29090},
{"f_29148ChickenBridge.scm",(void*)f_29148},
{"f_29151ChickenBridge.scm",(void*)f_29151},
{"f_29172ChickenBridge.scm",(void*)f_29172},
{"f_29183ChickenBridge.scm",(void*)f_29183},
{"f_29162ChickenBridge.scm",(void*)f_29162},
{"f_29096ChickenBridge.scm",(void*)f_29096},
{"f_29106ChickenBridge.scm",(void*)f_29106},
{"f_29142ChickenBridge.scm",(void*)f_29142},
{"f_29112ChickenBridge.scm",(void*)f_29112},
{"f_29127ChickenBridge.scm",(void*)f_29127},
{"f_29135ChickenBridge.scm",(void*)f_29135},
{"f_29119ChickenBridge.scm",(void*)f_29119},
{"f_28961ChickenBridge.scm",(void*)f_28961},
{"f_28963ChickenBridge.scm",(void*)f_28963},
{"f_29011ChickenBridge.scm",(void*)f_29011},
{"f_28967ChickenBridge.scm",(void*)f_28967},
{"f_28970ChickenBridge.scm",(void*)f_28970},
{"f_28975ChickenBridge.scm",(void*)f_28975},
{"f_28996ChickenBridge.scm",(void*)f_28996},
{"f_28953ChickenBridge.scm",(void*)f_28953},
{"f_28955ChickenBridge.scm",(void*)f_28955},
{"f_28776ChickenBridge.scm",(void*)f_28776},
{"f_28784ChickenBridge.scm",(void*)f_28784},
{"f_28745ChickenBridge.scm",(void*)f_28745},
{"f_28762ChickenBridge.scm",(void*)f_28762},
{"f_28766ChickenBridge.scm",(void*)f_28766},
{"f_28712ChickenBridge.scm",(void*)f_28712},
{"f_28719ChickenBridge.scm",(void*)f_28719},
{"f_28606ChickenBridge.scm",(void*)f_28606},
{"f_28613ChickenBridge.scm",(void*)f_28613},
{"f_28728ChickenBridge.scm",(void*)f_28728},
{"f_28951ChickenBridge.scm",(void*)f_28951},
{"f_28928ChickenBridge.scm",(void*)f_28928},
{"f_28944ChickenBridge.scm",(void*)f_28944},
{"f_28790ChickenBridge.scm",(void*)f_28790},
{"f_28793ChickenBridge.scm",(void*)f_28793},
{"f_28817ChickenBridge.scm",(void*)f_28817},
{"f_28874ChickenBridge.scm",(void*)f_28874},
{"f_28880ChickenBridge.scm",(void*)f_28880},
{"f_28889ChickenBridge.scm",(void*)f_28889},
{"f_28898ChickenBridge.scm",(void*)f_28898},
{"f_28907ChickenBridge.scm",(void*)f_28907},
{"f_28916ChickenBridge.scm",(void*)f_28916},
{"f_28868ChickenBridge.scm",(void*)f_28868},
{"f_28823ChickenBridge.scm",(void*)f_28823},
{"f_28829ChickenBridge.scm",(void*)f_28829},
{"f_28835ChickenBridge.scm",(void*)f_28835},
{"f_28841ChickenBridge.scm",(void*)f_28841},
{"f_28847ChickenBridge.scm",(void*)f_28847},
{"f_28853ChickenBridge.scm",(void*)f_28853},
{"f_28694ChickenBridge.scm",(void*)f_28694},
{"f_28701ChickenBridge.scm",(void*)f_28701},
{"f_28627ChickenBridge.scm",(void*)f_28627},
{"f_28615ChickenBridge.scm",(void*)f_28615},
{"f_28583ChickenBridge.scm",(void*)f_28583},
{"f_28590ChickenBridge.scm",(void*)f_28590},
{"f_28597ChickenBridge.scm",(void*)f_28597},
{"f_28567ChickenBridge.scm",(void*)f_28567},
{"f_28574ChickenBridge.scm",(void*)f_28574},
{"f_28581ChickenBridge.scm",(void*)f_28581},
{"f_28558ChickenBridge.scm",(void*)f_28558},
{"f_28540ChickenBridge.scm",(void*)f_28540},
{"f_28522ChickenBridge.scm",(void*)f_28522},
{"f_28507ChickenBridge.scm",(void*)f_28507},
{"f_28501ChickenBridge.scm",(void*)f_28501},
{"f_28453ChickenBridge.scm",(void*)f_28453},
{"f_28421ChickenBridge.scm",(void*)f_28421},
{"f_28428ChickenBridge.scm",(void*)f_28428},
{"f_28363ChickenBridge.scm",(void*)f_28363},
{"f_28371ChickenBridge.scm",(void*)f_28371},
{"f_28353ChickenBridge.scm",(void*)f_28353},
{"f_28361ChickenBridge.scm",(void*)f_28361},
{"f_28347ChickenBridge.scm",(void*)f_28347},
{"f_28335ChickenBridge.scm",(void*)f_28335},
{"f_28332ChickenBridge.scm",(void*)f_28332},
{"f_28314ChickenBridge.scm",(void*)f_28314},
{"f_28318ChickenBridge.scm",(void*)f_28318},
{"f_28212ChickenBridge.scm",(void*)f_28212},
{"f_28202ChickenBridge.scm",(void*)f_28202},
{"f_28190ChickenBridge.scm",(void*)f_28190},
{"f_28167ChickenBridge.scm",(void*)f_28167},
{"f_28158ChickenBridge.scm",(void*)f_28158},
{"f_28122ChickenBridge.scm",(void*)f_28122},
{"f_28101ChickenBridge.scm",(void*)f_28101},
{"f_27905ChickenBridge.scm",(void*)f_27905},
{"f_27909ChickenBridge.scm",(void*)f_27909},
{"f_28058ChickenBridge.scm",(void*)f_28058},
{"f_28084ChickenBridge.scm",(void*)f_28084},
{"f_28069ChickenBridge.scm",(void*)f_28069},
{"f_27915ChickenBridge.scm",(void*)f_27915},
{"f_27920ChickenBridge.scm",(void*)f_27920},
{"f_27924ChickenBridge.scm",(void*)f_27924},
{"f_27927ChickenBridge.scm",(void*)f_27927},
{"f_27930ChickenBridge.scm",(void*)f_27930},
{"f_27933ChickenBridge.scm",(void*)f_27933},
{"f_27936ChickenBridge.scm",(void*)f_27936},
{"f_27939ChickenBridge.scm",(void*)f_27939},
{"f_27944ChickenBridge.scm",(void*)f_27944},
{"f_28038ChickenBridge.scm",(void*)f_28038},
{"f_28045ChickenBridge.scm",(void*)f_28045},
{"f_27954ChickenBridge.scm",(void*)f_27954},
{"f_27975ChickenBridge.scm",(void*)f_27975},
{"f_27979ChickenBridge.scm",(void*)f_27979},
{"f_27983ChickenBridge.scm",(void*)f_27983},
{"f_27985ChickenBridge.scm",(void*)f_27985},
{"f_27995ChickenBridge.scm",(void*)f_27995},
{"f_27957ChickenBridge.scm",(void*)f_27957},
{"f_27960ChickenBridge.scm",(void*)f_27960},
{"f_27779ChickenBridge.scm",(void*)f_27779},
{"f_27785ChickenBridge.scm",(void*)f_27785},
{"f_27789ChickenBridge.scm",(void*)f_27789},
{"f_27807ChickenBridge.scm",(void*)f_27807},
{"f_27810ChickenBridge.scm",(void*)f_27810},
{"f_27814ChickenBridge.scm",(void*)f_27814},
{"f_27817ChickenBridge.scm",(void*)f_27817},
{"f_27869ChickenBridge.scm",(void*)f_27869},
{"f_27880ChickenBridge.scm",(void*)f_27880},
{"f_27820ChickenBridge.scm",(void*)f_27820},
{"f_27830ChickenBridge.scm",(void*)f_27830},
{"f_27832ChickenBridge.scm",(void*)f_27832},
{"f_27676ChickenBridge.scm",(void*)f_27676},
{"f_27700ChickenBridge.scm",(void*)f_27700},
{"f_27704ChickenBridge.scm",(void*)f_27704},
{"f_27730ChickenBridge.scm",(void*)f_27730},
{"f_27740ChickenBridge.scm",(void*)f_27740},
{"f_27777ChickenBridge.scm",(void*)f_27777},
{"f_27769ChickenBridge.scm",(void*)f_27769},
{"f_27707ChickenBridge.scm",(void*)f_27707},
{"f_27677ChickenBridge.scm",(void*)f_27677},
{"f_27681ChickenBridge.scm",(void*)f_27681},
{"f_27684ChickenBridge.scm",(void*)f_27684},
{"f_27846ChickenBridge.scm",(void*)f_27846},
{"f_27849ChickenBridge.scm",(void*)f_27849},
{"f_27856ChickenBridge.scm",(void*)f_27856},
{"f_27790ChickenBridge.scm",(void*)f_27790},
{"f_27794ChickenBridge.scm",(void*)f_27794},
{"f_27797ChickenBridge.scm",(void*)f_27797},
{"f_27266ChickenBridge.scm",(void*)f_27266},
{"f_27645ChickenBridge.scm",(void*)f_27645},
{"f_27639ChickenBridge.scm",(void*)f_27639},
{"f_27270ChickenBridge.scm",(void*)f_27270},
{"f_27623ChickenBridge.scm",(void*)f_27623},
{"f_27273ChickenBridge.scm",(void*)f_27273},
{"f_27609ChickenBridge.scm",(void*)f_27609},
{"f_27605ChickenBridge.scm",(void*)f_27605},
{"f_27276ChickenBridge.scm",(void*)f_27276},
{"f_27598ChickenBridge.scm",(void*)f_27598},
{"f_27594ChickenBridge.scm",(void*)f_27594},
{"f_27279ChickenBridge.scm",(void*)f_27279},
{"f_27282ChickenBridge.scm",(void*)f_27282},
{"f_8251ChickenBridge.scm",(void*)f_8251},
{"f_8274ChickenBridge.scm",(void*)f_8274},
{"f_8264ChickenBridge.scm",(void*)f_8264},
{"f_27582ChickenBridge.scm",(void*)f_27582},
{"f_27574ChickenBridge.scm",(void*)f_27574},
{"f_27578ChickenBridge.scm",(void*)f_27578},
{"f_27566ChickenBridge.scm",(void*)f_27566},
{"f_27570ChickenBridge.scm",(void*)f_27570},
{"f_27440ChickenBridge.scm",(void*)f_27440},
{"f_27555ChickenBridge.scm",(void*)f_27555},
{"f_27559ChickenBridge.scm",(void*)f_27559},
{"f_27547ChickenBridge.scm",(void*)f_27547},
{"f_27551ChickenBridge.scm",(void*)f_27551},
{"f_27443ChickenBridge.scm",(void*)f_27443},
{"f_27447ChickenBridge.scm",(void*)f_27447},
{"f_27452ChickenBridge.scm",(void*)f_27452},
{"f_27462ChickenBridge.scm",(void*)f_27462},
{"f_27465ChickenBridge.scm",(void*)f_27465},
{"f_27346ChickenBridge.scm",(void*)f_27346},
{"f_27409ChickenBridge.scm",(void*)f_27409},
{"f_27430ChickenBridge.scm",(void*)f_27430},
{"f_27371ChickenBridge.scm",(void*)f_27371},
{"f_27400ChickenBridge.scm",(void*)f_27400},
{"f_27349ChickenBridge.scm",(void*)f_27349},
{"f_27366ChickenBridge.scm",(void*)f_27366},
{"f_27362ChickenBridge.scm",(void*)f_27362},
{"f_26812ChickenBridge.scm",(void*)f_26812},
{"f_26816ChickenBridge.scm",(void*)f_26816},
{"f_26804ChickenBridge.scm",(void*)f_26804},
{"f_26732ChickenBridge.scm",(void*)f_26732},
{"f_26790ChickenBridge.scm",(void*)f_26790},
{"f_26736ChickenBridge.scm",(void*)f_26736},
{"f_26744ChickenBridge.scm",(void*)f_26744},
{"f_26754ChickenBridge.scm",(void*)f_26754},
{"f_26757ChickenBridge.scm",(void*)f_26757},
{"f_27326ChickenBridge.scm",(void*)f_27326},
{"f_27296ChickenBridge.scm",(void*)f_27296},
{"f_27285ChickenBridge.scm",(void*)f_27285},
{"f_27209ChickenBridge.scm",(void*)f_27209},
{"f_27217ChickenBridge.scm",(void*)f_27217},
{"f_27221ChickenBridge.scm",(void*)f_27221},
{"f_27225ChickenBridge.scm",(void*)f_27225},
{"f_27231ChickenBridge.scm",(void*)f_27231},
{"f_27241ChickenBridge.scm",(void*)f_27241},
{"f_26997ChickenBridge.scm",(void*)f_26997},
{"f_27065ChickenBridge.scm",(void*)f_27065},
{"f_27068ChickenBridge.scm",(void*)f_27068},
{"f_27071ChickenBridge.scm",(void*)f_27071},
{"f_27074ChickenBridge.scm",(void*)f_27074},
{"f_27077ChickenBridge.scm",(void*)f_27077},
{"f_27175ChickenBridge.scm",(void*)f_27175},
{"f_27185ChickenBridge.scm",(void*)f_27185},
{"f_27143ChickenBridge.scm",(void*)f_27143},
{"f_27153ChickenBridge.scm",(void*)f_27153},
{"f_27094ChickenBridge.scm",(void*)f_27094},
{"f_27113ChickenBridge.scm",(void*)f_27113},
{"f_27123ChickenBridge.scm",(void*)f_27123},
{"f_27104ChickenBridge.scm",(void*)f_27104},
{"f_27080ChickenBridge.scm",(void*)f_27080},
{"f_27033ChickenBridge.scm",(void*)f_27033},
{"f_27043ChickenBridge.scm",(void*)f_27043},
{"f_27016ChickenBridge.scm",(void*)f_27016},
{"f_27023ChickenBridge.scm",(void*)f_27023},
{"f_26999ChickenBridge.scm",(void*)f_26999},
{"f_27006ChickenBridge.scm",(void*)f_27006},
{"f_26818ChickenBridge.scm",(void*)f_26818},
{"f_26826ChickenBridge.scm",(void*)f_26826},
{"f_26830ChickenBridge.scm",(void*)f_26830},
{"f_26832ChickenBridge.scm",(void*)f_26832},
{"f_26842ChickenBridge.scm",(void*)f_26842},
{"f_26973ChickenBridge.scm",(void*)f_26973},
{"f_26922ChickenBridge.scm",(void*)f_26922},
{"f_26925ChickenBridge.scm",(void*)f_26925},
{"f_26936ChickenBridge.scm",(void*)f_26936},
{"f_26888ChickenBridge.scm",(void*)f_26888},
{"f_26857ChickenBridge.scm",(void*)f_26857},
{"f_26860ChickenBridge.scm",(void*)f_26860},
{"f_26845ChickenBridge.scm",(void*)f_26845},
{"f_26412ChickenBridge.scm",(void*)f_26412},
{"f_26726ChickenBridge.scm",(void*)f_26726},
{"f_26655ChickenBridge.scm",(void*)f_26655},
{"f_26657ChickenBridge.scm",(void*)f_26657},
{"f_26679ChickenBridge.scm",(void*)f_26679},
{"f_26425ChickenBridge.scm",(void*)f_26425},
{"f_26498ChickenBridge.scm",(void*)f_26498},
{"f_26651ChickenBridge.scm",(void*)f_26651},
{"f_26635ChickenBridge.scm",(void*)f_26635},
{"f_26587ChickenBridge.scm",(void*)f_26587},
{"f_26601ChickenBridge.scm",(void*)f_26601},
{"f_26554ChickenBridge.scm",(void*)f_26554},
{"f_26529ChickenBridge.scm",(void*)f_26529},
{"f_26428ChickenBridge.scm",(void*)f_26428},
{"f_26436ChickenBridge.scm",(void*)f_26436},
{"f_24939ChickenBridge.scm",(void*)f_24939},
{"f_26389ChickenBridge.scm",(void*)f_26389},
{"f_26404ChickenBridge.scm",(void*)f_26404},
{"f_26396ChickenBridge.scm",(void*)f_26396},
{"f_26360ChickenBridge.scm",(void*)f_26360},
{"f_26364ChickenBridge.scm",(void*)f_26364},
{"f_26325ChickenBridge.scm",(void*)f_26325},
{"f_26329ChickenBridge.scm",(void*)f_26329},
{"f_26290ChickenBridge.scm",(void*)f_26290},
{"f_26294ChickenBridge.scm",(void*)f_26294},
{"f_26255ChickenBridge.scm",(void*)f_26255},
{"f_26259ChickenBridge.scm",(void*)f_26259},
{"f_26220ChickenBridge.scm",(void*)f_26220},
{"f_26224ChickenBridge.scm",(void*)f_26224},
{"f_26185ChickenBridge.scm",(void*)f_26185},
{"f_26189ChickenBridge.scm",(void*)f_26189},
{"f_24943ChickenBridge.scm",(void*)f_24943},
{"f_26149ChickenBridge.scm",(void*)f_26149},
{"f_26164ChickenBridge.scm",(void*)f_26164},
{"f_26156ChickenBridge.scm",(void*)f_26156},
{"f_26120ChickenBridge.scm",(void*)f_26120},
{"f_26124ChickenBridge.scm",(void*)f_26124},
{"f_26085ChickenBridge.scm",(void*)f_26085},
{"f_26089ChickenBridge.scm",(void*)f_26089},
{"f_26050ChickenBridge.scm",(void*)f_26050},
{"f_26054ChickenBridge.scm",(void*)f_26054},
{"f_26015ChickenBridge.scm",(void*)f_26015},
{"f_26019ChickenBridge.scm",(void*)f_26019},
{"f_25980ChickenBridge.scm",(void*)f_25980},
{"f_25984ChickenBridge.scm",(void*)f_25984},
{"f_25945ChickenBridge.scm",(void*)f_25945},
{"f_25949ChickenBridge.scm",(void*)f_25949},
{"f_24946ChickenBridge.scm",(void*)f_24946},
{"f_25909ChickenBridge.scm",(void*)f_25909},
{"f_25924ChickenBridge.scm",(void*)f_25924},
{"f_25916ChickenBridge.scm",(void*)f_25916},
{"f_25880ChickenBridge.scm",(void*)f_25880},
{"f_25884ChickenBridge.scm",(void*)f_25884},
{"f_25845ChickenBridge.scm",(void*)f_25845},
{"f_25849ChickenBridge.scm",(void*)f_25849},
{"f_25810ChickenBridge.scm",(void*)f_25810},
{"f_25814ChickenBridge.scm",(void*)f_25814},
{"f_25775ChickenBridge.scm",(void*)f_25775},
{"f_25779ChickenBridge.scm",(void*)f_25779},
{"f_25740ChickenBridge.scm",(void*)f_25740},
{"f_25744ChickenBridge.scm",(void*)f_25744},
{"f_25705ChickenBridge.scm",(void*)f_25705},
{"f_25709ChickenBridge.scm",(void*)f_25709},
{"f_24949ChickenBridge.scm",(void*)f_24949},
{"f_25669ChickenBridge.scm",(void*)f_25669},
{"f_25684ChickenBridge.scm",(void*)f_25684},
{"f_25676ChickenBridge.scm",(void*)f_25676},
{"f_25640ChickenBridge.scm",(void*)f_25640},
{"f_25644ChickenBridge.scm",(void*)f_25644},
{"f_25605ChickenBridge.scm",(void*)f_25605},
{"f_25609ChickenBridge.scm",(void*)f_25609},
{"f_25570ChickenBridge.scm",(void*)f_25570},
{"f_25574ChickenBridge.scm",(void*)f_25574},
{"f_25535ChickenBridge.scm",(void*)f_25535},
{"f_25539ChickenBridge.scm",(void*)f_25539},
{"f_25500ChickenBridge.scm",(void*)f_25500},
{"f_25504ChickenBridge.scm",(void*)f_25504},
{"f_25465ChickenBridge.scm",(void*)f_25465},
{"f_25469ChickenBridge.scm",(void*)f_25469},
{"f_24952ChickenBridge.scm",(void*)f_24952},
{"f_25429ChickenBridge.scm",(void*)f_25429},
{"f_25444ChickenBridge.scm",(void*)f_25444},
{"f_25436ChickenBridge.scm",(void*)f_25436},
{"f_25400ChickenBridge.scm",(void*)f_25400},
{"f_25404ChickenBridge.scm",(void*)f_25404},
{"f_25365ChickenBridge.scm",(void*)f_25365},
{"f_25369ChickenBridge.scm",(void*)f_25369},
{"f_25330ChickenBridge.scm",(void*)f_25330},
{"f_25334ChickenBridge.scm",(void*)f_25334},
{"f_25295ChickenBridge.scm",(void*)f_25295},
{"f_25299ChickenBridge.scm",(void*)f_25299},
{"f_25260ChickenBridge.scm",(void*)f_25260},
{"f_25264ChickenBridge.scm",(void*)f_25264},
{"f_25225ChickenBridge.scm",(void*)f_25225},
{"f_25229ChickenBridge.scm",(void*)f_25229},
{"f_24955ChickenBridge.scm",(void*)f_24955},
{"f_25189ChickenBridge.scm",(void*)f_25189},
{"f_25204ChickenBridge.scm",(void*)f_25204},
{"f_25196ChickenBridge.scm",(void*)f_25196},
{"f_25160ChickenBridge.scm",(void*)f_25160},
{"f_25164ChickenBridge.scm",(void*)f_25164},
{"f_25125ChickenBridge.scm",(void*)f_25125},
{"f_25129ChickenBridge.scm",(void*)f_25129},
{"f_25090ChickenBridge.scm",(void*)f_25090},
{"f_25094ChickenBridge.scm",(void*)f_25094},
{"f_25055ChickenBridge.scm",(void*)f_25055},
{"f_25059ChickenBridge.scm",(void*)f_25059},
{"f_25020ChickenBridge.scm",(void*)f_25020},
{"f_25024ChickenBridge.scm",(void*)f_25024},
{"f_24985ChickenBridge.scm",(void*)f_24985},
{"f_24989ChickenBridge.scm",(void*)f_24989},
{"f_24958ChickenBridge.scm",(void*)f_24958},
{"f_24961ChickenBridge.scm",(void*)f_24961},
{"f_24707ChickenBridge.scm",(void*)f_24707},
{"f_24713ChickenBridge.scm",(void*)f_24713},
{"f_24716ChickenBridge.scm",(void*)f_24716},
{"f_24920ChickenBridge.scm",(void*)f_24920},
{"f_24905ChickenBridge.scm",(void*)f_24905},
{"f_24840ChickenBridge.scm",(void*)f_24840},
{"f_8019ChickenBridge.scm",(void*)f_8019},
{"f_24816ChickenBridge.scm",(void*)f_24816},
{"f_24820ChickenBridge.scm",(void*)f_24820},
{"f_24806ChickenBridge.scm",(void*)f_24806},
{"f_24814ChickenBridge.scm",(void*)f_24814},
{"f_24792ChickenBridge.scm",(void*)f_24792},
{"f_24718ChickenBridge.scm",(void*)f_24718},
{"f_24787ChickenBridge.scm",(void*)f_24787},
{"f_24722ChickenBridge.scm",(void*)f_24722},
{"f_24759ChickenBridge.scm",(void*)f_24759},
{"f_24733ChickenBridge.scm",(void*)f_24733},
{"f_24678ChickenBridge.scm",(void*)f_24678},
{"f_24682ChickenBridge.scm",(void*)f_24682},
{"f_24693ChickenBridge.scm",(void*)f_24693},
{"f_24691ChickenBridge.scm",(void*)f_24691},
{"f_24647ChickenBridge.scm",(void*)f_24647},
{"f_24651ChickenBridge.scm",(void*)f_24651},
{"f_24662ChickenBridge.scm",(void*)f_24662},
{"f_24660ChickenBridge.scm",(void*)f_24660},
{"f_24629ChickenBridge.scm",(void*)f_24629},
{"f_24637ChickenBridge.scm",(void*)f_24637},
{"f_24645ChickenBridge.scm",(void*)f_24645},
{"f_24619ChickenBridge.scm",(void*)f_24619},
{"f_24627ChickenBridge.scm",(void*)f_24627},
{"f_24560ChickenBridge.scm",(void*)f_24560},
{"f_24567ChickenBridge.scm",(void*)f_24567},
{"f_24570ChickenBridge.scm",(void*)f_24570},
{"f_24573ChickenBridge.scm",(void*)f_24573},
{"f_24578ChickenBridge.scm",(void*)f_24578},
{"f_24522ChickenBridge.scm",(void*)f_24522},
{"f_24530ChickenBridge.scm",(void*)f_24530},
{"f_24534ChickenBridge.scm",(void*)f_24534},
{"f_24554ChickenBridge.scm",(void*)f_24554},
{"f_24538ChickenBridge.scm",(void*)f_24538},
{"f_24546ChickenBridge.scm",(void*)f_24546},
{"f_24542ChickenBridge.scm",(void*)f_24542},
{"f_24513ChickenBridge.scm",(void*)f_24513},
{"f_24504ChickenBridge.scm",(void*)f_24504},
{"f_24495ChickenBridge.scm",(void*)f_24495},
{"f_24486ChickenBridge.scm",(void*)f_24486},
{"f_24477ChickenBridge.scm",(void*)f_24477},
{"f_24468ChickenBridge.scm",(void*)f_24468},
{"f_24459ChickenBridge.scm",(void*)f_24459},
{"f_24444ChickenBridge.scm",(void*)f_24444},
{"f_24438ChickenBridge.scm",(void*)f_24438},
{"f_24393ChickenBridge.scm",(void*)f_24393},
{"f_7377ChickenBridge.scm",(void*)f_7377},
{"f_24351ChickenBridge.scm",(void*)f_24351},
{"f_24361ChickenBridge.scm",(void*)f_24361},
{"f_23503ChickenBridge.scm",(void*)f_23503},
{"f_7305ChickenBridge.scm",(void*)f_7305},
{"f_23497ChickenBridge.scm",(void*)f_23497},
{"f_23475ChickenBridge.scm",(void*)f_23475},
{"f_23159ChickenBridge.scm",(void*)f_23159},
{"f_23163ChickenBridge.scm",(void*)f_23163},
{"f_23220ChickenBridge.scm",(void*)f_23220},
{"f_23192ChickenBridge.scm",(void*)f_23192},
{"f_23257ChickenBridge.scm",(void*)f_23257},
{"f_23294ChickenBridge.scm",(void*)f_23294},
{"f_23297ChickenBridge.scm",(void*)f_23297},
{"f_23457ChickenBridge.scm",(void*)f_23457},
{"f_23304ChickenBridge.scm",(void*)f_23304},
{"f_23307ChickenBridge.scm",(void*)f_23307},
{"f_23309ChickenBridge.scm",(void*)f_23309},
{"f_23319ChickenBridge.scm",(void*)f_23319},
{"f_23322ChickenBridge.scm",(void*)f_23322},
{"f_23355ChickenBridge.scm",(void*)f_23355},
{"f_23443ChickenBridge.scm",(void*)f_23443},
{"f_23358ChickenBridge.scm",(void*)f_23358},
{"f_23429ChickenBridge.scm",(void*)f_23429},
{"f_23415ChickenBridge.scm",(void*)f_23415},
{"f_23395ChickenBridge.scm",(void*)f_23395},
{"f_23398ChickenBridge.scm",(void*)f_23398},
{"f_23375ChickenBridge.scm",(void*)f_23375},
{"f_23378ChickenBridge.scm",(void*)f_23378},
{"f_23361ChickenBridge.scm",(void*)f_23361},
{"f_23258ChickenBridge.scm",(void*)f_23258},
{"f_23264ChickenBridge.scm",(void*)f_23264},
{"f_23274ChickenBridge.scm",(void*)f_23274},
{"f_23143ChickenBridge.scm",(void*)f_23143},
{"f_23147ChickenBridge.scm",(void*)f_23147},
{"f_23154ChickenBridge.scm",(void*)f_23154},
{"f_23138ChickenBridge.scm",(void*)f_23138},
{"f_22991ChickenBridge.scm",(void*)f_22991},
{"f_22995ChickenBridge.scm",(void*)f_22995},
{"f_23064ChickenBridge.scm",(void*)f_23064},
{"f_23107ChickenBridge.scm",(void*)f_23107},
{"f_23111ChickenBridge.scm",(void*)f_23111},
{"f_23100ChickenBridge.scm",(void*)f_23100},
{"f_23087ChickenBridge.scm",(void*)f_23087},
{"f_23006ChickenBridge.scm",(void*)f_23006},
{"f_23049ChickenBridge.scm",(void*)f_23049},
{"f_23053ChickenBridge.scm",(void*)f_23053},
{"f_23042ChickenBridge.scm",(void*)f_23042},
{"f_23029ChickenBridge.scm",(void*)f_23029},
{"f_22825ChickenBridge.scm",(void*)f_22825},
{"f_22926ChickenBridge.scm",(void*)f_22926},
{"f_22975ChickenBridge.scm",(void*)f_22975},
{"f_22971ChickenBridge.scm",(void*)f_22971},
{"f_22943ChickenBridge.scm",(void*)f_22943},
{"f_22878ChickenBridge.scm",(void*)f_22878},
{"f_22887ChickenBridge.scm",(void*)f_22887},
{"f_22871ChickenBridge.scm",(void*)f_22871},
{"f_22690ChickenBridge.scm",(void*)f_22690},
{"f_22816ChickenBridge.scm",(void*)f_22816},
{"f_22812ChickenBridge.scm",(void*)f_22812},
{"f_22790ChickenBridge.scm",(void*)f_22790},
{"f_22720ChickenBridge.scm",(void*)f_22720},
{"f_22736ChickenBridge.scm",(void*)f_22736},
{"f_22645ChickenBridge.scm",(void*)f_22645},
{"f_22688ChickenBridge.scm",(void*)f_22688},
{"f_22677ChickenBridge.scm",(void*)f_22677},
{"f_22529ChickenBridge.scm",(void*)f_22529},
{"f_22643ChickenBridge.scm",(void*)f_22643},
{"f_22544ChickenBridge.scm",(void*)f_22544},
{"f_22574ChickenBridge.scm",(void*)f_22574},
{"f_22593ChickenBridge.scm",(void*)f_22593},
{"f_22578ChickenBridge.scm",(void*)f_22578},
{"f_22557ChickenBridge.scm",(void*)f_22557},
{"f_22407ChickenBridge.scm",(void*)f_22407},
{"f_22527ChickenBridge.scm",(void*)f_22527},
{"f_22422ChickenBridge.scm",(void*)f_22422},
{"f_22452ChickenBridge.scm",(void*)f_22452},
{"f_22471ChickenBridge.scm",(void*)f_22471},
{"f_22456ChickenBridge.scm",(void*)f_22456},
{"f_22435ChickenBridge.scm",(void*)f_22435},
{"f_22310ChickenBridge.scm",(void*)f_22310},
{"f_22405ChickenBridge.scm",(void*)f_22405},
{"f_22325ChickenBridge.scm",(void*)f_22325},
{"f_22371ChickenBridge.scm",(void*)f_22371},
{"f_22356ChickenBridge.scm",(void*)f_22356},
{"f_22338ChickenBridge.scm",(void*)f_22338},
{"f_22257ChickenBridge.scm",(void*)f_22257},
{"f_22295ChickenBridge.scm",(void*)f_22295},
{"f_22302ChickenBridge.scm",(void*)f_22302},
{"f_22280ChickenBridge.scm",(void*)f_22280},
{"f_22255ChickenBridge.scm",(void*)f_22255},
{"f_22236ChickenBridge.scm",(void*)f_22236},
{"f_22223ChickenBridge.scm",(void*)f_22223},
{"f_22205ChickenBridge.scm",(void*)f_22205},
{"f_22158ChickenBridge.scm",(void*)f_22158},
{"f_22162ChickenBridge.scm",(void*)f_22162},
{"f_22187ChickenBridge.scm",(void*)f_22187},
{"f_22174ChickenBridge.scm",(void*)f_22174},
{"f_22130ChickenBridge.scm",(void*)f_22130},
{"f_22111ChickenBridge.scm",(void*)f_22111},
{"f_22070ChickenBridge.scm",(void*)f_22070},
{"f_22051ChickenBridge.scm",(void*)f_22051},
{"f_21823ChickenBridge.scm",(void*)f_21823},
{"f_22028ChickenBridge.scm",(void*)f_22028},
{"f_22043ChickenBridge.scm",(void*)f_22043},
{"f_22035ChickenBridge.scm",(void*)f_22035},
{"f_21999ChickenBridge.scm",(void*)f_21999},
{"f_22003ChickenBridge.scm",(void*)f_22003},
{"f_21964ChickenBridge.scm",(void*)f_21964},
{"f_21968ChickenBridge.scm",(void*)f_21968},
{"f_21827ChickenBridge.scm",(void*)f_21827},
{"f_21928ChickenBridge.scm",(void*)f_21928},
{"f_21943ChickenBridge.scm",(void*)f_21943},
{"f_21935ChickenBridge.scm",(void*)f_21935},
{"f_21899ChickenBridge.scm",(void*)f_21899},
{"f_21903ChickenBridge.scm",(void*)f_21903},
{"f_21864ChickenBridge.scm",(void*)f_21864},
{"f_21868ChickenBridge.scm",(void*)f_21868},
{"f_21830ChickenBridge.scm",(void*)f_21830},
{"f_21833ChickenBridge.scm",(void*)f_21833},
{"f_21836ChickenBridge.scm",(void*)f_21836},
{"f_21781ChickenBridge.scm",(void*)f_21781},
{"f_21810ChickenBridge.scm",(void*)f_21810},
{"f_21795ChickenBridge.scm",(void*)f_21795},
{"f_21726ChickenBridge.scm",(void*)f_21726},
{"f_21737ChickenBridge.scm",(void*)f_21737},
{"f_21739ChickenBridge.scm",(void*)f_21739},
{"f_21767ChickenBridge.scm",(void*)f_21767},
{"f_21627ChickenBridge.scm",(void*)f_21627},
{"f_21631ChickenBridge.scm",(void*)f_21631},
{"f_21634ChickenBridge.scm",(void*)f_21634},
{"f_21699ChickenBridge.scm",(void*)f_21699},
{"f_21636ChickenBridge.scm",(void*)f_21636},
{"f_21652ChickenBridge.scm",(void*)f_21652},
{"f_21356ChickenBridge.scm",(void*)f_21356},
{"f_21389ChickenBridge.scm",(void*)f_21389},
{"f_21374ChickenBridge.scm",(void*)f_21374},
{"f_21335ChickenBridge.scm",(void*)f_21335},
{"f_21300ChickenBridge.scm",(void*)f_21300},
{"f_21304ChickenBridge.scm",(void*)f_21304},
{"f_21092ChickenBridge.scm",(void*)f_21092},
{"f_21105ChickenBridge.scm",(void*)f_21105},
{"f_21187ChickenBridge.scm",(void*)f_21187},
{"f_21190ChickenBridge.scm",(void*)f_21190},
{"f_21198ChickenBridge.scm",(void*)f_21198},
{"f_21210ChickenBridge.scm",(void*)f_21210},
{"f_21231ChickenBridge.scm",(void*)f_21231},
{"f_21239ChickenBridge.scm",(void*)f_21239},
{"f_21126ChickenBridge.scm",(void*)f_21126},
{"f_21131ChickenBridge.scm",(void*)f_21131},
{"f_21163ChickenBridge.scm",(void*)f_21163},
{"f_20985ChickenBridge.scm",(void*)f_20985},
{"f_21072ChickenBridge.scm",(void*)f_21072},
{"f_20992ChickenBridge.scm",(void*)f_20992},
{"f_21001ChickenBridge.scm",(void*)f_21001},
{"f_21048ChickenBridge.scm",(void*)f_21048},
{"f_21014ChickenBridge.scm",(void*)f_21014},
{"f_21040ChickenBridge.scm",(void*)f_21040},
{"f_20852ChickenBridge.scm",(void*)f_20852},
{"f_20856ChickenBridge.scm",(void*)f_20856},
{"f_20859ChickenBridge.scm",(void*)f_20859},
{"f_20963ChickenBridge.scm",(void*)f_20963},
{"f_20861ChickenBridge.scm",(void*)f_20861},
{"f_20868ChickenBridge.scm",(void*)f_20868},
{"f_20910ChickenBridge.scm",(void*)f_20910},
{"f_20917ChickenBridge.scm",(void*)f_20917},
{"f_20891ChickenBridge.scm",(void*)f_20891},
{"f_20785ChickenBridge.scm",(void*)f_20785},
{"f_20789ChickenBridge.scm",(void*)f_20789},
{"f_20835ChickenBridge.scm",(void*)f_20835},
{"f_20792ChickenBridge.scm",(void*)f_20792},
{"f_20828ChickenBridge.scm",(void*)f_20828},
{"f_20795ChickenBridge.scm",(void*)f_20795},
{"f_20808ChickenBridge.scm",(void*)f_20808},
{"f_20739ChickenBridge.scm",(void*)f_20739},
{"f_20743ChickenBridge.scm",(void*)f_20743},
{"f_20653ChickenBridge.scm",(void*)f_20653},
{"f_20657ChickenBridge.scm",(void*)f_20657},
{"f_20660ChickenBridge.scm",(void*)f_20660},
{"f_20669ChickenBridge.scm",(void*)f_20669},
{"f_20691ChickenBridge.scm",(void*)f_20691},
{"f_20638ChickenBridge.scm",(void*)f_20638},
{"f_20623ChickenBridge.scm",(void*)f_20623},
{"f_20387ChickenBridge.scm",(void*)f_20387},
{"f_20600ChickenBridge.scm",(void*)f_20600},
{"f_20615ChickenBridge.scm",(void*)f_20615},
{"f_20607ChickenBridge.scm",(void*)f_20607},
{"f_20571ChickenBridge.scm",(void*)f_20571},
{"f_20575ChickenBridge.scm",(void*)f_20575},
{"f_20536ChickenBridge.scm",(void*)f_20536},
{"f_20540ChickenBridge.scm",(void*)f_20540},
{"f_20391ChickenBridge.scm",(void*)f_20391},
{"f_20500ChickenBridge.scm",(void*)f_20500},
{"f_20515ChickenBridge.scm",(void*)f_20515},
{"f_20507ChickenBridge.scm",(void*)f_20507},
{"f_20471ChickenBridge.scm",(void*)f_20471},
{"f_20475ChickenBridge.scm",(void*)f_20475},
{"f_20436ChickenBridge.scm",(void*)f_20436},
{"f_20440ChickenBridge.scm",(void*)f_20440},
{"f_20394ChickenBridge.scm",(void*)f_20394},
{"f_20397ChickenBridge.scm",(void*)f_20397},
{"f_20408ChickenBridge.scm",(void*)f_20408},
{"f_20347ChickenBridge.scm",(void*)f_20347},
{"f_20351ChickenBridge.scm",(void*)f_20351},
{"f_20381ChickenBridge.scm",(void*)f_20381},
{"f_20362ChickenBridge.scm",(void*)f_20362},
{"f_20370ChickenBridge.scm",(void*)f_20370},
{"f_20326ChickenBridge.scm",(void*)f_20326},
{"f_20338ChickenBridge.scm",(void*)f_20338},
{"f_20283ChickenBridge.scm",(void*)f_20283},
{"f_20313ChickenBridge.scm",(void*)f_20313},
{"f_20240ChickenBridge.scm",(void*)f_20240},
{"f_20270ChickenBridge.scm",(void*)f_20270},
{"f_20171ChickenBridge.scm",(void*)f_20171},
{"f_20215ChickenBridge.scm",(void*)f_20215},
{"f_20102ChickenBridge.scm",(void*)f_20102},
{"f_20146ChickenBridge.scm",(void*)f_20146},
{"f_20096ChickenBridge.scm",(void*)f_20096},
{"f_20090ChickenBridge.scm",(void*)f_20090},
{"f_20069ChickenBridge.scm",(void*)f_20069},
{"f_20081ChickenBridge.scm",(void*)f_20081},
{"f_20054ChickenBridge.scm",(void*)f_20054},
{"f_19943ChickenBridge.scm",(void*)f_19943},
{"f_20018ChickenBridge.scm",(void*)f_20018},
{"f_19947ChickenBridge.scm",(void*)f_19947},
{"f_19987ChickenBridge.scm",(void*)f_19987},
{"f_19976ChickenBridge.scm",(void*)f_19976},
{"f_19961ChickenBridge.scm",(void*)f_19961},
{"f_19969ChickenBridge.scm",(void*)f_19969},
{"f_19909ChickenBridge.scm",(void*)f_19909},
{"f_19921ChickenBridge.scm",(void*)f_19921},
{"f_18862ChickenBridge.scm",(void*)f_18862},
{"f_19886ChickenBridge.scm",(void*)f_19886},
{"f_19901ChickenBridge.scm",(void*)f_19901},
{"f_19893ChickenBridge.scm",(void*)f_19893},
{"f_19857ChickenBridge.scm",(void*)f_19857},
{"f_19861ChickenBridge.scm",(void*)f_19861},
{"f_19822ChickenBridge.scm",(void*)f_19822},
{"f_19826ChickenBridge.scm",(void*)f_19826},
{"f_18872ChickenBridge.scm",(void*)f_18872},
{"f_19786ChickenBridge.scm",(void*)f_19786},
{"f_19801ChickenBridge.scm",(void*)f_19801},
{"f_19793ChickenBridge.scm",(void*)f_19793},
{"f_19757ChickenBridge.scm",(void*)f_19757},
{"f_19761ChickenBridge.scm",(void*)f_19761},
{"f_19722ChickenBridge.scm",(void*)f_19722},
{"f_19726ChickenBridge.scm",(void*)f_19726},
{"f_18875ChickenBridge.scm",(void*)f_18875},
{"f_18878ChickenBridge.scm",(void*)f_18878},
{"f_18883ChickenBridge.scm",(void*)f_18883},
{"f_19615ChickenBridge.scm",(void*)f_19615},
{"f_19638ChickenBridge.scm",(void*)f_19638},
{"f_19691ChickenBridge.scm",(void*)f_19691},
{"f_19673ChickenBridge.scm",(void*)f_19673},
{"f_19666ChickenBridge.scm",(void*)f_19666},
{"f_19648ChickenBridge.scm",(void*)f_19648},
{"f_19625ChickenBridge.scm",(void*)f_19625},
{"f_19077ChickenBridge.scm",(void*)f_19077},
{"f_19577ChickenBridge.scm",(void*)f_19577},
{"f_19599ChickenBridge.scm",(void*)f_19599},
{"f_19583ChickenBridge.scm",(void*)f_19583},
{"f_19591ChickenBridge.scm",(void*)f_19591},
{"f_19595ChickenBridge.scm",(void*)f_19595},
{"f_19581ChickenBridge.scm",(void*)f_19581},
{"f_19571ChickenBridge.scm",(void*)f_19571},
{"f_19080ChickenBridge.scm",(void*)f_19080},
{"f_19448ChickenBridge.scm",(void*)f_19448},
{"f_19472ChickenBridge.scm",(void*)f_19472},
{"f_19534ChickenBridge.scm",(void*)f_19534},
{"f_19475ChickenBridge.scm",(void*)f_19475},
{"f_19491ChickenBridge.scm",(void*)f_19491},
{"f_19516ChickenBridge.scm",(void*)f_19516},
{"f_19482ChickenBridge.scm",(void*)f_19482},
{"f_19459ChickenBridge.scm",(void*)f_19459},
{"f_19083ChickenBridge.scm",(void*)f_19083},
{"f_19434ChickenBridge.scm",(void*)f_19434},
{"f_19087ChickenBridge.scm",(void*)f_19087},
{"f_19131ChickenBridge.scm",(void*)f_19131},
{"f_19134ChickenBridge.scm",(void*)f_19134},
{"f_19415ChickenBridge.scm",(void*)f_19415},
{"f_19425ChickenBridge.scm",(void*)f_19425},
{"f_19137ChickenBridge.scm",(void*)f_19137},
{"f_19353ChickenBridge.scm",(void*)f_19353},
{"f_19363ChickenBridge.scm",(void*)f_19363},
{"f_19366ChickenBridge.scm",(void*)f_19366},
{"f_19386ChickenBridge.scm",(void*)f_19386},
{"f_19388ChickenBridge.scm",(void*)f_19388},
{"f_19398ChickenBridge.scm",(void*)f_19398},
{"f_19372ChickenBridge.scm",(void*)f_19372},
{"f_19375ChickenBridge.scm",(void*)f_19375},
{"f_19140ChickenBridge.scm",(void*)f_19140},
{"f_19148ChickenBridge.scm",(void*)f_19148},
{"f_19161ChickenBridge.scm",(void*)f_19161},
{"f_19035ChickenBridge.scm",(void*)f_19035},
{"f_19044ChickenBridge.scm",(void*)f_19044},
{"f_19066ChickenBridge.scm",(void*)f_19066},
{"f_19055ChickenBridge.scm",(void*)f_19055},
{"f_19164ChickenBridge.scm",(void*)f_19164},
{"f_19324ChickenBridge.scm",(void*)f_19324},
{"f_19326ChickenBridge.scm",(void*)f_19326},
{"f_19336ChickenBridge.scm",(void*)f_19336},
{"f_19170ChickenBridge.scm",(void*)f_19170},
{"f_19297ChickenBridge.scm",(void*)f_19297},
{"f_19299ChickenBridge.scm",(void*)f_19299},
{"f_19309ChickenBridge.scm",(void*)f_19309},
{"f_19173ChickenBridge.scm",(void*)f_19173},
{"f_19185ChickenBridge.scm",(void*)f_19185},
{"f_19211ChickenBridge.scm",(void*)f_19211},
{"f_19217ChickenBridge.scm",(void*)f_19217},
{"f_19223ChickenBridge.scm",(void*)f_19223},
{"f_19265ChickenBridge.scm",(void*)f_19265},
{"f_19277ChickenBridge.scm",(void*)f_19277},
{"f_19269ChickenBridge.scm",(void*)f_19269},
{"f_19226ChickenBridge.scm",(void*)f_19226},
{"f_19236ChickenBridge.scm",(void*)f_19236},
{"f_19238ChickenBridge.scm",(void*)f_19238},
{"f_19248ChickenBridge.scm",(void*)f_19248},
{"f_19229ChickenBridge.scm",(void*)f_19229},
{"f_19198ChickenBridge.scm",(void*)f_19198},
{"f_19176ChickenBridge.scm",(void*)f_19176},
{"f_19143ChickenBridge.scm",(void*)f_19143},
{"f_19090ChickenBridge.scm",(void*)f_19090},
{"f_19113ChickenBridge.scm",(void*)f_19113},
{"f_19102ChickenBridge.scm",(void*)f_19102},
{"f_18967ChickenBridge.scm",(void*)f_18967},
{"f_19015ChickenBridge.scm",(void*)f_19015},
{"f_18977ChickenBridge.scm",(void*)f_18977},
{"f_19005ChickenBridge.scm",(void*)f_19005},
{"f_18980ChickenBridge.scm",(void*)f_18980},
{"f_18885ChickenBridge.scm",(void*)f_18885},
{"f_8212ChickenBridge.scm",(void*)f_8212},
{"f_8232ChickenBridge.scm",(void*)f_8232},
{"f_8222ChickenBridge.scm",(void*)f_8222},
{"f_18957ChickenBridge.scm",(void*)f_18957},
{"f_18889ChickenBridge.scm",(void*)f_18889},
{"f_18907ChickenBridge.scm",(void*)f_18907},
{"f_18939ChickenBridge.scm",(void*)f_18939},
{"f_18768ChickenBridge.scm",(void*)f_18768},
{"f_18772ChickenBridge.scm",(void*)f_18772},
{"f_18801ChickenBridge.scm",(void*)f_18801},
{"f_18806ChickenBridge.scm",(void*)f_18806},
{"f_18831ChickenBridge.scm",(void*)f_18831},
{"f_18816ChickenBridge.scm",(void*)f_18816},
{"f_18250ChickenBridge.scm",(void*)f_18250},
{"f_18521ChickenBridge.scm",(void*)f_18521},
{"f_18525ChickenBridge.scm",(void*)f_18525},
{"f_18530ChickenBridge.scm",(void*)f_18530},
{"f_18736ChickenBridge.scm",(void*)f_18736},
{"f_18751ChickenBridge.scm",(void*)f_18751},
{"f_18743ChickenBridge.scm",(void*)f_18743},
{"f_18707ChickenBridge.scm",(void*)f_18707},
{"f_18711ChickenBridge.scm",(void*)f_18711},
{"f_18672ChickenBridge.scm",(void*)f_18672},
{"f_18676ChickenBridge.scm",(void*)f_18676},
{"f_18534ChickenBridge.scm",(void*)f_18534},
{"f_18636ChickenBridge.scm",(void*)f_18636},
{"f_18651ChickenBridge.scm",(void*)f_18651},
{"f_18643ChickenBridge.scm",(void*)f_18643},
{"f_18607ChickenBridge.scm",(void*)f_18607},
{"f_18611ChickenBridge.scm",(void*)f_18611},
{"f_18572ChickenBridge.scm",(void*)f_18572},
{"f_18576ChickenBridge.scm",(void*)f_18576},
{"f_18537ChickenBridge.scm",(void*)f_18537},
{"f_18540ChickenBridge.scm",(void*)f_18540},
{"f_18543ChickenBridge.scm",(void*)f_18543},
{"f_18512ChickenBridge.scm",(void*)f_18512},
{"f_18254ChickenBridge.scm",(void*)f_18254},
{"f_18481ChickenBridge.scm",(void*)f_18481},
{"f_18496ChickenBridge.scm",(void*)f_18496},
{"f_18488ChickenBridge.scm",(void*)f_18488},
{"f_18452ChickenBridge.scm",(void*)f_18452},
{"f_18456ChickenBridge.scm",(void*)f_18456},
{"f_18417ChickenBridge.scm",(void*)f_18417},
{"f_18421ChickenBridge.scm",(void*)f_18421},
{"f_18257ChickenBridge.scm",(void*)f_18257},
{"f_18381ChickenBridge.scm",(void*)f_18381},
{"f_18396ChickenBridge.scm",(void*)f_18396},
{"f_18388ChickenBridge.scm",(void*)f_18388},
{"f_18352ChickenBridge.scm",(void*)f_18352},
{"f_18356ChickenBridge.scm",(void*)f_18356},
{"f_18317ChickenBridge.scm",(void*)f_18317},
{"f_18321ChickenBridge.scm",(void*)f_18321},
{"f_18260ChickenBridge.scm",(void*)f_18260},
{"f_18263ChickenBridge.scm",(void*)f_18263},
{"f_18266ChickenBridge.scm",(void*)f_18266},
{"f_18278ChickenBridge.scm",(void*)f_18278},
{"f_18296ChickenBridge.scm",(void*)f_18296},
{"f_18284ChickenBridge.scm",(void*)f_18284},
{"f_18272ChickenBridge.scm",(void*)f_18272},
{"f_18187ChickenBridge.scm",(void*)f_18187},
{"f_17847ChickenBridge.scm",(void*)f_17847},
{"f_18029ChickenBridge.scm",(void*)f_18029},
{"f_18033ChickenBridge.scm",(void*)f_18033},
{"f_18035ChickenBridge.scm",(void*)f_18035},
{"f_17960ChickenBridge.scm",(void*)f_17960},
{"f_17970ChickenBridge.scm",(void*)f_17970},
{"f_17977ChickenBridge.scm",(void*)f_17977},
{"f_18045ChickenBridge.scm",(void*)f_18045},
{"f_18048ChickenBridge.scm",(void*)f_18048},
{"f_18052ChickenBridge.scm",(void*)f_18052},
{"f_18072ChickenBridge.scm",(void*)f_18072},
{"f_18088ChickenBridge.scm",(void*)f_18088},
{"f_18055ChickenBridge.scm",(void*)f_18055},
{"f_17850ChickenBridge.scm",(void*)f_17850},
{"f_17862ChickenBridge.scm",(void*)f_17862},
{"f_17898ChickenBridge.scm",(void*)f_17898},
{"f_17918ChickenBridge.scm",(void*)f_17918},
{"f_17923ChickenBridge.scm",(void*)f_17923},
{"f_17360ChickenBridge.scm",(void*)f_17360},
{"f_17287ChickenBridge.scm",(void*)f_17287},
{"f_17132ChickenBridge.scm",(void*)f_17132},
{"f_17138ChickenBridge.scm",(void*)f_17138},
{"f_17223ChickenBridge.scm",(void*)f_17223},
{"f_17150ChickenBridge.scm",(void*)f_17150},
{"f_17166ChickenBridge.scm",(void*)f_17166},
{"f_17170ChickenBridge.scm",(void*)f_17170},
{"f_17173ChickenBridge.scm",(void*)f_17173},
{"f_17153ChickenBridge.scm",(void*)f_17153},
{"f_17164ChickenBridge.scm",(void*)f_17164},
{"f_17304ChickenBridge.scm",(void*)f_17304},
{"f_17841ChickenBridge.scm",(void*)f_17841},
{"f_17364ChickenBridge.scm",(void*)f_17364},
{"f_17810ChickenBridge.scm",(void*)f_17810},
{"f_17825ChickenBridge.scm",(void*)f_17825},
{"f_17817ChickenBridge.scm",(void*)f_17817},
{"f_17781ChickenBridge.scm",(void*)f_17781},
{"f_17785ChickenBridge.scm",(void*)f_17785},
{"f_17746ChickenBridge.scm",(void*)f_17746},
{"f_17750ChickenBridge.scm",(void*)f_17750},
{"f_17711ChickenBridge.scm",(void*)f_17711},
{"f_17715ChickenBridge.scm",(void*)f_17715},
{"f_17367ChickenBridge.scm",(void*)f_17367},
{"f_17675ChickenBridge.scm",(void*)f_17675},
{"f_17690ChickenBridge.scm",(void*)f_17690},
{"f_17682ChickenBridge.scm",(void*)f_17682},
{"f_17646ChickenBridge.scm",(void*)f_17646},
{"f_17650ChickenBridge.scm",(void*)f_17650},
{"f_17611ChickenBridge.scm",(void*)f_17611},
{"f_17615ChickenBridge.scm",(void*)f_17615},
{"f_17576ChickenBridge.scm",(void*)f_17576},
{"f_17580ChickenBridge.scm",(void*)f_17580},
{"f_17370ChickenBridge.scm",(void*)f_17370},
{"f_17540ChickenBridge.scm",(void*)f_17540},
{"f_17555ChickenBridge.scm",(void*)f_17555},
{"f_17547ChickenBridge.scm",(void*)f_17547},
{"f_17511ChickenBridge.scm",(void*)f_17511},
{"f_17515ChickenBridge.scm",(void*)f_17515},
{"f_17476ChickenBridge.scm",(void*)f_17476},
{"f_17480ChickenBridge.scm",(void*)f_17480},
{"f_17441ChickenBridge.scm",(void*)f_17441},
{"f_17445ChickenBridge.scm",(void*)f_17445},
{"f_17373ChickenBridge.scm",(void*)f_17373},
{"f_17376ChickenBridge.scm",(void*)f_17376},
{"f_17379ChickenBridge.scm",(void*)f_17379},
{"f_17412ChickenBridge.scm",(void*)f_17412},
{"f_17420ChickenBridge.scm",(void*)f_17420},
{"f_17385ChickenBridge.scm",(void*)f_17385},
{"f_17398ChickenBridge.scm",(void*)f_17398},
{"f_17388ChickenBridge.scm",(void*)f_17388},
{"f_17391ChickenBridge.scm",(void*)f_17391},
{"f_16927ChickenBridge.scm",(void*)f_16927},
{"f_16931ChickenBridge.scm",(void*)f_16931},
{"f_16934ChickenBridge.scm",(void*)f_16934},
{"f_16937ChickenBridge.scm",(void*)f_16937},
{"f_17106ChickenBridge.scm",(void*)f_17106},
{"f_17119ChickenBridge.scm",(void*)f_17119},
{"f_17123ChickenBridge.scm",(void*)f_17123},
{"f_16943ChickenBridge.scm",(void*)f_16943},
{"f_17099ChickenBridge.scm",(void*)f_17099},
{"f_17080ChickenBridge.scm",(void*)f_17080},
{"f_17087ChickenBridge.scm",(void*)f_17087},
{"f_17091ChickenBridge.scm",(void*)f_17091},
{"f_16949ChickenBridge.scm",(void*)f_16949},
{"f_16955ChickenBridge.scm",(void*)f_16955},
{"f_17039ChickenBridge.scm",(void*)f_17039},
{"f_17041ChickenBridge.scm",(void*)f_17041},
{"f_17063ChickenBridge.scm",(void*)f_17063},
{"f_17070ChickenBridge.scm",(void*)f_17070},
{"f_17074ChickenBridge.scm",(void*)f_17074},
{"f_17060ChickenBridge.scm",(void*)f_17060},
{"f_17056ChickenBridge.scm",(void*)f_17056},
{"f_16997ChickenBridge.scm",(void*)f_16997},
{"f_17014ChickenBridge.scm",(void*)f_17014},
{"f_17024ChickenBridge.scm",(void*)f_17024},
{"f_17000ChickenBridge.scm",(void*)f_17000},
{"f_16959ChickenBridge.scm",(void*)f_16959},
{"f_16967ChickenBridge.scm",(void*)f_16967},
{"f_16969ChickenBridge.scm",(void*)f_16969},
{"f_16990ChickenBridge.scm",(void*)f_16990},
{"f_16827ChickenBridge.scm",(void*)f_16827},
{"f_16925ChickenBridge.scm",(void*)f_16925},
{"f_16884ChickenBridge.scm",(void*)f_16884},
{"f_16917ChickenBridge.scm",(void*)f_16917},
{"f_16913ChickenBridge.scm",(void*)f_16913},
{"f_16898ChickenBridge.scm",(void*)f_16898},
{"f_16834ChickenBridge.scm",(void*)f_16834},
{"f_16842ChickenBridge.scm",(void*)f_16842},
{"f_16875ChickenBridge.scm",(void*)f_16875},
{"f_16859ChickenBridge.scm",(void*)f_16859},
{"f_16060ChickenBridge.scm",(void*)f_16060},
{"f_16377ChickenBridge.scm",(void*)f_16377},
{"f_16384ChickenBridge.scm",(void*)f_16384},
{"f_16789ChickenBridge.scm",(void*)f_16789},
{"f_16804ChickenBridge.scm",(void*)f_16804},
{"f_16796ChickenBridge.scm",(void*)f_16796},
{"f_16760ChickenBridge.scm",(void*)f_16760},
{"f_16764ChickenBridge.scm",(void*)f_16764},
{"f_16725ChickenBridge.scm",(void*)f_16725},
{"f_16729ChickenBridge.scm",(void*)f_16729},
{"f_16690ChickenBridge.scm",(void*)f_16690},
{"f_16694ChickenBridge.scm",(void*)f_16694},
{"f_16387ChickenBridge.scm",(void*)f_16387},
{"f_16654ChickenBridge.scm",(void*)f_16654},
{"f_16669ChickenBridge.scm",(void*)f_16669},
{"f_16661ChickenBridge.scm",(void*)f_16661},
{"f_16625ChickenBridge.scm",(void*)f_16625},
{"f_16629ChickenBridge.scm",(void*)f_16629},
{"f_16590ChickenBridge.scm",(void*)f_16590},
{"f_16594ChickenBridge.scm",(void*)f_16594},
{"f_16555ChickenBridge.scm",(void*)f_16555},
{"f_16559ChickenBridge.scm",(void*)f_16559},
{"f_16390ChickenBridge.scm",(void*)f_16390},
{"f_16519ChickenBridge.scm",(void*)f_16519},
{"f_16534ChickenBridge.scm",(void*)f_16534},
{"f_16526ChickenBridge.scm",(void*)f_16526},
{"f_16490ChickenBridge.scm",(void*)f_16490},
{"f_16494ChickenBridge.scm",(void*)f_16494},
{"f_16455ChickenBridge.scm",(void*)f_16455},
{"f_16459ChickenBridge.scm",(void*)f_16459},
{"f_16420ChickenBridge.scm",(void*)f_16420},
{"f_16424ChickenBridge.scm",(void*)f_16424},
{"f_16393ChickenBridge.scm",(void*)f_16393},
{"f_16396ChickenBridge.scm",(void*)f_16396},
{"f_16064ChickenBridge.scm",(void*)f_16064},
{"f_16067ChickenBridge.scm",(void*)f_16067},
{"f_16341ChickenBridge.scm",(void*)f_16341},
{"f_16345ChickenBridge.scm",(void*)f_16345},
{"f_16348ChickenBridge.scm",(void*)f_16348},
{"f_16351ChickenBridge.scm",(void*)f_16351},
{"f_16354ChickenBridge.scm",(void*)f_16354},
{"f_16367ChickenBridge.scm",(void*)f_16367},
{"f_16357ChickenBridge.scm",(void*)f_16357},
{"f_16073ChickenBridge.scm",(void*)f_16073},
{"f_16336ChickenBridge.scm",(void*)f_16336},
{"f_16080ChickenBridge.scm",(void*)f_16080},
{"f_16311ChickenBridge.scm",(void*)f_16311},
{"f_16326ChickenBridge.scm",(void*)f_16326},
{"f_16318ChickenBridge.scm",(void*)f_16318},
{"f_16282ChickenBridge.scm",(void*)f_16282},
{"f_16286ChickenBridge.scm",(void*)f_16286},
{"f_16247ChickenBridge.scm",(void*)f_16247},
{"f_16251ChickenBridge.scm",(void*)f_16251},
{"f_16083ChickenBridge.scm",(void*)f_16083},
{"f_16211ChickenBridge.scm",(void*)f_16211},
{"f_16226ChickenBridge.scm",(void*)f_16226},
{"f_16218ChickenBridge.scm",(void*)f_16218},
{"f_16182ChickenBridge.scm",(void*)f_16182},
{"f_16186ChickenBridge.scm",(void*)f_16186},
{"f_16147ChickenBridge.scm",(void*)f_16147},
{"f_16151ChickenBridge.scm",(void*)f_16151},
{"f_16086ChickenBridge.scm",(void*)f_16086},
{"f_16089ChickenBridge.scm",(void*)f_16089},
{"f_16104ChickenBridge.scm",(void*)f_16104},
{"f_16126ChickenBridge.scm",(void*)f_16126},
{"f_16110ChickenBridge.scm",(void*)f_16110},
{"f_16118ChickenBridge.scm",(void*)f_16118},
{"f_16092ChickenBridge.scm",(void*)f_16092},
{"f_16095ChickenBridge.scm",(void*)f_16095},
{"f_15977ChickenBridge.scm",(void*)f_15977},
{"f_15968ChickenBridge.scm",(void*)f_15968},
{"f_15959ChickenBridge.scm",(void*)f_15959},
{"f_15941ChickenBridge.scm",(void*)f_15941},
{"f_15923ChickenBridge.scm",(void*)f_15923},
{"f_15905ChickenBridge.scm",(void*)f_15905},
{"f_15896ChickenBridge.scm",(void*)f_15896},
{"f_15887ChickenBridge.scm",(void*)f_15887},
{"f_15665ChickenBridge.scm",(void*)f_15665},
{"f_15715ChickenBridge.scm",(void*)f_15715},
{"f_15860ChickenBridge.scm",(void*)f_15860},
{"f_15741ChickenBridge.scm",(void*)f_15741},
{"f_15856ChickenBridge.scm",(void*)f_15856},
{"f_15841ChickenBridge.scm",(void*)f_15841},
{"f_15822ChickenBridge.scm",(void*)f_15822},
{"f_15795ChickenBridge.scm",(void*)f_15795},
{"f_15748ChickenBridge.scm",(void*)f_15748},
{"f_15718ChickenBridge.scm",(void*)f_15718},
{"f_15668ChickenBridge.scm",(void*)f_15668},
{"f_15674ChickenBridge.scm",(void*)f_15674},
{"f_15690ChickenBridge.scm",(void*)f_15690},
{"f_15693ChickenBridge.scm",(void*)f_15693},
{"f_15191ChickenBridge.scm",(void*)f_15191},
{"f_15655ChickenBridge.scm",(void*)f_15655},
{"f_15195ChickenBridge.scm",(void*)f_15195},
{"f_15627ChickenBridge.scm",(void*)f_15627},
{"f_15642ChickenBridge.scm",(void*)f_15642},
{"f_15634ChickenBridge.scm",(void*)f_15634},
{"f_15598ChickenBridge.scm",(void*)f_15598},
{"f_15602ChickenBridge.scm",(void*)f_15602},
{"f_15563ChickenBridge.scm",(void*)f_15563},
{"f_15567ChickenBridge.scm",(void*)f_15567},
{"f_15528ChickenBridge.scm",(void*)f_15528},
{"f_15532ChickenBridge.scm",(void*)f_15532},
{"f_15198ChickenBridge.scm",(void*)f_15198},
{"f_15492ChickenBridge.scm",(void*)f_15492},
{"f_15507ChickenBridge.scm",(void*)f_15507},
{"f_15499ChickenBridge.scm",(void*)f_15499},
{"f_15463ChickenBridge.scm",(void*)f_15463},
{"f_15467ChickenBridge.scm",(void*)f_15467},
{"f_15428ChickenBridge.scm",(void*)f_15428},
{"f_15432ChickenBridge.scm",(void*)f_15432},
{"f_15393ChickenBridge.scm",(void*)f_15393},
{"f_15397ChickenBridge.scm",(void*)f_15397},
{"f_15201ChickenBridge.scm",(void*)f_15201},
{"f_15357ChickenBridge.scm",(void*)f_15357},
{"f_15372ChickenBridge.scm",(void*)f_15372},
{"f_15364ChickenBridge.scm",(void*)f_15364},
{"f_15328ChickenBridge.scm",(void*)f_15328},
{"f_15332ChickenBridge.scm",(void*)f_15332},
{"f_15293ChickenBridge.scm",(void*)f_15293},
{"f_15297ChickenBridge.scm",(void*)f_15297},
{"f_15258ChickenBridge.scm",(void*)f_15258},
{"f_15262ChickenBridge.scm",(void*)f_15262},
{"f_15204ChickenBridge.scm",(void*)f_15204},
{"f_15207ChickenBridge.scm",(void*)f_15207},
{"f_15210ChickenBridge.scm",(void*)f_15210},
{"f_15225ChickenBridge.scm",(void*)f_15225},
{"f_15237ChickenBridge.scm",(void*)f_15237},
{"f_15216ChickenBridge.scm",(void*)f_15216},
{"f_15219ChickenBridge.scm",(void*)f_15219},
{"f_15115ChickenBridge.scm",(void*)f_15115},
{"f_15119ChickenBridge.scm",(void*)f_15119},
{"f_15138ChickenBridge.scm",(void*)f_15138},
{"f_15148ChickenBridge.scm",(void*)f_15148},
{"f_15150ChickenBridge.scm",(void*)f_15150},
{"f_15167ChickenBridge.scm",(void*)f_15167},
{"f_15170ChickenBridge.scm",(void*)f_15170},
{"f_15181ChickenBridge.scm",(void*)f_15181},
{"f_15122ChickenBridge.scm",(void*)f_15122},
{"f_14852ChickenBridge.scm",(void*)f_14852},
{"f_15105ChickenBridge.scm",(void*)f_15105},
{"f_14856ChickenBridge.scm",(void*)f_14856},
{"f_15077ChickenBridge.scm",(void*)f_15077},
{"f_15092ChickenBridge.scm",(void*)f_15092},
{"f_15084ChickenBridge.scm",(void*)f_15084},
{"f_15048ChickenBridge.scm",(void*)f_15048},
{"f_15052ChickenBridge.scm",(void*)f_15052},
{"f_15013ChickenBridge.scm",(void*)f_15013},
{"f_15017ChickenBridge.scm",(void*)f_15017},
{"f_14859ChickenBridge.scm",(void*)f_14859},
{"f_14977ChickenBridge.scm",(void*)f_14977},
{"f_14992ChickenBridge.scm",(void*)f_14992},
{"f_14984ChickenBridge.scm",(void*)f_14984},
{"f_14948ChickenBridge.scm",(void*)f_14948},
{"f_14952ChickenBridge.scm",(void*)f_14952},
{"f_14913ChickenBridge.scm",(void*)f_14913},
{"f_14917ChickenBridge.scm",(void*)f_14917},
{"f_14862ChickenBridge.scm",(void*)f_14862},
{"f_14865ChickenBridge.scm",(void*)f_14865},
{"f_14868ChickenBridge.scm",(void*)f_14868},
{"f_14880ChickenBridge.scm",(void*)f_14880},
{"f_14892ChickenBridge.scm",(void*)f_14892},
{"f_14874ChickenBridge.scm",(void*)f_14874},
{"f_14816ChickenBridge.scm",(void*)f_14816},
{"f_14820ChickenBridge.scm",(void*)f_14820},
{"f_14842ChickenBridge.scm",(void*)f_14842},
{"f_14836ChickenBridge.scm",(void*)f_14836},
{"f_14829ChickenBridge.scm",(void*)f_14829},
{"f_14569ChickenBridge.scm",(void*)f_14569},
{"f_14573ChickenBridge.scm",(void*)f_14573},
{"f_14786ChickenBridge.scm",(void*)f_14786},
{"f_14801ChickenBridge.scm",(void*)f_14801},
{"f_14793ChickenBridge.scm",(void*)f_14793},
{"f_14757ChickenBridge.scm",(void*)f_14757},
{"f_14761ChickenBridge.scm",(void*)f_14761},
{"f_14722ChickenBridge.scm",(void*)f_14722},
{"f_14726ChickenBridge.scm",(void*)f_14726},
{"f_14576ChickenBridge.scm",(void*)f_14576},
{"f_14686ChickenBridge.scm",(void*)f_14686},
{"f_14701ChickenBridge.scm",(void*)f_14701},
{"f_14693ChickenBridge.scm",(void*)f_14693},
{"f_14657ChickenBridge.scm",(void*)f_14657},
{"f_14661ChickenBridge.scm",(void*)f_14661},
{"f_14622ChickenBridge.scm",(void*)f_14622},
{"f_14626ChickenBridge.scm",(void*)f_14626},
{"f_14579ChickenBridge.scm",(void*)f_14579},
{"f_14582ChickenBridge.scm",(void*)f_14582},
{"f_14585ChickenBridge.scm",(void*)f_14585},
{"f_14593ChickenBridge.scm",(void*)f_14593},
{"f_14601ChickenBridge.scm",(void*)f_14601},
{"f_14591ChickenBridge.scm",(void*)f_14591},
{"f_14354ChickenBridge.scm",(void*)f_14354},
{"f_14358ChickenBridge.scm",(void*)f_14358},
{"f_14567ChickenBridge.scm",(void*)f_14567},
{"f_14520ChickenBridge.scm",(void*)f_14520},
{"f_14532ChickenBridge.scm",(void*)f_14532},
{"f_14388ChickenBridge.scm",(void*)f_14388},
{"f_14391ChickenBridge.scm",(void*)f_14391},
{"f_14397ChickenBridge.scm",(void*)f_14397},
{"f_14400ChickenBridge.scm",(void*)f_14400},
{"f_14488ChickenBridge.scm",(void*)f_14488},
{"f_14403ChickenBridge.scm",(void*)f_14403},
{"f_14482ChickenBridge.scm",(void*)f_14482},
{"f_14409ChickenBridge.scm",(void*)f_14409},
{"f_14412ChickenBridge.scm",(void*)f_14412},
{"f_14364ChickenBridge.scm",(void*)f_14364},
{"f_14367ChickenBridge.scm",(void*)f_14367},
{"f_14374ChickenBridge.scm",(void*)f_14374},
{"f_13884ChickenBridge.scm",(void*)f_13884},
{"f_13888ChickenBridge.scm",(void*)f_13888},
{"f_14324ChickenBridge.scm",(void*)f_14324},
{"f_14339ChickenBridge.scm",(void*)f_14339},
{"f_14331ChickenBridge.scm",(void*)f_14331},
{"f_14295ChickenBridge.scm",(void*)f_14295},
{"f_14299ChickenBridge.scm",(void*)f_14299},
{"f_14260ChickenBridge.scm",(void*)f_14260},
{"f_14264ChickenBridge.scm",(void*)f_14264},
{"f_14225ChickenBridge.scm",(void*)f_14225},
{"f_14229ChickenBridge.scm",(void*)f_14229},
{"f_13891ChickenBridge.scm",(void*)f_13891},
{"f_14189ChickenBridge.scm",(void*)f_14189},
{"f_14204ChickenBridge.scm",(void*)f_14204},
{"f_14196ChickenBridge.scm",(void*)f_14196},
{"f_14160ChickenBridge.scm",(void*)f_14160},
{"f_14164ChickenBridge.scm",(void*)f_14164},
{"f_14125ChickenBridge.scm",(void*)f_14125},
{"f_14129ChickenBridge.scm",(void*)f_14129},
{"f_14090ChickenBridge.scm",(void*)f_14090},
{"f_14094ChickenBridge.scm",(void*)f_14094},
{"f_13894ChickenBridge.scm",(void*)f_13894},
{"f_14054ChickenBridge.scm",(void*)f_14054},
{"f_14069ChickenBridge.scm",(void*)f_14069},
{"f_14061ChickenBridge.scm",(void*)f_14061},
{"f_14025ChickenBridge.scm",(void*)f_14025},
{"f_14029ChickenBridge.scm",(void*)f_14029},
{"f_13990ChickenBridge.scm",(void*)f_13990},
{"f_13994ChickenBridge.scm",(void*)f_13994},
{"f_13955ChickenBridge.scm",(void*)f_13955},
{"f_13959ChickenBridge.scm",(void*)f_13959},
{"f_13897ChickenBridge.scm",(void*)f_13897},
{"f_13900ChickenBridge.scm",(void*)f_13900},
{"f_13903ChickenBridge.scm",(void*)f_13903},
{"f_13926ChickenBridge.scm",(void*)f_13926},
{"f_13934ChickenBridge.scm",(void*)f_13934},
{"f_13909ChickenBridge.scm",(void*)f_13909},
{"f_13912ChickenBridge.scm",(void*)f_13912},
{"f_13804ChickenBridge.scm",(void*)f_13804},
{"f_13795ChickenBridge.scm",(void*)f_13795},
{"f_13723ChickenBridge.scm",(void*)f_13723},
{"f_13727ChickenBridge.scm",(void*)f_13727},
{"f_13730ChickenBridge.scm",(void*)f_13730},
{"f_13468ChickenBridge.scm",(void*)f_13468},
{"f_13472ChickenBridge.scm",(void*)f_13472},
{"f_13693ChickenBridge.scm",(void*)f_13693},
{"f_13708ChickenBridge.scm",(void*)f_13708},
{"f_13700ChickenBridge.scm",(void*)f_13700},
{"f_13664ChickenBridge.scm",(void*)f_13664},
{"f_13668ChickenBridge.scm",(void*)f_13668},
{"f_13629ChickenBridge.scm",(void*)f_13629},
{"f_13633ChickenBridge.scm",(void*)f_13633},
{"f_13475ChickenBridge.scm",(void*)f_13475},
{"f_13593ChickenBridge.scm",(void*)f_13593},
{"f_13608ChickenBridge.scm",(void*)f_13608},
{"f_13600ChickenBridge.scm",(void*)f_13600},
{"f_13564ChickenBridge.scm",(void*)f_13564},
{"f_13568ChickenBridge.scm",(void*)f_13568},
{"f_13529ChickenBridge.scm",(void*)f_13529},
{"f_13533ChickenBridge.scm",(void*)f_13533},
{"f_13478ChickenBridge.scm",(void*)f_13478},
{"f_13481ChickenBridge.scm",(void*)f_13481},
{"f_13484ChickenBridge.scm",(void*)f_13484},
{"f_13496ChickenBridge.scm",(void*)f_13496},
{"f_13508ChickenBridge.scm",(void*)f_13508},
{"f_13490ChickenBridge.scm",(void*)f_13490},
{"f_13353ChickenBridge.scm",(void*)f_13353},
{"f_13466ChickenBridge.scm",(void*)f_13466},
{"f_13363ChickenBridge.scm",(void*)f_13363},
{"f_13451ChickenBridge.scm",(void*)f_13451},
{"f_13462ChickenBridge.scm",(void*)f_13462},
{"f_13458ChickenBridge.scm",(void*)f_13458},
{"f_13366ChickenBridge.scm",(void*)f_13366},
{"f_13448ChickenBridge.scm",(void*)f_13448},
{"f_13374ChickenBridge.scm",(void*)f_13374},
{"f_13438ChickenBridge.scm",(void*)f_13438},
{"f_13383ChickenBridge.scm",(void*)f_13383},
{"f_13402ChickenBridge.scm",(void*)f_13402},
{"f_13431ChickenBridge.scm",(void*)f_13431},
{"f_13412ChickenBridge.scm",(void*)f_13412},
{"f_13427ChickenBridge.scm",(void*)f_13427},
{"f_13415ChickenBridge.scm",(void*)f_13415},
{"f_13386ChickenBridge.scm",(void*)f_13386},
{"f_13396ChickenBridge.scm",(void*)f_13396},
{"f_13377ChickenBridge.scm",(void*)f_13377},
{"f_13380ChickenBridge.scm",(void*)f_13380},
{"f_13307ChickenBridge.scm",(void*)f_13307},
{"f_13298ChickenBridge.scm",(void*)f_13298},
{"f_13006ChickenBridge.scm",(void*)f_13006},
{"f_13013ChickenBridge.scm",(void*)f_13013},
{"f_13016ChickenBridge.scm",(void*)f_13016},
{"f_13287ChickenBridge.scm",(void*)f_13287},
{"f_13279ChickenBridge.scm",(void*)f_13279},
{"f_13271ChickenBridge.scm",(void*)f_13271},
{"f_13274ChickenBridge.scm",(void*)f_13274},
{"f_13242ChickenBridge.scm",(void*)f_13242},
{"f_13265ChickenBridge.scm",(void*)f_13265},
{"f_13248ChickenBridge.scm",(void*)f_13248},
{"f_13252ChickenBridge.scm",(void*)f_13252},
{"f_13019ChickenBridge.scm",(void*)f_13019},
{"f_13025ChickenBridge.scm",(void*)f_13025},
{"f_13117ChickenBridge.scm",(void*)f_13117},
{"f_13229ChickenBridge.scm",(void*)f_13229},
{"f_13236ChickenBridge.scm",(void*)f_13236},
{"f_13140ChickenBridge.scm",(void*)f_13140},
{"f_13142ChickenBridge.scm",(void*)f_13142},
{"f_13191ChickenBridge.scm",(void*)f_13191},
{"f_13226ChickenBridge.scm",(void*)f_13226},
{"f_13215ChickenBridge.scm",(void*)f_13215},
{"f_13351ChickenBridge.scm",(void*)f_13351},
{"f_13326ChickenBridge.scm",(void*)f_13326},
{"f_13347ChickenBridge.scm",(void*)f_13347},
{"f_13343ChickenBridge.scm",(void*)f_13343},
{"f_13335ChickenBridge.scm",(void*)f_13335},
{"f_13208ChickenBridge.scm",(void*)f_13208},
{"f_13201ChickenBridge.scm",(void*)f_13201},
{"f_13149ChickenBridge.scm",(void*)f_13149},
{"f_13189ChickenBridge.scm",(void*)f_13189},
{"f_13153ChickenBridge.scm",(void*)f_13153},
{"f_13185ChickenBridge.scm",(void*)f_13185},
{"f_13172ChickenBridge.scm",(void*)f_13172},
{"f_13180ChickenBridge.scm",(void*)f_13180},
{"f_13176ChickenBridge.scm",(void*)f_13176},
{"f_13156ChickenBridge.scm",(void*)f_13156},
{"f_13159ChickenBridge.scm",(void*)f_13159},
{"f_13133ChickenBridge.scm",(void*)f_13133},
{"f_13120ChickenBridge.scm",(void*)f_13120},
{"f_13129ChickenBridge.scm",(void*)f_13129},
{"f_13124ChickenBridge.scm",(void*)f_13124},
{"f_13031ChickenBridge.scm",(void*)f_13031},
{"f_13111ChickenBridge.scm",(void*)f_13111},
{"f_13091ChickenBridge.scm",(void*)f_13091},
{"f_13097ChickenBridge.scm",(void*)f_13097},
{"f_13108ChickenBridge.scm",(void*)f_13108},
{"f_13088ChickenBridge.scm",(void*)f_13088},
{"f_13076ChickenBridge.scm",(void*)f_13076},
{"f_13079ChickenBridge.scm",(void*)f_13079},
{"f_13034ChickenBridge.scm",(void*)f_13034},
{"f_13070ChickenBridge.scm",(void*)f_13070},
{"f_13065ChickenBridge.scm",(void*)f_13065},
{"f_13037ChickenBridge.scm",(void*)f_13037},
{"f_13050ChickenBridge.scm",(void*)f_13050},
{"f_13040ChickenBridge.scm",(void*)f_13040},
{"f_13043ChickenBridge.scm",(void*)f_13043},
{"f_13046ChickenBridge.scm",(void*)f_13046},
{"f_12883ChickenBridge.scm",(void*)f_12883},
{"f_12942ChickenBridge.scm",(void*)f_12942},
{"f_12952ChickenBridge.scm",(void*)f_12952},
{"f_12954ChickenBridge.scm",(void*)f_12954},
{"f_12983ChickenBridge.scm",(void*)f_12983},
{"f_12988ChickenBridge.scm",(void*)f_12988},
{"f_12973ChickenBridge.scm",(void*)f_12973},
{"f_12904ChickenBridge.scm",(void*)f_12904},
{"f_12936ChickenBridge.scm",(void*)f_12936},
{"f_12864ChickenBridge.scm",(void*)f_12864},
{"f_12871ChickenBridge.scm",(void*)f_12871},
{"f_12878ChickenBridge.scm",(void*)f_12878},
{"f_12845ChickenBridge.scm",(void*)f_12845},
{"f_12852ChickenBridge.scm",(void*)f_12852},
{"f_12859ChickenBridge.scm",(void*)f_12859},
{"f_12665ChickenBridge.scm",(void*)f_12665},
{"f_12669ChickenBridge.scm",(void*)f_12669},
{"f_12672ChickenBridge.scm",(void*)f_12672},
{"f_12675ChickenBridge.scm",(void*)f_12675},
{"f_12678ChickenBridge.scm",(void*)f_12678},
{"f_12835ChickenBridge.scm",(void*)f_12835},
{"f_12842ChickenBridge.scm",(void*)f_12842},
{"f_12681ChickenBridge.scm",(void*)f_12681},
{"f_12833ChickenBridge.scm",(void*)f_12833},
{"f_12684ChickenBridge.scm",(void*)f_12684},
{"f_12826ChickenBridge.scm",(void*)f_12826},
{"f_12816ChickenBridge.scm",(void*)f_12816},
{"f_12690ChickenBridge.scm",(void*)f_12690},
{"f_12806ChickenBridge.scm",(void*)f_12806},
{"f_12796ChickenBridge.scm",(void*)f_12796},
{"f_12696ChickenBridge.scm",(void*)f_12696},
{"f_12759ChickenBridge.scm",(void*)f_12759},
{"f_12773ChickenBridge.scm",(void*)f_12773},
{"f_12789ChickenBridge.scm",(void*)f_12789},
{"f_12785ChickenBridge.scm",(void*)f_12785},
{"f_12781ChickenBridge.scm",(void*)f_12781},
{"f_12777ChickenBridge.scm",(void*)f_12777},
{"f_12767ChickenBridge.scm",(void*)f_12767},
{"f_12763ChickenBridge.scm",(void*)f_12763},
{"f_12699ChickenBridge.scm",(void*)f_12699},
{"f_12702ChickenBridge.scm",(void*)f_12702},
{"f_12743ChickenBridge.scm",(void*)f_12743},
{"f_12708ChickenBridge.scm",(void*)f_12708},
{"f_12721ChickenBridge.scm",(void*)f_12721},
{"f_12711ChickenBridge.scm",(void*)f_12711},
{"f_12714ChickenBridge.scm",(void*)f_12714},
{"f_12655ChickenBridge.scm",(void*)f_12655},
{"f_12596ChickenBridge.scm",(void*)f_12596},
{"f_12587ChickenBridge.scm",(void*)f_12587},
{"f_12470ChickenBridge.scm",(void*)f_12470},
{"f_12461ChickenBridge.scm",(void*)f_12461},
{"f_12452ChickenBridge.scm",(void*)f_12452},
{"f_12443ChickenBridge.scm",(void*)f_12443},
{"f_12434ChickenBridge.scm",(void*)f_12434},
{"f_12416ChickenBridge.scm",(void*)f_12416},
{"f_12407ChickenBridge.scm",(void*)f_12407},
{"f_12398ChickenBridge.scm",(void*)f_12398},
{"f_12380ChickenBridge.scm",(void*)f_12380},
{"f_12371ChickenBridge.scm",(void*)f_12371},
{"f_12362ChickenBridge.scm",(void*)f_12362},
{"f_12347ChickenBridge.scm",(void*)f_12347},
{"f_12302ChickenBridge.scm",(void*)f_12302},
{"f_12284ChickenBridge.scm",(void*)f_12284},
{"f_12275ChickenBridge.scm",(void*)f_12275},
{"f_12248ChickenBridge.scm",(void*)f_12248},
{"f_12230ChickenBridge.scm",(void*)f_12230},
{"f_12212ChickenBridge.scm",(void*)f_12212},
{"f_12203ChickenBridge.scm",(void*)f_12203},
{"f_12191ChickenBridge.scm",(void*)f_12191},
{"f_11442ChickenBridge.scm",(void*)f_11442},
{"f_11464ChickenBridge.scm",(void*)f_11464},
{"f_11479ChickenBridge.scm",(void*)f_11479},
{"f_11482ChickenBridge.scm",(void*)f_11482},
{"f_11658ChickenBridge.scm",(void*)f_11658},
{"f_11652ChickenBridge.scm",(void*)f_11652},
{"f_11485ChickenBridge.scm",(void*)f_11485},
{"f_11634ChickenBridge.scm",(void*)f_11634},
{"f_11488ChickenBridge.scm",(void*)f_11488},
{"f_11491ChickenBridge.scm",(void*)f_11491},
{"f_11627ChickenBridge.scm",(void*)f_11627},
{"f_11615ChickenBridge.scm",(void*)f_11615},
{"f_11511ChickenBridge.scm",(void*)f_11511},
{"f_11518ChickenBridge.scm",(void*)f_11518},
{"f_11588ChickenBridge.scm",(void*)f_11588},
{"f_11574ChickenBridge.scm",(void*)f_11574},
{"f_11582ChickenBridge.scm",(void*)f_11582},
{"f_11521ChickenBridge.scm",(void*)f_11521},
{"f_11560ChickenBridge.scm",(void*)f_11560},
{"f_11524ChickenBridge.scm",(void*)f_11524},
{"f_11553ChickenBridge.scm",(void*)f_11553},
{"f_11530ChickenBridge.scm",(void*)f_11530},
{"f_11533ChickenBridge.scm",(void*)f_11533},
{"f_11537ChickenBridge.scm",(void*)f_11537},
{"f_11498ChickenBridge.scm",(void*)f_11498},
{"f_11501ChickenBridge.scm",(void*)f_11501},
{"f_11311ChickenBridge.scm",(void*)f_11311},
{"f_11320ChickenBridge.scm",(void*)f_11320},
{"f_11268ChickenBridge.scm",(void*)f_11268},
{"f_11274ChickenBridge.scm",(void*)f_11274},
{"f_11337ChickenBridge.scm",(void*)f_11337},
{"f_11423ChickenBridge.scm",(void*)f_11423},
{"f_11410ChickenBridge.scm",(void*)f_11410},
{"f_11418ChickenBridge.scm",(void*)f_11418},
{"f_11340ChickenBridge.scm",(void*)f_11340},
{"f_11344ChickenBridge.scm",(void*)f_11344},
{"f_11387ChickenBridge.scm",(void*)f_11387},
{"f_11349ChickenBridge.scm",(void*)f_11349},
{"f_11315ChickenBridge.scm",(void*)f_11315},
{"f_11210ChickenBridge.scm",(void*)f_11210},
{"f_11217ChickenBridge.scm",(void*)f_11217},
{"f_11248ChickenBridge.scm",(void*)f_11248},
{"f_11244ChickenBridge.scm",(void*)f_11244},
{"f_11236ChickenBridge.scm",(void*)f_11236},
{"f_11119ChickenBridge.scm",(void*)f_11119},
{"f_11126ChickenBridge.scm",(void*)f_11126},
{"f_11194ChickenBridge.scm",(void*)f_11194},
{"f_11137ChickenBridge.scm",(void*)f_11137},
{"f_11164ChickenBridge.scm",(void*)f_11164},
{"f_11148ChickenBridge.scm",(void*)f_11148},
{"f_11053ChickenBridge.scm",(void*)f_11053},
{"f_11064ChickenBridge.scm",(void*)f_11064},
{"f_11067ChickenBridge.scm",(void*)f_11067},
{"f_11074ChickenBridge.scm",(void*)f_11074},
{"f_11047ChickenBridge.scm",(void*)f_11047},
{"f_10501ChickenBridge.scm",(void*)f_10501},
{"f_10532ChickenBridge.scm",(void*)f_10532},
{"f_10996ChickenBridge.scm",(void*)f_10996},
{"f_11002ChickenBridge.scm",(void*)f_11002},
{"f_10543ChickenBridge.scm",(void*)f_10543},
{"f_10428ChickenBridge.scm",(void*)f_10428},
{"f_10453ChickenBridge.scm",(void*)f_10453},
{"f_10388ChickenBridge.scm",(void*)f_10388},
{"f_10401ChickenBridge.scm",(void*)f_10401},
{"f_10442ChickenBridge.scm",(void*)f_10442},
{"f_10547ChickenBridge.scm",(void*)f_10547},
{"f_10984ChickenBridge.scm",(void*)f_10984},
{"f_10980ChickenBridge.scm",(void*)f_10980},
{"f_10976ChickenBridge.scm",(void*)f_10976},
{"f_10550ChickenBridge.scm",(void*)f_10550},
{"f_10770ChickenBridge.scm",(void*)f_10770},
{"f_10879ChickenBridge.scm",(void*)f_10879},
{"f_10944ChickenBridge.scm",(void*)f_10944},
{"f_10886ChickenBridge.scm",(void*)f_10886},
{"f_10890ChickenBridge.scm",(void*)f_10890},
{"f_10894ChickenBridge.scm",(void*)f_10894},
{"f_10936ChickenBridge.scm",(void*)f_10936},
{"f_10932ChickenBridge.scm",(void*)f_10932},
{"f_10910ChickenBridge.scm",(void*)f_10910},
{"f_10773ChickenBridge.scm",(void*)f_10773},
{"f_10776ChickenBridge.scm",(void*)f_10776},
{"f_10675ChickenBridge.scm",(void*)f_10675},
{"f_10758ChickenBridge.scm",(void*)f_10758},
{"f_10725ChickenBridge.scm",(void*)f_10725},
{"f_10751ChickenBridge.scm",(void*)f_10751},
{"f_10733ChickenBridge.scm",(void*)f_10733},
{"f_10681ChickenBridge.scm",(void*)f_10681},
{"f_10721ChickenBridge.scm",(void*)f_10721},
{"f_10663ChickenBridge.scm",(void*)f_10663},
{"f_10634ChickenBridge.scm",(void*)f_10634},
{"f_10656ChickenBridge.scm",(void*)f_10656},
{"f_10642ChickenBridge.scm",(void*)f_10642},
{"f_10596ChickenBridge.scm",(void*)f_10596},
{"f_10553ChickenBridge.scm",(void*)f_10553},
{"f_10564ChickenBridge.scm",(void*)f_10564},
{"f_10568ChickenBridge.scm",(void*)f_10568},
{"f_10572ChickenBridge.scm",(void*)f_10572},
{"f_10576ChickenBridge.scm",(void*)f_10576},
{"f_10560ChickenBridge.scm",(void*)f_10560},
{"f_10520ChickenBridge.scm",(void*)f_10520},
{"f_10515ChickenBridge.scm",(void*)f_10515},
{"f_10510ChickenBridge.scm",(void*)f_10510},
{"f_10342ChickenBridge.scm",(void*)f_10342},
{"f_10353ChickenBridge.scm",(void*)f_10353},
{"f_10368ChickenBridge.scm",(void*)f_10368},
{"f_10304ChickenBridge.scm",(void*)f_10304},
{"f_10315ChickenBridge.scm",(void*)f_10315},
{"f_10330ChickenBridge.scm",(void*)f_10330},
{"f_10237ChickenBridge.scm",(void*)f_10237},
{"f_10257ChickenBridge.scm",(void*)f_10257},
{"f_10267ChickenBridge.scm",(void*)f_10267},
{"f_10280ChickenBridge.scm",(void*)f_10280},
{"f_10248ChickenBridge.scm",(void*)f_10248},
{"f_10255ChickenBridge.scm",(void*)f_10255},
{"f_10044ChickenBridge.scm",(void*)f_10044},
{"f_10104ChickenBridge.scm",(void*)f_10104},
{"f_10114ChickenBridge.scm",(void*)f_10114},
{"f_10228ChickenBridge.scm",(void*)f_10228},
{"f_10193ChickenBridge.scm",(void*)f_10193},
{"f_10185ChickenBridge.scm",(void*)f_10185},
{"f_10156ChickenBridge.scm",(void*)f_10156},
{"f_10134ChickenBridge.scm",(void*)f_10134},
{"f_10137ChickenBridge.scm",(void*)f_10137},
{"f_10125ChickenBridge.scm",(void*)f_10125},
{"f_10051ChickenBridge.scm",(void*)f_10051},
{"f_10102ChickenBridge.scm",(void*)f_10102},
{"f_10094ChickenBridge.scm",(void*)f_10094},
{"f_10054ChickenBridge.scm",(void*)f_10054},
{"f_10065ChickenBridge.scm",(void*)f_10065},
{"f_10069ChickenBridge.scm",(void*)f_10069},
{"f_10061ChickenBridge.scm",(void*)f_10061},
{"f_9902ChickenBridge.scm",(void*)f_9902},
{"f_9950ChickenBridge.scm",(void*)f_9950},
{"f_9960ChickenBridge.scm",(void*)f_9960},
{"f_9971ChickenBridge.scm",(void*)f_9971},
{"f_10008ChickenBridge.scm",(void*)f_10008},
{"f_9983ChickenBridge.scm",(void*)f_9983},
{"f_9974ChickenBridge.scm",(void*)f_9974},
{"f_9912ChickenBridge.scm",(void*)f_9912},
{"f_9948ChickenBridge.scm",(void*)f_9948},
{"f_9919ChickenBridge.scm",(void*)f_9919},
{"f_9551ChickenBridge.scm",(void*)f_9551},
{"f_9558ChickenBridge.scm",(void*)f_9558},
{"f_9792ChickenBridge.scm",(void*)f_9792},
{"f_9802ChickenBridge.scm",(void*)f_9802},
{"f_9813ChickenBridge.scm",(void*)f_9813},
{"f_9825ChickenBridge.scm",(void*)f_9825},
{"f_9828ChickenBridge.scm",(void*)f_9828},
{"f_9816ChickenBridge.scm",(void*)f_9816},
{"f_9564ChickenBridge.scm",(void*)f_9564},
{"f_9790ChickenBridge.scm",(void*)f_9790},
{"f_9786ChickenBridge.scm",(void*)f_9786},
{"f_9732ChickenBridge.scm",(void*)f_9732},
{"f_9697ChickenBridge.scm",(void*)f_9697},
{"f_9713ChickenBridge.scm",(void*)f_9713},
{"f_9668ChickenBridge.scm",(void*)f_9668},
{"f_9592ChickenBridge.scm",(void*)f_9592},
{"f_9595ChickenBridge.scm",(void*)f_9595},
{"f_9659ChickenBridge.scm",(void*)f_9659},
{"f_9655ChickenBridge.scm",(void*)f_9655},
{"f_9575ChickenBridge.scm",(void*)f_9575},
{"f_9586ChickenBridge.scm",(void*)f_9586},
{"f_9582ChickenBridge.scm",(void*)f_9582},
{"f_9504ChickenBridge.scm",(void*)f_9504},
{"f_9537ChickenBridge.scm",(void*)f_9537},
{"f_9519ChickenBridge.scm",(void*)f_9519},
{"f_9531ChickenBridge.scm",(void*)f_9531},
{"f_9122ChickenBridge.scm",(void*)f_9122},
{"f_9331ChickenBridge.scm",(void*)f_9331},
{"f_9341ChickenBridge.scm",(void*)f_9341},
{"f_9352ChickenBridge.scm",(void*)f_9352},
{"f_9472ChickenBridge.scm",(void*)f_9472},
{"f_9451ChickenBridge.scm",(void*)f_9451},
{"f_9430ChickenBridge.scm",(void*)f_9430},
{"f_9409ChickenBridge.scm",(void*)f_9409},
{"f_9388ChickenBridge.scm",(void*)f_9388},
{"f_9367ChickenBridge.scm",(void*)f_9367},
{"f_9355ChickenBridge.scm",(void*)f_9355},
{"f_9132ChickenBridge.scm",(void*)f_9132},
{"f_9135ChickenBridge.scm",(void*)f_9135},
{"f_9298ChickenBridge.scm",(void*)f_9298},
{"f_9138ChickenBridge.scm",(void*)f_9138},
{"f_9289ChickenBridge.scm",(void*)f_9289},
{"f_9269ChickenBridge.scm",(void*)f_9269},
{"f_9141ChickenBridge.scm",(void*)f_9141},
{"f_9234ChickenBridge.scm",(void*)f_9234},
{"f_9251ChickenBridge.scm",(void*)f_9251},
{"f_9144ChickenBridge.scm",(void*)f_9144},
{"f_9183ChickenBridge.scm",(void*)f_9183},
{"f_9217ChickenBridge.scm",(void*)f_9217},
{"f_9201ChickenBridge.scm",(void*)f_9201},
{"f_9186ChickenBridge.scm",(void*)f_9186},
{"f_9151ChickenBridge.scm",(void*)f_9151},
{"f_9162ChickenBridge.scm",(void*)f_9162},
{"f_9166ChickenBridge.scm",(void*)f_9166},
{"f_9158ChickenBridge.scm",(void*)f_9158},
{"f_9040ChickenBridge.scm",(void*)f_9040},
{"f_9044ChickenBridge.scm",(void*)f_9044},
{"f_9062ChickenBridge.scm",(void*)f_9062},
{"f_8880ChickenBridge.scm",(void*)f_8880},
{"f_8888ChickenBridge.scm",(void*)f_8888},
{"f_8898ChickenBridge.scm",(void*)f_8898},
{"f_8936ChickenBridge.scm",(void*)f_8936},
{"f_8939ChickenBridge.scm",(void*)f_8939},
{"f_8942ChickenBridge.scm",(void*)f_8942},
{"f_9017ChickenBridge.scm",(void*)f_9017},
{"f_9027ChickenBridge.scm",(void*)f_9027},
{"f_8945ChickenBridge.scm",(void*)f_8945},
{"f_8948ChickenBridge.scm",(void*)f_8948},
{"f_8951ChickenBridge.scm",(void*)f_8951},
{"f_8971ChickenBridge.scm",(void*)f_8971},
{"f_8981ChickenBridge.scm",(void*)f_8981},
{"f_8984ChickenBridge.scm",(void*)f_8984},
{"f_8987ChickenBridge.scm",(void*)f_8987},
{"f_8954ChickenBridge.scm",(void*)f_8954},
{"f_8957ChickenBridge.scm",(void*)f_8957},
{"f_8874ChickenBridge.scm",(void*)f_8874},
{"f_8868ChickenBridge.scm",(void*)f_8868},
{"f_8862ChickenBridge.scm",(void*)f_8862},
{"f_8791ChickenBridge.scm",(void*)f_8791},
{"f_8832ChickenBridge.scm",(void*)f_8832},
{"f_8836ChickenBridge.scm",(void*)f_8836},
{"f_8840ChickenBridge.scm",(void*)f_8840},
{"f_8844ChickenBridge.scm",(void*)f_8844},
{"f_8848ChickenBridge.scm",(void*)f_8848},
{"f_8852ChickenBridge.scm",(void*)f_8852},
{"f_8856ChickenBridge.scm",(void*)f_8856},
{"f_8860ChickenBridge.scm",(void*)f_8860},
{"f_8793ChickenBridge.scm",(void*)f_8793},
{"f_8799ChickenBridge.scm",(void*)f_8799},
{"f_8821ChickenBridge.scm",(void*)f_8821},
{"f_8810ChickenBridge.scm",(void*)f_8810},
{"f_8640ChickenBridge.scm",(void*)f_8640},
{"f_8655ChickenBridge.scm",(void*)f_8655},
{"f_8668ChickenBridge.scm",(void*)f_8668},
{"f_8628ChickenBridge.scm",(void*)f_8628},
{"f_8616ChickenBridge.scm",(void*)f_8616},
{"f_8604ChickenBridge.scm",(void*)f_8604},
{"f_8598ChickenBridge.scm",(void*)f_8598},
{"f_8592ChickenBridge.scm",(void*)f_8592},
{"f_8580ChickenBridge.scm",(void*)f_8580},
{"f_8568ChickenBridge.scm",(void*)f_8568},
{"f_8556ChickenBridge.scm",(void*)f_8556},
{"f_8544ChickenBridge.scm",(void*)f_8544},
{"f_8538ChickenBridge.scm",(void*)f_8538},
{"f_8488ChickenBridge.scm",(void*)f_8488},
{"f_8522ChickenBridge.scm",(void*)f_8522},
{"f_8526ChickenBridge.scm",(void*)f_8526},
{"f_8530ChickenBridge.scm",(void*)f_8530},
{"f_8496ChickenBridge.scm",(void*)f_8496},
{"f_8514ChickenBridge.scm",(void*)f_8514},
{"f_8505ChickenBridge.scm",(void*)f_8505},
{"f_8513ChickenBridge.scm",(void*)f_8513},
{"f_8500ChickenBridge.scm",(void*)f_8500},
{"f_8444ChickenBridge.scm",(void*)f_8444},
{"f_8478ChickenBridge.scm",(void*)f_8478},
{"f_8482ChickenBridge.scm",(void*)f_8482},
{"f_8486ChickenBridge.scm",(void*)f_8486},
{"f_8452ChickenBridge.scm",(void*)f_8452},
{"f_8470ChickenBridge.scm",(void*)f_8470},
{"f_8461ChickenBridge.scm",(void*)f_8461},
{"f_8469ChickenBridge.scm",(void*)f_8469},
{"f_8456ChickenBridge.scm",(void*)f_8456},
{"f_8370ChickenBridge.scm",(void*)f_8370},
{"f_8374ChickenBridge.scm",(void*)f_8374},
{"f_8381ChickenBridge.scm",(void*)f_8381},
{"f_8383ChickenBridge.scm",(void*)f_8383},
{"f_8397ChickenBridge.scm",(void*)f_8397},
{"f_8410ChickenBridge.scm",(void*)f_8410},
{"f_8400ChickenBridge.scm",(void*)f_8400},
{"f_8284ChickenBridge.scm",(void*)f_8284},
{"f_8166ChickenBridge.scm",(void*)f_8166},
{"f_8172ChickenBridge.scm",(void*)f_8172},
{"f_8196ChickenBridge.scm",(void*)f_8196},
{"f_8182ChickenBridge.scm",(void*)f_8182},
{"f_8067ChickenBridge.scm",(void*)f_8067},
{"f_8071ChickenBridge.scm",(void*)f_8071},
{"f_8096ChickenBridge.scm",(void*)f_8096},
{"f_8113ChickenBridge.scm",(void*)f_8113},
{"f_8117ChickenBridge.scm",(void*)f_8117},
{"f_8073ChickenBridge.scm",(void*)f_8073},
{"f_8090ChickenBridge.scm",(void*)f_8090},
{"f_7905ChickenBridge.scm",(void*)f_7905},
{"f_7914ChickenBridge.scm",(void*)f_7914},
{"f_7952ChickenBridge.scm",(void*)f_7952},
{"f_7930ChickenBridge.scm",(void*)f_7930},
{"f_7815ChickenBridge.scm",(void*)f_7815},
{"f_7767ChickenBridge.scm",(void*)f_7767},
{"f_7801ChickenBridge.scm",(void*)f_7801},
{"f_7744ChickenBridge.scm",(void*)f_7744},
{"f_7738ChickenBridge.scm",(void*)f_7738},
{"f_7723ChickenBridge.scm",(void*)f_7723},
{"f_7709ChickenBridge.scm",(void*)f_7709},
{"f_7699ChickenBridge.scm",(void*)f_7699},
{"f_7689ChickenBridge.scm",(void*)f_7689},
{"f_7679ChickenBridge.scm",(void*)f_7679},
{"f_7669ChickenBridge.scm",(void*)f_7669},
{"f_7659ChickenBridge.scm",(void*)f_7659},
{"f_6925ChickenBridge.scm",(void*)f_6925},
{"f_7628ChickenBridge.scm",(void*)f_7628},
{"f_7638ChickenBridge.scm",(void*)f_7638},
{"f_7622ChickenBridge.scm",(void*)f_7622},
{"f_6883ChickenBridge.scm",(void*)f_6883},
{"f_7616ChickenBridge.scm",(void*)f_7616},
{"f_7499ChickenBridge.scm",(void*)f_7499},
{"f_7350ChickenBridge.scm",(void*)f_7350},
{"f_7359ChickenBridge.scm",(void*)f_7359},
{"f_7256ChickenBridge.scm",(void*)f_7256},
{"f_7236ChickenBridge.scm",(void*)f_7236},
{"f_7205ChickenBridge.scm",(void*)f_7205},
{"f_7202ChickenBridge.scm",(void*)f_7202},
{"f_7195ChickenBridge.scm",(void*)f_7195},
{"f_7192ChickenBridge.scm",(void*)f_7192},
{"f_7185ChickenBridge.scm",(void*)f_7185},
{"f_7167ChickenBridge.scm",(void*)f_7167},
{"f_7156ChickenBridge.scm",(void*)f_7156},
{"f_7153ChickenBridge.scm",(void*)f_7153},
{"f_7150ChickenBridge.scm",(void*)f_7150},
{"f_7147ChickenBridge.scm",(void*)f_7147},
{"f_7118ChickenBridge.scm",(void*)f_7118},
{"f_7111ChickenBridge.scm",(void*)f_7111},
{"f_7108ChickenBridge.scm",(void*)f_7108},
{"f_7087ChickenBridge.scm",(void*)f_7087},
{"f_7068ChickenBridge.scm",(void*)f_7068},
{"f_7049ChickenBridge.scm",(void*)f_7049},
{"f_7042ChickenBridge.scm",(void*)f_7042},
{"f_7035ChickenBridge.scm",(void*)f_7035},
{"f_7020ChickenBridge.scm",(void*)f_7020},
{"f_7009ChickenBridge.scm",(void*)f_7009},
{"f_7002ChickenBridge.scm",(void*)f_7002},
{"f_6948ChickenBridge.scm",(void*)f_6948},
{"f_6892ChickenBridge.scm",(void*)f_6892},
{"f_6897ChickenBridge.scm",(void*)f_6897},
{"f_6811ChickenBridge.scm",(void*)f_6811},
{"f_6805ChickenBridge.scm",(void*)f_6805},
{"f_6798ChickenBridge.scm",(void*)f_6798},
{"f_6792ChickenBridge.scm",(void*)f_6792},
{"f_6782ChickenBridge.scm",(void*)f_6782},
{"f_6762ChickenBridge.scm",(void*)f_6762},
{"f_6774ChickenBridge.scm",(void*)f_6774},
{NULL,NULL}};
#endif

static C_PTABLE_ENTRY *create_ptable(void){
#ifdef C_ENABLE_PTABLES
return ptable;
#else
return NULL;
#endif
}
/* end of file */
