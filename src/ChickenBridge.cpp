/* Generated from ChickenBridge.scm by the CHICKEN compiler
   http://www.call-with-current-continuation.org
   2009-04-01 10:28
   Version 3.0.0 - macosx-unix-gnu-x86	[ manyargs dload ptables applyhook ]
   (c)2000-2008 Felix L. Winkelmann	compiled 2008-04-21 on dhcp218a.music.uiuc.edu (Darwin)
   command line: ChickenBridge.scm -output-file ChickenBridge.cpp -quiet
   unit: cm
*/

#include "chicken.h"


#include "juce.h"
#include "CmSupport.h"


static C_PTABLE_ENTRY *create_ptable(void);
C_noret_decl(C_library_toplevel)
C_externimport void C_ccall C_library_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_eval_toplevel)
C_externimport void C_ccall C_eval_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;

static C_TLS C_word lf[1081];
static double C_possibly_force_alignment;
static C_char C_TLS li0[] C_aligned={C_lihdr(0,0,11),40,97,115,104,32,97,48,32,98,49,41,0,0,0};
static C_char C_TLS li1[] C_aligned={C_lihdr(0,0,16),40,108,111,103,97,110,100,32,46,32,97,114,103,115,50,41};
static C_char C_TLS li2[] C_aligned={C_lihdr(0,0,16),40,108,111,103,110,111,116,32,46,32,97,114,103,115,51,41};
static C_char C_TLS li3[] C_aligned={C_lihdr(0,0,16),40,108,111,103,120,111,114,32,46,32,97,114,103,115,52,41};
static C_char C_TLS li4[] C_aligned={C_lihdr(0,0,16),40,108,111,103,105,111,114,32,46,32,97,114,103,115,53,41};
static C_char C_TLS li5[] C_aligned={C_lihdr(0,0,15),40,108,111,103,116,101,115,116,32,97,54,32,98,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li6[] C_aligned={C_lihdr(0,0,27),40,108,105,115,116,45,115,101,116,33,32,108,105,115,56,32,112,111,115,57,32,118,97,108,49,48,41,0,0,0};
static C_char C_TLS li7[] C_aligned={C_lihdr(0,0,23),40,109,97,107,101,45,101,113,117,97,108,45,104,97,115,104,45,116,97,98,108,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li8[] C_aligned={C_lihdr(0,0,20),40,109,97,107,101,45,101,113,45,104,97,115,104,45,116,97,98,108,101,41,0,0,0,0};
static C_char C_TLS li9[] C_aligned={C_lihdr(0,0,22),40,104,97,115,104,45,114,101,102,32,116,97,98,49,50,32,118,97,108,49,51,41,0,0,0,0,0,0};
static C_char C_TLS li10[] C_aligned={C_lihdr(0,0,24),40,114,101,97,100,45,102,114,111,109,45,115,116,114,105,110,103,32,115,116,114,49,52,41};
static C_char C_TLS li11[] C_aligned={C_lihdr(0,0,30),40,102,102,105,95,112,114,105,110,116,95,111,117,116,112,117,116,32,97,53,52,53,56,32,97,53,51,53,57,41,0,0,0,0,0,0};
static C_char C_TLS li12[] C_aligned={C_lihdr(0,0,49),40,102,102,105,95,114,101,115,99,97,108,101,32,97,56,52,56,55,32,97,56,51,56,56,32,97,56,50,56,57,32,97,56,49,57,48,32,97,56,48,57,49,32,97,55,57,57,50,41,0};
static C_char C_TLS li13[] C_aligned={C_lihdr(0,0,29),40,102,102,105,95,102,108,111,97,116,95,116,111,95,102,105,120,110,117,109,32,97,49,48,56,49,49,49,41,0,0,0,0,0};
static C_char C_TLS li14[] C_aligned={C_lihdr(0,0,30),40,102,102,105,95,113,117,97,110,116,105,122,101,32,97,49,49,51,49,49,54,32,97,49,49,50,49,49,55,41,0,0,0,0,0,0};
static C_char C_TLS li15[] C_aligned={C_lihdr(0,0,47),40,102,102,105,95,114,104,121,116,104,109,95,116,111,95,115,101,99,111,110,100,115,32,97,49,50,49,49,50,52,32,97,49,50,48,49,50,53,32,97,49,49,57,49,50,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li16[] C_aligned={C_lihdr(0,0,29),40,102,102,105,95,99,101,110,116,115,95,116,111,95,115,99,97,108,101,114,32,97,49,50,56,49,51,49,41,0,0,0,0,0};
static C_char C_TLS li17[] C_aligned={C_lihdr(0,0,29),40,102,102,105,95,115,99,97,108,101,114,95,116,111,95,99,101,110,116,115,32,97,49,51,51,49,51,54,41,0,0,0,0,0};
static C_char C_TLS li18[] C_aligned={C_lihdr(0,0,45),40,102,102,105,95,101,120,112,108,115,101,103,32,97,49,52,53,49,52,56,32,97,49,52,52,49,52,57,32,97,49,52,51,49,53,48,32,97,49,52,50,49,53,49,41,0,0,0,0,0};
static C_char C_TLS li19[] C_aligned={C_lihdr(0,0,44),40,102,102,105,95,103,101,111,115,101,103,32,97,49,53,54,49,53,57,32,97,49,53,53,49,54,48,32,97,49,53,52,49,54,49,32,97,49,53,51,49,54,50,41,0,0,0,0};
static C_char C_TLS li20[] C_aligned={C_lihdr(0,0,29),40,102,102,105,95,107,101,121,110,117,109,95,116,111,95,104,101,114,116,122,32,97,49,54,52,49,54,55,41,0,0,0,0,0};
static C_char C_TLS li21[] C_aligned={C_lihdr(0,0,21),40,102,102,105,95,114,97,110,115,101,101,100,32,97,49,55,56,49,56,49,41,0,0,0,0,0};
static C_char C_TLS li22[] C_aligned={C_lihdr(0,0,20),40,102,102,105,95,114,97,110,105,110,116,32,97,49,56,50,49,56,53,41,0,0,0,0};
static C_char C_TLS li23[] C_aligned={C_lihdr(0,0,22),40,102,102,105,95,114,97,110,102,108,111,97,116,32,97,49,56,54,49,56,57,41,0,0,0,0,0,0};
static C_char C_TLS li24[] C_aligned={C_lihdr(0,0,12),40,102,102,105,95,114,97,110,108,111,119,41,0,0,0,0};
static C_char C_TLS li25[] C_aligned={C_lihdr(0,0,13),40,102,102,105,95,114,97,110,104,105,103,104,41,0,0,0,0,0};
static C_char C_TLS li26[] C_aligned={C_lihdr(0,0,15),40,102,102,105,95,114,97,110,109,105,100,100,108,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li27[] C_aligned={C_lihdr(0,0,30),40,102,102,105,95,114,97,110,103,97,117,115,115,32,97,50,49,52,50,49,55,32,97,50,49,51,50,49,56,41,0,0,0,0,0,0};
static C_char C_TLS li28[] C_aligned={C_lihdr(0,0,20),40,102,102,105,95,114,97,110,101,120,112,32,97,50,50,48,50,50,51,41,0,0,0,0};
static C_char C_TLS li29[] C_aligned={C_lihdr(0,0,22),40,102,102,105,95,114,97,110,103,97,109,109,97,32,97,50,51,50,50,51,53,41,0,0,0,0,0,0};
static C_char C_TLS li30[] C_aligned={C_lihdr(0,0,15),40,102,102,105,95,114,97,110,99,97,117,99,104,121,41,0,0,0,0,0,0,0};
static C_char C_TLS li31[] C_aligned={C_lihdr(0,0,24),40,102,102,105,95,114,97,110,112,111,105,115,115,111,110,32,97,50,52,48,50,52,51,41};
static C_char C_TLS li32[] C_aligned={C_lihdr(0,0,13),40,102,102,105,95,114,97,110,112,105,110,107,41,0,0,0,0,0};
static C_char C_TLS li33[] C_aligned={C_lihdr(0,0,14),40,102,102,105,95,114,97,110,98,114,111,119,110,41,0,0,0,0,0,0};
static C_char C_TLS li34[] C_aligned={C_lihdr(0,0,42),40,102,102,105,95,115,99,104,101,100,95,115,112,114,111,117,116,32,97,50,55,50,50,55,53,32,97,50,55,49,50,55,54,32,97,50,55,48,50,55,55,41,0,0};
static C_char C_TLS li35[] C_aligned={C_lihdr(0,0,24),40,102,102,105,95,115,99,104,101,100,95,115,116,111,112,32,97,50,56,52,50,56,55,41};
static C_char C_TLS li36[] C_aligned={C_lihdr(0,0,27),40,102,102,105,95,112,97,116,104,110,97,109,101,95,116,121,112,101,32,97,51,50,56,51,51,50,41,0,0,0};
static C_char C_TLS li37[] C_aligned={C_lihdr(0,0,58),40,102,102,105,95,109,112,95,115,101,110,100,95,100,97,116,97,32,97,52,48,56,52,49,49,32,97,52,48,55,52,49,50,32,97,52,48,54,52,49,51,32,97,52,48,53,52,49,52,32,97,52,48,52,52,49,53,41,0,0};
static C_char C_TLS li38[] C_aligned={C_lihdr(0,0,6),40,113,117,105,116,41,0,0,0,0,0,0};
static C_char C_TLS li39[] C_aligned={C_lihdr(0,0,20),40,112,114,105,110,116,45,101,114,114,111,114,32,109,115,103,54,51,48,41,0,0,0,0};
static C_char C_TLS li40[] C_aligned={C_lihdr(0,0,30),40,112,114,105,110,116,45,111,117,116,112,117,116,32,109,115,103,54,51,49,32,46,32,113,117,111,54,51,50,41,0,0,0,0,0,0};
static C_char C_TLS li41[] C_aligned={C_lihdr(0,0,14),40,115,104,101,108,108,32,115,116,114,54,51,54,41,0,0,0,0,0,0};
static C_char C_TLS li42[] C_aligned={C_lihdr(0,0,12),40,102,105,102,116,104,32,108,54,51,55,41,0,0,0,0};
static C_char C_TLS li43[] C_aligned={C_lihdr(0,0,12),40,115,105,120,116,104,32,108,54,51,56,41,0,0,0,0};
static C_char C_TLS li44[] C_aligned={C_lihdr(0,0,14),40,115,101,118,101,110,116,104,32,108,54,51,57,41,0,0,0,0,0,0};
static C_char C_TLS li45[] C_aligned={C_lihdr(0,0,13),40,101,105,103,104,116,104,32,108,54,52,48,41,0,0,0,0,0};
static C_char C_TLS li46[] C_aligned={C_lihdr(0,0,12),40,110,105,110,116,104,32,108,54,52,49,41,0,0,0,0};
static C_char C_TLS li47[] C_aligned={C_lihdr(0,0,12),40,116,101,110,116,104,32,108,54,52,50,41,0,0,0,0};
static C_char C_TLS li48[] C_aligned={C_lihdr(0,0,11),40,114,101,115,116,32,108,54,52,51,41,0,0,0};
static C_char C_TLS li49[] C_aligned={C_lihdr(0,0,11),40,108,97,115,116,32,108,54,52,52,41,0,0,0};
static C_char C_TLS li50[] C_aligned={C_lihdr(0,0,14),40,98,117,116,108,97,115,116,32,108,54,52,53,41,0,0,0,0,0,0};
static C_char C_TLS li51[] C_aligned={C_lihdr(0,0,11),40,116,97,105,108,32,108,54,52,54,41,0,0,0};
static C_char C_TLS li52[] C_aligned={C_lihdr(0,0,12),40,100,111,54,54,52,32,116,54,54,54,41,0,0,0,0};
static C_char C_TLS li53[] C_aligned={C_lihdr(0,0,12),40,100,111,54,53,57,32,97,54,54,49,41,0,0,0,0};
static C_char C_TLS li54[] C_aligned={C_lihdr(0,0,18),40,99,111,110,99,97,116,32,46,32,97,114,103,115,54,53,54,41,0,0};
static C_char C_TLS li55[] C_aligned={C_lihdr(0,0,14),40,108,49,32,97,54,56,57,32,98,54,57,48,41,0,0,0,0,0,0};
static C_char C_TLS li56[] C_aligned={C_lihdr(0,0,14),40,108,50,32,97,54,57,49,32,98,54,57,50,41,0,0,0,0,0,0};
static C_char C_TLS li57[] C_aligned={C_lihdr(0,0,25),40,109,97,107,101,45,108,105,115,116,32,110,54,56,53,32,46,32,111,98,106,54,56,54,41,0};
static C_char C_TLS li58[] C_aligned={C_lihdr(0,0,25),40,100,111,54,57,56,32,116,97,105,108,55,48,48,32,105,55,48,49,32,102,55,48,50,41,0};
static C_char C_TLS li59[] C_aligned={C_lihdr(0,0,22),40,108,105,115,116,45,105,110,100,101,120,32,112,54,57,54,32,108,54,57,55,41,0,0,0,0,0,0};
static C_char C_TLS li60[] C_aligned={C_lihdr(0,0,35),40,108,105,115,116,45,112,114,111,112,32,108,105,115,55,50,56,32,112,114,111,112,55,50,57,32,46,32,100,101,102,55,51,48,41,0,0,0};
static C_char C_TLS li61[] C_aligned={C_lihdr(0,0,32),40,100,111,55,52,52,32,105,55,52,54,32,108,55,52,55,32,101,55,52,56,32,102,55,52,57,32,114,55,53,48,41};
static C_char C_TLS li62[] C_aligned={C_lihdr(0,0,53),40,37,109,97,112,115,101,113,32,102,117,110,99,55,51,52,32,115,101,113,55,51,53,32,101,108,101,109,101,110,116,115,63,55,51,54,32,115,116,97,114,116,55,51,55,32,101,110,100,55,51,56,41,0,0,0,0,0};
static C_char C_TLS li63[] C_aligned={C_lihdr(0,0,13),40,102,95,56,56,55,56,32,97,55,54,51,41,0,0,0,0,0};
static C_char C_TLS li64[] C_aligned={C_lihdr(0,0,13),40,102,95,56,56,56,55,32,97,55,54,52,41,0,0,0,0,0};
static C_char C_TLS li65[] C_aligned={C_lihdr(0,0,28),40,102,105,110,100,32,120,55,54,48,32,115,101,113,55,54,49,32,46,32,97,114,103,115,55,54,50,41,0,0,0,0};
static C_char C_TLS li66[] C_aligned={C_lihdr(0,0,13),40,102,95,56,57,50,50,32,97,55,54,56,41,0,0,0,0,0};
static C_char C_TLS li67[] C_aligned={C_lihdr(0,0,13),40,102,95,56,57,51,49,32,97,55,54,57,41,0,0,0,0,0};
static C_char C_TLS li68[] C_aligned={C_lihdr(0,0,32),40,112,111,115,105,116,105,111,110,32,120,55,54,53,32,115,101,113,55,54,54,32,46,32,97,114,103,115,55,54,55,41};
static C_char C_TLS li69[] C_aligned={C_lihdr(0,0,12),40,97,57,49,54,51,32,105,56,48,50,41,0,0,0,0};
static C_char C_TLS li70[] C_aligned={C_lihdr(0,0,12),40,97,57,49,56,53,32,105,56,48,49,41,0,0,0,0};
static C_char C_TLS li71[] C_aligned={C_lihdr(0,0,12),40,97,57,49,57,53,32,105,56,48,48,41,0,0,0,0};
static C_char C_TLS li72[] C_aligned={C_lihdr(0,0,12),40,97,57,50,48,49,32,118,55,57,54,41,0,0,0,0};
static C_char C_TLS li73[] C_aligned={C_lihdr(0,0,40),40,101,120,112,97,110,100,45,111,112,116,107,101,121,115,32,117,115,101,114,55,55,48,32,115,112,101,99,55,55,49,32,98,111,100,121,55,55,50,41};
static C_char C_TLS li74[] C_aligned={C_lihdr(0,0,30),40,108,111,111,112,45,111,112,101,114,97,116,111,114,45,115,101,116,33,32,99,56,52,56,32,120,56,52,57,41,0,0,0,0,0,0};
static C_char C_TLS li75[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,98,105,110,100,105,110,103,115,32,99,56,53,48,41,0,0,0,0};
static C_char C_TLS li76[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,99,111,108,108,101,99,116,111,114,115,32,99,56,53,51,41,0,0,0,0,0,0};
static C_char C_TLS li77[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,105,110,105,116,105,97,108,108,121,32,99,56,53,54,41,0,0,0,0,0};
static C_char C_TLS li78[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,101,110,100,45,116,101,115,116,115,32,99,56,53,57,41,0,0,0,0,0};
static C_char C_TLS li79[] C_aligned={C_lihdr(0,0,19),40,108,111,111,112,45,108,111,111,112,105,110,103,32,99,56,54,50,41,0,0,0};
static C_char C_TLS li80[] C_aligned={C_lihdr(0,0,29),40,108,111,111,112,45,108,111,111,112,105,110,103,45,115,101,116,33,32,99,56,54,51,32,120,56,54,52,41,0,0,0,0,0};
static C_char C_TLS li81[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,115,116,101,112,112,105,110,103,32,99,56,54,53,41,0,0,0,0};
static C_char C_TLS li82[] C_aligned={C_lihdr(0,0,19),40,108,111,111,112,45,102,105,110,97,108,108,121,32,99,56,54,56,41,0,0,0};
static C_char C_TLS li83[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,114,101,116,117,114,110,105,110,103,32,99,56,55,49,41,0,0,0,0,0};
static C_char C_TLS li84[] C_aligned={C_lihdr(0,0,12),40,100,111,56,55,54,32,97,56,55,56,41,0,0,0,0};
static C_char C_TLS li85[] C_aligned={C_lihdr(0,0,26),40,109,97,107,101,45,108,111,111,112,45,99,108,97,117,115,101,32,97,114,103,115,56,55,52,41,0,0};
static C_char C_TLS li86[] C_aligned={C_lihdr(0,0,12),40,100,111,56,56,56,32,108,56,57,48,41,0,0,0,0};
static C_char C_TLS li87[] C_aligned={C_lihdr(0,0,38),40,103,97,116,104,101,114,45,99,108,97,117,115,101,32,99,108,97,117,115,101,115,56,56,54,32,97,99,99,101,115,115,111,114,56,56,55,41,0,0,0,0,0,0};
static C_char C_TLS li88[] C_aligned={C_lihdr(0,0,37),40,103,97,116,104,101,114,45,99,108,97,117,115,101,115,32,99,97,108,108,101,114,56,56,51,32,99,108,97,117,115,101,115,56,56,52,41,0,0,0,0,0};
static C_char C_TLS li89[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,111,112,63,32,120,56,57,52,32,111,112,115,56,57,53,41,0,0,0,0,0,0};
static C_char C_TLS li90[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,118,97,114,105,97,98,108,101,63,32,120,56,57,54,41,0,0,0,0,0};
static C_char C_TLS li91[] C_aligned={C_lihdr(0,0,28),40,109,97,107,101,45,98,105,110,100,105,110,103,32,118,97,114,56,57,55,32,118,97,108,56,57,56,41,0,0,0,0};
static C_char C_TLS li92[] C_aligned={C_lihdr(0,0,15),40,100,111,57,50,48,32,116,97,105,108,57,50,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li93[] C_aligned={C_lihdr(0,0,15),40,100,111,57,49,53,32,116,97,105,108,57,49,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li94[] C_aligned={C_lihdr(0,0,17),40,100,111,57,48,53,32,104,57,48,55,32,108,57,48,56,41,0};
static C_char C_TLS li95[] C_aligned={C_lihdr(0,0,36),40,108,111,111,112,45,101,114,114,111,114,32,111,112,115,56,57,57,32,102,111,114,109,115,57,48,48,32,97,114,103,115,57,48,49,41,0,0,0,0};
static C_char C_TLS li96[] C_aligned={C_lihdr(0,0,38),40,112,97,114,115,101,45,102,111,114,32,102,111,114,109,115,57,51,52,32,99,108,97,117,115,101,115,57,51,53,32,111,112,115,57,51,54,41,0,0,0,0,0,0};
static C_char C_TLS li97[] C_aligned={C_lihdr(0,0,15),40,100,111,57,53,52,32,110,101,120,116,57,53,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li98[] C_aligned={C_lihdr(0,0,48),40,112,97,114,115,101,45,110,117,109,101,114,105,99,97,108,45,102,111,114,32,102,111,114,109,115,57,52,48,32,99,108,97,117,115,101,115,57,52,49,32,111,112,115,57,52,50,41};
static C_char C_TLS li99[] C_aligned={C_lihdr(0,0,8),40,97,49,48,50,51,56,41};
static C_char C_TLS li100[] C_aligned={C_lihdr(0,0,30),40,97,49,48,50,53,54,32,99,108,97,117,115,101,49,48,51,53,32,105,103,110,111,114,101,49,48,51,54,41,0,0,0,0,0,0};
static C_char C_TLS li101[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,112,101,97,116,32,102,111,114,109,115,49,48,51,50,32,99,108,97,117,115,101,115,49,48,51,51,32,111,112,115,49,48,51,52,41,0,0,0,0};
static C_char C_TLS li102[] C_aligned={C_lihdr(0,0,17),40,100,111,49,48,53,51,32,110,101,120,116,49,48,53,53,41,0};
static C_char C_TLS li103[] C_aligned={C_lihdr(0,0,56),40,112,97,114,115,101,45,115,101,113,117,101,110,99,101,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,49,48,51,56,32,99,108,97,117,115,101,115,49,48,51,57,32,111,112,115,49,48,52,48,41};
static C_char C_TLS li104[] C_aligned={C_lihdr(0,0,17),40,100,111,49,49,50,48,32,110,101,120,116,49,49,50,50,41,0};
static C_char C_TLS li105[] C_aligned={C_lihdr(0,0,55),40,112,97,114,115,101,45,103,101,110,101,114,97,108,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,49,49,49,48,32,99,108,97,117,115,101,115,49,49,49,49,32,111,112,115,49,49,49,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li106[] C_aligned={C_lihdr(0,0,26),40,100,111,49,49,53,56,32,110,101,101,100,49,49,54,48,32,110,101,120,116,49,49,54,49,41,0,0};
static C_char C_TLS li107[] C_aligned={C_lihdr(0,0,42),40,112,97,114,115,101,45,119,105,116,104,32,102,111,114,109,115,49,49,52,56,32,99,108,97,117,115,101,115,49,49,52,57,32,111,112,115,49,49,53,48,41,0,0};
static C_char C_TLS li108[] C_aligned={C_lihdr(0,0,8),40,100,111,49,50,48,50,41};
static C_char C_TLS li109[] C_aligned={C_lihdr(0,0,40),40,112,97,114,115,101,45,100,111,32,102,111,114,109,115,49,49,57,51,32,99,108,97,117,115,101,115,49,49,57,52,32,111,112,115,49,49,57,53,41};
static C_char C_TLS li110[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,102,105,110,97,108,108,121,32,102,111,114,109,115,49,50,49,50,32,99,108,97,117,115,101,115,49,50,49,51,32,111,112,115,49,50,49,52,41,0,0,0,0,0};
static C_char C_TLS li111[] C_aligned={C_lihdr(0,0,47),40,112,97,114,115,101,45,105,110,105,116,105,97,108,108,121,32,102,111,114,109,115,49,50,50,54,32,99,108,97,117,115,101,115,49,50,50,55,32,111,112,115,49,50,50,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li112[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,99,111,108,108,101,99,116,111,114,32,118,97,114,49,50,57,51,32,116,121,112,101,49,50,57,52,32,97,99,99,49,50,57,53,32,104,101,97,100,49,50,57,54,41,0,0};
static C_char C_TLS li113[] C_aligned={C_lihdr(0,0,24),40,99,111,108,108,101,99,116,111,114,45,116,121,112,101,32,99,111,108,49,50,57,55,41};
static C_char C_TLS li114[] C_aligned={C_lihdr(0,0,23),40,99,111,108,108,101,99,116,111,114,45,97,99,99,32,99,111,108,49,50,57,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li115[] C_aligned={C_lihdr(0,0,14),40,100,111,49,50,52,53,32,97,49,50,52,55,41,0,0,0,0,0,0};
static C_char C_TLS li116[] C_aligned={C_lihdr(0,0,14),40,100,111,49,50,53,51,32,99,49,50,53,53,41,0,0,0,0,0,0};
static C_char C_TLS li117[] C_aligned={C_lihdr(0,0,50),40,112,97,114,115,101,45,97,99,99,117,109,117,108,97,116,105,111,110,32,102,111,114,109,115,49,50,55,50,32,99,108,97,117,115,101,115,49,50,55,51,32,111,112,115,49,50,55,52,41,0,0};
static C_char C_TLS li118[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,32,101,120,112,114,49,51,55,51,41,0,0,0,0,0,0};
static C_char C_TLS li119[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,49,51,55,52,32,99,108,97,117,115,101,115,49,51,55,53,32,111,112,115,49,51,55,54,41,0};
static C_char C_TLS li120[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,116,104,101,114,101,105,115,32,102,111,114,109,115,49,51,57,53,32,99,108,97,117,115,101,115,49,51,57,54,32,111,112,115,49,51,57,55,41,0,0,0,0,0};
static C_char C_TLS li121[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,116,117,114,110,32,102,111,114,109,115,49,52,49,49,32,99,108,97,117,115,101,115,49,52,49,50,32,111,112,115,49,52,49,51,41,0,0,0,0};
static C_char C_TLS li122[] C_aligned={C_lihdr(0,0,8),40,97,49,50,49,50,57,41};
static C_char C_TLS li123[] C_aligned={C_lihdr(0,0,20),40,97,49,50,49,52,50,32,97,49,52,51,56,32,98,49,52,51,57,41,0,0,0,0};
static C_char C_TLS li124[] C_aligned={C_lihdr(0,0,38),40,100,111,49,52,51,49,32,111,112,49,52,51,51,32,99,108,97,117,115,101,49,52,51,52,32,114,101,109,97,105,110,115,49,52,51,53,41,0,0,0,0,0,0};
static C_char C_TLS li125[] C_aligned={C_lihdr(0,0,58),40,112,97,114,115,101,45,116,104,101,110,45,101,108,115,101,45,100,101,112,101,110,100,101,110,116,115,32,102,111,114,109,115,49,52,50,53,32,99,108,97,117,115,101,115,49,52,50,54,32,111,112,115,49,52,50,55,41,0,0};
static C_char C_TLS li126[] C_aligned={C_lihdr(0,0,8),40,97,49,50,50,57,51,41};
static C_char C_TLS li127[] C_aligned={C_lihdr(0,0,20),40,97,49,50,51,48,55,32,97,49,52,54,55,32,98,49,52,54,56,41,0,0,0,0};
static C_char C_TLS li128[] C_aligned={C_lihdr(0,0,8),40,97,49,50,51,55,49,41};
static C_char C_TLS li129[] C_aligned={C_lihdr(0,0,20),40,97,49,50,51,55,55,32,97,49,52,54,52,32,98,49,52,54,53,41,0,0,0,0};
static C_char C_TLS li130[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,99,111,110,100,105,116,105,111,110,97,108,32,102,111,114,109,115,49,52,53,49,32,99,108,97,117,115,101,115,49,52,53,50,32,111,112,115,49,52,53,51,41,0};
static C_char C_TLS li131[] C_aligned={C_lihdr(0,0,26),40,111,112,45,116,121,112,101,63,32,111,112,49,52,57,52,32,116,121,112,101,49,52,57,53,41,0,0};
static C_char C_TLS li132[] C_aligned={C_lihdr(0,0,8),40,97,49,50,53,49,57,41};
static C_char C_TLS li133[] C_aligned={C_lihdr(0,0,20),40,97,49,50,53,50,56,32,97,49,53,48,55,32,98,49,53,48,56,41,0,0,0,0};
static C_char C_TLS li134[] C_aligned={C_lihdr(0,0,47),40,100,111,49,52,57,56,32,111,112,49,53,48,48,32,99,108,97,117,115,101,49,53,48,49,32,114,101,109,97,105,110,115,49,53,48,50,32,98,111,100,121,49,53,48,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li135[] C_aligned={C_lihdr(0,0,46),40,112,97,114,115,101,45,105,116,101,114,97,116,105,111,110,32,99,97,108,108,101,114,49,53,50,48,32,102,111,114,109,115,49,53,50,49,32,111,112,115,49,53,50,50,41,0,0,0,0,0,0};
static C_char C_TLS li136[] C_aligned={C_lihdr(0,0,75),40,109,97,107,101,45,112,101,114,105,111,100,32,99,111,117,110,116,49,53,57,48,32,108,101,110,103,116,104,49,53,57,49,32,115,116,114,101,97,109,49,53,57,50,32,100,101,102,97,117,108,116,49,53,57,51,32,111,109,105,116,49,53,57,52,32,114,101,112,115,49,53,57,53,41,0,0,0};
static C_char C_TLS li137[] C_aligned={C_lihdr(0,0,33),40,112,101,114,105,111,100,45,99,111,117,110,116,45,115,101,116,33,32,120,49,53,57,55,32,118,97,108,49,53,57,56,41,0};
static C_char C_TLS li138[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,99,111,117,110,116,32,120,49,54,48,48,41,0,0,0,0};
static C_char C_TLS li139[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,108,101,110,103,116,104,32,120,49,54,48,54,41,0,0,0,0,0};
static C_char C_TLS li140[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,115,116,114,101,97,109,32,120,49,54,49,50,41,0,0,0,0,0};
static C_char C_TLS li141[] C_aligned={C_lihdr(0,0,32),40,112,101,114,105,111,100,45,111,109,105,116,45,115,101,116,33,32,120,49,54,50,49,32,118,97,108,49,54,50,50,41};
static C_char C_TLS li142[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,111,109,105,116,32,120,49,54,50,52,41,0,0,0};
static C_char C_TLS li143[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,114,101,112,115,32,120,49,54,51,48,41,0,0,0};
static C_char C_TLS li144[] C_aligned={C_lihdr(0,0,16),40,112,97,116,116,101,114,110,63,32,120,49,54,53,53,41};
static C_char C_TLS li145[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,102,108,97,103,115,32,120,49,54,53,57,41,0,0,0,0,0};
static C_char C_TLS li146[] C_aligned={C_lihdr(0,0,33),40,112,97,116,116,101,114,110,45,100,97,116,97,45,115,101,116,33,32,120,49,54,54,50,32,118,97,108,49,54,54,51,41,0};
static C_char C_TLS li147[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,100,97,116,97,32,120,49,54,54,53,41,0,0,0,0};
static C_char C_TLS li148[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,108,101,110,103,116,104,32,120,49,54,55,49,41,0,0,0,0,0,0};
static C_char C_TLS li149[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,100,97,116,117,109,45,115,101,116,33,32,120,49,54,55,52,32,118,97,108,49,54,55,53,41,0,0};
static C_char C_TLS li150[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,100,97,116,117,109,32,120,49,54,55,55,41,0,0,0,0,0};
static C_char C_TLS li151[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,112,101,114,105,111,100,32,120,49,54,56,51,41,0,0,0,0,0,0};
static C_char C_TLS li152[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,118,97,108,117,101,45,115,101,116,33,32,120,49,54,56,54,32,118,97,108,49,54,56,55,41,0,0};
static C_char C_TLS li153[] C_aligned={C_lihdr(0,0,15),40,102,95,49,51,49,55,53,32,120,49,54,56,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li154[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,115,116,97,116,101,45,115,101,116,33,32,120,49,54,57,50,32,118,97,108,49,54,57,51,41,0,0};
static C_char C_TLS li155[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,115,116,97,116,101,32,120,49,54,57,53,41,0,0,0,0,0};
static C_char C_TLS li156[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,99,97,99,104,101,45,115,101,116,33,32,120,49,55,51,52,32,118,97,108,49,55,51,53,41,0,0};
static C_char C_TLS li157[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,99,97,99,104,101,32,120,49,55,51,55,41,0,0,0,0,0};
static C_char C_TLS li158[] C_aligned={C_lihdr(0,0,16),40,37,97,108,108,111,99,45,112,97,116,116,101,114,110,41};
static C_char C_TLS li159[] C_aligned={C_lihdr(0,0,14),40,97,49,51,53,53,55,32,120,49,55,54,54,41,0,0,0,0,0,0};
static C_char C_TLS li160[] C_aligned={C_lihdr(0,0,98),40,105,110,105,116,105,97,108,105,122,101,45,112,97,116,116,101,114,110,32,111,98,106,49,55,53,54,32,100,97,116,97,49,55,53,55,32,102,111,114,49,55,53,56,32,114,101,112,49,55,53,57,32,102,108,97,103,115,49,55,54,48,32,108,101,110,49,55,54,49,32,100,112,101,114,49,55,54,50,32,103,101,116,114,49,55,54,51,32,109,97,112,114,49,55,54,52,41,0,0};
static C_char C_TLS li161[] C_aligned={C_lihdr(0,0,12),40,101,111,112,63,32,120,49,55,57,49,41,0,0,0,0};
static C_char C_TLS li162[] C_aligned={C_lihdr(0,0,12),40,101,111,100,63,32,120,49,55,57,50,41,0,0,0,0};
static C_char C_TLS li163[] C_aligned={C_lihdr(0,0,20),40,100,111,49,55,57,55,32,105,49,55,57,57,32,101,49,56,48,48,41,0,0,0,0};
static C_char C_TLS li164[] C_aligned={C_lihdr(0,0,26),40,100,111,49,56,48,52,32,110,49,56,48,54,32,101,49,56,48,55,32,102,49,56,48,56,41,0,0};
static C_char C_TLS li165[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,32,111,98,106,49,55,57,51,32,46,32,97,114,103,115,49,55,57,52,41,0};
static C_char C_TLS li166[] C_aligned={C_lihdr(0,0,8),40,100,111,49,56,51,50,41};
static C_char C_TLS li167[] C_aligned={C_lihdr(0,0,26),40,100,111,49,56,50,56,32,100,121,110,63,49,56,51,48,32,115,116,111,112,49,56,51,49,41,0,0};
static C_char C_TLS li168[] C_aligned={C_lihdr(0,0,16),40,110,101,120,116,45,49,32,111,98,106,49,56,49,52,41};
static C_char C_TLS li169[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,45,105,110,45,112,97,116,116,101,114,110,32,111,98,106,49,56,53,50,41,0};
static C_char C_TLS li170[] C_aligned={C_lihdr(0,0,33),40,109,97,112,45,112,97,116,116,101,114,110,45,100,97,116,97,32,102,110,49,56,53,51,32,111,98,106,49,56,53,52,41,0};
static C_char C_TLS li171[] C_aligned={C_lihdr(0,0,14),40,97,49,52,49,50,52,32,120,49,56,54,51,41,0,0,0,0,0,0};
static C_char C_TLS li172[] C_aligned={C_lihdr(0,0,22),40,114,101,115,101,116,45,112,101,114,105,111,100,32,111,98,106,49,56,53,56,41,0,0,0,0,0,0};
static C_char C_TLS li173[] C_aligned={C_lihdr(0,0,23),40,97,49,52,50,49,56,32,102,110,49,57,49,53,32,111,98,106,49,57,49,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li174[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,99,121,99,108,101,32,100,97,116,97,49,56,55,50,32,46,32,97,114,103,115,49,56,55,51,41};
static C_char C_TLS li175[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,99,121,99,108,101,32,111,98,106,49,57,50,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li176[] C_aligned={C_lihdr(0,0,17),40,112,97,108,105,110,45,108,101,110,32,120,49,57,52,50,41,0};
static C_char C_TLS li177[] C_aligned={C_lihdr(0,0,30),40,112,97,108,105,110,45,105,110,99,45,115,101,116,33,32,120,49,57,52,53,32,118,97,108,49,57,52,54,41,0,0,0,0,0,0};
static C_char C_TLS li178[] C_aligned={C_lihdr(0,0,23),40,97,49,52,54,52,56,32,102,110,50,48,52,51,32,111,98,106,50,48,52,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li179[] C_aligned={C_lihdr(0,0,37),40,109,97,107,101,45,112,97,108,105,110,100,114,111,109,101,32,100,97,116,97,49,57,55,49,32,46,32,97,114,103,115,49,57,55,50,41,0,0,0,0,0};
static C_char C_TLS li180[] C_aligned={C_lihdr(0,0,28),40,110,101,120,116,45,105,110,45,112,97,108,105,110,100,114,111,109,101,32,111,98,106,50,48,53,50,41,0,0,0,0};
static C_char C_TLS li181[] C_aligned={C_lihdr(0,0,23),40,97,49,53,51,49,53,32,102,110,50,49,49,52,32,111,98,106,50,49,49,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li182[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,108,105,110,101,32,100,97,116,97,50,48,55,49,32,46,32,97,114,103,115,50,48,55,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li183[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,108,105,110,101,32,111,98,106,50,49,50,49,41,0,0,0,0,0,0};
static C_char C_TLS li184[] C_aligned={C_lihdr(0,0,23),40,97,49,53,54,48,50,32,102,110,50,49,54,57,32,111,98,106,50,49,55,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li185[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,104,101,97,112,32,100,97,116,97,50,49,50,54,32,46,32,97,114,103,115,50,49,50,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li186[] C_aligned={C_lihdr(0,0,26),40,100,111,50,49,56,48,32,105,50,49,56,50,32,106,50,49,56,51,32,118,50,49,56,52,41,0,0};
static C_char C_TLS li187[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,104,101,97,112,32,111,98,106,50,49,55,54,41,0,0,0,0,0,0};
static C_char C_TLS li188[] C_aligned={C_lihdr(0,0,23),40,97,49,53,57,52,55,32,102,110,50,50,54,52,32,111,98,106,50,50,54,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li189[] C_aligned={C_lihdr(0,0,35),40,109,97,107,101,45,114,111,116,97,116,105,111,110,32,100,97,116,97,50,49,57,50,32,46,32,97,114,103,115,50,49,57,51,41,0,0,0};
static C_char C_TLS li190[] C_aligned={C_lihdr(0,0,14),40,100,111,50,50,56,48,32,105,50,50,56,50,41,0,0,0,0,0,0};
static C_char C_TLS li191[] C_aligned={C_lihdr(0,0,61),40,114,111,116,97,116,101,45,105,116,101,109,115,32,105,116,101,109,115,50,50,55,53,32,115,116,97,114,116,50,50,55,54,32,115,116,101,112,50,50,55,55,32,119,105,100,116,104,50,50,55,56,32,101,110,100,50,50,55,57,41,0,0,0,0,0};
static C_char C_TLS li192[] C_aligned={C_lihdr(0,0,26),40,110,101,120,116,45,105,110,45,114,111,116,97,116,105,111,110,32,111,98,106,50,50,55,51,41,0,0};
static C_char C_TLS li193[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,100,97,116,117,109,32,120,50,51,48,55,41,0};
static C_char C_TLS li194[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,45,115,101,116,33,32,120,50,51,49,48,32,118,97,108,50,51,49,49,41,0,0,0,0,0,0};
static C_char C_TLS li195[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,32,120,50,51,49,51,41,0};
static C_char C_TLS li196[] C_aligned={C_lihdr(0,0,26),40,114,97,110,100,111,109,45,105,116,101,109,45,119,101,105,103,104,116,32,120,50,51,49,57,41,0,0};
static C_char C_TLS li197[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,105,110,32,120,50,51,50,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li198[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,97,120,32,120,50,51,51,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li199[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,45,115,101,116,33,32,120,50,51,51,52,32,118,97,108,50,51,51,53,41,0,0,0,0,0,0};
static C_char C_TLS li200[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,32,120,50,51,51,55,41,0};
static C_char C_TLS li201[] C_aligned={C_lihdr(0,0,14),40,97,49,54,56,51,50,32,105,50,52,49,57,41,0,0,0,0,0,0};
static C_char C_TLS li202[] C_aligned={C_lihdr(0,0,23),40,97,49,54,56,50,54,32,102,110,50,52,49,55,32,111,98,106,50,52,49,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li203[] C_aligned={C_lihdr(0,0,17),40,97,49,55,48,54,51,32,105,116,101,109,50,51,55,50,41,0};
static C_char C_TLS li204[] C_aligned={C_lihdr(0,0,25),40,37,109,97,107,101,45,114,97,110,100,111,109,45,105,116,101,109,32,119,50,52,51,48,41,0};
static C_char C_TLS li205[] C_aligned={C_lihdr(0,0,36),40,109,97,107,101,45,119,101,105,103,104,116,105,110,103,32,100,97,116,97,50,51,54,50,32,46,32,97,114,103,115,50,51,54,51,41,0,0,0,0};
static C_char C_TLS li206[] C_aligned={C_lihdr(0,0,37),40,100,111,50,53,49,55,32,116,97,105,108,50,53,49,57,32,105,110,100,101,120,50,53,50,48,32,116,111,116,97,108,50,53,50,49,41,0,0,0,0,0};
static C_char C_TLS li207[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,49,49,32,116,97,105,108,50,53,49,51,41,0};
static C_char C_TLS li208[] C_aligned={C_lihdr(0,0,36),40,114,101,99,97,108,99,45,119,101,105,103,104,116,105,110,103,115,32,111,98,106,50,53,48,55,32,102,105,120,63,50,53,48,56,41,0,0,0,0};
static C_char C_TLS li209[] C_aligned={C_lihdr(0,0,27),40,100,111,50,53,51,57,32,116,97,105,108,50,53,52,49,32,105,110,100,101,120,50,53,52,50,41,0,0,0};
static C_char C_TLS li210[] C_aligned={C_lihdr(0,0,18),40,112,105,99,107,32,99,50,53,51,55,32,114,50,53,51,56,41,0,0};
static C_char C_TLS li211[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,52,56,32,116,97,105,108,50,53,53,48,41,0};
static C_char C_TLS li212[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,52,52,32,105,116,101,109,50,53,52,54,41,0};
static C_char C_TLS li213[] C_aligned={C_lihdr(0,0,27),40,110,101,120,116,45,105,110,45,119,101,105,103,104,116,105,110,103,32,111,98,106,50,53,50,55,41,0,0,0};
static C_char C_TLS li214[] C_aligned={C_lihdr(0,0,23),40,97,49,56,49,51,52,32,102,110,50,54,55,54,32,111,98,106,50,54,55,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li215[] C_aligned={C_lihdr(0,0,14),40,97,49,55,56,56,56,32,115,50,53,55,55,41,0,0,0,0,0,0};
static C_char C_TLS li216[] C_aligned={C_lihdr(0,0,8),40,100,111,50,53,55,48,41};
static C_char C_TLS li217[] C_aligned={C_lihdr(0,0,41),40,100,111,50,53,57,50,32,116,97,105,108,50,53,57,52,32,111,114,100,101,114,50,53,57,53,32,108,105,115,50,53,57,54,32,112,50,53,57,55,41,0};
static C_char C_TLS li218[] C_aligned={C_lihdr(0,0,33),40,109,97,107,101,45,109,97,114,107,111,118,32,100,97,116,97,50,54,48,52,32,46,32,97,114,103,115,50,54,48,53,41,0};
static C_char C_TLS li219[] C_aligned={C_lihdr(0,0,17),40,100,111,50,55,48,49,32,116,97,105,108,50,55,48,51,41,0};
static C_char C_TLS li220[] C_aligned={C_lihdr(0,0,33),40,100,111,50,54,57,49,32,116,97,105,108,50,54,57,51,32,111,117,116,50,54,57,52,32,115,117,109,50,54,57,53,41,0};
static C_char C_TLS li221[] C_aligned={C_lihdr(0,0,37),40,115,101,108,101,99,116,45,111,117,116,112,117,116,32,114,97,110,103,101,50,54,56,57,32,111,117,116,112,117,116,115,50,54,57,48,41,0,0,0,0,0};
static C_char C_TLS li222[] C_aligned={C_lihdr(0,0,17),40,100,111,50,55,51,49,32,108,97,115,116,50,55,51,51,41,0};
static C_char C_TLS li223[] C_aligned={C_lihdr(0,0,26),40,100,111,50,55,48,55,32,105,50,55,48,57,32,106,50,55,49,48,32,102,50,55,49,49,41,0,0};
static C_char C_TLS li224[] C_aligned={C_lihdr(0,0,35),40,100,111,50,55,50,50,32,116,97,105,108,50,55,50,52,32,112,97,115,116,50,55,50,53,32,105,116,101,109,50,55,50,54,41,0,0,0};
static C_char C_TLS li225[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,109,97,114,107,111,118,32,111,98,106,50,54,56,54,41};
static C_char C_TLS li226[] C_aligned={C_lihdr(0,0,24),40,103,114,97,112,104,45,110,111,100,101,45,100,97,116,117,109,32,120,50,55,53,49,41};
static C_char C_TLS li227[] C_aligned={C_lihdr(0,0,14),40,97,49,57,48,48,54,32,110,50,56,49,55,41,0,0,0,0,0,0};
static C_char C_TLS li228[] C_aligned={C_lihdr(0,0,23),40,97,49,57,48,48,48,32,102,110,50,56,49,53,32,111,98,106,50,56,49,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li229[] C_aligned={C_lihdr(0,0,28),40,97,49,57,50,53,50,32,105,116,101,109,50,56,50,55,32,46,32,97,114,103,115,50,56,50,56,41,0,0,0,0};
static C_char C_TLS li230[] C_aligned={C_lihdr(0,0,29),40,112,97,114,115,101,45,103,114,97,112,104,45,105,116,101,109,32,101,120,116,101,114,110,50,56,50,54,41,0,0,0,0,0};
static C_char C_TLS li231[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,103,114,97,112,104,32,100,97,116,97,50,55,55,50,32,46,32,97,114,103,115,50,55,55,51,41};
static C_char C_TLS li232[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,56,49,32,116,97,105,108,50,56,56,51,41,0};
static C_char C_TLS li233[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,103,114,97,112,104,32,111,98,106,50,56,55,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li234[] C_aligned={C_lihdr(0,0,14),40,97,49,57,54,55,57,32,120,50,57,52,55,41,0,0,0,0,0,0};
static C_char C_TLS li235[] C_aligned={C_lihdr(0,0,25),40,100,111,55,48,57,32,116,97,105,108,55,49,49,32,120,55,49,50,32,102,55,49,51,41,0};
static C_char C_TLS li236[] C_aligned={C_lihdr(0,0,31),40,97,100,100,45,111,117,116,99,111,109,101,32,112,114,101,118,50,57,52,52,32,110,101,120,116,50,57,52,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li237[] C_aligned={C_lihdr(0,0,14),40,97,49,57,55,50,55,32,122,50,57,53,53,41,0,0,0,0,0,0};
static C_char C_TLS li238[] C_aligned={C_lihdr(0,0,14),40,97,49,57,55,51,55,32,122,50,57,53,52,41,0,0,0,0,0,0};
static C_char C_TLS li239[] C_aligned={C_lihdr(0,0,27),40,98,101,102,111,114,101,63,32,120,50,57,52,57,32,121,50,57,53,48,32,108,50,57,53,49,41,0,0,0};
static C_char C_TLS li240[] C_aligned={C_lihdr(0,0,16),40,97,49,57,56,51,53,32,114,111,119,51,48,56,49,41};
static C_char C_TLS li241[] C_aligned={C_lihdr(0,0,20),40,100,111,51,48,53,52,32,105,51,48,53,54,32,109,51,48,53,55,41,0,0,0,0};
static C_char C_TLS li242[] C_aligned={C_lihdr(0,0,14),40,100,111,51,48,52,53,32,108,51,48,52,55,41,0,0,0,0,0,0};
static C_char C_TLS li243[] C_aligned={C_lihdr(0,0,20),40,100,111,51,48,51,56,32,105,51,48,52,48,32,109,51,48,52,49,41,0,0,0,0};
static C_char C_TLS li244[] C_aligned={C_lihdr(0,0,20),40,100,111,51,48,51,50,32,105,51,48,51,52,32,109,51,48,51,53,41,0,0,0,0};
static C_char C_TLS li245[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,53,56,32,120,50,57,54,48,41,0,0,0,0,0,0};
static C_char C_TLS li246[] C_aligned={C_lihdr(0,0,17),40,100,111,51,48,50,54,32,116,97,105,108,51,48,50,56,41,0};
static C_char C_TLS li247[] C_aligned={C_lihdr(0,0,20),40,100,111,51,48,49,54,32,105,51,48,49,56,32,109,51,48,49,57,41,0,0,0,0};
static C_char C_TLS li248[] C_aligned={C_lihdr(0,0,14),40,100,111,51,48,49,49,32,108,51,48,49,51,41,0,0,0,0,0,0};
static C_char C_TLS li249[] C_aligned={C_lihdr(0,0,14),40,100,111,51,48,48,54,32,105,51,48,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li250[] C_aligned={C_lihdr(0,0,20),40,97,50,48,49,53,54,32,120,51,48,48,50,32,121,51,48,48,51,41,0,0,0,0};
static C_char C_TLS li251[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,57,51,32,101,50,57,57,53,41,0,0,0,0,0,0};
static C_char C_TLS li252[] C_aligned={C_lihdr(0,0,20),40,100,111,50,57,56,55,32,101,50,57,56,57,32,115,50,57,57,48,41,0,0,0,0};
static C_char C_TLS li253[] C_aligned={C_lihdr(0,0,25),40,100,111,50,57,55,57,32,116,97,105,108,50,57,56,49,32,108,101,110,50,57,56,50,41,0};
static C_char C_TLS li254[] C_aligned={C_lihdr(0,0,20),40,97,50,48,51,48,53,32,120,50,57,55,55,32,121,50,57,55,56,41,0,0,0,0};
static C_char C_TLS li255[] C_aligned={C_lihdr(0,0,29),40,100,111,50,57,54,54,32,112,114,101,118,50,57,54,56,32,106,50,57,54,57,32,120,50,57,55,48,41,0,0,0,0,0};
static C_char C_TLS li256[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,54,51,32,105,50,57,54,53,41,0,0,0,0,0,0};
static C_char C_TLS li257[] C_aligned={C_lihdr(0,0,35),40,109,97,114,107,111,118,45,97,110,97,108,121,122,101,32,115,101,113,50,56,56,57,32,46,32,97,114,103,115,50,56,57,48,41,0,0,0};
static C_char C_TLS li258[] C_aligned={C_lihdr(0,0,14),40,97,50,48,54,52,51,32,122,51,49,51,49,41,0,0,0,0,0,0};
static C_char C_TLS li259[] C_aligned={C_lihdr(0,0,51),40,114,101,115,99,97,108,101,32,120,51,49,50,53,32,120,49,51,49,50,54,32,120,50,51,49,50,55,32,121,49,51,49,50,56,32,121,50,51,49,50,57,32,46,32,98,51,49,51,48,41,0,0,0};
static C_char C_TLS li260[] C_aligned={C_lihdr(0,0,14),40,97,50,48,54,56,51,32,122,51,49,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li261[] C_aligned={C_lihdr(0,0,14),40,97,50,48,55,48,57,32,122,51,49,52,52,41,0,0,0,0,0,0};
static C_char C_TLS li262[] C_aligned={C_lihdr(0,0,48),40,100,105,115,99,114,101,116,101,32,120,51,49,51,50,32,120,49,51,49,51,51,32,120,50,51,49,51,52,32,105,49,51,49,51,53,32,46,32,97,114,103,115,51,49,51,54,41};
static C_char C_TLS li263[] C_aligned={C_lihdr(0,0,11),40,105,110,116,32,102,51,49,52,54,41,0,0,0};
static C_char C_TLS li264[] C_aligned={C_lihdr(0,0,14),40,97,50,48,56,48,51,32,120,51,49,52,56,41,0,0,0,0,0,0};
static C_char C_TLS li265[] C_aligned={C_lihdr(0,0,13),40,102,108,111,97,116,32,110,51,49,52,55,41,0,0,0,0,0};
static C_char C_TLS li266[] C_aligned={C_lihdr(0,0,13),40,108,111,103,49,48,32,110,51,49,52,57,41,0,0,0,0,0};
static C_char C_TLS li267[] C_aligned={C_lihdr(0,0,12),40,108,111,103,50,32,110,51,49,53,48,41,0,0,0,0};
static C_char C_TLS li268[] C_aligned={C_lihdr(0,0,14),40,97,50,48,56,54,56,32,120,51,49,53,50,41,0,0,0,0,0,0};
static C_char C_TLS li269[] C_aligned={C_lihdr(0,0,17),40,112,108,117,115,32,46,32,97,114,103,115,51,49,53,49,41,0};
static C_char C_TLS li270[] C_aligned={C_lihdr(0,0,14),40,97,50,48,57,51,55,32,120,51,49,53,52,41,0,0,0,0,0,0};
static C_char C_TLS li271[] C_aligned={C_lihdr(0,0,18),40,116,105,109,101,115,32,46,32,97,114,103,115,51,49,53,51,41,0,0};
static C_char C_TLS li272[] C_aligned={C_lihdr(0,0,14),40,97,50,48,57,57,50,32,120,51,49,53,55,41,0,0,0,0,0,0};
static C_char C_TLS li273[] C_aligned={C_lihdr(0,0,26),40,109,105,110,117,115,32,97,114,103,51,49,53,53,32,46,32,97,114,103,115,51,49,53,54,41,0,0};
static C_char C_TLS li274[] C_aligned={C_lihdr(0,0,14),40,97,50,49,48,51,53,32,120,51,49,54,48,41,0,0,0,0,0,0};
static C_char C_TLS li275[] C_aligned={C_lihdr(0,0,27),40,100,105,118,105,100,101,32,97,114,103,51,49,53,56,32,46,32,97,114,103,115,51,49,53,57,41,0,0,0};
static C_char C_TLS li276[] C_aligned={C_lihdr(0,0,14),40,97,50,49,48,54,48,32,110,51,49,54,51,41,0,0,0,0,0,0};
static C_char C_TLS li277[] C_aligned={C_lihdr(0,0,28),40,113,117,97,110,116,105,122,101,32,110,117,109,51,49,54,49,32,115,116,101,112,115,51,49,54,50,41,0,0,0,0};
static C_char C_TLS li278[] C_aligned={C_lihdr(0,0,14),40,97,50,49,48,56,52,32,118,51,49,54,55,41,0,0,0,0,0,0};
static C_char C_TLS li279[] C_aligned={C_lihdr(0,0,31),40,100,101,99,105,109,97,108,115,32,118,97,108,117,101,51,49,54,52,32,112,108,97,99,101,115,51,49,54,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li280[] C_aligned={C_lihdr(0,0,14),40,97,50,49,49,51,48,32,120,51,50,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li281[] C_aligned={C_lihdr(0,0,38),40,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,98,101,97,116,115,51,49,54,56,32,46,32,97,114,103,115,51,49,54,57,41,0,0,0,0,0,0};
static C_char C_TLS li282[] C_aligned={C_lihdr(0,0,22),40,114,97,116,105,111,45,62,99,101,110,116,115,32,110,117,109,51,50,49,50,41,0,0,0,0,0,0};
static C_char C_TLS li283[] C_aligned={C_lihdr(0,0,24),40,99,101,110,116,115,45,62,114,97,116,105,111,32,99,101,110,116,115,51,50,49,52,41};
static C_char C_TLS li284[] C_aligned={C_lihdr(0,0,17),40,100,111,51,50,50,51,32,116,97,105,108,51,50,50,53,41,0};
static C_char C_TLS li285[] C_aligned={C_lihdr(0,0,35),40,105,110,116,101,114,112,49,32,120,51,50,49,53,32,99,111,111,114,100,115,51,50,49,54,32,98,97,115,101,51,50,49,55,41,0,0,0};
static C_char C_TLS li286[] C_aligned={C_lihdr(0,0,25),40,105,110,116,101,114,112,32,120,51,50,51,51,32,46,32,97,114,103,115,51,50,51,52,41,0};
static C_char C_TLS li287[] C_aligned={C_lihdr(0,0,44),40,116,101,110,100,101,110,99,121,32,120,51,50,51,54,32,108,111,119,51,50,51,55,32,104,105,103,104,51,50,51,56,32,46,32,97,114,103,115,51,50,51,57,41,0,0,0,0};
static C_char C_TLS li288[] C_aligned={C_lihdr(0,0,37),40,102,105,116,49,32,110,117,109,51,50,53,50,32,108,98,51,50,53,51,32,117,98,51,50,53,52,32,109,111,100,101,51,50,53,53,41,0,0,0,0,0};
static C_char C_TLS li289[] C_aligned={C_lihdr(0,0,14),40,97,50,49,55,48,48,32,110,51,50,54,48,41,0,0,0,0,0,0};
static C_char C_TLS li290[] C_aligned={C_lihdr(0,0,38),40,102,105,116,32,110,117,109,51,50,52,53,32,108,98,51,50,52,54,32,117,98,51,50,52,55,32,46,32,109,111,100,101,51,50,52,56,41,0,0,0,0,0,0};
static C_char C_TLS li291[] C_aligned={C_lihdr(0,0,32),40,100,111,51,50,55,50,32,105,51,50,55,52,32,107,51,50,55,53,32,108,51,50,55,54,32,116,51,50,55,55,41};
static C_char C_TLS li292[] C_aligned={C_lihdr(0,0,37),40,115,99,97,108,101,32,108,101,110,51,50,54,52,32,107,101,121,110,117,109,51,50,54,53,32,46,32,97,114,103,115,51,50,54,54,41,0,0,0,0,0};
static C_char C_TLS li293[] C_aligned={C_lihdr(0,0,14),40,100,111,51,50,57,53,32,105,51,50,57,55,41,0,0,0,0,0,0};
static C_char C_TLS li294[] C_aligned={C_lihdr(0,0,17),40,100,111,51,51,49,49,32,116,97,105,108,51,51,49,51,41,0};
static C_char C_TLS li295[] C_aligned={C_lihdr(0,0,20),40,100,111,51,51,48,55,32,105,51,51,48,57,32,110,51,51,49,48,41,0,0,0,0};
static C_char C_TLS li296[] C_aligned={C_lihdr(0,0,33),40,115,101,103,115,32,110,117,109,51,50,56,52,32,115,117,109,51,50,56,53,32,46,32,97,114,103,115,51,50,56,54,41,0};
static C_char C_TLS li297[] C_aligned={C_lihdr(0,0,15),40,114,97,110,32,46,32,110,117,109,51,51,50,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li298[] C_aligned={C_lihdr(0,0,21),40,98,101,116,119,101,101,110,32,97,51,51,50,53,32,98,51,51,50,54,41,0,0,0,0,0};
static C_char C_TLS li299[] C_aligned={C_lihdr(0,0,17),40,112,105,99,107,32,46,32,97,114,103,115,51,51,50,55,41,0};
static C_char C_TLS li300[] C_aligned={C_lihdr(0,0,33),40,118,97,114,121,49,32,118,97,108,51,51,55,53,32,118,97,114,105,51,51,55,54,32,109,111,100,101,51,51,55,55,41,0};
static C_char C_TLS li301[] C_aligned={C_lihdr(0,0,14),40,97,50,50,52,51,54,32,118,51,51,56,50,41,0,0,0,0,0,0};
static C_char C_TLS li302[] C_aligned={C_lihdr(0,0,34),40,118,97,114,121,32,118,97,108,51,51,55,49,32,118,97,114,105,51,51,55,50,32,46,32,109,111,100,101,51,51,55,51,41,0,0};
static C_char C_TLS li303[] C_aligned={C_lihdr(0,0,26),40,100,111,51,51,56,56,32,105,51,51,57,48,32,106,51,51,57,49,32,118,51,51,57,50,41,0,0};
static C_char C_TLS li304[] C_aligned={C_lihdr(0,0,16),40,115,104,117,102,102,108,101,33,32,108,51,51,56,54,41};
static C_char C_TLS li305[] C_aligned={C_lihdr(0,0,20),40,115,104,117,102,102,108,101,32,46,32,97,114,103,115,51,51,57,55,41,0,0,0,0};
static C_char C_TLS li306[] C_aligned={C_lihdr(0,0,20),40,114,97,110,98,101,116,97,32,46,32,97,114,103,115,51,51,57,56,41,0,0,0,0};
static C_char C_TLS li307[] C_aligned={C_lihdr(0,0,19),40,114,97,110,101,120,112,32,46,32,97,114,103,115,51,52,52,49,41,0,0,0};
static C_char C_TLS li308[] C_aligned={C_lihdr(0,0,21),40,114,97,110,103,97,117,115,115,32,46,32,97,114,103,115,51,52,52,50,41,0,0,0,0,0};
static C_char C_TLS li309[] C_aligned={C_lihdr(0,0,23),40,114,97,110,112,111,105,115,115,111,110,32,46,32,97,114,103,115,51,52,52,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li310[] C_aligned={C_lihdr(0,0,21),40,114,97,110,103,97,109,109,97,32,46,32,97,114,103,115,51,52,52,52,41,0,0,0,0,0};
static C_char C_TLS li311[] C_aligned={C_lihdr(0,0,44),40,115,116,114,105,110,103,45,62,110,111,116,101,45,101,110,116,114,121,32,115,116,114,51,52,56,54,32,111,99,116,51,52,56,55,32,101,114,114,51,52,56,56,41,0,0,0,0};
static C_char C_TLS li312[] C_aligned={C_lihdr(0,0,37),40,110,111,116,101,45,97,117,120,32,102,114,101,113,51,53,48,48,32,100,111,99,116,51,53,48,49,32,101,114,114,63,51,53,48,50,41,0,0,0,0,0};
static C_char C_TLS li313[] C_aligned={C_lihdr(0,0,44),40,100,111,51,53,48,53,32,116,97,105,108,51,53,48,55,32,100,101,102,111,51,53,48,56,32,116,104,105,115,51,53,48,57,32,114,101,115,108,51,53,49,48,41,0,0,0,0};
static C_char C_TLS li314[] C_aligned={C_lihdr(0,0,15),40,110,111,116,101,32,102,114,101,113,51,53,48,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li315[] C_aligned={C_lihdr(0,0,44),40,100,111,51,53,49,57,32,116,97,105,108,51,53,50,49,32,100,101,102,111,51,53,50,50,32,116,104,105,115,51,53,50,51,32,114,101,115,108,51,53,50,52,41,0,0,0,0};
static C_char C_TLS li316[] C_aligned={C_lihdr(0,0,14),40,107,101,121,32,102,114,101,113,51,53,49,55,41,0,0,0,0,0,0};
static C_char C_TLS li317[] C_aligned={C_lihdr(0,0,44),40,100,111,51,53,51,53,32,116,97,105,108,51,53,51,55,32,100,101,102,111,51,53,51,56,32,116,104,105,115,51,53,51,57,32,114,101,115,108,51,53,52,48,41,0,0,0,0};
static C_char C_TLS li318[] C_aligned={C_lihdr(0,0,13),40,104,122,32,102,114,101,113,51,53,51,51,41,0,0,0,0,0};
static C_char C_TLS li319[] C_aligned={C_lihdr(0,0,10),40,112,99,32,120,51,53,52,57,41,0,0};
static C_char C_TLS li320[] C_aligned={C_lihdr(0,0,26),40,100,111,51,53,53,53,32,116,97,105,108,51,53,53,55,32,108,97,115,116,51,53,53,56,41,0,0};
static C_char C_TLS li321[] C_aligned={C_lihdr(0,0,18),40,105,110,118,107,101,121,115,32,107,101,121,115,51,53,53,50,41,0,0};
static C_char C_TLS li322[] C_aligned={C_lihdr(0,0,14),40,97,50,51,53,50,55,32,122,51,53,54,50,41,0,0,0,0,0,0};
static C_char C_TLS li323[] C_aligned={C_lihdr(0,0,14),40,105,110,118,101,114,116,32,120,51,53,53,48,41,0,0,0,0,0,0};
static C_char C_TLS li324[] C_aligned={C_lihdr(0,0,26),40,100,111,51,53,55,48,32,116,97,105,108,51,53,55,50,32,108,97,115,116,51,53,55,51,41,0,0};
static C_char C_TLS li325[] C_aligned={C_lihdr(0,0,30),40,116,114,97,110,115,112,107,101,121,115,32,107,101,121,115,51,53,54,55,32,111,114,105,103,51,53,54,56,41,0,0,0,0,0,0};
static C_char C_TLS li326[] C_aligned={C_lihdr(0,0,14),40,97,50,51,54,56,48,32,122,51,53,55,55,41,0,0,0,0,0,0};
static C_char C_TLS li327[] C_aligned={C_lihdr(0,0,23),40,116,114,97,110,115,112,111,115,101,32,120,51,53,54,51,32,121,51,53,54,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li328[] C_aligned={C_lihdr(0,0,20),40,97,50,51,55,52,51,32,97,51,53,56,48,32,98,51,53,56,49,41,0,0,0,0};
static C_char C_TLS li329[] C_aligned={C_lihdr(0,0,20),40,97,50,51,56,48,49,32,97,51,53,56,50,32,98,51,53,56,51,41,0,0,0,0};
static C_char C_TLS li330[] C_aligned={C_lihdr(0,0,34),40,115,99,97,108,101,45,111,114,100,101,114,32,115,99,97,108,101,51,53,55,56,32,46,32,109,111,100,101,51,53,55,57,41,0,0};
static C_char C_TLS li331[] C_aligned={C_lihdr(0,0,31),40,114,115,121,109,32,112,114,101,51,53,56,57,32,114,97,119,51,53,57,48,32,112,111,115,116,51,53,57,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li332[] C_aligned={C_lihdr(0,0,25),40,97,100,100,114,121,116,104,32,115,116,114,51,53,57,50,32,118,97,108,51,53,57,51,41,0};
static C_char C_TLS li333[] C_aligned={C_lihdr(0,0,22),40,100,111,51,54,51,49,32,111,112,115,51,54,51,51,32,105,51,54,51,52,41,0,0,0,0,0,0};
static C_char C_TLS li334[] C_aligned={C_lihdr(0,0,41),40,110,101,120,116,45,116,111,107,101,110,45,115,116,97,114,116,32,115,116,114,51,54,50,56,32,108,98,51,54,50,57,32,108,101,110,51,54,51,48,41,0};
static C_char C_TLS li335[] C_aligned={C_lihdr(0,0,45),40,100,111,51,54,52,49,32,110,117,109,51,54,52,51,32,118,97,108,51,54,52,52,32,116,111,107,51,54,52,53,32,111,112,51,54,52,54,32,105,51,54,52,55,41,0,0,0,0,0};
static C_char C_TLS li336[] C_aligned={C_lihdr(0,0,14),40,97,50,51,57,53,55,32,120,51,54,50,49,41,0,0,0,0,0,0};
static C_char C_TLS li337[] C_aligned={C_lihdr(0,0,27),40,114,104,121,116,104,109,32,118,97,108,51,54,49,51,32,46,32,97,114,103,115,51,54,49,52,41,0,0,0};
static C_char C_TLS li338[] C_aligned={C_lihdr(0,0,26),40,105,110,45,116,101,109,112,111,32,110,51,54,54,55,32,116,101,109,112,111,51,54,54,56,41,0,0};
static C_char C_TLS li339[] C_aligned={C_lihdr(0,0,5),40,99,119,100,41,0,0,0,0,0};
static C_char C_TLS li340[] C_aligned={C_lihdr(0,0,15),40,99,104,100,105,114,32,115,116,114,51,54,55,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li341[] C_aligned={C_lihdr(0,0,24),40,112,97,116,104,110,97,109,101,45,116,121,112,101,32,112,97,116,104,51,56,48,50,41};
static C_char C_TLS li342[] C_aligned={C_lihdr(0,0,24),40,102,117,108,108,45,112,97,116,104,110,97,109,101,32,112,97,116,104,51,56,48,54,41};
static C_char C_TLS li343[] C_aligned={C_lihdr(0,0,52),40,109,97,107,101,45,115,112,101,99,116,114,117,109,32,116,105,109,101,51,56,56,49,32,115,105,122,101,51,56,56,50,32,102,114,101,113,115,51,56,56,51,32,97,109,112,115,51,56,56,52,41,0,0,0,0};
static C_char C_TLS li344[] C_aligned={C_lihdr(0,0,17),40,115,112,101,99,116,114,117,109,63,32,120,51,56,56,53,41,0};
static C_char C_TLS li345[] C_aligned={C_lihdr(0,0,21),40,115,112,101,99,116,114,117,109,45,116,105,109,101,32,120,51,56,56,57,41,0,0,0,0,0};
static C_char C_TLS li346[] C_aligned={C_lihdr(0,0,34),40,115,112,101,99,116,114,117,109,45,115,105,122,101,45,115,101,116,33,32,120,51,56,57,50,32,118,97,108,51,56,57,51,41,0,0};
static C_char C_TLS li347[] C_aligned={C_lihdr(0,0,21),40,115,112,101,99,116,114,117,109,45,115,105,122,101,32,120,51,56,57,53,41,0,0,0,0,0};
static C_char C_TLS li348[] C_aligned={C_lihdr(0,0,35),40,115,112,101,99,116,114,117,109,45,102,114,101,113,115,45,115,101,116,33,32,120,51,56,57,56,32,118,97,108,51,56,57,57,41,0,0,0};
static C_char C_TLS li349[] C_aligned={C_lihdr(0,0,22),40,115,112,101,99,116,114,117,109,45,102,114,101,113,115,32,120,51,57,48,49,41,0,0,0,0,0,0};
static C_char C_TLS li350[] C_aligned={C_lihdr(0,0,34),40,115,112,101,99,116,114,117,109,45,97,109,112,115,45,115,101,116,33,32,120,51,57,48,52,32,118,97,108,51,57,48,53,41,0,0};
static C_char C_TLS li351[] C_aligned={C_lihdr(0,0,21),40,115,112,101,99,116,114,117,109,45,97,109,112,115,32,120,51,57,48,55,41,0,0,0,0,0};
static C_char C_TLS li352[] C_aligned={C_lihdr(0,0,28),40,115,112,101,99,116,114,117,109,45,99,111,112,121,32,115,112,101,99,116,114,117,109,51,57,49,53,41,0,0,0,0};
static C_char C_TLS li353[] C_aligned={C_lihdr(0,0,14),40,100,111,51,57,50,50,32,105,51,57,50,52,41,0,0,0,0,0,0};
static C_char C_TLS li354[] C_aligned={C_lihdr(0,0,29),40,115,112,101,99,116,114,117,109,45,112,97,105,114,115,32,115,112,101,99,116,114,117,109,51,57,49,54,41,0,0,0,0,0};
static C_char C_TLS li355[] C_aligned={C_lihdr(0,0,31),40,115,112,101,99,116,114,117,109,45,109,105,110,102,114,101,113,32,115,112,101,99,116,114,117,109,51,57,50,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li356[] C_aligned={C_lihdr(0,0,31),40,115,112,101,99,116,114,117,109,45,109,97,120,102,114,101,113,32,115,112,101,99,116,114,117,109,51,57,50,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li357[] C_aligned={C_lihdr(0,0,14),40,97,50,53,52,48,50,32,97,51,57,51,51,41,0,0,0,0,0,0};
static C_char C_TLS li358[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,105,110,97,109,112,32,115,112,101,99,116,114,117,109,51,57,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li359[] C_aligned={C_lihdr(0,0,14),40,97,50,53,52,51,51,32,97,51,57,52,48,41,0,0,0,0,0,0};
static C_char C_TLS li360[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,97,120,97,109,112,32,115,112,101,99,116,114,117,109,51,57,51,55,41,0,0,0,0,0,0};
static C_char C_TLS li361[] C_aligned={C_lihdr(0,0,8),40,100,111,51,57,54,48,41};
static C_char C_TLS li362[] C_aligned={C_lihdr(0,0,8),40,100,111,51,57,54,53,41};
static C_char C_TLS li363[] C_aligned={C_lihdr(0,0,14),40,103,101,116,107,101,121,32,104,51,57,53,56,41,0,0,0,0,0,0};
static C_char C_TLS li364[] C_aligned={C_lihdr(0,0,11),40,97,100,100,32,107,51,57,55,48,41,0,0,0};
static C_char C_TLS li365[] C_aligned={C_lihdr(0,0,14),40,97,100,100,107,101,121,32,104,51,57,55,50,41,0,0,0,0,0,0};
static C_char C_TLS li366[] C_aligned={C_lihdr(0,0,20),40,97,100,100,117,110,105,113,117,101,107,101,121,32,104,51,57,55,51,41,0,0,0,0};
static C_char C_TLS li367[] C_aligned={C_lihdr(0,0,22),40,100,111,54,55,53,32,105,54,55,55,32,106,54,55,56,32,116,54,55,57,41,0,0,0,0,0,0};
static C_char C_TLS li368[] C_aligned={C_lihdr(0,0,20),40,97,50,53,54,52,53,32,97,51,57,55,55,32,98,51,57,55,56,41,0,0,0,0};
static C_char C_TLS li369[] C_aligned={C_lihdr(0,0,20),40,97,50,53,54,54,48,32,97,51,57,55,57,32,98,51,57,56,48,41,0,0,0,0};
static C_char C_TLS li370[] C_aligned={C_lihdr(0,0,39),40,115,112,101,99,116,114,117,109,45,107,101,121,115,32,115,112,101,99,116,114,117,109,51,57,56,56,32,46,32,97,114,103,115,51,57,56,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li371[] C_aligned={C_lihdr(0,0,35),40,100,111,52,50,52,55,32,116,97,105,108,52,50,52,57,32,115,105,122,101,52,50,53,48,32,97,109,112,108,52,50,53,49,41,0,0,0};
static C_char C_TLS li372[] C_aligned={C_lihdr(0,0,26),40,100,111,52,50,50,53,32,105,52,50,50,55,32,102,52,50,50,56,32,120,52,50,50,57,41,0,0};
static C_char C_TLS li373[] C_aligned={C_lihdr(0,0,24),40,100,111,52,50,49,57,32,110,101,103,52,50,50,49,32,112,111,115,52,50,50,50,41};
static C_char C_TLS li374[] C_aligned={C_lihdr(0,0,26),40,100,111,52,50,48,55,32,107,52,50,48,57,32,102,52,50,49,48,32,97,52,50,49,49,41,0,0};
static C_char C_TLS li375[] C_aligned={C_lihdr(0,0,46),40,102,109,45,115,112,101,99,116,114,117,109,32,99,97,114,114,105,101,114,52,49,57,57,32,109,114,97,116,105,111,52,50,48,48,32,105,110,100,101,120,52,50,48,49,41,0,0,0,0,0,0};
static C_char C_TLS li376[] C_aligned={C_lihdr(0,0,47),40,100,111,52,50,56,53,32,102,114,101,113,115,52,50,56,55,32,97,109,112,115,52,50,56,56,32,108,97,115,116,102,52,50,56,57,32,108,97,115,116,97,52,50,57,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li377[] C_aligned={C_lihdr(0,0,41),40,115,112,101,99,116,114,117,109,45,97,100,100,33,32,115,112,101,99,52,50,56,50,32,102,114,101,113,52,50,56,51,32,97,109,112,52,50,56,52,41,0};
static C_char C_TLS li378[] C_aligned={C_lihdr(0,0,16),40,103,101,116,102,114,101,113,115,32,115,52,51,49,50,41};
static C_char C_TLS li379[] C_aligned={C_lihdr(0,0,15),40,103,101,116,97,109,112,115,32,115,52,51,49,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li380[] C_aligned={C_lihdr(0,0,36),40,115,117,109,115,45,97,110,100,45,100,105,102,102,115,32,115,52,51,49,52,32,102,49,52,51,49,53,32,102,50,52,51,49,55,41,0,0,0,0};
static C_char C_TLS li381[] C_aligned={C_lihdr(0,0,15),40,100,111,52,51,50,56,32,108,49,52,51,51,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li382[] C_aligned={C_lihdr(0,0,15),40,100,111,52,51,50,53,32,108,50,52,51,50,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li383[] C_aligned={C_lihdr(0,0,15),40,100,111,52,51,51,53,32,108,49,52,51,51,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li384[] C_aligned={C_lihdr(0,0,15),40,100,111,52,51,52,48,32,115,50,52,51,52,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li385[] C_aligned={C_lihdr(0,0,33),40,114,109,45,115,112,101,99,116,114,117,109,32,115,112,101,99,49,52,51,48,55,32,115,112,101,99,50,52,51,48,56,41,0};
static C_char C_TLS li386[] C_aligned={C_lihdr(0,0,44),40,100,111,52,51,52,55,32,109,97,120,102,52,51,52,57,32,109,105,110,102,52,51,53,48,32,116,97,105,108,52,51,53,49,32,102,108,105,112,52,51,53,50,41,0,0,0,0};
static C_char C_TLS li387[] C_aligned={C_lihdr(0,0,25),40,115,112,101,99,116,114,117,109,45,102,108,105,112,33,32,115,112,101,99,52,51,52,54,41,0};
static C_char C_TLS li388[] C_aligned={C_lihdr(0,0,17),40,100,111,52,51,54,54,32,116,97,105,108,52,51,54,56,41,0};
static C_char C_TLS li389[] C_aligned={C_lihdr(0,0,17),40,100,111,52,51,55,49,32,116,97,105,108,52,51,55,51,41,0};
static C_char C_TLS li390[] C_aligned={C_lihdr(0,0,26),40,100,111,52,50,54,57,32,116,97,105,108,52,50,55,49,32,97,109,112,108,52,50,55,50,41,0,0};
static C_char C_TLS li391[] C_aligned={C_lihdr(0,0,20),40,97,50,55,53,51,48,32,97,52,50,54,53,32,98,52,50,54,54,41,0,0,0,0};
static C_char C_TLS li392[] C_aligned={C_lihdr(0,0,20),40,97,50,55,53,52,52,32,97,52,50,54,51,32,98,52,50,54,52,41,0,0,0,0};
static C_char C_TLS li393[] C_aligned={C_lihdr(0,0,17),40,100,111,52,51,57,51,32,116,97,105,108,52,51,57,53,41,0};
static C_char C_TLS li394[] C_aligned={C_lihdr(0,0,17),40,100,111,52,51,57,56,32,116,97,105,108,52,52,48,48,41,0};
static C_char C_TLS li395[] C_aligned={C_lihdr(0,0,17),40,100,111,52,51,56,52,32,116,97,105,108,52,51,56,54,41,0};
static C_char C_TLS li396[] C_aligned={C_lihdr(0,0,23),40,100,111,55,50,48,32,116,97,105,108,55,50,50,32,102,108,97,103,55,50,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li397[] C_aligned={C_lihdr(0,0,48),40,115,112,101,99,116,114,117,109,45,114,101,115,99,97,108,101,33,32,115,112,101,99,52,51,53,54,32,109,111,100,101,52,51,53,55,32,46,32,97,114,103,115,52,51,53,56,41};
static C_char C_TLS li398[] C_aligned={C_lihdr(0,0,12),40,114,104,100,114,32,112,52,52,51,57,41,0,0,0,0};
static C_char C_TLS li399[] C_aligned={C_lihdr(0,0,12),40,114,100,97,116,32,112,52,52,49,56,41,0,0,0,0};
static C_char C_TLS li400[] C_aligned={C_lihdr(0,0,26),40,100,111,52,52,50,49,32,105,52,52,50,51,32,97,52,52,50,52,32,102,52,52,50,53,41,0,0};
static C_char C_TLS li401[] C_aligned={C_lihdr(0,0,26),40,100,111,52,52,53,50,32,108,105,110,101,52,52,53,52,32,115,112,101,99,52,52,53,53,41,0,0};
static C_char C_TLS li402[] C_aligned={C_lihdr(0,0,8),40,100,111,52,52,52,50,41};
static C_char C_TLS li403[] C_aligned={C_lihdr(0,0,8),40,97,50,56,53,50,53,41};
static C_char C_TLS li404[] C_aligned={C_lihdr(0,0,30),40,105,109,112,111,114,116,45,115,112,101,97,114,45,102,114,97,109,101,115,32,102,105,108,101,52,52,51,53,41,0,0,0,0,0,0};
static C_char C_TLS li405[] C_aligned={C_lihdr(0,0,36),40,100,111,52,52,55,55,32,102,114,101,113,115,52,52,55,57,32,97,109,112,115,52,52,56,48,32,115,105,122,101,52,52,56,49,41,0,0,0,0};
static C_char C_TLS li406[] C_aligned={C_lihdr(0,0,27),40,100,111,52,52,55,49,32,116,97,105,108,52,52,55,51,32,99,111,117,110,116,52,52,55,52,41,0,0,0};
static C_char C_TLS li407[] C_aligned={C_lihdr(0,0,8),40,97,50,56,54,54,48,41};
static C_char C_TLS li408[] C_aligned={C_lihdr(0,0,17),40,100,111,52,52,54,53,32,116,97,105,108,52,52,54,55,41,0};
static C_char C_TLS li409[] C_aligned={C_lihdr(0,0,41),40,101,120,112,111,114,116,45,115,112,101,97,114,45,102,114,97,109,101,115,32,102,114,97,109,101,115,52,52,54,49,32,102,105,108,101,52,52,54,50,41,0};
static C_char C_TLS li410[] C_aligned={C_lihdr(0,0,45),40,109,97,107,101,45,116,111,107,101,110,32,116,121,112,101,52,53,49,50,32,115,116,114,105,110,103,52,53,49,51,32,112,111,115,105,116,105,111,110,52,53,49,52,41,0,0,0,0,0};
static C_char C_TLS li411[] C_aligned={C_lihdr(0,0,18),40,116,111,107,101,110,45,116,121,112,101,32,120,52,53,49,57,41,0,0};
static C_char C_TLS li412[] C_aligned={C_lihdr(0,0,22),40,116,111,107,101,110,45,112,111,115,105,116,105,111,110,32,120,52,53,51,49,41,0,0,0,0,0,0};
static C_char C_TLS li413[] C_aligned={C_lihdr(0,0,19),40,108,105,115,116,45,62,116,111,107,101,110,32,108,52,53,51,56,41,0,0,0};
static C_char C_TLS li414[] C_aligned={C_lihdr(0,0,22),40,102,105,114,115,116,45,116,111,107,101,110,32,116,111,107,115,52,53,51,57,41,0,0,0,0,0,0};
static C_char C_TLS li415[] C_aligned={C_lihdr(0,0,23),40,110,117,108,108,45,116,111,107,101,110,115,63,32,116,111,107,115,52,53,52,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li416[] C_aligned={C_lihdr(0,0,63),40,109,97,107,101,45,114,117,108,101,32,110,97,109,101,52,53,52,50,32,116,121,112,101,52,53,52,51,32,112,97,116,116,101,114,110,52,53,52,52,32,112,97,114,115,101,114,52,53,52,53,32,101,109,105,116,101,114,52,53,52,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li417[] C_aligned={C_lihdr(0,0,18),40,103,101,116,45,114,117,108,101,32,116,121,112,52,53,57,51,41,0,0};
static C_char C_TLS li418[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,118,97,108,117,101,32,120,52,53,57,56,41,0,0,0,0,0};
static C_char C_TLS li419[] C_aligned={C_lihdr(0,0,23),40,112,97,116,116,101,114,110,45,99,108,97,117,115,101,63,32,120,52,53,57,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li420[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,117,98,115,32,120,52,54,48,49,41,0,0,0,0};
static C_char C_TLS li421[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,110,115,117,98,115,32,120,52,54,48,50,41,0,0,0,0,0};
static C_char C_TLS li422[] C_aligned={C_lihdr(0,0,25),40,112,97,116,116,101,114,110,45,115,117,98,32,120,52,54,48,51,32,105,52,54,48,52,41,0};
static C_char C_TLS li423[] C_aligned={C_lihdr(0,0,29),40,112,97,116,116,101,114,110,45,122,101,114,111,45,111,114,45,109,111,114,101,63,32,120,52,54,48,56,41,0,0,0,0,0};
static C_char C_TLS li424[] C_aligned={C_lihdr(0,0,42),40,109,97,107,101,45,112,97,114,115,101,45,101,114,114,111,114,32,115,116,114,105,110,103,52,54,49,48,32,112,111,115,105,116,105,111,110,52,54,49,49,41,0,0};
static C_char C_TLS li425[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,112,97,114,115,101,45,117,110,105,116,32,116,121,112,101,52,54,50,56,32,112,97,114,115,101,100,52,54,50,57,32,112,111,115,105,116,105,111,110,52,54,51,48,41,0,0};
static C_char C_TLS li426[] C_aligned={C_lihdr(0,0,19),40,112,97,114,115,101,45,117,110,105,116,63,32,120,52,54,51,49,41,0,0,0};
static C_char C_TLS li427[] C_aligned={C_lihdr(0,0,23),40,112,97,114,115,101,45,117,110,105,116,45,116,121,112,101,32,120,52,54,51,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li428[] C_aligned={C_lihdr(0,0,25),40,112,97,114,115,101,45,117,110,105,116,45,112,97,114,115,101,100,32,120,52,54,52,49,41,0};
static C_char C_TLS li429[] C_aligned={C_lihdr(0,0,27),40,112,97,114,115,101,45,117,110,105,116,45,112,111,115,105,116,105,111,110,32,120,52,54,52,55,41,0,0,0};
static C_char C_TLS li430[] C_aligned={C_lihdr(0,0,19),40,116,111,107,101,110,45,117,110,105,116,63,32,120,52,54,53,52,41,0,0,0};
static C_char C_TLS li431[] C_aligned={C_lihdr(0,0,33),40,116,111,107,101,110,45,117,110,105,116,45,116,121,112,101,61,63,32,120,52,54,53,53,32,116,121,112,52,54,53,54,41,0};
static C_char C_TLS li432[] C_aligned={C_lihdr(0,0,33),40,103,101,116,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,52,54,53,56,32,105,110,102,111,52,54,53,57,41,0};
static C_char C_TLS li433[] C_aligned={C_lihdr(0,0,42),40,97,100,100,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,52,54,54,49,32,100,97,116,97,52,54,54,50,32,105,110,102,111,52,54,54,51,41,0,0};
static C_char C_TLS li434[] C_aligned={C_lihdr(0,0,43),40,115,101,116,45,101,109,105,116,45,105,110,102,111,33,32,110,97,109,101,52,54,55,52,32,100,97,116,97,52,54,55,53,32,105,110,102,111,52,54,55,54,41,0,0,0};
static C_char C_TLS li435[] C_aligned={C_lihdr(0,0,30),40,101,109,105,116,32,120,52,54,55,57,32,105,110,102,111,52,54,56,48,32,101,114,114,102,52,54,56,49,41,0,0,0,0,0,0};
static C_char C_TLS li436[] C_aligned={C_lihdr(0,0,37),40,101,109,105,116,45,108,105,115,116,32,108,105,115,52,54,56,50,32,105,110,102,111,52,54,56,51,32,101,114,114,102,52,54,56,52,41,0,0,0,0,0};
static C_char C_TLS li437[] C_aligned={C_lihdr(0,0,15),40,33,61,32,46,32,110,117,109,115,52,54,56,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li438[] C_aligned={C_lihdr(0,0,27),40,102,95,50,57,54,57,57,32,97,114,103,115,52,54,57,55,32,101,114,114,102,52,54,57,56,41,0,0,0};
static C_char C_TLS li439[] C_aligned={C_lihdr(0,0,29),40,115,105,109,112,108,101,45,117,110,105,116,45,112,97,114,115,101,114,32,116,121,112,101,52,54,57,54,41,0,0,0,0,0};
static C_char C_TLS li440[] C_aligned={C_lihdr(0,0,17),40,100,111,52,55,48,54,32,116,97,105,108,52,55,48,56,41,0};
static C_char C_TLS li441[] C_aligned={C_lihdr(0,0,36),40,102,95,50,57,55,48,55,32,117,110,105,116,52,55,48,48,32,105,110,102,111,52,55,48,49,32,101,114,114,102,52,55,48,50,41,0,0,0,0};
static C_char C_TLS li442[] C_aligned={C_lihdr(0,0,30),40,115,105,109,112,108,101,45,117,110,105,116,45,101,109,105,116,116,101,114,32,102,117,110,99,52,54,57,57,41,0,0,0,0,0,0};
static C_char C_TLS li443[] C_aligned={C_lihdr(0,0,8),40,97,50,57,57,48,53,41};
static C_char C_TLS li444[] C_aligned={C_lihdr(0,0,26),40,97,50,57,57,49,53,32,97,52,55,51,56,32,98,52,55,51,57,32,99,52,55,52,48,41,0,0};
static C_char C_TLS li445[] C_aligned={C_lihdr(0,0,8),40,97,51,48,48,49,49,41};
static C_char C_TLS li446[] C_aligned={C_lihdr(0,0,26),40,97,51,48,48,50,53,32,97,52,55,53,52,32,98,52,55,53,53,32,99,52,55,53,54,41,0,0};
static C_char C_TLS li447[] C_aligned={C_lihdr(0,0,14),40,100,111,52,55,52,57,32,105,52,55,53,49,41,0,0,0,0,0,0};
static C_char C_TLS li448[] C_aligned={C_lihdr(0,0,8),40,97,51,48,48,55,56,41};
static C_char C_TLS li449[] C_aligned={C_lihdr(0,0,26),40,97,51,48,48,57,50,32,97,52,55,55,54,32,98,52,55,55,55,32,99,52,55,55,56,41,0,0};
static C_char C_TLS li450[] C_aligned={C_lihdr(0,0,14),40,100,111,52,55,55,49,32,105,52,55,55,51,41,0,0,0,0,0,0};
static C_char C_TLS li451[] C_aligned={C_lihdr(0,0,8),40,97,51,48,49,54,55,41};
static C_char C_TLS li452[] C_aligned={C_lihdr(0,0,26),40,97,51,48,49,55,51,32,97,52,55,57,53,32,98,52,55,57,54,32,99,52,55,57,55,41,0,0};
static C_char C_TLS li453[] C_aligned={C_lihdr(0,0,8),40,100,111,52,55,57,49,41};
static C_char C_TLS li454[] C_aligned={C_lihdr(0,0,8),40,97,51,48,50,48,54,41};
static C_char C_TLS li455[] C_aligned={C_lihdr(0,0,26),40,97,51,48,50,49,50,32,97,52,56,49,51,32,98,52,56,49,52,32,99,52,56,49,53,41,0,0};
static C_char C_TLS li456[] C_aligned={C_lihdr(0,0,70),40,112,97,114,115,101,114,32,112,97,116,52,55,50,53,32,116,111,107,101,110,115,52,55,50,54,32,102,111,114,99,101,45,97,110,100,52,55,50,55,32,108,101,118,101,108,52,55,50,56,32,116,114,97,99,101,52,55,50,57,32,101,114,114,102,52,55,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li457[] C_aligned={C_lihdr(0,0,21),40,83,97,108,84,111,107,101,110,84,121,112,101,63,32,105,52,57,57,48,41,0,0,0,0,0};
static C_char C_TLS li458[] C_aligned={C_lihdr(0,0,18),40,83,97,108,79,112,84,121,112,101,63,32,105,52,57,57,52,41,0,0};
static C_char C_TLS li459[] C_aligned={C_lihdr(0,0,20),40,83,97,108,82,117,108,101,84,121,112,101,63,32,105,53,48,48,51,41,0,0,0,0};
static C_char C_TLS li460[] C_aligned={C_lihdr(0,0,29),40,83,97,108,84,121,112,101,61,63,32,116,121,112,49,53,48,48,52,32,116,121,112,50,53,48,48,53,41,0,0,0,0,0};
static C_char C_TLS li461[] C_aligned={C_lihdr(0,0,17),40,100,111,53,48,53,52,32,116,111,107,115,53,48,53,54,41,0};
static C_char C_TLS li462[] C_aligned={C_lihdr(0,0,36),40,114,101,109,111,118,101,45,116,111,107,101,110,45,116,121,112,101,32,116,111,107,115,53,48,53,48,32,116,121,112,53,48,53,49,41,0,0,0,0};
static C_char C_TLS li463[] C_aligned={C_lihdr(0,0,14),40,105,115,45,111,112,63,32,120,53,48,56,49,41,0,0,0,0,0,0};
static C_char C_TLS li464[] C_aligned={C_lihdr(0,0,29),40,100,111,53,48,57,48,32,119,50,53,48,57,50,32,111,107,53,48,57,51,32,108,105,53,48,57,52,41,0,0,0,0,0};
static C_char C_TLS li465[] C_aligned={C_lihdr(0,0,8),40,100,111,53,48,56,56,41};
static C_char C_TLS li466[] C_aligned={C_lihdr(0,0,18),40,105,110,102,45,62,112,114,101,32,105,110,102,53,48,56,51,41,0,0};
static C_char C_TLS li467[] C_aligned={C_lihdr(0,0,38),40,115,97,108,45,112,97,114,115,101,45,115,116,101,112,112,105,110,103,32,97,114,103,115,53,50,52,56,32,101,114,114,102,53,50,52,57,41,0,0,0,0,0,0};
static C_char C_TLS li468[] C_aligned={C_lihdr(0,0,14),40,100,111,53,53,51,49,32,102,53,53,51,51,41,0,0,0,0,0,0};
static C_char C_TLS li469[] C_aligned={C_lihdr(0,0,14),40,100,111,53,53,50,52,32,102,53,53,50,54,41,0,0,0,0,0,0};
static C_char C_TLS li470[] C_aligned={C_lihdr(0,0,8),40,97,50,57,55,55,54,41};
static C_char C_TLS li471[] C_aligned={C_lihdr(0,0,44),40,97,50,57,55,56,51,32,115,117,99,99,101,115,115,52,55,50,48,32,114,101,115,117,108,116,115,52,55,50,49,32,114,101,109,97,105,110,115,52,55,50,50,41,0,0,0,0};
static C_char C_TLS li472[] C_aligned={C_lihdr(0,0,17),40,97,50,57,55,55,48,32,101,114,114,102,52,55,49,56,41,0};
static C_char C_TLS li473[] C_aligned={C_lihdr(0,0,24),40,115,97,108,32,115,116,114,53,52,51,55,32,46,32,97,114,103,115,53,52,51,56,41};
static C_char C_TLS li474[] C_aligned={C_lihdr(0,0,20),40,116,111,107,101,110,105,122,101,32,105,110,112,117,116,53,53,49,53,41,0,0,0,0};
static C_char C_TLS li475[] C_aligned={C_lihdr(0,0,17),40,100,111,53,53,53,50,32,116,97,105,108,53,53,53,52,41,0};
static C_char C_TLS li476[] C_aligned={C_lihdr(0,0,35),40,112,114,105,110,116,101,114,32,116,104,105,110,103,53,53,52,57,32,108,101,118,53,53,53,48,32,113,117,111,53,53,53,49,41,0,0,0};
static C_char C_TLS li477[] C_aligned={C_lihdr(0,0,17),40,100,111,53,53,54,48,32,116,97,105,108,53,53,54,50,41,0};
static C_char C_TLS li478[] C_aligned={C_lihdr(0,0,22),40,115,97,108,58,112,114,105,110,116,32,46,32,97,114,103,115,53,53,52,55,41,0,0,0,0,0,0};
static C_char C_TLS li479[] C_aligned={C_lihdr(0,0,20),40,115,97,108,58,99,104,100,105,114,32,112,97,116,104,53,53,54,55,41,0,0,0,0};
static C_char C_TLS li480[] C_aligned={C_lihdr(0,0,19),40,115,97,108,58,108,111,97,100,32,102,105,108,101,53,53,54,57,41,0,0,0};
static C_char C_TLS li481[] C_aligned={C_lihdr(0,0,21),40,115,97,108,58,111,112,101,110,32,46,32,97,114,103,115,53,53,55,51,41,0,0,0,0,0};
static C_char C_TLS li482[] C_aligned={C_lihdr(0,0,7),40,112,111,114,116,115,41,0,0,0,0,0,0,0};
static C_char C_TLS li483[] C_aligned={C_lihdr(0,0,30),40,111,112,101,110,45,102,105,108,101,32,115,116,114,53,54,57,51,32,46,32,97,114,103,115,53,54,57,52,41,0,0,0,0,0,0};
static C_char C_TLS li484[] C_aligned={C_lihdr(0,0,20),40,109,112,58,111,112,101,110,32,46,32,97,114,103,115,53,55,48,52,41,0,0,0,0};
static C_char C_TLS li485[] C_aligned={C_lihdr(0,0,24),40,109,112,58,111,112,101,110,45,111,117,116,112,117,116,32,100,101,118,53,55,52,54,41};
static C_char C_TLS li486[] C_aligned={C_lihdr(0,0,23),40,109,112,58,111,112,101,110,45,105,110,112,117,116,32,100,101,118,53,55,52,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li487[] C_aligned={C_lihdr(0,0,41),40,109,112,58,111,112,101,110,45,111,117,116,112,117,116,45,102,105,108,101,32,112,97,116,104,53,55,53,48,32,46,32,97,114,103,115,53,55,53,49,41,0};
static C_char C_TLS li488[] C_aligned={C_lihdr(0,0,20),40,109,112,58,109,105,100,105,32,46,32,97,114,103,115,53,55,53,50,41,0,0,0,0};
static C_char C_TLS li489[] C_aligned={C_lihdr(0,0,19),40,109,112,58,111,102,102,32,46,32,97,114,103,115,53,57,48,56,41,0,0,0};
static C_char C_TLS li490[] C_aligned={C_lihdr(0,0,18),40,109,112,58,111,110,32,46,32,97,114,103,115,53,57,56,48,41,0,0};
static C_char C_TLS li491[] C_aligned={C_lihdr(0,0,21),40,109,112,58,116,111,117,99,104,32,46,32,97,114,103,115,54,48,57,48,41,0,0,0,0,0};
static C_char C_TLS li492[] C_aligned={C_lihdr(0,0,20),40,109,112,58,99,116,114,108,32,46,32,97,114,103,115,54,50,48,48,41,0,0,0,0};
static C_char C_TLS li493[] C_aligned={C_lihdr(0,0,20),40,109,112,58,112,114,111,103,32,46,32,97,114,103,115,54,51,49,48,41,0,0,0,0};
static C_char C_TLS li494[] C_aligned={C_lihdr(0,0,21),40,109,112,58,112,114,101,115,115,32,46,32,97,114,103,115,54,51,56,50,41,0,0,0,0,0};
static C_char C_TLS li495[] C_aligned={C_lihdr(0,0,20),40,109,112,58,98,101,110,100,32,46,32,97,114,103,115,54,52,53,52,41,0,0,0,0};
static C_char C_TLS li496[] C_aligned={C_lihdr(0,0,22),40,109,112,58,116,117,110,105,110,103,32,46,32,97,114,103,115,54,53,50,54,41,0,0,0,0,0,0};
static C_char C_TLS li497[] C_aligned={C_lihdr(0,0,12),40,109,112,58,112,108,97,121,115,101,113,41,0,0,0,0};
static C_char C_TLS li498[] C_aligned={C_lihdr(0,0,12),40,109,112,58,115,97,118,101,115,101,113,41,0,0,0,0};
static C_char C_TLS li499[] C_aligned={C_lihdr(0,0,12),40,109,112,58,99,111,112,121,115,101,113,41,0,0,0,0};
static C_char C_TLS li500[] C_aligned={C_lihdr(0,0,12),40,109,112,58,112,108,111,116,115,101,113,41,0,0,0,0};
static C_char C_TLS li501[] C_aligned={C_lihdr(0,0,13),40,109,112,58,99,108,101,97,114,115,101,113,41,0,0,0,0,0};
static C_char C_TLS li502[] C_aligned={C_lihdr(0,0,25),40,109,112,58,114,101,99,111,114,100,115,101,113,32,46,32,97,114,103,115,54,53,50,56,41,0};
static C_char C_TLS li503[] C_aligned={C_lihdr(0,0,18),40,97,55,49,48,52,32,36,101,114,114,97,114,103,36,50,52,41,0,0};
static C_char C_TLS li504[] C_aligned={C_lihdr(0,0,7),40,97,55,49,50,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li505[] C_aligned={C_lihdr(0,0,15),40,97,55,48,57,56,32,37,99,111,110,116,50,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li506[] C_aligned={C_lihdr(0,0,36),40,102,95,55,48,57,51,32,36,111,112,36,49,57,32,36,99,104,36,50,48,32,36,100,49,36,50,49,32,36,100,50,36,50,50,41,0,0,0,0};
static C_char C_TLS li507[] C_aligned={C_lihdr(0,0,20),40,109,112,58,105,110,104,111,111,107,32,104,111,111,107,54,53,51,48,41,0,0,0,0};
static C_char C_TLS li508[] C_aligned={C_lihdr(0,0,14),40,100,111,54,53,51,51,32,97,54,53,51,53,41,0,0,0,0,0,0};
static C_char C_TLS li509[] C_aligned={C_lihdr(0,0,23),40,109,112,58,105,110,99,104,97,110,115,32,46,32,97,114,103,115,54,53,51,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li510[] C_aligned={C_lihdr(0,0,14),40,100,111,54,53,52,49,32,97,54,53,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li511[] C_aligned={C_lihdr(0,0,21),40,109,112,58,105,110,111,112,115,32,46,32,97,114,103,115,54,53,51,57,41,0,0,0,0,0};
static C_char C_TLS li512[] C_aligned={C_lihdr(0,0,42),40,115,110,100,58,111,112,101,110,45,111,117,116,112,117,116,45,102,105,108,101,32,102,105,108,101,54,53,52,57,32,46,32,97,114,103,115,54,53,53,48,41,0,0};
static C_char C_TLS li513[] C_aligned={C_lihdr(0,0,26),40,100,111,54,53,54,54,32,116,97,105,108,54,53,54,56,32,97,114,103,110,54,53,54,57,41,0,0};
static C_char C_TLS li514[] C_aligned={C_lihdr(0,0,41),40,99,115,58,111,112,101,110,45,111,117,116,112,117,116,45,102,105,108,101,32,112,97,116,104,54,53,54,51,32,46,32,97,114,103,115,54,53,54,52,41,0};
static C_char C_TLS li515[] C_aligned={C_lihdr(0,0,26),40,100,111,54,53,56,54,32,116,97,105,108,54,53,56,56,32,100,101,108,109,54,53,56,57,41,0,0};
static C_char C_TLS li516[] C_aligned={C_lihdr(0,0,27),40,99,115,58,115,101,110,100,32,116,121,112,101,54,53,55,57,32,97,114,103,115,54,53,56,48,41,0,0,0};
static C_char C_TLS li517[] C_aligned={C_lihdr(0,0,17),40,99,115,58,105,32,46,32,97,114,103,115,54,53,57,53,41,0};
static C_char C_TLS li518[] C_aligned={C_lihdr(0,0,17),40,99,115,58,102,32,46,32,97,114,103,115,54,53,57,54,41,0};
static C_char C_TLS li519[] C_aligned={C_lihdr(0,0,46),40,101,120,112,97,110,100,45,115,101,110,100,32,112,108,97,99,101,54,54,48,54,32,97,114,103,115,54,54,48,55,32,46,32,101,114,114,99,111,110,116,54,54,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li520[] C_aligned={C_lihdr(0,0,18),40,100,111,54,54,53,49,32,99,104,101,99,107,54,54,53,51,41,0,0};
static C_char C_TLS li521[] C_aligned={C_lihdr(0,0,8),40,100,111,54,54,52,51,41};
static C_char C_TLS li522[] C_aligned={C_lihdr(0,0,8),40,100,111,54,54,51,55,41};
static C_char C_TLS li523[] C_aligned={C_lihdr(0,0,17),40,100,111,54,54,50,57,32,116,97,105,108,54,54,51,49,41,0};
static C_char C_TLS li524[] C_aligned={C_lihdr(0,0,19),40,97,51,57,51,48,53,32,114,101,116,117,114,110,54,54,50,54,41,0,0,0};
static C_char C_TLS li525[] C_aligned={C_lihdr(0,0,18),40,102,95,51,57,51,48,48,32,97,114,103,115,54,54,50,53,41,0,0};
static C_char C_TLS li526[] C_aligned={C_lihdr(0,0,26),40,100,111,54,54,49,56,32,116,97,105,108,54,54,50,48,32,109,111,100,101,54,54,50,49,41,0,0};
static C_char C_TLS li527[] C_aligned={C_lihdr(0,0,34),40,109,97,107,101,45,109,101,115,115,97,103,101,45,112,97,114,115,101,114,32,116,101,109,112,108,97,116,101,54,54,49,50,41,0,0};
static C_char C_TLS li528[] C_aligned={C_lihdr(0,0,47),40,114,117,110,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,54,55,56,57,32,99,108,97,117,115,101,115,54,55,57,48,32,111,112,115,54,55,57,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li529[] C_aligned={C_lihdr(0,0,44),40,112,114,111,99,101,115,115,45,99,111,100,101,45,116,101,114,109,105,110,97,116,101,115,63,32,99,111,100,101,54,56,49,57,32,115,116,111,112,54,56,50,48,41,0,0,0,0};
static C_char C_TLS li530[] C_aligned={C_lihdr(0,0,26),40,101,120,112,97,110,100,45,112,114,111,99,101,115,115,32,102,111,114,109,115,54,56,50,51,41,0,0};
static C_char C_TLS li531[] C_aligned={C_lihdr(0,0,11),40,110,101,120,116,115,116,97,114,116,41,0,0,0};
static C_char C_TLS li532[] C_aligned={C_lihdr(0,0,8),40,110,101,120,116,105,100,41};
static C_char C_TLS li533[] C_aligned={C_lihdr(0,0,14),40,100,111,54,56,56,56,32,112,54,56,57,48,41,0,0,0,0,0,0};
static C_char C_TLS li534[] C_aligned={C_lihdr(0,0,17),40,100,111,54,56,55,55,32,116,97,105,108,54,56,55,57,41,0};
static C_char C_TLS li535[] C_aligned={C_lihdr(0,0,17),40,100,111,54,56,54,54,32,116,97,105,108,54,56,54,56,41,0};
static C_char C_TLS li536[] C_aligned={C_lihdr(0,0,26),40,100,111,54,56,53,52,32,116,97,105,108,54,56,53,54,32,97,114,103,110,54,56,53,55,41,0,0};
static C_char C_TLS li537[] C_aligned={C_lihdr(0,0,17),40,100,111,54,56,52,57,32,116,97,105,108,54,56,53,49,41,0};
static C_char C_TLS li538[] C_aligned={C_lihdr(0,0,28),40,115,112,114,111,117,116,32,112,114,111,99,54,56,52,48,32,46,32,97,114,103,115,54,56,52,49,41,0,0,0,0};
static C_char C_TLS li539[] C_aligned={C_lihdr(0,0,5),40,110,111,119,41,0,0,0,0,0};
static C_char C_TLS li540[] C_aligned={C_lihdr(0,0,7),40,112,97,117,115,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li541[] C_aligned={C_lihdr(0,0,9),40,112,97,117,115,101,100,63,41,0};
static C_char C_TLS li542[] C_aligned={C_lihdr(0,0,10),40,99,111,110,116,105,110,117,101,41,0,0};
static C_char C_TLS li543[] C_aligned={C_lihdr(0,0,17),40,100,111,54,57,48,48,32,116,97,105,108,54,57,48,50,41,0};
static C_char C_TLS li544[] C_aligned={C_lihdr(0,0,19),40,115,116,111,112,32,46,32,112,114,111,99,105,100,54,56,57,57,41,0,0,0};
static C_char C_TLS li545[] C_aligned={C_lihdr(0,0,6),40,104,117,115,104,41,0,0,0,0,0,0};
static C_char C_TLS li546[] C_aligned={C_lihdr(0,0,31),40,97,52,48,54,51,57,32,102,111,114,109,97,108,115,54,56,51,55,32,46,32,98,111,100,121,54,56,51,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li547[] C_aligned={C_lihdr(0,0,17),40,97,52,48,54,54,56,32,97,114,103,115,54,56,51,54,41,0};
static C_char C_TLS li548[] C_aligned={C_lihdr(0,0,16),40,100,111,54,56,49,50,32,111,112,115,54,56,49,52,41};
static C_char C_TLS li549[] C_aligned={C_lihdr(0,0,25),40,97,52,48,57,49,51,32,109,115,103,54,54,48,51,32,112,97,114,115,54,54,48,52,41,0};
static C_char C_TLS li550[] C_aligned={C_lihdr(0,0,29),40,97,52,48,57,52,50,32,112,108,97,99,101,54,54,48,49,32,46,32,97,114,103,115,54,54,48,50,41,0,0,0,0,0};
static C_char C_TLS li551[] C_aligned={C_lihdr(0,0,26),40,97,52,48,57,53,54,32,97,114,103,115,53,52,51,50,32,101,114,114,102,53,52,51,51,41,0,0};
static C_char C_TLS li552[] C_aligned={C_lihdr(0,0,35),40,97,52,48,57,55,48,32,117,110,105,116,53,52,51,52,32,105,110,102,111,53,52,51,53,32,101,114,114,102,53,52,51,54,41,0,0,0};
static C_char C_TLS li553[] C_aligned={C_lihdr(0,0,26),40,97,52,49,48,55,54,32,97,114,103,115,53,51,56,49,32,101,114,114,102,53,51,56,50,41,0,0};
static C_char C_TLS li554[] C_aligned={C_lihdr(0,0,17),40,100,111,53,51,57,51,32,114,101,115,116,53,51,57,53,41,0};
static C_char C_TLS li555[] C_aligned={C_lihdr(0,0,26),40,100,111,53,52,49,57,32,97,114,103,115,53,52,50,49,32,116,97,105,108,53,52,50,50,41,0,0};
static C_char C_TLS li556[] C_aligned={C_lihdr(0,0,35),40,97,52,49,49,49,53,32,117,110,105,116,53,51,56,54,32,105,110,102,111,53,51,56,55,32,101,114,114,102,53,51,56,56,41,0,0,0};
static C_char C_TLS li557[] C_aligned={C_lihdr(0,0,26),40,97,52,49,53,51,51,32,97,114,103,115,53,51,55,52,32,101,114,114,102,53,51,55,53,41,0,0};
static C_char C_TLS li558[] C_aligned={C_lihdr(0,0,26),40,97,52,49,54,55,56,32,97,114,103,115,53,51,54,48,32,101,114,114,102,53,51,54,49,41,0,0};
static C_char C_TLS li559[] C_aligned={C_lihdr(0,0,17),40,100,111,53,51,51,57,32,116,97,105,108,53,51,52,49,41,0};
static C_char C_TLS li560[] C_aligned={C_lihdr(0,0,17),40,100,111,53,51,51,50,32,116,97,105,108,53,51,51,52,41,0};
static C_char C_TLS li561[] C_aligned={C_lihdr(0,0,20),40,100,111,53,51,50,49,32,99,108,97,117,115,101,115,53,51,50,51,41,0,0,0,0};
static C_char C_TLS li562[] C_aligned={C_lihdr(0,0,17),40,100,111,53,51,49,56,32,116,97,105,108,53,51,50,48,41,0};
static C_char C_TLS li563[] C_aligned={C_lihdr(0,0,35),40,97,52,49,55,50,52,32,117,110,105,116,53,51,55,48,32,105,110,102,111,53,51,55,49,32,101,114,114,102,53,51,55,50,41,0,0,0};
static C_char C_TLS li564[] C_aligned={C_lihdr(0,0,26),40,97,52,50,49,55,56,32,97,114,103,115,53,50,51,50,32,101,114,114,102,53,50,51,51,41,0,0};
static C_char C_TLS li565[] C_aligned={C_lihdr(0,0,35),40,97,52,50,50,52,54,32,117,110,105,116,53,50,52,52,32,105,110,102,111,53,50,52,53,32,101,114,114,102,53,50,52,54,41,0,0,0};
static C_char C_TLS li566[] C_aligned={C_lihdr(0,0,26),40,97,52,50,52,51,55,32,97,114,103,115,53,50,50,48,32,101,114,114,102,53,50,50,49,41,0,0};
static C_char C_TLS li567[] C_aligned={C_lihdr(0,0,35),40,97,52,50,52,54,51,32,117,110,105,116,53,50,50,53,32,105,110,102,111,53,50,50,54,32,101,114,114,102,53,50,50,55,41,0,0,0};
static C_char C_TLS li568[] C_aligned={C_lihdr(0,0,26),40,97,52,50,53,53,49,32,97,114,103,115,53,49,57,56,32,101,114,114,102,53,49,57,57,41,0,0};
static C_char C_TLS li569[] C_aligned={C_lihdr(0,0,17),40,100,111,53,50,48,54,32,105,116,101,114,53,50,48,56,41,0};
static C_char C_TLS li570[] C_aligned={C_lihdr(0,0,35),40,97,52,50,53,57,52,32,117,110,105,116,53,50,48,48,32,105,110,102,111,53,50,48,49,32,101,114,114,102,53,50,48,50,41,0,0,0};
static C_char C_TLS li571[] C_aligned={C_lihdr(0,0,26),40,97,52,50,56,51,49,32,97,114,103,115,53,49,57,53,32,101,114,114,102,53,49,57,54,41,0,0};
static C_char C_TLS li572[] C_aligned={C_lihdr(0,0,26),40,97,52,50,57,49,55,32,97,114,103,115,53,49,56,55,32,101,114,114,102,53,49,56,56,41,0,0};
static C_char C_TLS li573[] C_aligned={C_lihdr(0,0,14),40,97,52,50,57,54,57,32,101,53,49,57,51,41,0,0,0,0,0,0};
static C_char C_TLS li574[] C_aligned={C_lihdr(0,0,35),40,97,52,50,57,54,48,32,117,110,105,116,53,49,56,57,32,105,110,102,111,53,49,57,48,32,101,114,114,102,53,49,57,49,41,0,0,0};
static C_char C_TLS li575[] C_aligned={C_lihdr(0,0,26),40,97,52,51,48,49,57,32,97,114,103,115,53,49,56,48,32,101,114,114,102,53,49,56,49,41,0,0};
static C_char C_TLS li576[] C_aligned={C_lihdr(0,0,14),40,97,52,51,48,54,48,32,101,53,49,56,53,41,0,0,0,0,0,0};
static C_char C_TLS li577[] C_aligned={C_lihdr(0,0,35),40,97,52,51,48,53,52,32,117,110,105,116,53,49,56,50,32,105,110,102,111,53,49,56,51,32,101,114,114,102,53,49,56,52,41,0,0,0};
static C_char C_TLS li578[] C_aligned={C_lihdr(0,0,35),40,97,52,51,49,49,52,32,117,110,105,116,53,49,55,51,32,105,110,102,111,53,49,55,52,32,101,114,114,102,53,49,55,53,41,0,0,0};
static C_char C_TLS li579[] C_aligned={C_lihdr(0,0,35),40,97,52,51,49,55,53,32,117,110,105,116,53,49,54,55,32,105,110,102,111,53,49,54,56,32,101,114,114,102,53,49,54,57,41,0,0,0};
static C_char C_TLS li580[] C_aligned={C_lihdr(0,0,26),40,97,52,51,50,50,57,32,97,114,103,115,53,49,54,49,32,101,114,114,102,53,49,54,50,41,0,0};
static C_char C_TLS li581[] C_aligned={C_lihdr(0,0,35),40,97,52,51,50,53,57,32,117,110,105,116,53,49,54,51,32,105,110,102,111,53,49,54,52,32,101,114,114,102,53,49,54,53,41,0,0,0};
static C_char C_TLS li582[] C_aligned={C_lihdr(0,0,26),40,97,52,51,52,55,56,32,97,114,103,115,53,49,53,52,32,101,114,114,102,53,49,53,53,41,0,0};
static C_char C_TLS li583[] C_aligned={C_lihdr(0,0,26),40,97,52,51,53,48,52,32,97,114,103,115,53,49,52,50,32,101,114,114,102,53,49,52,51,41,0,0};
static C_char C_TLS li584[] C_aligned={C_lihdr(0,0,16),40,97,52,51,53,57,57,32,115,116,114,53,49,53,50,41};
static C_char C_TLS li585[] C_aligned={C_lihdr(0,0,35),40,97,52,51,53,55,57,32,117,110,105,116,53,49,52,55,32,105,110,102,111,53,49,52,56,32,101,114,114,102,53,49,52,57,41,0,0,0};
static C_char C_TLS li586[] C_aligned={C_lihdr(0,0,26),40,97,52,51,55,49,51,32,97,114,103,115,53,49,51,53,32,101,114,114,102,53,49,51,54,41,0,0};
static C_char C_TLS li587[] C_aligned={C_lihdr(0,0,35),40,97,52,51,55,52,55,32,117,110,105,116,53,49,51,55,32,105,110,102,111,53,49,51,56,32,101,114,114,102,53,49,51,57,41,0,0,0};
static C_char C_TLS li588[] C_aligned={C_lihdr(0,0,26),40,97,52,51,56,50,52,32,97,114,103,115,53,49,50,49,32,101,114,114,102,53,49,50,50,41,0,0};
static C_char C_TLS li589[] C_aligned={C_lihdr(0,0,17),40,100,111,53,49,50,56,32,97,114,103,115,53,49,51,48,41,0};
static C_char C_TLS li590[] C_aligned={C_lihdr(0,0,35),40,97,52,51,56,52,54,32,117,110,105,116,53,49,50,51,32,105,110,102,111,53,49,50,52,32,101,114,114,102,53,49,50,53,41,0,0,0};
static C_char C_TLS li591[] C_aligned={C_lihdr(0,0,26),40,97,52,51,57,55,56,32,97,114,103,115,53,49,49,52,32,101,114,114,102,53,49,49,53,41,0,0};
static C_char C_TLS li592[] C_aligned={C_lihdr(0,0,35),40,97,52,52,48,48,52,32,117,110,105,116,53,49,49,54,32,105,110,102,111,53,49,49,55,32,101,114,114,102,53,49,49,56,41,0,0,0};
static C_char C_TLS li593[] C_aligned={C_lihdr(0,0,26),40,97,52,52,49,49,52,32,97,114,103,115,53,49,49,48,32,101,114,114,102,53,49,49,49,41,0,0};
static C_char C_TLS li594[] C_aligned={C_lihdr(0,0,26),40,97,52,52,50,55,48,32,97,114,103,115,53,48,55,51,32,101,114,114,102,53,48,55,52,41,0,0};
static C_char C_TLS li595[] C_aligned={C_lihdr(0,0,35),40,97,52,52,50,56,56,32,117,110,105,116,53,48,55,53,32,105,110,102,111,53,48,55,54,32,101,114,114,102,53,48,55,55,41,0,0,0};
static C_char C_TLS li596[] C_aligned={C_lihdr(0,0,26),40,97,52,52,51,52,49,32,97,114,103,115,53,48,54,55,32,101,114,114,102,53,48,54,56,41,0,0};
static C_char C_TLS li597[] C_aligned={C_lihdr(0,0,26),40,97,52,52,52,57,51,32,97,114,103,115,53,48,54,52,32,101,114,114,102,53,48,54,53,41,0,0};
static C_char C_TLS li598[] C_aligned={C_lihdr(0,0,26),40,97,52,52,54,51,50,32,97,114,103,115,53,48,54,49,32,101,114,114,102,53,48,54,50,41,0,0};
static C_char C_TLS li599[] C_aligned={C_lihdr(0,0,26),40,97,52,52,55,53,50,32,97,114,103,115,53,48,52,48,32,101,114,114,102,53,48,52,49,41,0,0};
static C_char C_TLS li600[] C_aligned={C_lihdr(0,0,35),40,97,52,52,55,56,51,32,117,110,105,116,53,48,52,51,32,105,110,102,111,53,48,52,52,32,101,114,114,102,53,48,52,53,41,0,0,0};
static C_char C_TLS li601[] C_aligned={C_lihdr(0,0,26),40,97,52,52,56,55,53,32,97,114,103,115,53,48,51,52,32,101,114,114,102,53,48,51,53,41,0,0};
static C_char C_TLS li602[] C_aligned={C_lihdr(0,0,35),40,97,52,52,56,57,51,32,117,110,105,116,53,48,51,54,32,105,110,102,111,53,48,51,55,32,101,114,114,102,53,48,51,56,41,0,0,0};
static C_char C_TLS li603[] C_aligned={C_lihdr(0,0,17),40,100,111,52,54,54,56,32,100,97,116,97,52,54,55,48,41,0};
static C_char C_TLS li604[] C_aligned={C_lihdr(0,0,35),40,97,52,52,57,54,55,32,117,110,105,116,53,48,50,51,32,105,110,102,111,53,48,50,52,32,101,114,114,102,53,48,50,53,41,0,0,0};
static C_char C_TLS li605[] C_aligned={C_lihdr(0,0,26),40,97,52,53,48,54,55,32,97,114,103,115,53,48,49,49,32,101,114,114,102,53,48,49,50,41,0,0};
static C_char C_TLS li606[] C_aligned={C_lihdr(0,0,35),40,97,52,53,48,55,55,32,117,110,105,116,53,48,49,51,32,105,110,102,111,53,48,49,52,32,101,114,114,102,53,48,49,53,41,0,0,0};
static C_char C_TLS li607[] C_aligned={C_lihdr(0,0,12),40,112,112,97,116,32,112,52,53,56,57,41,0,0,0,0};
static C_char C_TLS li608[] C_aligned={C_lihdr(0,0,35),40,97,52,53,50,53,51,32,116,121,112,52,53,56,53,32,112,97,116,52,53,56,54,32,46,32,97,114,103,115,52,53,56,55,41,0,0,0};
static C_char C_TLS li609[] C_aligned={C_lihdr(0,0,17),40,97,52,53,51,53,54,32,101,120,112,114,51,54,54,57,41,0};
static C_char C_TLS li610[] C_aligned={C_lihdr(0,0,32),40,100,111,51,53,57,57,32,105,51,54,48,49,32,120,51,54,48,50,32,100,51,54,48,51,32,114,51,54,48,52,41};
static C_char C_TLS li611[] C_aligned={C_lihdr(0,0,14),40,97,52,53,51,54,50,32,101,51,53,57,53,41,0,0,0,0,0,0};
static C_char C_TLS li612[] C_aligned={C_lihdr(0,0,84),40,100,111,51,52,53,52,32,100,51,52,53,54,32,107,51,52,53,55,32,112,51,52,53,56,32,107,60,51,52,53,57,32,107,62,51,52,54,48,32,102,51,52,54,49,32,102,62,51,52,54,50,32,102,60,51,52,54,51,32,111,51,52,54,52,32,120,51,52,54,53,32,110,51,52,54,54,32,101,51,52,54,55,41,0,0,0,0};
static C_char C_TLS li613[] C_aligned={C_lihdr(0,0,16),40,100,111,51,52,52,56,32,107,101,121,51,52,53,48,41};
static C_char C_TLS li614[] C_aligned={C_lihdr(0,0,17),40,97,52,53,54,56,53,32,97,114,103,115,49,53,51,51,41,0};
static C_char C_TLS li615[] C_aligned={C_lihdr(0,0,15),40,97,52,53,56,50,55,32,115,121,109,56,52,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li616[] C_aligned={C_lihdr(0,0,15),40,97,52,53,56,51,48,32,115,121,109,56,52,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li617[] C_aligned={C_lihdr(0,0,22),40,97,52,53,56,53,57,32,118,97,108,56,52,50,32,115,121,109,56,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li618[] C_aligned={C_lihdr(0,0,16),40,97,52,53,56,55,51,32,97,114,103,115,56,52,49,41};
static C_char C_TLS li619[] C_aligned={C_lihdr(0,0,26),40,97,52,53,56,55,57,32,115,112,101,99,56,48,54,32,46,32,98,111,100,121,56,48,55,41,0,0};
static C_char C_TLS li620[] C_aligned={C_lihdr(0,0,10),40,116,111,112,108,101,118,101,108,41,0,0};


/* from k8022 */
static C_word C_fcall stub533(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub533(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
fms_xml(t0);
return C_r;}

/* from ffi_fms_run */
static C_word C_fcall stub530(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub530(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
fms_run();
return C_r;}

/* from k8005 */
static C_word C_fcall stub525(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub525(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
fms_load(t0);
return C_r;}

/* from k7998 */
static C_word C_fcall stub520(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub520(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
fms_act(t0,t1);
return C_r;}

/* from k7980 */
static C_word C_fcall stub511(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub511(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
char * t2=(char * )C_string_or_null(C_a2);
fms_sval(t0,t1,t2);
return C_r;}

/* from k7965 */
static C_word C_fcall stub503(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub503(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
double t2=(double )C_c_double(C_a2);
fms_fval(t0,t1,t2);
return C_r;}

/* from k7950 */
static C_word C_fcall stub493(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub493(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
fms_mval(t0,t1,t2,t3,t4);
return C_r;}

/* from k7927 */
static C_word C_fcall stub482(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub482(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
fms_rval(t0,t1,t2,t3);
return C_r;}

/* from k7908 */
static C_word C_fcall stub473(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub473(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
fms_ival(t0,t1,t2);
return C_r;}

/* from ffi_fms_clear */
static C_word C_fcall stub468(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub468(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
fms_clear();
return C_r;}

/* from ffi_fms_free */
static C_word C_fcall stub466(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub466(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
fms_free();
return C_r;}

/* from ffi_fms_new */
static C_word C_fcall stub464(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub464(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
fms_new();
return C_r;}

/* from ffi_fms_init */
static C_word C_fcall stub462(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub462(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
fms_init();
return C_r;}

/* from k7874 in do6586 in k38965 in k38962 in k38959 in cs:send in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static C_word C_fcall stub454(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub454(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
double t2=(double )C_c_double(C_a2);
char * t3=(char * )C_string_or_null(C_a3);
cs_send_score(t0,t1,t2,t3);
return C_r;}

/* from k7848 in do6566 in k38790 in k38787 in cs:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static C_word C_fcall stub445(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub445(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
cs_init_score(t0);
return C_r;}

/* from ffi_mp_clear_midi_input_hook */
static C_word C_fcall stub442(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub442(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_clear_midi_input_hook();
return C_r;}

/* from ffi_mp_set_midi_input_hook */
static C_word C_fcall stub439(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub439(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
mp_set_midi_input_hook(t0);
return C_r;}

/* from ffi_mp_clear_seq */
static C_word C_fcall stub436(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub436(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_clear_seq();
return C_r;}

/* from ffi_mp_plot_seq */
static C_word C_fcall stub434(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub434(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_plot_seq();
return C_r;}

/* from ffi_mp_copy_seq */
static C_word C_fcall stub432(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub432(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_copy_seq();
return C_r;}

/* from ffi_mp_save_seq */
static C_word C_fcall stub430(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub430(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_save_seq();
return C_r;}

/* from ffi_mp_play_seq */
static C_word C_fcall stub428(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub428(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_play_seq();
return C_r;}

/* from k7820 */
static C_word C_fcall stub425(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub425(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_set_tuning(t0);
return C_r;}

/* from k7813 */
static C_word C_fcall stub421(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub421(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_set_message_mask(t0);
return C_r;}

/* from k7806 */
static C_word C_fcall stub417(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub417(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_set_channel_mask(t0);
return C_r;}

/* from k7799 */
static C_word C_fcall stub409(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub409(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
double t2=(double )C_c_double(C_a2);
double t3=(double )C_c_double(C_a3);
double t4=(double )C_c_double(C_a4);
mp_send_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k7776 */
static C_word C_fcall stub397(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub397(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
double t2=(double )C_c_double(C_a2);
double t3=(double )C_c_double(C_a3);
double t4=(double )C_c_double(C_a4);
mp_send_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k7746 in mp:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static C_word C_fcall stub387(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub387(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
mp_set_output_file(t0);
return C_r;}

/* from k7739 */
static C_word C_fcall stub383(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub383(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_close_input(t0);
return C_r;}

/* from k7732 */
static C_word C_fcall stub379(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub379(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_close_output(t0);
return C_r;}

/* from k7725 */
static C_word C_fcall stub375(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub375(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_mk_bool(mp_open_input(t0));
return C_r;}

/* from k7718 */
static C_word C_fcall stub371(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub371(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_mk_bool(mp_open_output(t0));
return C_r;}

/* from ffi_port_info */
static C_word C_fcall stub367(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub367(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)cm_port_info());
return C_r;}

/* from k7698 in tokenize in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static C_word C_fcall stub361(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub361(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mpointer(&C_a,(void*)sal_tokenize(t0));
return C_r;}

/* from k7680 */
static C_word C_fcall stub355(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub355(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mk_bool(cm_pathname_directory_p(t0));
return C_r;}

/* from k7666 in k32878 in k32875 in open-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static C_word C_fcall stub349(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub349(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mk_bool(cm_pathname_writable_p(t0));
return C_r;}

/* from k7652 in sal:load in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static C_word C_fcall stub343(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub343(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mk_bool(cm_pathname_exists_p(t0));
return C_r;}

/* from k7638 in full-pathname in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static C_word C_fcall stub336(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub336(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mpointer(&C_a,(void*)cm_full_pathname(t0));
return C_r;}

/* from k7620 in ffi_pathname_type in k7130 in k6947 in k6944 in k6941 in k6938 */
static C_word C_fcall stub329(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub329(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mpointer(&C_a,(void*)cm_pathname_type(t0));
return C_r;}

/* from k7602 */
static C_word C_fcall stub322(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub322(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mpointer(&C_a,(void*)cm_pathname_name(t0));
return C_r;}

/* from k7584 */
static C_word C_fcall stub315(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub315(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mpointer(&C_a,(void*)cm_pathname_directory(t0));
return C_r;}

/* from k7566 in chdir in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static C_word C_fcall stub309(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub309(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
C_r=C_mk_bool(cm_set_current_directory(t0));
return C_r;}

/* from ffi_current_directory */
static C_word C_fcall stub305(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub305(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)cm_current_directory());
return C_r;}

/* from ffi_temp_directory */
static C_word C_fcall stub302(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub302(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)cm_temp_directory());
return C_r;}

/* from ffi_user_home_directory */
static C_word C_fcall stub299(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub299(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)cm_user_home_directory());
return C_r;}

/* from ffi_sched_score_time */
static C_word C_fcall stub296(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub296(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_sched_score_time());
return C_r;}

/* from k7538 */
static C_word C_fcall stub293(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub293(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
cm_sched_set_score_mode(t0);
return C_r;}

/* from ffi_sched_score_mode_p */
static C_word C_fcall stub290(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub290(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mk_bool(cm_sched_score_mode_p());
return C_r;}

/* from ffi_sched_busy_p */
static C_word C_fcall stub288(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub288(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mk_bool(cm_sched_busy_p());
return C_r;}

/* from k7525 */
static C_word C_fcall stub285(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub285(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
cm_sched_stop(t0);
return C_r;}

/* from ffi_sched_continue */
static C_word C_fcall stub282(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub282(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cm_sched_continue();
return C_r;}

/* from ffi_sched_pause */
static C_word C_fcall stub280(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub280(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cm_sched_pause();
return C_r;}

/* from ffi_sched_paused_p */
static C_word C_fcall stub278(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub278(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mk_bool(cm_sched_paused_p());
return C_r;}

/* from k7509 */
static C_word C_fcall stub273(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub273(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
cm_sched_sprout(t0,t1,t2);
return C_r;}

/* from ffi_now */
static C_word C_fcall stub267(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub267(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_now());
return C_r;}

/* from k7495 */
static C_word C_fcall stub263(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub263(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_log_two(t0));
return C_r;}

/* from k7488 */
static C_word C_fcall stub258(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub258(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_log_ten(t0));
return C_r;}

/* from k7481 */
static C_word C_fcall stub252(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub252(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
C_r=C_flonum(&C_a,cm_bes_jn(t0,t1));
return C_r;}

/* from ffi_ranbrown in k7130 in k6947 in k6944 in k6941 in k6938 */
static C_word C_fcall stub247(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub247(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_ranbrown());
return C_r;}

/* from ffi_ranpink in k7130 in k6947 in k6944 in k6941 in k6938 */
static C_word C_fcall stub244(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub244(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_ranpink());
return C_r;}

/* from k7464 */
static C_word C_fcall stub241(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub241(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_fix((C_word)cm_ranpoisson(t0));
return C_r;}

/* from ffi_rancauchy in k7130 in k6947 in k6944 in k6941 in k6938 */
static C_word C_fcall stub237(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub237(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_rancauchy());
return C_r;}

/* from k7454 */
static C_word C_fcall stub233(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub233(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_rangamma(t0));
return C_r;}

/* from k7447 */
static C_word C_fcall stub227(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub227(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
C_r=C_flonum(&C_a,cm_ranbeta(t0,t1));
return C_r;}

/* from k7436 */
static C_word C_fcall stub221(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub221(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_ranexp(t0));
return C_r;}

/* from k7429 */
static C_word C_fcall stub215(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub215(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
C_r=C_flonum(&C_a,cm_rangauss(t0,t1));
return C_r;}

/* from ffi_ranmiddle in k7130 in k6947 in k6944 in k6941 in k6938 */
static C_word C_fcall stub210(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub210(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_ranmiddle());
return C_r;}

/* from ffi_ranhigh in k7130 in k6947 in k6944 in k6941 in k6938 */
static C_word C_fcall stub207(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub207(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_ranhigh());
return C_r;}

/* from ffi_ranlow in k7130 in k6947 in k6944 in k6941 in k6938 */
static C_word C_fcall stub204(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub204(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,cm_ranlow());
return C_r;}

/* from k7409 */
static C_word C_fcall stub199(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub199(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
C_r=C_flonum(&C_a,cm_ranfloat2(t0,t1));
return C_r;}

/* from k7398 */
static C_word C_fcall stub193(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub193(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)cm_ranint2(t0,t1));
return C_r;}

/* from k7387 */
static C_word C_fcall stub187(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub187(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_ranfloat(t0));
return C_r;}

/* from k7380 */
static C_word C_fcall stub183(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub183(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_fix((C_word)cm_ranint(t0));
return C_r;}

/* from ffi_ranseed in k7130 in k6947 in k6944 in k6941 in k6938 */
static C_word C_fcall stub179(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub179(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_s64 t0=(C_s64 )C_num_to_int64(C_a0);
cm_ranseed(t0);
return C_r;}

/* from k7370 */
static C_word C_fcall stub174(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub174(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_hertz_to_keynum(t0));
return C_r;}

/* from k7363 */
static C_word C_fcall stub170(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub170(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_fix((C_word)cm_keynum_to_pc(t0));
return C_r;}

/* from k7356 */
static C_word C_fcall stub165(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub165(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_keynum_to_hertz(t0));
return C_r;}

/* from k7349 */
static C_word C_fcall stub157(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub157(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
double t2=(double )C_c_double(C_a2);
double t3=(double )C_c_double(C_a3);
C_r=C_flonum(&C_a,cm_geoseg(t0,t1,t2,t3));
return C_r;}

/* from k7330 */
static C_word C_fcall stub146(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub146(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
double t2=(double )C_c_double(C_a2);
double t3=(double )C_c_double(C_a3);
C_r=C_flonum(&C_a,cm_explseg(t0,t1,t2,t3));
return C_r;}

/* from k7311 */
static C_word C_fcall stub138(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub138(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,cm_scaler_to_steps(t0));
return C_r;}

/* from k7304 */
static C_word C_fcall stub134(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub134(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_fix((C_word)cm_scaler_to_cents(t0));
return C_r;}

/* from k7297 */
static C_word C_fcall stub129(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub129(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_flonum(&C_a,cm_cents_to_scaler(t0));
return C_r;}

/* from k7290 */
static C_word C_fcall stub122(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub122(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
double t2=(double )C_c_double(C_a2);
C_r=C_flonum(&C_a,cm_rhythm_to_seconds(t0,t1,t2));
return C_r;}

/* from k7275 */
static C_word C_fcall stub114(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub114(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
C_r=C_flonum(&C_a,cm_quantize(t0,t1));
return C_r;}

/* from k7264 */
static C_word C_fcall stub109(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub109(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_fix((C_word)cm_float_to_fixnum(t0));
return C_r;}

/* from k7257 */
static C_word C_fcall stub100(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub100(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
double t2=(double )C_c_double(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
double t5=(double )C_c_double(C_a5);
C_r=C_fix((C_word)cm_discrete(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k7230 */
static C_word C_fcall stub85(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub85(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
double t2=(double )C_c_double(C_a2);
double t3=(double )C_c_double(C_a3);
double t4=(double )C_c_double(C_a4);
double t5=(double )C_c_double(C_a5);
C_r=C_flonum(&C_a,cm_rescale(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k7196 */
static C_word C_fcall stub74(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub74(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
cm_play(t0);
return C_r;}

/* from k7182 in shell in k7130 in k6947 in k6944 in k6941 in k6938 */
static C_word C_fcall stub68(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub68(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
cm_shell(t0);
return C_r;}

/* from k7168 */
static C_word C_fcall stub62(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub62(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
cm_print_values(t0);
return C_r;}

/* from k7154 in ffi_print_output in k7130 in k6947 in k6944 in k6941 in k6938 */
static C_word C_fcall stub55(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub55(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
int t1=(int )C_truep(C_a1);
cm_print_output(t0,t1);
return C_r;}

/* from k7140 in print-error in k7130 in k6947 in k6944 in k6941 in k6938 */
static C_word C_fcall stub48(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub48(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
cm_print_error(t0);
return C_r;}

/* from ffi_quit */
static C_word C_fcall stub45(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub45(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cm_quit();
return C_r;}

C_noret_decl(C_cm_toplevel)
C_externexport void C_ccall C_cm_toplevel(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6940)
static void C_ccall f_6940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6943)
static void C_ccall f_6943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6946)
static void C_ccall f_6946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6949)
static void C_ccall f_6949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7132)
static void C_ccall f_7132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45880)
static void C_ccall f_45880(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_45880)
static void C_ccall f_45880r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_9238)
static void C_ccall f_9238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45874)
static void C_ccall f_45874(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12594)
static void C_ccall f_12594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12597)
static void C_ccall f_12597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12763)
static void C_ccall f_12763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12759)
static void C_ccall f_12759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12749)
static void C_fcall f_12749(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12604)
static void C_ccall f_12604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12608)
static void C_ccall f_12608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12611)
static void C_fcall f_12611(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12622)
static void C_ccall f_12622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12630)
static void C_ccall f_12630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12702)
static void C_ccall f_12702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12710)
static void C_ccall f_12710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12706)
static void C_ccall f_12706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12698)
static void C_ccall f_12698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12694)
static void C_ccall f_12694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12666)
static void C_ccall f_12666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12662)
static void C_ccall f_12662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12626)
static void C_ccall f_12626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9241)
static void C_ccall f_9241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45860)
static void C_ccall f_45860(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9244)
static void C_ccall f_9244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45831)
static void C_ccall f_45831(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_45835)
static void C_ccall f_45835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9247)
static void C_ccall f_9247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45828)
static void C_ccall f_45828(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9250)
static void C_ccall f_9250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45686)
static void C_ccall f_45686(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12776)
static void C_ccall f_12776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12908)
static void C_ccall f_12908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12779)
static void C_ccall f_12779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12790)
static void C_ccall f_12790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12798)
static void C_ccall f_12798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12822)
static void C_ccall f_12822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12825)
static void C_fcall f_12825(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12833)
static void C_ccall f_12833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12841)
static void C_ccall f_12841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12861)
static void C_ccall f_12861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12857)
static void C_ccall f_12857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12837)
static void C_ccall f_12837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12829)
static void C_ccall f_12829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12818)
static void C_ccall f_12818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12794)
static void C_ccall f_12794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12770)
static void C_ccall f_12770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22891)
static void C_ccall f_22891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45458)
static void C_fcall f_45458(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_45684)
static void C_ccall f_45684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45492)
static void C_ccall f_45492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45504)
static void C_ccall f_45504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45508)
static void C_ccall f_45508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45512)
static void C_ccall f_45512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45668)
static void C_ccall f_45668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45518)
static void C_fcall f_45518(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13) C_noret;
C_noret_decl(f_45538)
static void C_fcall f_45538(C_word t0,C_word t1) C_noret;
C_noret_decl(f_45541)
static void C_fcall f_45541(C_word t0,C_word t1) C_noret;
C_noret_decl(f_45549)
static void C_ccall f_45549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45556)
static void C_ccall f_45556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45559)
static void C_ccall f_45559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45563)
static void C_ccall f_45563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45570)
static void C_ccall f_45570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45573)
static void C_ccall f_45573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45577)
static void C_ccall f_45577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45584)
static void C_ccall f_45584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45528)
static void C_ccall f_45528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45481)
static void C_ccall f_45481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45471)
static void C_ccall f_45471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45474)
static void C_ccall f_45474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22894)
static void C_ccall f_22894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23875)
static void C_ccall f_23875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45363)
static void C_ccall f_45363(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_45376)
static void C_ccall f_45376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45452)
static void C_ccall f_45452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45379)
static void C_ccall f_45379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45384)
static void C_fcall f_45384(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_45436)
static void C_ccall f_45436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45406)
static void C_ccall f_45406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45420)
static void C_ccall f_45420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45432)
static void C_ccall f_45432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45409)
static void C_ccall f_45409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23895)
static void C_ccall f_23895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45357)
static void C_ccall f_45357(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24224)
static void C_ccall f_24224(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28951)
static void C_ccall f_28951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45254)
static void C_ccall f_45254(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_45254)
static void C_ccall f_45254r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_45317)
static void C_ccall f_45317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45321)
static void C_ccall f_45321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45335)
static void C_fcall f_45335(C_word t0,C_word t1) C_noret;
C_noret_decl(f_45257)
static void C_fcall f_45257(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_45277)
static void C_ccall f_45277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45281)
static void C_ccall f_45281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29056)
static void C_ccall f_29056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45232)
static void C_ccall f_45232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30611)
static void C_ccall f_30611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45212)
static void C_ccall f_45212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30614)
static void C_ccall f_30614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45172)
static void C_ccall f_45172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30617)
static void C_ccall f_30617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45078)
static void C_ccall f_45078(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_45082)
static void C_ccall f_45082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45085)
static void C_ccall f_45085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45103)
static void C_ccall f_45103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45106)
static void C_ccall f_45106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45137)
static void C_ccall f_45137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45109)
static void C_fcall f_45109(C_word t0,C_word t1) C_noret;
C_noret_decl(f_45115)
static void C_ccall f_45115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45068)
static void C_ccall f_45068(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_45062)
static void C_ccall f_45062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30620)
static void C_ccall f_30620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44966)
static void C_ccall f_44966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44968)
static void C_ccall f_44968(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_44972)
static void C_ccall f_44972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44975)
static void C_ccall f_44975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44978)
static void C_ccall f_44978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45022)
static void C_ccall f_45022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_45014)
static void C_ccall f_45014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44981)
static void C_ccall f_44981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29390)
static void C_fcall f_29390(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29436)
static void C_ccall f_29436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29403)
static void C_fcall f_29403(C_word t0,C_word t1) C_noret;
C_noret_decl(f_45004)
static void C_ccall f_45004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44984)
static void C_ccall f_44984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44987)
static void C_ccall f_44987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44958)
static void C_ccall f_44958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30623)
static void C_ccall f_30623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44930)
static void C_ccall f_44930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30626)
static void C_ccall f_30626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44894)
static void C_ccall f_44894(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_44906)
static void C_ccall f_44906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44902)
static void C_ccall f_44902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44876)
static void C_ccall f_44876(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_44870)
static void C_ccall f_44870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30629)
static void C_ccall f_30629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44784)
static void C_ccall f_44784(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_44788)
static void C_ccall f_44788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44791)
static void C_ccall f_44791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44794)
static void C_ccall f_44794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44807)
static void C_ccall f_44807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44753)
static void C_ccall f_44753(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_44757)
static void C_ccall f_44757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44772)
static void C_ccall f_44772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44747)
static void C_ccall f_44747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30632)
static void C_ccall f_30632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44633)
static void C_ccall f_44633(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_44649)
static void C_ccall f_44649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44660)
static void C_ccall f_44660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44627)
static void C_ccall f_44627(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30688)
static void C_ccall f_30688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44494)
static void C_ccall f_44494(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_44517)
static void C_ccall f_44517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44514)
static void C_ccall f_44514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44488)
static void C_ccall f_44488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30691)
static void C_ccall f_30691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44342)
static void C_ccall f_44342(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_44360)
static void C_ccall f_44360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44369)
static void C_ccall f_44369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44336)
static void C_ccall f_44336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30694)
static void C_ccall f_30694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44289)
static void C_ccall f_44289(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_44293)
static void C_ccall f_44293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44296)
static void C_ccall f_44296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44312)
static void C_ccall f_44312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44271)
static void C_ccall f_44271(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_44265)
static void C_ccall f_44265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30697)
static void C_ccall f_30697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44189)
static void C_ccall f_44189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30836)
static void C_ccall f_30836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44115)
static void C_ccall f_44115(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_44122)
static void C_ccall f_44122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44109)
static void C_ccall f_44109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30839)
static void C_ccall f_30839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_44005)
static void C_ccall f_44005(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_44013)
static void C_ccall f_44013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43979)
static void C_ccall f_43979(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43996)
static void C_ccall f_43996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43987)
static void C_fcall f_43987(C_word t0,C_word t1) C_noret;
C_noret_decl(f_43973)
static void C_ccall f_43973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30842)
static void C_ccall f_30842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43929)
static void C_ccall f_43929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30845)
static void C_ccall f_30845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43847)
static void C_ccall f_43847(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_43858)
static void C_ccall f_43858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43860)
static void C_fcall f_43860(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_43889)
static void C_ccall f_43889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43825)
static void C_ccall f_43825(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43841)
static void C_ccall f_43841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43819)
static void C_ccall f_43819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30848)
static void C_ccall f_30848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43748)
static void C_ccall f_43748(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_43752)
static void C_ccall f_43752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43759)
static void C_ccall f_43759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43714)
static void C_ccall f_43714(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43734)
static void C_ccall f_43734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43738)
static void C_ccall f_43738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43730)
static void C_ccall f_43730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43708)
static void C_ccall f_43708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30851)
static void C_ccall f_30851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43580)
static void C_ccall f_43580(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_43616)
static void C_ccall f_43616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43584)
static void C_ccall f_43584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43600)
static void C_ccall f_43600(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_43612)
static void C_ccall f_43612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43608)
static void C_ccall f_43608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43505)
static void C_ccall f_43505(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43548)
static void C_ccall f_43548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43552)
static void C_ccall f_43552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43512)
static void C_fcall f_43512(C_word t0,C_word t1) C_noret;
C_noret_decl(f_43523)
static void C_ccall f_43523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43499)
static void C_ccall f_43499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30854)
static void C_ccall f_30854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43479)
static void C_ccall f_43479(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43473)
static void C_ccall f_43473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30857)
static void C_ccall f_30857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43453)
static void C_ccall f_43453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43457)
static void C_ccall f_43457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43445)
static void C_ccall f_43445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30860)
static void C_ccall f_30860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43425)
static void C_ccall f_43425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43429)
static void C_ccall f_43429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43417)
static void C_ccall f_43417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30863)
static void C_ccall f_30863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43397)
static void C_ccall f_43397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43401)
static void C_ccall f_43401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43389)
static void C_ccall f_43389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30866)
static void C_ccall f_30866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43369)
static void C_ccall f_43369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43373)
static void C_ccall f_43373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43361)
static void C_ccall f_43361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30869)
static void C_ccall f_30869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43260)
static void C_ccall f_43260(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_43230)
static void C_ccall f_43230(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43254)
static void C_ccall f_43254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43224)
static void C_ccall f_43224(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30872)
static void C_ccall f_30872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43174)
static void C_ccall f_43174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43176)
static void C_ccall f_43176(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_43180)
static void C_ccall f_43180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43208)
static void C_ccall f_43208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43200)
static void C_ccall f_43200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43196)
static void C_ccall f_43196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43183)
static void C_ccall f_43183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43166)
static void C_ccall f_43166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30875)
static void C_ccall f_30875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43113)
static void C_ccall f_43113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43115)
static void C_ccall f_43115(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_43119)
static void C_ccall f_43119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43150)
static void C_ccall f_43150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43142)
static void C_ccall f_43142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43138)
static void C_ccall f_43138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43122)
static void C_ccall f_43122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43125)
static void C_ccall f_43125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43105)
static void C_ccall f_43105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30878)
static void C_ccall f_30878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43055)
static void C_ccall f_43055(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_43069)
static void C_ccall f_43069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43061)
static void C_ccall f_43061(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_43020)
static void C_ccall f_43020(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_43053)
static void C_ccall f_43053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_43014)
static void C_ccall f_43014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30881)
static void C_ccall f_30881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42961)
static void C_ccall f_42961(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_42965)
static void C_ccall f_42965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42978)
static void C_ccall f_42978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42970)
static void C_ccall f_42970(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_42918)
static void C_ccall f_42918(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42951)
static void C_ccall f_42951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42912)
static void C_ccall f_42912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30884)
static void C_ccall f_30884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42832)
static void C_ccall f_42832(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42826)
static void C_ccall f_42826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30887)
static void C_ccall f_30887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42595)
static void C_ccall f_42595(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_42599)
static void C_ccall f_42599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42607)
static void C_fcall f_42607(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_42630)
static void C_ccall f_42630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42633)
static void C_ccall f_42633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42636)
static void C_ccall f_42636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42639)
static void C_ccall f_42639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42699)
static void C_ccall f_42699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42706)
static void C_ccall f_42706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42716)
static void C_ccall f_42716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42726)
static void C_ccall f_42726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42740)
static void C_ccall f_42740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42750)
static void C_ccall f_42750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42760)
static void C_ccall f_42760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42770)
static void C_ccall f_42770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42642)
static void C_fcall f_42642(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42666)
static void C_fcall f_42666(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42645)
static void C_fcall f_42645(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42552)
static void C_ccall f_42552(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42585)
static void C_ccall f_42585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42546)
static void C_ccall f_42546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30890)
static void C_ccall f_30890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42464)
static void C_ccall f_42464(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_42468)
static void C_ccall f_42468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42474)
static void C_ccall f_42474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42494)
static void C_ccall f_42494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42438)
static void C_ccall f_42438(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42448)
static void C_fcall f_42448(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42432)
static void C_ccall f_42432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30893)
static void C_ccall f_30893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42247)
static void C_ccall f_42247(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_42251)
static void C_ccall f_42251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42257)
static void C_ccall f_42257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42266)
static void C_ccall f_42266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42304)
static void C_ccall f_42304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42296)
static void C_ccall f_42296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42273)
static void C_ccall f_42273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42277)
static void C_ccall f_42277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42179)
static void C_ccall f_42179(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42198)
static void C_ccall f_42198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42233)
static void C_ccall f_42233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42204)
static void C_fcall f_42204(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42208)
static void C_ccall f_42208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42222)
static void C_ccall f_42222(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42211)
static void C_fcall f_42211(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42192)
static void C_fcall f_42192(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42173)
static void C_ccall f_42173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30896)
static void C_ccall f_30896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41901)
static void C_ccall f_41901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31419)
static void C_ccall f_31419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41853)
static void C_ccall f_41853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41845)
static void C_ccall f_41845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31422)
static void C_ccall f_31422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41725)
static void C_ccall f_41725(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31428)
static void C_ccall f_31428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31912)
static void C_ccall f_31912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31946)
static void C_ccall f_31946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31938)
static void C_ccall f_31938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31934)
static void C_ccall f_31934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31919)
static void C_ccall f_31919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31923)
static void C_ccall f_31923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31916)
static void C_ccall f_31916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31452)
static void C_fcall f_31452(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31905)
static void C_ccall f_31905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31901)
static void C_ccall f_31901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31459)
static void C_fcall f_31459(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31776)
static void C_fcall f_31776(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31797)
static void C_ccall f_31797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31799)
static void C_fcall f_31799(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31813)
static void C_ccall f_31813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31866)
static void C_ccall f_31866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31816)
static void C_fcall f_31816(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31851)
static void C_ccall f_31851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31819)
static void C_fcall f_31819(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31832)
static void C_ccall f_31832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31844)
static void C_ccall f_31844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31836)
static void C_ccall f_31836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31822)
static void C_fcall f_31822(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31786)
static void C_ccall f_31786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31462)
static void C_ccall f_31462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31740)
static void C_fcall f_31740(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31766)
static void C_ccall f_31766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31751)
static void C_ccall f_31751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31465)
static void C_ccall f_31465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31680)
static void C_fcall f_31680(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31690)
static void C_ccall f_31690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31693)
static void C_ccall f_31693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31714)
static void C_ccall f_31714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31696)
static void C_fcall f_31696(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31700)
static void C_ccall f_31700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31648)
static void C_ccall f_31648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31651)
static void C_fcall f_31651(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31468)
static void C_fcall f_31468(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31471)
static void C_fcall f_31471(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31605)
static void C_ccall f_31605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31613)
static void C_ccall f_31613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31609)
static void C_ccall f_31609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31474)
static void C_fcall f_31474(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31568)
static void C_ccall f_31568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31564)
static void C_ccall f_31564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31560)
static void C_ccall f_31560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31513)
static void C_ccall f_31513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31509)
static void C_ccall f_31509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31591)
static void C_ccall f_31591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31575)
static void C_ccall f_31575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41679)
static void C_ccall f_41679(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41695)
static void C_ccall f_41695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41698)
static void C_ccall f_41698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41701)
static void C_fcall f_41701(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41704)
static void C_fcall f_41704(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41715)
static void C_ccall f_41715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41673)
static void C_ccall f_41673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31953)
static void C_ccall f_31953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41534)
static void C_ccall f_41534(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41573)
static void C_ccall f_41573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41547)
static void C_fcall f_41547(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41528)
static void C_ccall f_41528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31956)
static void C_ccall f_31956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41116)
static void C_ccall f_41116(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_41120)
static void C_ccall f_41120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41132)
static void C_ccall f_41132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41190)
static void C_ccall f_41190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41193)
static void C_ccall f_41193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41196)
static void C_ccall f_41196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41408)
static void C_ccall f_41408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41346)
static void C_ccall f_41346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41380)
static void C_ccall f_41380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41355)
static void C_fcall f_41355(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41366)
static void C_ccall f_41366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41362)
static void C_ccall f_41362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41205)
static void C_fcall f_41205(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41283)
static void C_ccall f_41283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41324)
static void C_ccall f_41324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41328)
static void C_ccall f_41328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41332)
static void C_ccall f_41332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41287)
static void C_ccall f_41287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41291)
static void C_ccall f_41291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41318)
static void C_ccall f_41318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41294)
static void C_fcall f_41294(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41208)
static void C_fcall f_41208(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41280)
static void C_ccall f_41280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41222)
static void C_ccall f_41222(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41224)
static void C_fcall f_41224(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41272)
static void C_ccall f_41272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41243)
static void C_ccall f_41243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41260)
static void C_ccall f_41260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41246)
static void C_fcall f_41246(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41239)
static void C_ccall f_41239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41211)
static void C_ccall f_41211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41141)
static void C_fcall f_41141(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_41151)
static void C_ccall f_41151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41157)
static void C_ccall f_41157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41129)
static void C_ccall f_41129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41077)
static void C_ccall f_41077(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41094)
static void C_ccall f_41094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41110)
static void C_ccall f_41110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41088)
static void C_fcall f_41088(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41071)
static void C_ccall f_41071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31959)
static void C_ccall f_31959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40995)
static void C_ccall f_40995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31962)
static void C_ccall f_31962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40971)
static void C_ccall f_40971(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_40983)
static void C_ccall f_40983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40979)
static void C_ccall f_40979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40957)
static void C_ccall f_40957(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40965)
static void C_ccall f_40965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40951)
static void C_ccall f_40951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31965)
static void C_ccall f_31965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40943)
static void C_ccall f_40943(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_40943)
static void C_ccall f_40943r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_39196)
static void C_ccall f_39196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39200)
static void C_ccall f_39200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40914)
static void C_ccall f_40914(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40918)
static void C_ccall f_40918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39203)
static void C_ccall f_39203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40912)
static void C_ccall f_40912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39753)
static void C_ccall f_39753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40904)
static void C_ccall f_40904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39756)
static void C_ccall f_39756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40896)
static void C_ccall f_40896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39759)
static void C_ccall f_39759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40888)
static void C_ccall f_40888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39762)
static void C_ccall f_39762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40880)
static void C_ccall f_40880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39765)
static void C_ccall f_39765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40872)
static void C_ccall f_40872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39768)
static void C_ccall f_39768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40864)
static void C_ccall f_40864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39771)
static void C_ccall f_39771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40856)
static void C_ccall f_40856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39774)
static void C_ccall f_39774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40848)
static void C_ccall f_40848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39777)
static void C_ccall f_39777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40840)
static void C_ccall f_40840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39780)
static void C_ccall f_39780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40832)
static void C_ccall f_40832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39783)
static void C_ccall f_39783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40824)
static void C_ccall f_40824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39786)
static void C_ccall f_39786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40816)
static void C_ccall f_40816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39789)
static void C_ccall f_39789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40808)
static void C_ccall f_40808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39792)
static void C_ccall f_39792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40800)
static void C_ccall f_40800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39795)
static void C_ccall f_39795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40792)
static void C_ccall f_40792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39798)
static void C_ccall f_39798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40784)
static void C_ccall f_40784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39801)
static void C_ccall f_39801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40776)
static void C_ccall f_40776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39804)
static void C_ccall f_39804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40768)
static void C_ccall f_40768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39807)
static void C_ccall f_39807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40760)
static void C_ccall f_40760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39810)
static void C_ccall f_39810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40752)
static void C_ccall f_40752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39813)
static void C_ccall f_39813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40744)
static void C_ccall f_40744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39816)
static void C_ccall f_39816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40675)
static void C_fcall f_40675(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_40703)
static void C_fcall f_40703(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39890)
static void C_ccall f_39890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40669)
static void C_ccall f_40669(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_40168)
static void C_ccall f_40168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40640)
static void C_ccall f_40640(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_40640)
static void C_ccall f_40640r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_40654)
static void C_fcall f_40654(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40644)
static void C_ccall f_40644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40171)
static void C_ccall f_40171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40638)
static void C_ccall f_40638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40625)
static void C_ccall f_40625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40567)
static void C_ccall f_40567(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_40567)
static void C_ccall f_40567r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_40585)
static void C_fcall f_40585(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_40595)
static void C_ccall f_40595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40571)
static void C_ccall f_40571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40561)
static void C_ccall f_40561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40555)
static void C_ccall f_40555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40549)
static void C_ccall f_40549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40543)
static void C_ccall f_40543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40173)
static void C_ccall f_40173(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_40173)
static void C_ccall f_40173r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_40510)
static void C_fcall f_40510(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_40520)
static void C_ccall f_40520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40496)
static void C_ccall f_40496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40180)
static void C_ccall f_40180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40434)
static void C_fcall f_40434(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40448)
static void C_ccall f_40448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40183)
static void C_ccall f_40183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40381)
static void C_fcall f_40381(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_40404)
static void C_fcall f_40404(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40391)
static void C_ccall f_40391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40367)
static void C_ccall f_40367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40189)
static void C_ccall f_40189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40329)
static void C_fcall f_40329(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_40339)
static void C_ccall f_40339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40315)
static void C_ccall f_40315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40195)
static void C_ccall f_40195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40312)
static void C_ccall f_40312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40198)
static void C_fcall f_40198(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40304)
static void C_ccall f_40304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40308)
static void C_ccall f_40308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40268)
static void C_fcall f_40268(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_40293)
static void C_ccall f_40293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40297)
static void C_ccall f_40297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40278)
static void C_ccall f_40278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40257)
static void C_ccall f_40257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40227)
static void C_fcall f_40227(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40199)
static void C_fcall f_40199(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39931)
static void C_fcall f_39931(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39935)
static void C_ccall f_39935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39938)
static void C_ccall f_39938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39941)
static void C_ccall f_39941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39945)
static void C_ccall f_39945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40159)
static void C_ccall f_40159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40147)
static void C_ccall f_40147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40143)
static void C_ccall f_40143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39948)
static void C_fcall f_39948(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40092)
static void C_fcall f_40092(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40128)
static void C_ccall f_40128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40121)
static void C_ccall f_40121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39951)
static void C_ccall f_39951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40022)
static void C_ccall f_40022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40026)
static void C_ccall f_40026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40018)
static void C_ccall f_40018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7046)
static void C_ccall f_7046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39998)
static void C_ccall f_39998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39994)
static void C_ccall f_39994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39961)
static void C_fcall f_39961(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39972)
static void C_ccall f_39972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39980)
static void C_ccall f_39980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39976)
static void C_ccall f_39976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39892)
static void C_fcall f_39892(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39908)
static void C_ccall f_39908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39819)
static void C_ccall f_39819(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39830)
static void C_ccall f_39830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39833)
static void C_fcall f_39833(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39840)
static void C_ccall f_39840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39279)
static void C_fcall f_39279(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39612)
static void C_fcall f_39612(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39632)
static void C_ccall f_39632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39701)
static void C_ccall f_39701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39697)
static void C_ccall f_39697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39658)
static void C_ccall f_39658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39670)
static void C_ccall f_39670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39666)
static void C_ccall f_39666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39622)
static void C_ccall f_39622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39283)
static void C_ccall f_39283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39287)
static void C_ccall f_39287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39291)
static void C_ccall f_39291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39295)
static void C_ccall f_39295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39299)
static void C_ccall f_39299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39300)
static void C_ccall f_39300(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39306)
static void C_ccall f_39306(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39310)
static void C_ccall f_39310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39539)
static void C_fcall f_39539(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39586)
static void C_ccall f_39586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39576)
static void C_fcall f_39576(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39583)
static void C_ccall f_39583(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39570)
static void C_ccall f_39570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39549)
static void C_ccall f_39549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39313)
static void C_ccall f_39313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39494)
static void C_fcall f_39494(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39499)
static void C_fcall f_39499(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39509)
static void C_ccall f_39509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39316)
static void C_ccall f_39316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39448)
static void C_fcall f_39448(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39453)
static void C_fcall f_39453(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39463)
static void C_ccall f_39463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39319)
static void C_ccall f_39319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39345)
static void C_fcall f_39345(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39354)
static void C_fcall f_39354(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39370)
static void C_ccall f_39370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39423)
static void C_ccall f_39423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39404)
static void C_ccall f_39404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39373)
static void C_ccall f_39373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39394)
static void C_ccall f_39394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39380)
static void C_ccall f_39380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39364)
static void C_ccall f_39364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39322)
static void C_ccall f_39322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39335)
static void C_ccall f_39335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39205)
static void C_ccall f_39205(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_39205)
static void C_ccall f_39205r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_39209)
static void C_fcall f_39209(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39218)
static void C_ccall f_39218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39231)
static void C_ccall f_39231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39234)
static void C_ccall f_39234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39250)
static void C_ccall f_39250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39156)
static void C_ccall f_39156(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_39156)
static void C_ccall f_39156r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_39150)
static void C_ccall f_39150(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_39150)
static void C_ccall f_39150r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_38957)
static void C_fcall f_38957(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39130)
static void C_fcall f_39130(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38961)
static void C_ccall f_38961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38964)
static void C_ccall f_38964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38967)
static void C_ccall f_38967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38972)
static void C_fcall f_38972(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39042)
static void C_ccall f_39042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39038)
static void C_ccall f_39038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39024)
static void C_ccall f_39024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39010)
static void C_ccall f_39010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39006)
static void C_ccall f_39006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38992)
static void C_ccall f_38992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7876)
static void C_ccall f_7876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38785)
static void C_ccall f_38785(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_38785)
static void C_ccall f_38785r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_38789)
static void C_ccall f_38789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38792)
static void C_ccall f_38792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38797)
static void C_fcall f_38797(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38918)
static void C_ccall f_38918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38922)
static void C_ccall f_38922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38891)
static void C_ccall f_38891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38895)
static void C_ccall f_38895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38864)
static void C_ccall f_38864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38868)
static void C_ccall f_38868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38848)
static void C_ccall f_38848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38831)
static void C_ccall f_38831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38817)
static void C_ccall f_38817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7850)
static void C_ccall f_7850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38672)
static void C_ccall f_38672(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_38672)
static void C_ccall f_38672r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_38677)
static void C_ccall f_38677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38681)
static void C_ccall f_38681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38732)
static void C_ccall f_38732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38728)
static void C_fcall f_38728(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38724)
static void C_ccall f_38724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38684)
static void C_fcall f_38684(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38717)
static void C_ccall f_38717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38713)
static void C_fcall f_38713(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38709)
static void C_ccall f_38709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38687)
static void C_fcall f_38687(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38690)
static void C_ccall f_38690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38702)
static void C_ccall f_38702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38694)
static void C_ccall f_38694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38496)
static void C_ccall f_38496(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_38496)
static void C_ccall f_38496r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_38515)
static void C_fcall f_38515(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38522)
static void C_fcall f_38522(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38528)
static void C_fcall f_38528(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_38548)
static void C_ccall f_38548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38556)
static void C_ccall f_38556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38552)
static void C_ccall f_38552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38538)
static void C_ccall f_38538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38500)
static void C_ccall f_38500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38391)
static void C_ccall f_38391(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_38391)
static void C_ccall f_38391r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_38410)
static void C_fcall f_38410(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38417)
static void C_fcall f_38417(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38423)
static void C_fcall f_38423(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_38443)
static void C_ccall f_38443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38451)
static void C_ccall f_38451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38447)
static void C_ccall f_38447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38433)
static void C_ccall f_38433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38395)
static void C_ccall f_38395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38372)
static void C_ccall f_38372(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7093)
static void C_ccall f_7093(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7099)
static void C_ccall f_7099(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7125)
static void C_ccall f_7125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7129)
static void C_ccall f_7129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7105)
static void C_ccall f_7105(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7123)
static void C_ccall f_7123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7120)
static void C_ccall f_7120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7116)
static void C_ccall f_7116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7109)
static void C_ccall f_7109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38357)
static void C_ccall f_38357(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_38357)
static void C_ccall f_38357r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_38351)
static void C_ccall f_38351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38345)
static void C_ccall f_38345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38339)
static void C_ccall f_38339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38333)
static void C_ccall f_38333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38327)
static void C_ccall f_38327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38297)
static void C_ccall f_38297(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_38297)
static void C_ccall f_38297r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_38307)
static void C_ccall f_38307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37868)
static void C_ccall f_37868(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_37868)
static void C_ccall f_37868r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_38274)
static void C_ccall f_38274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38289)
static void C_ccall f_38289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38281)
static void C_ccall f_38281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38245)
static void C_ccall f_38245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38249)
static void C_ccall f_38249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38210)
static void C_ccall f_38210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38214)
static void C_ccall f_38214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38175)
static void C_ccall f_38175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38179)
static void C_ccall f_38179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37872)
static void C_fcall f_37872(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38139)
static void C_ccall f_38139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38154)
static void C_ccall f_38154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38146)
static void C_ccall f_38146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38110)
static void C_ccall f_38110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38114)
static void C_ccall f_38114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38075)
static void C_ccall f_38075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38079)
static void C_ccall f_38079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38040)
static void C_ccall f_38040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38044)
static void C_ccall f_38044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37875)
static void C_fcall f_37875(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38004)
static void C_ccall f_38004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38019)
static void C_ccall f_38019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38011)
static void C_ccall f_38011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37975)
static void C_ccall f_37975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37979)
static void C_ccall f_37979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37940)
static void C_ccall f_37940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37944)
static void C_ccall f_37944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37905)
static void C_ccall f_37905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37909)
static void C_ccall f_37909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37878)
static void C_fcall f_37878(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37881)
static void C_ccall f_37881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37439)
static void C_ccall f_37439(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_37439)
static void C_ccall f_37439r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_37845)
static void C_ccall f_37845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37860)
static void C_ccall f_37860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37852)
static void C_ccall f_37852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37816)
static void C_ccall f_37816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37820)
static void C_ccall f_37820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37781)
static void C_ccall f_37781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37785)
static void C_ccall f_37785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37746)
static void C_ccall f_37746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37750)
static void C_ccall f_37750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37443)
static void C_fcall f_37443(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37710)
static void C_ccall f_37710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37725)
static void C_ccall f_37725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37717)
static void C_ccall f_37717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37681)
static void C_ccall f_37681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37685)
static void C_ccall f_37685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37646)
static void C_ccall f_37646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37650)
static void C_ccall f_37650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37611)
static void C_ccall f_37611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37615)
static void C_ccall f_37615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37446)
static void C_fcall f_37446(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37575)
static void C_ccall f_37575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37590)
static void C_ccall f_37590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37582)
static void C_ccall f_37582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37546)
static void C_ccall f_37546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37550)
static void C_ccall f_37550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37511)
static void C_ccall f_37511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37515)
static void C_ccall f_37515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37476)
static void C_ccall f_37476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37480)
static void C_ccall f_37480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37449)
static void C_fcall f_37449(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37452)
static void C_ccall f_37452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37010)
static void C_ccall f_37010(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_37010)
static void C_ccall f_37010r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_37416)
static void C_ccall f_37416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37431)
static void C_ccall f_37431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37423)
static void C_ccall f_37423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37387)
static void C_ccall f_37387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37391)
static void C_ccall f_37391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37352)
static void C_ccall f_37352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37356)
static void C_ccall f_37356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37317)
static void C_ccall f_37317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37321)
static void C_ccall f_37321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37014)
static void C_fcall f_37014(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37281)
static void C_ccall f_37281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37296)
static void C_ccall f_37296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37288)
static void C_ccall f_37288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37252)
static void C_ccall f_37252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37256)
static void C_ccall f_37256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37217)
static void C_ccall f_37217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37221)
static void C_ccall f_37221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37182)
static void C_ccall f_37182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37186)
static void C_ccall f_37186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37017)
static void C_fcall f_37017(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37146)
static void C_ccall f_37146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37161)
static void C_ccall f_37161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37153)
static void C_ccall f_37153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37117)
static void C_ccall f_37117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37121)
static void C_ccall f_37121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37082)
static void C_ccall f_37082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37086)
static void C_ccall f_37086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37047)
static void C_ccall f_37047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37051)
static void C_ccall f_37051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37020)
static void C_fcall f_37020(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37023)
static void C_ccall f_37023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36303)
static void C_ccall f_36303(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_36303)
static void C_ccall f_36303r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_36987)
static void C_ccall f_36987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37002)
static void C_ccall f_37002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36994)
static void C_ccall f_36994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36958)
static void C_ccall f_36958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36962)
static void C_ccall f_36962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36923)
static void C_ccall f_36923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36927)
static void C_ccall f_36927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36888)
static void C_ccall f_36888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36892)
static void C_ccall f_36892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36853)
static void C_ccall f_36853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36857)
static void C_ccall f_36857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36307)
static void C_fcall f_36307(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36817)
static void C_ccall f_36817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36832)
static void C_ccall f_36832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36824)
static void C_ccall f_36824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36788)
static void C_ccall f_36788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36792)
static void C_ccall f_36792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36753)
static void C_ccall f_36753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36757)
static void C_ccall f_36757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36718)
static void C_ccall f_36718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36722)
static void C_ccall f_36722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36683)
static void C_ccall f_36683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36687)
static void C_ccall f_36687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36310)
static void C_fcall f_36310(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36647)
static void C_ccall f_36647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36662)
static void C_ccall f_36662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36654)
static void C_ccall f_36654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36618)
static void C_ccall f_36618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36622)
static void C_ccall f_36622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36583)
static void C_ccall f_36583(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36587)
static void C_ccall f_36587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36548)
static void C_ccall f_36548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36552)
static void C_ccall f_36552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36513)
static void C_ccall f_36513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36517)
static void C_ccall f_36517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36313)
static void C_fcall f_36313(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36477)
static void C_ccall f_36477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36492)
static void C_ccall f_36492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36484)
static void C_ccall f_36484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36448)
static void C_ccall f_36448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36452)
static void C_ccall f_36452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36413)
static void C_ccall f_36413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36417)
static void C_ccall f_36417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36378)
static void C_ccall f_36378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36382)
static void C_ccall f_36382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36343)
static void C_ccall f_36343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36347)
static void C_ccall f_36347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36316)
static void C_fcall f_36316(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36319)
static void C_ccall f_36319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35596)
static void C_ccall f_35596(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_35596)
static void C_ccall f_35596r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_36280)
static void C_ccall f_36280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36295)
static void C_ccall f_36295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36287)
static void C_ccall f_36287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36251)
static void C_ccall f_36251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36255)
static void C_ccall f_36255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36216)
static void C_ccall f_36216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36220)
static void C_ccall f_36220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36181)
static void C_ccall f_36181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36185)
static void C_ccall f_36185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36146)
static void C_ccall f_36146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36150)
static void C_ccall f_36150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35600)
static void C_fcall f_35600(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36110)
static void C_ccall f_36110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36125)
static void C_ccall f_36125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36117)
static void C_ccall f_36117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36081)
static void C_ccall f_36081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36085)
static void C_ccall f_36085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36046)
static void C_ccall f_36046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36050)
static void C_ccall f_36050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36011)
static void C_ccall f_36011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36015)
static void C_ccall f_36015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35976)
static void C_ccall f_35976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35980)
static void C_ccall f_35980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35603)
static void C_fcall f_35603(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35940)
static void C_ccall f_35940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35955)
static void C_ccall f_35955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35947)
static void C_ccall f_35947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35911)
static void C_ccall f_35911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35915)
static void C_ccall f_35915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35876)
static void C_ccall f_35876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35880)
static void C_ccall f_35880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35841)
static void C_ccall f_35841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35845)
static void C_ccall f_35845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35806)
static void C_ccall f_35806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35810)
static void C_ccall f_35810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35606)
static void C_fcall f_35606(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35770)
static void C_ccall f_35770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35785)
static void C_ccall f_35785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35777)
static void C_ccall f_35777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35741)
static void C_ccall f_35741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35745)
static void C_ccall f_35745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35706)
static void C_ccall f_35706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35710)
static void C_ccall f_35710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35671)
static void C_ccall f_35671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35675)
static void C_ccall f_35675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35636)
static void C_ccall f_35636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35640)
static void C_ccall f_35640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35609)
static void C_fcall f_35609(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35612)
static void C_ccall f_35612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34889)
static void C_ccall f_34889(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34889)
static void C_ccall f_34889r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_35573)
static void C_ccall f_35573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35588)
static void C_ccall f_35588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35580)
static void C_ccall f_35580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35544)
static void C_ccall f_35544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35548)
static void C_ccall f_35548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35509)
static void C_ccall f_35509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35513)
static void C_ccall f_35513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35474)
static void C_ccall f_35474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35478)
static void C_ccall f_35478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35439)
static void C_ccall f_35439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35443)
static void C_ccall f_35443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34893)
static void C_fcall f_34893(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35403)
static void C_ccall f_35403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35418)
static void C_ccall f_35418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35410)
static void C_ccall f_35410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35374)
static void C_ccall f_35374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35378)
static void C_ccall f_35378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35339)
static void C_ccall f_35339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35343)
static void C_ccall f_35343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35304)
static void C_ccall f_35304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35308)
static void C_ccall f_35308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35269)
static void C_ccall f_35269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35273)
static void C_ccall f_35273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34896)
static void C_fcall f_34896(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35233)
static void C_ccall f_35233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35248)
static void C_ccall f_35248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35240)
static void C_ccall f_35240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35204)
static void C_ccall f_35204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35208)
static void C_ccall f_35208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35169)
static void C_ccall f_35169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35173)
static void C_ccall f_35173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35134)
static void C_ccall f_35134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35138)
static void C_ccall f_35138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35099)
static void C_ccall f_35099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35103)
static void C_ccall f_35103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34899)
static void C_fcall f_34899(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35063)
static void C_ccall f_35063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35078)
static void C_ccall f_35078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35070)
static void C_ccall f_35070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35034)
static void C_ccall f_35034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35038)
static void C_ccall f_35038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34999)
static void C_ccall f_34999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35003)
static void C_ccall f_35003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34964)
static void C_ccall f_34964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34968)
static void C_ccall f_34968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34929)
static void C_ccall f_34929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34933)
static void C_ccall f_34933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34902)
static void C_fcall f_34902(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34905)
static void C_ccall f_34905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34460)
static void C_ccall f_34460(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34460)
static void C_ccall f_34460r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_34866)
static void C_ccall f_34866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34881)
static void C_ccall f_34881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34873)
static void C_ccall f_34873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34837)
static void C_ccall f_34837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34841)
static void C_ccall f_34841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34802)
static void C_ccall f_34802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34806)
static void C_ccall f_34806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34767)
static void C_ccall f_34767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34771)
static void C_ccall f_34771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34464)
static void C_fcall f_34464(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34731)
static void C_ccall f_34731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34746)
static void C_ccall f_34746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34738)
static void C_ccall f_34738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34702)
static void C_ccall f_34702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34706)
static void C_ccall f_34706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34667)
static void C_ccall f_34667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34671)
static void C_ccall f_34671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34632)
static void C_ccall f_34632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34636)
static void C_ccall f_34636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34467)
static void C_fcall f_34467(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34596)
static void C_ccall f_34596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34611)
static void C_ccall f_34611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34603)
static void C_ccall f_34603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34567)
static void C_ccall f_34567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34571)
static void C_ccall f_34571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34532)
static void C_ccall f_34532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34536)
static void C_ccall f_34536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34497)
static void C_ccall f_34497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34501)
static void C_ccall f_34501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34470)
static void C_fcall f_34470(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34473)
static void C_ccall f_34473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33405)
static void C_ccall f_33405(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_33405)
static void C_ccall f_33405r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_34437)
static void C_ccall f_34437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34452)
static void C_ccall f_34452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34444)
static void C_ccall f_34444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34408)
static void C_ccall f_34408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34412)
static void C_ccall f_34412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34373)
static void C_ccall f_34373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34377)
static void C_ccall f_34377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34338)
static void C_ccall f_34338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34342)
static void C_ccall f_34342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34303)
static void C_ccall f_34303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34307)
static void C_ccall f_34307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34268)
static void C_ccall f_34268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34272)
static void C_ccall f_34272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33409)
static void C_fcall f_33409(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34232)
static void C_ccall f_34232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34247)
static void C_ccall f_34247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34239)
static void C_ccall f_34239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34203)
static void C_ccall f_34203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34207)
static void C_ccall f_34207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34168)
static void C_ccall f_34168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34172)
static void C_ccall f_34172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34133)
static void C_ccall f_34133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34137)
static void C_ccall f_34137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34098)
static void C_ccall f_34098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34102)
static void C_ccall f_34102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34063)
static void C_ccall f_34063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34067)
static void C_ccall f_34067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33412)
static void C_fcall f_33412(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34027)
static void C_ccall f_34027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34042)
static void C_ccall f_34042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34034)
static void C_ccall f_34034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33998)
static void C_ccall f_33998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34002)
static void C_ccall f_34002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33963)
static void C_ccall f_33963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33967)
static void C_ccall f_33967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33928)
static void C_ccall f_33928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33932)
static void C_ccall f_33932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33893)
static void C_ccall f_33893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33897)
static void C_ccall f_33897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33858)
static void C_ccall f_33858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33862)
static void C_ccall f_33862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33415)
static void C_fcall f_33415(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33822)
static void C_ccall f_33822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33837)
static void C_ccall f_33837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33829)
static void C_ccall f_33829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33793)
static void C_ccall f_33793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33797)
static void C_ccall f_33797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33758)
static void C_ccall f_33758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33762)
static void C_ccall f_33762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33723)
static void C_ccall f_33723(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33727)
static void C_ccall f_33727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33688)
static void C_ccall f_33688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33692)
static void C_ccall f_33692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33653)
static void C_ccall f_33653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33657)
static void C_ccall f_33657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33418)
static void C_fcall f_33418(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33617)
static void C_ccall f_33617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33632)
static void C_ccall f_33632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33624)
static void C_ccall f_33624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33588)
static void C_ccall f_33588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33592)
static void C_ccall f_33592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33553)
static void C_ccall f_33553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33557)
static void C_ccall f_33557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33518)
static void C_ccall f_33518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33522)
static void C_ccall f_33522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33483)
static void C_ccall f_33483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33487)
static void C_ccall f_33487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33448)
static void C_ccall f_33448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33452)
static void C_ccall f_33452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33421)
static void C_fcall f_33421(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33424)
static void C_ccall f_33424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33399)
static void C_ccall f_33399(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7748)
static void C_ccall f_7748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33246)
static void C_fcall f_33246(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33253)
static void C_fcall f_33253(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33191)
static void C_fcall f_33191(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33198)
static void C_fcall f_33198(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32944)
static void C_ccall f_32944(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32944)
static void C_ccall f_32944r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_33168)
static void C_ccall f_33168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33183)
static void C_ccall f_33183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33175)
static void C_ccall f_33175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33139)
static void C_ccall f_33139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33143)
static void C_ccall f_33143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33104)
static void C_ccall f_33104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33108)
static void C_ccall f_33108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32948)
static void C_fcall f_32948(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33068)
static void C_ccall f_33068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33083)
static void C_ccall f_33083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33075)
static void C_ccall f_33075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33039)
static void C_ccall f_33039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33043)
static void C_ccall f_33043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33004)
static void C_ccall f_33004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33008)
static void C_ccall f_33008(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32951)
static void C_fcall f_32951(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32954)
static void C_ccall f_32954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32967)
static void C_ccall f_32967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32971)
static void C_ccall f_32971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32873)
static void C_ccall f_32873(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_32873)
static void C_ccall f_32873r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_32877)
static void C_ccall f_32877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32880)
static void C_ccall f_32880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7668)
static void C_ccall f_7668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32883)
static void C_ccall f_32883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32915)
static void C_ccall f_32915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32905)
static void C_ccall f_32905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32895)
static void C_ccall f_32895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32886)
static void C_ccall f_32886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32845)
static void C_ccall f_32845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32849)
static void C_ccall f_32849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32821)
static void C_ccall f_32821(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32772)
static void C_ccall f_32772(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7654)
static void C_ccall f_7654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32776)
static void C_ccall f_32776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32792)
static void C_ccall f_32792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32819)
static void C_ccall f_32819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32795)
static void C_ccall f_32795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32815)
static void C_ccall f_32815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32811)
static void C_ccall f_32811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32779)
static void C_ccall f_32779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32763)
static void C_ccall f_32763(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32767)
static void C_ccall f_32767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32610)
static void C_ccall f_32610(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32610)
static void C_ccall f_32610r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_32737)
static void C_fcall f_32737(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32750)
static void C_ccall f_32750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32732)
static void C_ccall f_32732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32613)
static void C_fcall f_32613(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32729)
static void C_ccall f_32729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32713)
static void C_ccall f_32713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32641)
static void C_ccall f_32641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32649)
static void C_fcall f_32649(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32659)
static void C_ccall f_32659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32662)
static void C_ccall f_32662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32644)
static void C_ccall f_32644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32451)
static void C_fcall f_32451(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7700)
static void C_ccall f_7700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32473)
static void C_ccall f_32473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32477)
static void C_ccall f_32477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32455)
static void C_fcall f_32455(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31967)
static void C_ccall f_31967(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_31967)
static void C_ccall f_31967r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_32428)
static void C_ccall f_32428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32443)
static void C_ccall f_32443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32435)
static void C_ccall f_32435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32399)
static void C_ccall f_32399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32403)
static void C_ccall f_32403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32364)
static void C_ccall f_32364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32368)
static void C_ccall f_32368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32329)
static void C_ccall f_32329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32333)
static void C_ccall f_32333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31971)
static void C_fcall f_31971(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32293)
static void C_ccall f_32293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32308)
static void C_ccall f_32308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32300)
static void C_ccall f_32300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32264)
static void C_ccall f_32264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32268)
static void C_ccall f_32268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32229)
static void C_ccall f_32229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32233)
static void C_ccall f_32233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32194)
static void C_ccall f_32194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32198)
static void C_ccall f_32198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31974)
static void C_fcall f_31974(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32158)
static void C_ccall f_32158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32173)
static void C_ccall f_32173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32165)
static void C_ccall f_32165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32129)
static void C_ccall f_32129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32133)
static void C_ccall f_32133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32094)
static void C_ccall f_32094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32098)
static void C_ccall f_32098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32059)
static void C_ccall f_32059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32063)
static void C_ccall f_32063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31977)
static void C_fcall f_31977(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31980)
static void C_ccall f_31980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32035)
static void C_ccall f_32035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32031)
static void C_ccall f_32031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31983)
static void C_fcall f_31983(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29771)
static void C_ccall f_29771(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29784)
static void C_ccall f_29784(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29791)
static void C_fcall f_29791(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29798)
static void C_ccall f_29798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29777)
static void C_ccall f_29777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31995)
static void C_ccall f_31995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32017)
static void C_ccall f_32017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32579)
static void C_fcall f_32579(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32589)
static void C_fcall f_32589(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32492)
static void C_ccall f_32492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32549)
static void C_fcall f_32549(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32559)
static void C_fcall f_32559(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32500)
static void C_ccall f_32500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32518)
static void C_ccall f_32518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32522)
static void C_ccall f_32522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32526)
static void C_ccall f_32526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32533)
static void C_ccall f_32533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32510)
static void C_ccall f_32510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32503)
static void C_ccall f_32503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31986)
static void C_ccall f_31986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30898)
static void C_ccall f_30898(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30911)
static void C_ccall f_30911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30961)
static void C_ccall f_30961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31058)
static void C_ccall f_31058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31126)
static void C_ccall f_31126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31383)
static void C_ccall f_31383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31133)
static void C_fcall f_31133(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31371)
static void C_ccall f_31371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31322)
static void C_ccall f_31322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31328)
static void C_ccall f_31328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31352)
static void C_ccall f_31352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31348)
static void C_ccall f_31348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31336)
static void C_ccall f_31336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31136)
static void C_fcall f_31136(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31298)
static void C_ccall f_31298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31302)
static void C_ccall f_31302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31139)
static void C_fcall f_31139(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31275)
static void C_ccall f_31275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31279)
static void C_ccall f_31279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31142)
static void C_fcall f_31142(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31252)
static void C_ccall f_31252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31256)
static void C_ccall f_31256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31145)
static void C_fcall f_31145(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31177)
static void C_ccall f_31177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31195)
static void C_ccall f_31195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31213)
static void C_ccall f_31213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31231)
static void C_ccall f_31231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31148)
static void C_fcall f_31148(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31152)
static void C_ccall f_31152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31062)
static void C_ccall f_31062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31066)
static void C_ccall f_31066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31070)
static void C_ccall f_31070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30965)
static void C_ccall f_30965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30969)
static void C_ccall f_30969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30973)
static void C_ccall f_30973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30992)
static void C_ccall f_30992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30996)
static void C_ccall f_30996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30976)
static void C_fcall f_30976(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30980)
static void C_ccall f_30980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30915)
static void C_ccall f_30915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30919)
static void C_ccall f_30919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30923)
static void C_ccall f_30923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30905)
static void C_fcall f_30905(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30720)
static void C_fcall f_30720(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30732)
static void C_fcall f_30732(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30751)
static void C_ccall f_30751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30769)
static void C_fcall f_30769(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30801)
static void C_ccall f_30801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30804)
static void C_fcall f_30804(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30797)
static void C_ccall f_30797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30783)
static void C_ccall f_30783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30754)
static void C_ccall f_30754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30699)
static void C_fcall f_30699(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30706)
static void C_ccall f_30706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30709)
static void C_ccall f_30709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30715)
static void C_ccall f_30715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30634)
static void C_fcall f_30634(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30643)
static void C_fcall f_30643(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30666)
static void C_ccall f_30666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30656)
static void C_fcall f_30656(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30590)
static void C_fcall f_30590(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30598)
static void C_ccall f_30598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30602)
static void C_ccall f_30602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30578)
static void C_fcall f_30578(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30476)
static void C_fcall f_30476(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30428)
static void C_fcall f_30428(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29809)
static void C_fcall f_29809(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_29813)
static void C_ccall f_29813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29816)
static void C_ccall f_29816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30242)
static void C_ccall f_30242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30238)
static void C_ccall f_30238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30234)
static void C_ccall f_30234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29819)
static void C_fcall f_29819(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29942)
static void C_ccall f_29942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29124)
static void C_ccall f_29124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29948)
static void C_fcall f_29948(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29140)
static void C_ccall f_29140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30036)
static void C_fcall f_30036(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30106)
static void C_ccall f_30106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29156)
static void C_ccall f_29156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30109)
static void C_fcall f_30109(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29188)
static void C_ccall f_29188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30187)
static void C_fcall f_30187(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30213)
static void C_ccall f_30213(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30207)
static void C_ccall f_30207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30196)
static void C_ccall f_30196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30138)
static void C_fcall f_30138(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30148)
static void C_ccall f_30148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30174)
static void C_ccall f_30174(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30168)
static void C_ccall f_30168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30151)
static void C_ccall f_30151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30161)
static void C_ccall f_30161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30154)
static void C_fcall f_30154(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30115)
static void C_ccall f_30115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30124)
static void C_ccall f_30124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30118)
static void C_fcall f_30118(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30042)
static void C_ccall f_30042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30060)
static void C_fcall f_30060(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30093)
static void C_ccall f_30093(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30079)
static void C_ccall f_30079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30087)
static void C_ccall f_30087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30070)
static void C_ccall f_30070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30045)
static void C_ccall f_30045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29957)
static void C_ccall f_29957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29979)
static void C_fcall f_29979(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30026)
static void C_ccall f_30026(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30012)
static void C_ccall f_30012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30020)
static void C_ccall f_30020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29992)
static void C_ccall f_29992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29995)
static void C_fcall f_29995(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29960)
static void C_ccall f_29960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29977)
static void C_ccall f_29977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29963)
static void C_fcall f_29963(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29828)
static void C_ccall f_29828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29834)
static void C_ccall f_29834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29892)
static void C_ccall f_29892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29895)
static void C_ccall f_29895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29916)
static void C_ccall f_29916(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29927)
static void C_ccall f_29927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29906)
static void C_ccall f_29906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29840)
static void C_ccall f_29840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29850)
static void C_ccall f_29850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29886)
static void C_ccall f_29886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29856)
static void C_ccall f_29856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29871)
static void C_ccall f_29871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29879)
static void C_ccall f_29879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29863)
static void C_ccall f_29863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29705)
static void C_fcall f_29705(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29707)
static void C_ccall f_29707(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29755)
static void C_ccall f_29755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29711)
static void C_ccall f_29711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29714)
static void C_fcall f_29714(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29719)
static void C_fcall f_29719(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29740)
static void C_ccall f_29740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29697)
static void C_fcall f_29697(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29699)
static void C_ccall f_29699(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29520)
static void C_ccall f_29520(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_29520)
static void C_ccall f_29520r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_29528)
static void C_ccall f_29528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29489)
static void C_fcall f_29489(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29506)
static void C_ccall f_29506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29510)
static void C_ccall f_29510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29456)
static void C_fcall f_29456(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29463)
static void C_ccall f_29463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29350)
static void C_ccall f_29350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29357)
static void C_ccall f_29357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29472)
static void C_ccall f_29472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29695)
static void C_ccall f_29695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29672)
static void C_ccall f_29672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29688)
static void C_ccall f_29688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29534)
static void C_ccall f_29534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29537)
static void C_ccall f_29537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29561)
static void C_ccall f_29561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29618)
static void C_ccall f_29618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29624)
static void C_ccall f_29624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29633)
static void C_ccall f_29633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29642)
static void C_ccall f_29642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29651)
static void C_ccall f_29651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29660)
static void C_ccall f_29660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29612)
static void C_ccall f_29612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29567)
static void C_ccall f_29567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29573)
static void C_ccall f_29573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29579)
static void C_ccall f_29579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29585)
static void C_ccall f_29585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29591)
static void C_ccall f_29591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29597)
static void C_ccall f_29597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29438)
static void C_fcall f_29438(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29445)
static void C_ccall f_29445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29371)
static void C_fcall f_29371(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29359)
static void C_fcall f_29359(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29327)
static void C_fcall f_29327(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29334)
static void C_ccall f_29334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29341)
static void C_ccall f_29341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29311)
static void C_fcall f_29311(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29318)
static void C_ccall f_29318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29325)
static void C_ccall f_29325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29302)
static void C_fcall f_29302(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29284)
static void C_fcall f_29284(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29266)
static void C_fcall f_29266(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29251)
static void C_fcall f_29251(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29245)
static void C_fcall f_29245(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29197)
static void C_fcall f_29197(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29165)
static void C_fcall f_29165(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29172)
static void C_ccall f_29172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29107)
static void C_fcall f_29107(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29115)
static void C_ccall f_29115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29097)
static void C_fcall f_29097(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29105)
static void C_ccall f_29105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29091)
static void C_fcall f_29091(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29079)
static void C_fcall f_29079(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29076)
static void C_ccall f_29076(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29058)
static void C_fcall f_29058(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29062)
static void C_ccall f_29062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28953)
static void C_fcall f_28953(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_28943)
static void C_fcall f_28943(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28931)
static void C_fcall f_28931(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28908)
static void C_ccall f_28908(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28899)
static void C_fcall f_28899(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28863)
static void C_fcall f_28863(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28842)
static void C_ccall f_28842(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28646)
static void C_ccall f_28646(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28650)
static void C_fcall f_28650(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28799)
static void C_fcall f_28799(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28825)
static void C_ccall f_28825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28810)
static void C_ccall f_28810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28656)
static void C_ccall f_28656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28661)
static void C_ccall f_28661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28665)
static void C_ccall f_28665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28668)
static void C_ccall f_28668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28671)
static void C_ccall f_28671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28674)
static void C_ccall f_28674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28677)
static void C_ccall f_28677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28680)
static void C_ccall f_28680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28685)
static void C_fcall f_28685(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28779)
static void C_ccall f_28779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28786)
static void C_ccall f_28786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28695)
static void C_ccall f_28695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28716)
static void C_ccall f_28716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28720)
static void C_ccall f_28720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28724)
static void C_ccall f_28724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28726)
static void C_fcall f_28726(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28736)
static void C_ccall f_28736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28698)
static void C_ccall f_28698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28701)
static void C_ccall f_28701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28520)
static void C_ccall f_28520(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28526)
static void C_ccall f_28526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28530)
static void C_ccall f_28530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28548)
static void C_ccall f_28548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28551)
static void C_ccall f_28551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28555)
static void C_ccall f_28555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28558)
static void C_ccall f_28558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28610)
static void C_fcall f_28610(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28621)
static void C_ccall f_28621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28561)
static void C_ccall f_28561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28571)
static void C_ccall f_28571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28573)
static void C_fcall f_28573(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28417)
static void C_ccall f_28417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28441)
static void C_ccall f_28441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28445)
static void C_ccall f_28445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28471)
static void C_fcall f_28471(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28481)
static void C_ccall f_28481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28518)
static void C_ccall f_28518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28510)
static void C_ccall f_28510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28448)
static void C_ccall f_28448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28418)
static void C_fcall f_28418(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28422)
static void C_ccall f_28422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28425)
static void C_ccall f_28425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28587)
static void C_ccall f_28587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28590)
static void C_fcall f_28590(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28597)
static void C_ccall f_28597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28531)
static void C_fcall f_28531(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28535)
static void C_ccall f_28535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28538)
static void C_ccall f_28538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28007)
static void C_ccall f_28007(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_28007)
static void C_ccall f_28007r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_28386)
static void C_fcall f_28386(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28380)
static void C_ccall f_28380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28011)
static void C_ccall f_28011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28364)
static void C_ccall f_28364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28014)
static void C_ccall f_28014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28350)
static void C_ccall f_28350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28346)
static void C_ccall f_28346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28017)
static void C_fcall f_28017(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28339)
static void C_ccall f_28339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28335)
static void C_ccall f_28335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28020)
static void C_fcall f_28020(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28023)
static void C_fcall f_28023(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8668)
static void C_fcall f_8668(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8691)
static void C_ccall f_8691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8681)
static void C_fcall f_8681(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28323)
static void C_ccall f_28323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28315)
static void C_ccall f_28315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28319)
static void C_ccall f_28319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28307)
static void C_ccall f_28307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28311)
static void C_ccall f_28311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28181)
static void C_fcall f_28181(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28296)
static void C_ccall f_28296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28300)
static void C_ccall f_28300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28288)
static void C_ccall f_28288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28292)
static void C_ccall f_28292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28184)
static void C_fcall f_28184(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28188)
static void C_ccall f_28188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28193)
static void C_fcall f_28193(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28203)
static void C_fcall f_28203(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28206)
static void C_ccall f_28206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28087)
static void C_ccall f_28087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28150)
static void C_fcall f_28150(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28171)
static void C_ccall f_28171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28112)
static void C_fcall f_28112(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28141)
static void C_ccall f_28141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28090)
static void C_ccall f_28090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28107)
static void C_ccall f_28107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28103)
static void C_ccall f_28103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27553)
static void C_ccall f_27553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27557)
static void C_ccall f_27557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27545)
static void C_ccall f_27545(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27473)
static void C_ccall f_27473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27531)
static void C_ccall f_27531(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27477)
static void C_ccall f_27477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27485)
static void C_fcall f_27485(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27495)
static void C_ccall f_27495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27498)
static void C_ccall f_27498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28067)
static void C_fcall f_28067(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28037)
static void C_fcall f_28037(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28026)
static void C_ccall f_28026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27950)
static void C_ccall f_27950(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27958)
static void C_ccall f_27958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27962)
static void C_ccall f_27962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27966)
static void C_ccall f_27966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27972)
static void C_fcall f_27972(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_27982)
static void C_ccall f_27982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27738)
static void C_ccall f_27738(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27806)
static void C_ccall f_27806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27809)
static void C_ccall f_27809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27812)
static void C_ccall f_27812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27815)
static void C_ccall f_27815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27818)
static void C_ccall f_27818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27916)
static void C_fcall f_27916(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27926)
static void C_ccall f_27926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27884)
static void C_fcall f_27884(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27894)
static void C_ccall f_27894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27835)
static void C_fcall f_27835(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27854)
static void C_fcall f_27854(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27864)
static void C_ccall f_27864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27845)
static void C_ccall f_27845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27821)
static void C_ccall f_27821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27774)
static void C_fcall f_27774(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27784)
static void C_ccall f_27784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27757)
static void C_fcall f_27757(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27764)
static void C_ccall f_27764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27740)
static void C_fcall f_27740(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27747)
static void C_ccall f_27747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27559)
static void C_ccall f_27559(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27567)
static void C_ccall f_27567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27571)
static void C_ccall f_27571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27573)
static void C_fcall f_27573(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_27583)
static void C_fcall f_27583(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27714)
static void C_ccall f_27714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27663)
static void C_ccall f_27663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27666)
static void C_ccall f_27666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27677)
static void C_ccall f_27677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27629)
static void C_ccall f_27629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27598)
static void C_ccall f_27598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27601)
static void C_ccall f_27601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27586)
static void C_ccall f_27586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27153)
static void C_ccall f_27153(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27467)
static void C_ccall f_27467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27396)
static void C_ccall f_27396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27398)
static void C_fcall f_27398(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27420)
static void C_fcall f_27420(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27166)
static void C_ccall f_27166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27239)
static void C_fcall f_27239(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27392)
static void C_ccall f_27392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27376)
static void C_ccall f_27376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27328)
static void C_fcall f_27328(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27342)
static void C_fcall f_27342(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27295)
static void C_ccall f_27295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27270)
static void C_fcall f_27270(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27169)
static void C_ccall f_27169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27177)
static void C_fcall f_27177(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25680)
static void C_ccall f_25680(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_25680)
static void C_ccall f_25680r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_27130)
static void C_ccall f_27130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27145)
static void C_ccall f_27145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27137)
static void C_ccall f_27137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27101)
static void C_ccall f_27101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27105)
static void C_ccall f_27105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27066)
static void C_ccall f_27066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27070)
static void C_ccall f_27070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27031)
static void C_ccall f_27031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27035)
static void C_ccall f_27035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26996)
static void C_ccall f_26996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27000)
static void C_ccall f_27000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26961)
static void C_ccall f_26961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26965)
static void C_ccall f_26965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26926)
static void C_ccall f_26926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26930)
static void C_ccall f_26930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25684)
static void C_fcall f_25684(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26890)
static void C_ccall f_26890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26905)
static void C_ccall f_26905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26897)
static void C_ccall f_26897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26861)
static void C_ccall f_26861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26865)
static void C_ccall f_26865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26826)
static void C_ccall f_26826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26830)
static void C_ccall f_26830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26791)
static void C_ccall f_26791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26795)
static void C_ccall f_26795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26756)
static void C_ccall f_26756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26760)
static void C_ccall f_26760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26721)
static void C_ccall f_26721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26725)
static void C_ccall f_26725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26686)
static void C_ccall f_26686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26690)
static void C_ccall f_26690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25687)
static void C_fcall f_25687(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26650)
static void C_ccall f_26650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26665)
static void C_ccall f_26665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26657)
static void C_ccall f_26657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26621)
static void C_ccall f_26621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26625)
static void C_ccall f_26625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26586)
static void C_ccall f_26586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26590)
static void C_ccall f_26590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26551)
static void C_ccall f_26551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26555)
static void C_ccall f_26555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26516)
static void C_ccall f_26516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26520)
static void C_ccall f_26520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26481)
static void C_ccall f_26481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26485)
static void C_ccall f_26485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26446)
static void C_ccall f_26446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26450)
static void C_ccall f_26450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25690)
static void C_fcall f_25690(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26410)
static void C_ccall f_26410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26425)
static void C_ccall f_26425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26417)
static void C_ccall f_26417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26381)
static void C_ccall f_26381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26385)
static void C_ccall f_26385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26346)
static void C_ccall f_26346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26350)
static void C_ccall f_26350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26311)
static void C_ccall f_26311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26315)
static void C_ccall f_26315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26276)
static void C_ccall f_26276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26280)
static void C_ccall f_26280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26241)
static void C_ccall f_26241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26245)
static void C_ccall f_26245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26206)
static void C_ccall f_26206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26210)
static void C_ccall f_26210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25693)
static void C_fcall f_25693(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26170)
static void C_ccall f_26170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26185)
static void C_ccall f_26185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26177)
static void C_ccall f_26177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26141)
static void C_ccall f_26141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26145)
static void C_ccall f_26145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26106)
static void C_ccall f_26106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26110)
static void C_ccall f_26110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26071)
static void C_ccall f_26071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26075)
static void C_ccall f_26075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26036)
static void C_ccall f_26036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26040)
static void C_ccall f_26040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26001)
static void C_ccall f_26001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26005)
static void C_ccall f_26005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25966)
static void C_ccall f_25966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25970)
static void C_ccall f_25970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25696)
static void C_fcall f_25696(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25930)
static void C_ccall f_25930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25945)
static void C_ccall f_25945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25937)
static void C_ccall f_25937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25901)
static void C_ccall f_25901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25905)
static void C_ccall f_25905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25866)
static void C_ccall f_25866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25870)
static void C_ccall f_25870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25831)
static void C_ccall f_25831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25835)
static void C_ccall f_25835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25796)
static void C_ccall f_25796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25800)
static void C_ccall f_25800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25761)
static void C_ccall f_25761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25765)
static void C_ccall f_25765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25726)
static void C_ccall f_25726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25730)
static void C_ccall f_25730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25699)
static void C_fcall f_25699(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25702)
static void C_ccall f_25702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25448)
static void C_fcall f_25448(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25454)
static void C_ccall f_25454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25457)
static void C_ccall f_25457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25661)
static void C_ccall f_25661(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25646)
static void C_ccall f_25646(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25581)
static void C_ccall f_25581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8436)
static void C_fcall f_8436(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25557)
static void C_ccall f_25557(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25561)
static void C_ccall f_25561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25547)
static void C_ccall f_25547(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25555)
static void C_ccall f_25555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25533)
static void C_fcall f_25533(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25459)
static void C_fcall f_25459(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25528)
static void C_ccall f_25528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25463)
static void C_ccall f_25463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25500)
static void C_fcall f_25500(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25474)
static void C_fcall f_25474(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25419)
static void C_ccall f_25419(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25423)
static void C_ccall f_25423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25434)
static void C_ccall f_25434(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25432)
static void C_ccall f_25432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25388)
static void C_ccall f_25388(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25392)
static void C_ccall f_25392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25403)
static void C_ccall f_25403(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25401)
static void C_ccall f_25401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25370)
static void C_ccall f_25370(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25378)
static void C_ccall f_25378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25386)
static void C_ccall f_25386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25360)
static void C_ccall f_25360(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25368)
static void C_ccall f_25368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25301)
static void C_ccall f_25301(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25308)
static void C_ccall f_25308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25311)
static void C_ccall f_25311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25314)
static void C_ccall f_25314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25319)
static void C_fcall f_25319(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25263)
static void C_ccall f_25263(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25271)
static void C_ccall f_25271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25275)
static void C_ccall f_25275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25295)
static void C_ccall f_25295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25279)
static void C_ccall f_25279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25287)
static void C_ccall f_25287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25283)
static void C_ccall f_25283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25254)
static void C_ccall f_25254(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25245)
static void C_fcall f_25245(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25236)
static void C_ccall f_25236(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25227)
static void C_fcall f_25227(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25218)
static void C_ccall f_25218(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25209)
static void C_fcall f_25209(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25200)
static void C_ccall f_25200(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25185)
static void C_fcall f_25185(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25179)
static void C_fcall f_25179(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25134)
static void C_fcall f_25134(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7640)
static void C_ccall f_7640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25092)
static void C_fcall f_25092(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25102)
static void C_ccall f_25102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24244)
static void C_ccall f_24244(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7568)
static void C_ccall f_7568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24238)
static void C_ccall f_24238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24213)
static void C_ccall f_24213(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23897)
static void C_ccall f_23897(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_23897)
static void C_ccall f_23897r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_23901)
static void C_fcall f_23901(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23958)
static void C_ccall f_23958(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23930)
static void C_ccall f_23930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23995)
static void C_ccall f_23995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24032)
static void C_ccall f_24032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24035)
static void C_ccall f_24035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24195)
static void C_ccall f_24195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24042)
static void C_ccall f_24042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24045)
static void C_ccall f_24045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24047)
static void C_fcall f_24047(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_24057)
static void C_ccall f_24057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24060)
static void C_ccall f_24060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24093)
static void C_ccall f_24093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24181)
static void C_ccall f_24181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24096)
static void C_ccall f_24096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24167)
static void C_ccall f_24167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24153)
static void C_ccall f_24153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24133)
static void C_ccall f_24133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24136)
static void C_ccall f_24136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24113)
static void C_ccall f_24113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24116)
static void C_ccall f_24116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24099)
static void C_ccall f_24099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23996)
static void C_fcall f_23996(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24002)
static void C_fcall f_24002(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24012)
static void C_fcall f_24012(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23881)
static void C_fcall f_23881(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23885)
static void C_ccall f_23885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23892)
static void C_ccall f_23892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23876)
static void C_fcall f_23876(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23729)
static void C_ccall f_23729(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_23729)
static void C_ccall f_23729r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_23733)
static void C_fcall f_23733(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23802)
static void C_ccall f_23802(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23845)
static void C_ccall f_23845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23849)
static void C_ccall f_23849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23838)
static void C_ccall f_23838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23825)
static void C_ccall f_23825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23744)
static void C_ccall f_23744(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23787)
static void C_ccall f_23787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23791)
static void C_ccall f_23791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23780)
static void C_ccall f_23780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23767)
static void C_ccall f_23767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23563)
static void C_ccall f_23563(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23664)
static void C_ccall f_23664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23713)
static void C_ccall f_23713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23709)
static void C_ccall f_23709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23681)
static void C_ccall f_23681(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23616)
static void C_fcall f_23616(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23625)
static void C_fcall f_23625(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23609)
static void C_ccall f_23609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23428)
static void C_ccall f_23428(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23554)
static void C_ccall f_23554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23550)
static void C_ccall f_23550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23528)
static void C_ccall f_23528(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23458)
static void C_fcall f_23458(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23474)
static void C_fcall f_23474(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23383)
static void C_ccall f_23383(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23426)
static void C_ccall f_23426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23415)
static void C_ccall f_23415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23267)
static void C_ccall f_23267(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23381)
static void C_ccall f_23381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23282)
static void C_fcall f_23282(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_23312)
static void C_fcall f_23312(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23331)
static void C_ccall f_23331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23316)
static void C_ccall f_23316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23295)
static void C_fcall f_23295(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23145)
static void C_ccall f_23145(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23265)
static void C_ccall f_23265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23160)
static void C_fcall f_23160(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_23190)
static void C_fcall f_23190(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23209)
static void C_ccall f_23209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23194)
static void C_ccall f_23194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23173)
static void C_fcall f_23173(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23048)
static void C_ccall f_23048(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23143)
static void C_ccall f_23143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23063)
static void C_fcall f_23063(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_23109)
static void C_ccall f_23109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23094)
static void C_ccall f_23094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23076)
static void C_fcall f_23076(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22995)
static void C_fcall f_22995(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23033)
static void C_ccall f_23033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23040)
static void C_ccall f_23040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23018)
static void C_ccall f_23018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22993)
static void C_ccall f_22993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22974)
static void C_fcall f_22974(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22961)
static void C_ccall f_22961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22943)
static void C_ccall f_22943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22896)
static void C_fcall f_22896(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22900)
static void C_ccall f_22900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22925)
static void C_ccall f_22925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22912)
static void C_ccall f_22912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22868)
static void C_ccall f_22868(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22868)
static void C_ccall f_22868r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22849)
static void C_ccall f_22849(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22849)
static void C_ccall f_22849r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22808)
static void C_ccall f_22808(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22808)
static void C_ccall f_22808r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22789)
static void C_ccall f_22789(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22789)
static void C_ccall f_22789r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22561)
static void C_ccall f_22561(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22561)
static void C_ccall f_22561r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22766)
static void C_ccall f_22766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22781)
static void C_ccall f_22781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22773)
static void C_ccall f_22773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22737)
static void C_ccall f_22737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22741)
static void C_ccall f_22741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22702)
static void C_ccall f_22702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22706)
static void C_ccall f_22706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22565)
static void C_fcall f_22565(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22666)
static void C_ccall f_22666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22681)
static void C_ccall f_22681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22673)
static void C_ccall f_22673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22637)
static void C_ccall f_22637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22641)
static void C_ccall f_22641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22602)
static void C_ccall f_22602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22606)
static void C_ccall f_22606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22568)
static void C_fcall f_22568(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22571)
static void C_ccall f_22571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22574)
static void C_fcall f_22574(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22519)
static void C_ccall f_22519(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22519)
static void C_ccall f_22519r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22548)
static void C_ccall f_22548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22533)
static void C_ccall f_22533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22464)
static void C_ccall f_22464(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22475)
static void C_ccall f_22475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22477)
static void C_fcall f_22477(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22505)
static void C_ccall f_22505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22365)
static void C_ccall f_22365(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_22365)
static void C_ccall f_22365r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_22369)
static void C_fcall f_22369(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22372)
static void C_ccall f_22372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22437)
static void C_ccall f_22437(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22374)
static void C_fcall f_22374(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22390)
static void C_ccall f_22390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22094)
static void C_ccall f_22094(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22094)
static void C_ccall f_22094r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22127)
static void C_ccall f_22127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22112)
static void C_ccall f_22112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22073)
static void C_ccall f_22073(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22038)
static void C_ccall f_22038(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22038)
static void C_ccall f_22038r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_22042)
static void C_fcall f_22042(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21830)
static void C_ccall f_21830(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_21830)
static void C_ccall f_21830r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_21843)
static void C_fcall f_21843(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21925)
static void C_fcall f_21925(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21928)
static void C_ccall f_21928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21936)
static void C_fcall f_21936(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21948)
static void C_fcall f_21948(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21969)
static void C_ccall f_21969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21977)
static void C_ccall f_21977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21864)
static void C_ccall f_21864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21869)
static void C_fcall f_21869(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21901)
static void C_ccall f_21901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21723)
static void C_ccall f_21723(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_21723)
static void C_ccall f_21723r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_21810)
static void C_ccall f_21810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21730)
static void C_fcall f_21730(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21739)
static void C_fcall f_21739(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_21786)
static void C_ccall f_21786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21752)
static void C_fcall f_21752(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21778)
static void C_ccall f_21778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21590)
static void C_ccall f_21590(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_21590)
static void C_ccall f_21590r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_21594)
static void C_fcall f_21594(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21597)
static void C_fcall f_21597(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21701)
static void C_ccall f_21701(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21599)
static void C_fcall f_21599(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21606)
static void C_ccall f_21606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21648)
static void C_ccall f_21648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21655)
static void C_ccall f_21655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21629)
static void C_ccall f_21629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21523)
static void C_ccall f_21523(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_21523)
static void C_ccall f_21523r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_21527)
static void C_fcall f_21527(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21573)
static void C_ccall f_21573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21530)
static void C_fcall f_21530(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21566)
static void C_ccall f_21566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21533)
static void C_fcall f_21533(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21546)
static void C_ccall f_21546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21477)
static void C_ccall f_21477(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_21477)
static void C_ccall f_21477r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_21481)
static void C_ccall f_21481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21391)
static void C_fcall f_21391(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21395)
static void C_ccall f_21395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21398)
static void C_ccall f_21398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21407)
static void C_fcall f_21407(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21429)
static void C_ccall f_21429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21376)
static void C_ccall f_21376(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21346)
static void C_ccall f_21346(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21110)
static void C_ccall f_21110(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_21110)
static void C_ccall f_21110r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_21323)
static void C_ccall f_21323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21338)
static void C_ccall f_21338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21330)
static void C_ccall f_21330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21294)
static void C_ccall f_21294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21298)
static void C_ccall f_21298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21259)
static void C_ccall f_21259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21263)
static void C_ccall f_21263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21114)
static void C_fcall f_21114(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21223)
static void C_ccall f_21223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21238)
static void C_ccall f_21238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21230)
static void C_ccall f_21230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21194)
static void C_ccall f_21194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21198)
static void C_ccall f_21198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21159)
static void C_ccall f_21159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21163)
static void C_ccall f_21163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21117)
static void C_fcall f_21117(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21120)
static void C_ccall f_21120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21131)
static void C_ccall f_21131(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21070)
static void C_ccall f_21070(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21074)
static void C_ccall f_21074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21104)
static void C_ccall f_21104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21085)
static void C_ccall f_21085(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21093)
static void C_ccall f_21093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21049)
static void C_ccall f_21049(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21061)
static void C_ccall f_21061(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21006)
static void C_ccall f_21006(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_21006)
static void C_ccall f_21006r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_21036)
static void C_ccall f_21036(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20963)
static void C_ccall f_20963(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_20963)
static void C_ccall f_20963r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_20993)
static void C_ccall f_20993(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20894)
static void C_ccall f_20894(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_20894)
static void C_ccall f_20894r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_20938)
static void C_ccall f_20938(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20825)
static void C_ccall f_20825(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_20825)
static void C_ccall f_20825r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_20869)
static void C_ccall f_20869(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20819)
static void C_ccall f_20819(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20813)
static void C_ccall f_20813(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20792)
static void C_ccall f_20792(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20804)
static void C_ccall f_20804(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20777)
static void C_ccall f_20777(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20666)
static void C_ccall f_20666(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...) C_noret;
C_noret_decl(f_20666)
static void C_ccall f_20666r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t7) C_noret;
C_noret_decl(f_20741)
static void C_ccall f_20741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20670)
static void C_fcall f_20670(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20710)
static void C_ccall f_20710(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20699)
static void C_ccall f_20699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20684)
static void C_ccall f_20684(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20692)
static void C_ccall f_20692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20632)
static void C_ccall f_20632(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...) C_noret;
C_noret_decl(f_20632)
static void C_ccall f_20632r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t8) C_noret;
C_noret_decl(f_20644)
static void C_ccall f_20644(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19585)
static void C_ccall f_19585(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_19585)
static void C_ccall f_19585r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_20609)
static void C_ccall f_20609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20624)
static void C_ccall f_20624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20616)
static void C_ccall f_20616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20580)
static void C_ccall f_20580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20584)
static void C_ccall f_20584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20545)
static void C_ccall f_20545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20549)
static void C_ccall f_20549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19595)
static void C_fcall f_19595(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20509)
static void C_ccall f_20509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20524)
static void C_ccall f_20524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20516)
static void C_ccall f_20516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20480)
static void C_ccall f_20480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20484)
static void C_ccall f_20484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20445)
static void C_ccall f_20445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20449)
static void C_ccall f_20449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19598)
static void C_fcall f_19598(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19601)
static void C_ccall f_19601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19606)
static void C_ccall f_19606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20338)
static void C_fcall f_20338(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20361)
static void C_fcall f_20361(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20414)
static void C_ccall f_20414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20396)
static void C_fcall f_20396(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20389)
static void C_ccall f_20389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20371)
static void C_ccall f_20371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20348)
static void C_ccall f_20348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19800)
static void C_ccall f_19800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20300)
static void C_fcall f_20300(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20322)
static void C_ccall f_20322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20306)
static void C_ccall f_20306(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20314)
static void C_ccall f_20314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20318)
static void C_ccall f_20318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20304)
static void C_ccall f_20304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20294)
static void C_ccall f_20294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19803)
static void C_fcall f_19803(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20171)
static void C_fcall f_20171(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20195)
static void C_ccall f_20195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20257)
static void C_fcall f_20257(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20198)
static void C_ccall f_20198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20214)
static void C_fcall f_20214(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20239)
static void C_ccall f_20239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20205)
static void C_ccall f_20205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20182)
static void C_ccall f_20182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19806)
static void C_ccall f_19806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20157)
static void C_ccall f_20157(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19810)
static void C_ccall f_19810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19854)
static void C_ccall f_19854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19857)
static void C_ccall f_19857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20138)
static void C_fcall f_20138(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20148)
static void C_ccall f_20148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19860)
static void C_ccall f_19860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20076)
static void C_fcall f_20076(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20086)
static void C_ccall f_20086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20089)
static void C_ccall f_20089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20109)
static void C_ccall f_20109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20111)
static void C_fcall f_20111(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20121)
static void C_ccall f_20121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20095)
static void C_ccall f_20095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20098)
static void C_ccall f_20098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19863)
static void C_ccall f_19863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19871)
static void C_fcall f_19871(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19884)
static void C_ccall f_19884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19758)
static void C_ccall f_19758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19767)
static void C_fcall f_19767(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19789)
static void C_ccall f_19789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19778)
static void C_ccall f_19778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19887)
static void C_ccall f_19887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20047)
static void C_ccall f_20047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20049)
static void C_fcall f_20049(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20059)
static void C_ccall f_20059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19893)
static void C_ccall f_19893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20020)
static void C_ccall f_20020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20022)
static void C_fcall f_20022(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20032)
static void C_ccall f_20032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19896)
static void C_ccall f_19896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19908)
static void C_fcall f_19908(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19934)
static void C_ccall f_19934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19940)
static void C_ccall f_19940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19946)
static void C_ccall f_19946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19988)
static void C_ccall f_19988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20000)
static void C_ccall f_20000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19992)
static void C_ccall f_19992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19949)
static void C_fcall f_19949(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19959)
static void C_ccall f_19959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19961)
static void C_fcall f_19961(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19971)
static void C_ccall f_19971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19952)
static void C_ccall f_19952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19921)
static void C_ccall f_19921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19899)
static void C_ccall f_19899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19866)
static void C_ccall f_19866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19813)
static void C_ccall f_19813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19836)
static void C_ccall f_19836(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19825)
static void C_ccall f_19825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19690)
static void C_fcall f_19690(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19738)
static void C_ccall f_19738(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19700)
static void C_ccall f_19700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19728)
static void C_ccall f_19728(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19703)
static void C_ccall f_19703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19608)
static void C_fcall f_19608(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8629)
static void C_fcall f_8629(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8649)
static void C_ccall f_8649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8639)
static void C_fcall f_8639(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19680)
static void C_fcall f_19680(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19612)
static void C_ccall f_19612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19630)
static void C_ccall f_19630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19662)
static void C_ccall f_19662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19491)
static void C_ccall f_19491(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19495)
static void C_ccall f_19495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19524)
static void C_ccall f_19524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19529)
static void C_fcall f_19529(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19554)
static void C_fcall f_19554(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19539)
static void C_ccall f_19539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18973)
static void C_ccall f_18973(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18973)
static void C_ccall f_18973r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_19244)
static void C_ccall f_19244(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19248)
static void C_ccall f_19248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19253)
static void C_ccall f_19253(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_19253)
static void C_ccall f_19253r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_19459)
static void C_ccall f_19459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19474)
static void C_ccall f_19474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19466)
static void C_ccall f_19466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19430)
static void C_ccall f_19430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19434)
static void C_ccall f_19434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19395)
static void C_ccall f_19395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19399)
static void C_ccall f_19399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19257)
static void C_fcall f_19257(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19359)
static void C_ccall f_19359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19374)
static void C_ccall f_19374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19366)
static void C_ccall f_19366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19330)
static void C_ccall f_19330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19334)
static void C_ccall f_19334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19295)
static void C_ccall f_19295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19299)
static void C_ccall f_19299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19260)
static void C_fcall f_19260(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19263)
static void C_ccall f_19263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19266)
static void C_fcall f_19266(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19235)
static void C_ccall f_19235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18977)
static void C_ccall f_18977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19204)
static void C_ccall f_19204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19219)
static void C_ccall f_19219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19211)
static void C_ccall f_19211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19175)
static void C_ccall f_19175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19179)
static void C_ccall f_19179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19140)
static void C_ccall f_19140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19144)
static void C_ccall f_19144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18980)
static void C_fcall f_18980(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19104)
static void C_ccall f_19104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19119)
static void C_ccall f_19119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19111)
static void C_ccall f_19111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19075)
static void C_ccall f_19075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19079)
static void C_ccall f_19079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19040)
static void C_ccall f_19040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19044)
static void C_ccall f_19044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18983)
static void C_fcall f_18983(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18986)
static void C_ccall f_18986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18989)
static void C_ccall f_18989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19001)
static void C_ccall f_19001(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19019)
static void C_ccall f_19019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19007)
static void C_ccall f_19007(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18995)
static void C_ccall f_18995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18910)
static void C_fcall f_18910(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18570)
static void C_ccall f_18570(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18752)
static void C_ccall f_18752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18756)
static void C_ccall f_18756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18758)
static void C_fcall f_18758(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18683)
static void C_fcall f_18683(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18693)
static void C_fcall f_18693(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18700)
static void C_fcall f_18700(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18768)
static void C_ccall f_18768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18771)
static void C_ccall f_18771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18775)
static void C_ccall f_18775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18795)
static void C_fcall f_18795(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18811)
static void C_ccall f_18811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18778)
static void C_ccall f_18778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18573)
static void C_fcall f_18573(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18585)
static void C_fcall f_18585(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18621)
static void C_ccall f_18621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18641)
static void C_ccall f_18641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18646)
static void C_fcall f_18646(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18083)
static void C_ccall f_18083(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18083)
static void C_ccall f_18083r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_18010)
static void C_fcall f_18010(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_17855)
static void C_ccall f_17855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17861)
static void C_ccall f_17861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17946)
static void C_fcall f_17946(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17873)
static void C_ccall f_17873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17889)
static void C_ccall f_17889(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17893)
static void C_fcall f_17893(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17896)
static void C_fcall f_17896(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17876)
static void C_ccall f_17876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17887)
static void C_ccall f_17887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18027)
static void C_ccall f_18027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18564)
static void C_ccall f_18564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18087)
static void C_ccall f_18087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18533)
static void C_ccall f_18533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18548)
static void C_ccall f_18548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18540)
static void C_ccall f_18540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18504)
static void C_ccall f_18504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18508)
static void C_ccall f_18508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18469)
static void C_ccall f_18469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18473)
static void C_ccall f_18473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18434)
static void C_ccall f_18434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18438)
static void C_ccall f_18438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18090)
static void C_fcall f_18090(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18398)
static void C_ccall f_18398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18413)
static void C_ccall f_18413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18405)
static void C_ccall f_18405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18369)
static void C_ccall f_18369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18373)
static void C_ccall f_18373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18334)
static void C_ccall f_18334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18338)
static void C_ccall f_18338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18299)
static void C_ccall f_18299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18303)
static void C_ccall f_18303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18093)
static void C_fcall f_18093(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18263)
static void C_ccall f_18263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18278)
static void C_ccall f_18278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18270)
static void C_ccall f_18270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18234)
static void C_ccall f_18234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18238)
static void C_ccall f_18238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18199)
static void C_ccall f_18199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18203)
static void C_ccall f_18203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18164)
static void C_ccall f_18164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18168)
static void C_ccall f_18168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18096)
static void C_fcall f_18096(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18099)
static void C_ccall f_18099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18102)
static void C_ccall f_18102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18135)
static void C_ccall f_18135(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18143)
static void C_ccall f_18143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18108)
static void C_ccall f_18108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18121)
static void C_ccall f_18121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18111)
static void C_fcall f_18111(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18114)
static void C_ccall f_18114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17650)
static void C_ccall f_17650(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17654)
static void C_ccall f_17654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17657)
static void C_ccall f_17657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17660)
static void C_ccall f_17660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17829)
static void C_ccall f_17829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17842)
static void C_ccall f_17842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17846)
static void C_ccall f_17846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17666)
static void C_ccall f_17666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17822)
static void C_ccall f_17822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17803)
static void C_ccall f_17803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17810)
static void C_ccall f_17810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17814)
static void C_ccall f_17814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17672)
static void C_fcall f_17672(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17678)
static void C_ccall f_17678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17762)
static void C_ccall f_17762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17764)
static void C_fcall f_17764(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17786)
static void C_ccall f_17786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17793)
static void C_ccall f_17793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17797)
static void C_ccall f_17797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17783)
static void C_fcall f_17783(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17779)
static void C_ccall f_17779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17720)
static void C_ccall f_17720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17737)
static void C_fcall f_17737(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17747)
static void C_ccall f_17747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17723)
static void C_ccall f_17723(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17682)
static void C_fcall f_17682(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17690)
static void C_ccall f_17690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17692)
static void C_fcall f_17692(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17713)
static void C_ccall f_17713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17550)
static void C_fcall f_17550(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17648)
static void C_ccall f_17648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17607)
static void C_fcall f_17607(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17640)
static void C_ccall f_17640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17636)
static void C_ccall f_17636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17621)
static void C_ccall f_17621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17557)
static void C_ccall f_17557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17565)
static void C_fcall f_17565(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17598)
static void C_ccall f_17598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17582)
static void C_ccall f_17582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16783)
static void C_ccall f_16783(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_16783)
static void C_ccall f_16783r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_17100)
static void C_ccall f_17100(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17107)
static void C_fcall f_17107(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17512)
static void C_ccall f_17512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17527)
static void C_ccall f_17527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17519)
static void C_ccall f_17519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17483)
static void C_ccall f_17483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17487)
static void C_ccall f_17487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17448)
static void C_ccall f_17448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17452)
static void C_ccall f_17452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17413)
static void C_ccall f_17413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17417)
static void C_ccall f_17417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17110)
static void C_fcall f_17110(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17377)
static void C_ccall f_17377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17392)
static void C_ccall f_17392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17384)
static void C_ccall f_17384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17348)
static void C_ccall f_17348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17352)
static void C_ccall f_17352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17313)
static void C_ccall f_17313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17317)
static void C_ccall f_17317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17278)
static void C_ccall f_17278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17282)
static void C_ccall f_17282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17113)
static void C_fcall f_17113(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17242)
static void C_ccall f_17242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17257)
static void C_ccall f_17257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17249)
static void C_ccall f_17249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17213)
static void C_ccall f_17213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17217)
static void C_ccall f_17217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17178)
static void C_ccall f_17178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17182)
static void C_ccall f_17182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17143)
static void C_ccall f_17143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17147)
static void C_ccall f_17147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17116)
static void C_fcall f_17116(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17119)
static void C_ccall f_17119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16787)
static void C_ccall f_16787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16790)
static void C_ccall f_16790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17064)
static void C_ccall f_17064(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17068)
static void C_ccall f_17068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17071)
static void C_ccall f_17071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17074)
static void C_ccall f_17074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17077)
static void C_ccall f_17077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17090)
static void C_ccall f_17090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17080)
static void C_fcall f_17080(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16796)
static void C_ccall f_16796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17059)
static void C_ccall f_17059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16803)
static void C_fcall f_16803(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17034)
static void C_ccall f_17034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17049)
static void C_ccall f_17049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17041)
static void C_ccall f_17041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17005)
static void C_ccall f_17005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17009)
static void C_ccall f_17009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16970)
static void C_ccall f_16970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16974)
static void C_ccall f_16974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16806)
static void C_fcall f_16806(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16934)
static void C_ccall f_16934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16949)
static void C_ccall f_16949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16941)
static void C_ccall f_16941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16905)
static void C_ccall f_16905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16909)
static void C_ccall f_16909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16870)
static void C_ccall f_16870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16874)
static void C_ccall f_16874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16809)
static void C_fcall f_16809(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16812)
static void C_ccall f_16812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16827)
static void C_ccall f_16827(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16849)
static void C_ccall f_16849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16833)
static void C_ccall f_16833(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16841)
static void C_ccall f_16841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16815)
static void C_ccall f_16815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16818)
static void C_ccall f_16818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16700)
static void C_fcall f_16700(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16691)
static void C_fcall f_16691(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16682)
static void C_fcall f_16682(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16664)
static void C_fcall f_16664(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16646)
static void C_fcall f_16646(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16628)
static void C_fcall f_16628(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16619)
static void C_fcall f_16619(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16610)
static void C_fcall f_16610(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16388)
static void C_ccall f_16388(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16438)
static void C_ccall f_16438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16583)
static void C_ccall f_16583(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16464)
static void C_ccall f_16464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16579)
static void C_ccall f_16579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16564)
static void C_ccall f_16564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16545)
static void C_ccall f_16545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16518)
static void C_ccall f_16518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16471)
static void C_ccall f_16471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16441)
static void C_fcall f_16441(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16391)
static void C_ccall f_16391(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_16397)
static void C_fcall f_16397(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16413)
static void C_ccall f_16413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16416)
static void C_ccall f_16416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15914)
static void C_ccall f_15914(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15914)
static void C_ccall f_15914r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_16378)
static void C_ccall f_16378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15918)
static void C_fcall f_15918(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16350)
static void C_ccall f_16350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16365)
static void C_ccall f_16365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16357)
static void C_ccall f_16357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16321)
static void C_ccall f_16321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16325)
static void C_ccall f_16325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16286)
static void C_ccall f_16286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16290)
static void C_ccall f_16290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16251)
static void C_ccall f_16251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16255)
static void C_ccall f_16255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15921)
static void C_fcall f_15921(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16215)
static void C_ccall f_16215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16230)
static void C_ccall f_16230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16222)
static void C_ccall f_16222(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16186)
static void C_ccall f_16186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16190)
static void C_ccall f_16190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16151)
static void C_ccall f_16151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16155)
static void C_ccall f_16155(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16116)
static void C_ccall f_16116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16120)
static void C_ccall f_16120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15924)
static void C_fcall f_15924(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16080)
static void C_ccall f_16080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16095)
static void C_ccall f_16095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16087)
static void C_ccall f_16087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16051)
static void C_ccall f_16051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16055)
static void C_ccall f_16055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16016)
static void C_ccall f_16016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16020)
static void C_ccall f_16020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15981)
static void C_ccall f_15981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15985)
static void C_ccall f_15985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15927)
static void C_fcall f_15927(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15930)
static void C_ccall f_15930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15933)
static void C_ccall f_15933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15948)
static void C_ccall f_15948(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15960)
static void C_ccall f_15960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15939)
static void C_ccall f_15939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15942)
static void C_ccall f_15942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15838)
static void C_ccall f_15838(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15842)
static void C_ccall f_15842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15861)
static void C_ccall f_15861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15871)
static void C_ccall f_15871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15873)
static void C_fcall f_15873(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15890)
static void C_ccall f_15890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15893)
static void C_ccall f_15893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15904)
static void C_ccall f_15904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15845)
static void C_ccall f_15845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15575)
static void C_ccall f_15575(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15575)
static void C_ccall f_15575r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15828)
static void C_ccall f_15828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15579)
static void C_fcall f_15579(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15800)
static void C_ccall f_15800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15815)
static void C_ccall f_15815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15807)
static void C_ccall f_15807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15771)
static void C_ccall f_15771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15775)
static void C_ccall f_15775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15736)
static void C_ccall f_15736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15740)
static void C_ccall f_15740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15582)
static void C_fcall f_15582(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15700)
static void C_ccall f_15700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15715)
static void C_ccall f_15715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15707)
static void C_ccall f_15707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15671)
static void C_ccall f_15671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15675)
static void C_ccall f_15675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15636)
static void C_ccall f_15636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15640)
static void C_ccall f_15640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15585)
static void C_fcall f_15585(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15588)
static void C_ccall f_15588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15591)
static void C_ccall f_15591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15603)
static void C_ccall f_15603(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15615)
static void C_ccall f_15615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15597)
static void C_ccall f_15597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15539)
static void C_ccall f_15539(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15543)
static void C_ccall f_15543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15565)
static void C_ccall f_15565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15559)
static void C_ccall f_15559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15552)
static void C_ccall f_15552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15292)
static void C_ccall f_15292(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15292)
static void C_ccall f_15292r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15296)
static void C_fcall f_15296(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15509)
static void C_ccall f_15509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15524)
static void C_ccall f_15524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15516)
static void C_ccall f_15516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15480)
static void C_ccall f_15480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15484)
static void C_ccall f_15484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15445)
static void C_ccall f_15445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15449)
static void C_ccall f_15449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15299)
static void C_fcall f_15299(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15409)
static void C_ccall f_15409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15424)
static void C_ccall f_15424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15416)
static void C_ccall f_15416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15380)
static void C_ccall f_15380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15384)
static void C_ccall f_15384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15345)
static void C_ccall f_15345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15349)
static void C_ccall f_15349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15302)
static void C_fcall f_15302(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15305)
static void C_ccall f_15305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15308)
static void C_ccall f_15308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15316)
static void C_ccall f_15316(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15324)
static void C_ccall f_15324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15314)
static void C_ccall f_15314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15077)
static void C_ccall f_15077(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15081)
static void C_ccall f_15081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15290)
static void C_ccall f_15290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15243)
static void C_ccall f_15243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15255)
static void C_fcall f_15255(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15111)
static void C_ccall f_15111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15114)
static void C_ccall f_15114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15120)
static void C_ccall f_15120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15123)
static void C_ccall f_15123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15211)
static void C_fcall f_15211(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15126)
static void C_fcall f_15126(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15205)
static void C_ccall f_15205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15132)
static void C_ccall f_15132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15135)
static void C_ccall f_15135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15087)
static void C_ccall f_15087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15090)
static void C_ccall f_15090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15097)
static void C_ccall f_15097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14607)
static void C_ccall f_14607(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_14607)
static void C_ccall f_14607r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_14611)
static void C_fcall f_14611(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15047)
static void C_ccall f_15047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15062)
static void C_ccall f_15062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15054)
static void C_ccall f_15054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15018)
static void C_ccall f_15018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15022)
static void C_ccall f_15022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14983)
static void C_ccall f_14983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14987)
static void C_ccall f_14987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14948)
static void C_ccall f_14948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14952)
static void C_ccall f_14952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14614)
static void C_fcall f_14614(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14912)
static void C_ccall f_14912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14927)
static void C_ccall f_14927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14919)
static void C_ccall f_14919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14883)
static void C_ccall f_14883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14887)
static void C_ccall f_14887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14848)
static void C_ccall f_14848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14852)
static void C_ccall f_14852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14813)
static void C_ccall f_14813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14817)
static void C_ccall f_14817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14617)
static void C_fcall f_14617(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14777)
static void C_ccall f_14777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14792)
static void C_ccall f_14792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14784)
static void C_ccall f_14784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14748)
static void C_ccall f_14748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14752)
static void C_ccall f_14752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14713)
static void C_ccall f_14713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14717)
static void C_ccall f_14717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14678)
static void C_ccall f_14678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14682)
static void C_ccall f_14682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14620)
static void C_fcall f_14620(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14623)
static void C_ccall f_14623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14626)
static void C_ccall f_14626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14649)
static void C_ccall f_14649(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14657)
static void C_ccall f_14657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14632)
static void C_ccall f_14632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14635)
static void C_ccall f_14635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14527)
static void C_fcall f_14527(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14518)
static void C_fcall f_14518(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14446)
static void C_ccall f_14446(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14450)
static void C_ccall f_14450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14453)
static void C_fcall f_14453(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14191)
static void C_ccall f_14191(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_14191)
static void C_ccall f_14191r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_14195)
static void C_fcall f_14195(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14416)
static void C_ccall f_14416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14431)
static void C_ccall f_14431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14423)
static void C_ccall f_14423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14387)
static void C_ccall f_14387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14391)
static void C_ccall f_14391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14352)
static void C_ccall f_14352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14356)
static void C_ccall f_14356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14198)
static void C_fcall f_14198(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14316)
static void C_ccall f_14316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14331)
static void C_ccall f_14331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14323)
static void C_ccall f_14323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14287)
static void C_ccall f_14287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14291)
static void C_ccall f_14291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14252)
static void C_ccall f_14252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14256)
static void C_ccall f_14256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14201)
static void C_fcall f_14201(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14204)
static void C_ccall f_14204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14207)
static void C_ccall f_14207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14219)
static void C_ccall f_14219(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14231)
static void C_ccall f_14231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14213)
static void C_ccall f_14213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14076)
static void C_fcall f_14076(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14189)
static void C_ccall f_14189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14086)
static void C_ccall f_14086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14174)
static void C_ccall f_14174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14185)
static void C_ccall f_14185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14181)
static void C_ccall f_14181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14089)
static void C_ccall f_14089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14171)
static void C_ccall f_14171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14097)
static void C_ccall f_14097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14161)
static void C_ccall f_14161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14106)
static void C_ccall f_14106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14125)
static void C_ccall f_14125(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14154)
static void C_ccall f_14154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14135)
static void C_ccall f_14135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14150)
static void C_ccall f_14150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14138)
static void C_ccall f_14138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14109)
static void C_ccall f_14109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14119)
static void C_ccall f_14119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14100)
static void C_fcall f_14100(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14103)
static void C_ccall f_14103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14030)
static void C_fcall f_14030(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14021)
static void C_fcall f_14021(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13729)
static void C_fcall f_13729(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13736)
static void C_ccall f_13736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13739)
static void C_ccall f_13739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14010)
static void C_ccall f_14010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14002)
static void C_ccall f_14002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13994)
static void C_ccall f_13994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13997)
static void C_ccall f_13997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13965)
static void C_fcall f_13965(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13988)
static void C_ccall f_13988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13971)
static void C_fcall f_13971(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13975)
static void C_ccall f_13975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13742)
static void C_ccall f_13742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13748)
static void C_ccall f_13748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13840)
static void C_ccall f_13840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13952)
static void C_ccall f_13952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13959)
static void C_ccall f_13959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13863)
static void C_fcall f_13863(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13865)
static void C_fcall f_13865(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13914)
static void C_fcall f_13914(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13949)
static void C_ccall f_13949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13938)
static void C_ccall f_13938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14074)
static void C_ccall f_14074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14049)
static void C_ccall f_14049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14070)
static void C_ccall f_14070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14066)
static void C_ccall f_14066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14058)
static void C_ccall f_14058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13931)
static void C_ccall f_13931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13924)
static void C_ccall f_13924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13872)
static void C_ccall f_13872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13912)
static void C_ccall f_13912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13876)
static void C_ccall f_13876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13908)
static void C_ccall f_13908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13895)
static void C_ccall f_13895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13903)
static void C_ccall f_13903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13899)
static void C_ccall f_13899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13879)
static void C_fcall f_13879(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13882)
static void C_ccall f_13882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13856)
static void C_ccall f_13856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13843)
static void C_ccall f_13843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13852)
static void C_ccall f_13852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13847)
static void C_ccall f_13847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13754)
static void C_ccall f_13754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13834)
static void C_ccall f_13834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13814)
static void C_ccall f_13814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13820)
static void C_ccall f_13820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13831)
static void C_ccall f_13831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13811)
static void C_ccall f_13811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13799)
static void C_ccall f_13799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13802)
static void C_ccall f_13802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13757)
static void C_ccall f_13757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13793)
static void C_ccall f_13793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13788)
static void C_ccall f_13788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13760)
static void C_ccall f_13760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13773)
static void C_ccall f_13773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13763)
static void C_fcall f_13763(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13766)
static void C_ccall f_13766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13769)
static void C_ccall f_13769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13606)
static void C_ccall f_13606(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_13606)
static void C_ccall f_13606r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_13665)
static void C_ccall f_13665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13675)
static void C_ccall f_13675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13677)
static void C_fcall f_13677(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13706)
static void C_ccall f_13706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13711)
static void C_ccall f_13711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13696)
static void C_fcall f_13696(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13627)
static void C_fcall f_13627(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13659)
static void C_ccall f_13659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13587)
static void C_ccall f_13587(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13594)
static void C_ccall f_13594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13601)
static void C_ccall f_13601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13568)
static void C_ccall f_13568(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13575)
static void C_ccall f_13575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13582)
static void C_ccall f_13582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13388)
static void C_fcall f_13388(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9) C_noret;
C_noret_decl(f_13392)
static void C_ccall f_13392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13395)
static void C_ccall f_13395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13398)
static void C_ccall f_13398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13401)
static void C_ccall f_13401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13558)
static void C_ccall f_13558(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13565)
static void C_ccall f_13565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13404)
static void C_ccall f_13404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13556)
static void C_ccall f_13556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13407)
static void C_fcall f_13407(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13549)
static void C_ccall f_13549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13539)
static void C_ccall f_13539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13413)
static void C_ccall f_13413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13529)
static void C_ccall f_13529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13519)
static void C_ccall f_13519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13419)
static void C_ccall f_13419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13482)
static void C_ccall f_13482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13496)
static void C_ccall f_13496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13512)
static void C_ccall f_13512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13508)
static void C_ccall f_13508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13504)
static void C_ccall f_13504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13500)
static void C_ccall f_13500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13490)
static void C_ccall f_13490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13486)
static void C_ccall f_13486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13422)
static void C_fcall f_13422(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13425)
static void C_ccall f_13425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13466)
static void C_ccall f_13466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13431)
static void C_fcall f_13431(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13444)
static void C_ccall f_13444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13434)
static void C_ccall f_13434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13437)
static void C_ccall f_13437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13378)
static void C_fcall f_13378(C_word t0) C_noret;
C_noret_decl(f_13319)
static void C_fcall f_13319(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13310)
static void C_fcall f_13310(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13193)
static void C_fcall f_13193(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13184)
static void C_fcall f_13184(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13175)
static void C_ccall f_13175(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13166)
static void C_fcall f_13166(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13157)
static void C_fcall f_13157(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13139)
static void C_fcall f_13139(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13130)
static void C_fcall f_13130(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13121)
static void C_fcall f_13121(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13103)
static void C_fcall f_13103(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13094)
static void C_fcall f_13094(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13085)
static void C_fcall f_13085(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13070)
static void C_fcall f_13070(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13025)
static void C_fcall f_13025(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13007)
static void C_fcall f_13007(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12998)
static void C_fcall f_12998(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12971)
static void C_fcall f_12971(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12953)
static void C_fcall f_12953(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12935)
static void C_fcall f_12935(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12926)
static void C_fcall f_12926(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12914)
static void C_fcall f_12914(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12576)
static void C_fcall f_12576(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12416)
static void C_fcall f_12416(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12451)
static void C_fcall f_12451(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_12461)
static void C_fcall f_12461(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12465)
static void C_ccall f_12465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12468)
static void C_ccall f_12468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12529)
static void C_ccall f_12529(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12520)
static void C_ccall f_12520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12471)
static void C_ccall f_12471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12490)
static void C_ccall f_12490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12497)
static void C_ccall f_12497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12474)
static void C_ccall f_12474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12480)
static void C_ccall f_12480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12449)
static void C_ccall f_12449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12424)
static void C_fcall f_12424(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12423)
static void C_ccall f_12423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12584)
static void C_fcall f_12584(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12162)
static void C_ccall f_12162(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12184)
static void C_ccall f_12184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12199)
static void C_ccall f_12199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12202)
static void C_fcall f_12202(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12378)
static void C_ccall f_12378(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12372)
static void C_ccall f_12372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12205)
static void C_ccall f_12205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12354)
static void C_ccall f_12354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12208)
static void C_fcall f_12208(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12211)
static void C_ccall f_12211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12347)
static void C_ccall f_12347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12335)
static void C_ccall f_12335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12231)
static void C_fcall f_12231(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12238)
static void C_ccall f_12238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12308)
static void C_ccall f_12308(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12294)
static void C_ccall f_12294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12302)
static void C_ccall f_12302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12241)
static void C_ccall f_12241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12280)
static void C_ccall f_12280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12244)
static void C_fcall f_12244(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12273)
static void C_ccall f_12273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12250)
static void C_ccall f_12250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12253)
static void C_ccall f_12253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12257)
static void C_ccall f_12257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12218)
static void C_fcall f_12218(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12221)
static void C_ccall f_12221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12031)
static void C_fcall f_12031(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12040)
static void C_fcall f_12040(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11988)
static void C_ccall f_11988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11994)
static void C_fcall f_11994(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12057)
static void C_ccall f_12057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12143)
static void C_ccall f_12143(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12130)
static void C_ccall f_12130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12138)
static void C_ccall f_12138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12060)
static void C_ccall f_12060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12064)
static void C_ccall f_12064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12107)
static void C_ccall f_12107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12069)
static void C_ccall f_12069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12035)
static void C_ccall f_12035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11930)
static void C_ccall f_11930(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11937)
static void C_ccall f_11937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11968)
static void C_ccall f_11968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11964)
static void C_ccall f_11964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11956)
static void C_ccall f_11956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11839)
static void C_ccall f_11839(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11846)
static void C_ccall f_11846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11914)
static void C_ccall f_11914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11857)
static void C_fcall f_11857(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11884)
static void C_ccall f_11884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11868)
static void C_ccall f_11868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11773)
static void C_ccall f_11773(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11784)
static void C_ccall f_11784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11787)
static void C_fcall f_11787(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11794)
static void C_ccall f_11794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11767)
static void C_ccall f_11767(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11221)
static void C_ccall f_11221(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11252)
static void C_ccall f_11252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11716)
static void C_ccall f_11716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11722)
static void C_ccall f_11722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11263)
static void C_ccall f_11263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11148)
static void C_fcall f_11148(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11173)
static void C_ccall f_11173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11108)
static void C_fcall f_11108(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11121)
static void C_fcall f_11121(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11162)
static void C_ccall f_11162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11267)
static void C_ccall f_11267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11704)
static void C_ccall f_11704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11700)
static void C_fcall f_11700(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11696)
static void C_ccall f_11696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11270)
static void C_ccall f_11270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11490)
static void C_fcall f_11490(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11599)
static void C_ccall f_11599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11664)
static void C_ccall f_11664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11606)
static void C_fcall f_11606(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11610)
static void C_ccall f_11610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11614)
static void C_ccall f_11614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11656)
static void C_ccall f_11656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11652)
static void C_ccall f_11652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11630)
static void C_ccall f_11630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11493)
static void C_fcall f_11493(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11496)
static void C_fcall f_11496(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11395)
static void C_ccall f_11395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11478)
static void C_ccall f_11478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11445)
static void C_ccall f_11445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11471)
static void C_ccall f_11471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11453)
static void C_ccall f_11453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11401)
static void C_fcall f_11401(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11441)
static void C_ccall f_11441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11383)
static void C_ccall f_11383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11354)
static void C_ccall f_11354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11376)
static void C_ccall f_11376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11362)
static void C_ccall f_11362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11316)
static void C_fcall f_11316(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11273)
static void C_fcall f_11273(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11284)
static void C_ccall f_11284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11288)
static void C_ccall f_11288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11292)
static void C_ccall f_11292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11296)
static void C_ccall f_11296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11280)
static void C_ccall f_11280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11240)
static void C_fcall f_11240(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11235)
static void C_fcall f_11235(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11230)
static void C_fcall f_11230(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11062)
static void C_ccall f_11062(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11073)
static void C_ccall f_11073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11088)
static void C_ccall f_11088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11024)
static void C_ccall f_11024(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11035)
static void C_ccall f_11035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11050)
static void C_ccall f_11050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10957)
static void C_ccall f_10957(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10977)
static void C_fcall f_10977(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10987)
static void C_ccall f_10987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11000)
static void C_ccall f_11000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10968)
static void C_ccall f_10968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10975)
static void C_ccall f_10975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10764)
static void C_ccall f_10764(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10824)
static void C_fcall f_10824(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10834)
static void C_ccall f_10834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10948)
static void C_ccall f_10948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10913)
static void C_ccall f_10913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10905)
static void C_ccall f_10905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10876)
static void C_ccall f_10876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10854)
static void C_ccall f_10854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10857)
static void C_ccall f_10857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10845)
static void C_ccall f_10845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10771)
static void C_ccall f_10771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10822)
static void C_ccall f_10822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10814)
static void C_ccall f_10814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10774)
static void C_ccall f_10774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10785)
static void C_ccall f_10785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10789)
static void C_ccall f_10789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10781)
static void C_ccall f_10781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10622)
static void C_ccall f_10622(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10670)
static void C_fcall f_10670(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10680)
static void C_ccall f_10680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10691)
static void C_ccall f_10691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10728)
static void C_ccall f_10728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10703)
static void C_ccall f_10703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10694)
static void C_ccall f_10694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10632)
static void C_ccall f_10632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10668)
static void C_ccall f_10668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10639)
static void C_ccall f_10639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10271)
static void C_ccall f_10271(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10278)
static void C_ccall f_10278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10512)
static void C_fcall f_10512(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10522)
static void C_ccall f_10522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10533)
static void C_ccall f_10533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10545)
static void C_fcall f_10545(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10548)
static void C_ccall f_10548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10536)
static void C_ccall f_10536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10284)
static void C_ccall f_10284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10510)
static void C_ccall f_10510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10506)
static void C_ccall f_10506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10452)
static void C_fcall f_10452(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10417)
static void C_fcall f_10417(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10433)
static void C_fcall f_10433(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10388)
static void C_fcall f_10388(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10312)
static void C_ccall f_10312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10315)
static void C_ccall f_10315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10379)
static void C_ccall f_10379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10375)
static void C_ccall f_10375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10295)
static void C_fcall f_10295(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10306)
static void C_ccall f_10306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10302)
static void C_ccall f_10302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10224)
static void C_ccall f_10224(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10257)
static void C_ccall f_10257(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10239)
static void C_ccall f_10239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10251)
static void C_ccall f_10251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9842)
static void C_ccall f_9842(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10051)
static void C_fcall f_10051(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10061)
static void C_ccall f_10061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10072)
static void C_ccall f_10072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10192)
static void C_ccall f_10192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10171)
static void C_ccall f_10171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10150)
static void C_ccall f_10150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10129)
static void C_ccall f_10129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10108)
static void C_ccall f_10108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10087)
static void C_ccall f_10087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10075)
static void C_ccall f_10075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9852)
static void C_ccall f_9852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9855)
static void C_fcall f_9855(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10018)
static void C_fcall f_10018(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9858)
static void C_fcall f_9858(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10009)
static void C_ccall f_10009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9989)
static void C_ccall f_9989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9861)
static void C_fcall f_9861(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9954)
static void C_ccall f_9954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9971)
static void C_ccall f_9971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9864)
static void C_fcall f_9864(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9903)
static void C_ccall f_9903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9937)
static void C_ccall f_9937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9921)
static void C_ccall f_9921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9906)
static void C_fcall f_9906(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9871)
static void C_fcall f_9871(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9882)
static void C_ccall f_9882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9886)
static void C_ccall f_9886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9878)
static void C_ccall f_9878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9760)
static void C_ccall f_9760(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9764)
static void C_ccall f_9764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9782)
static void C_ccall f_9782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9600)
static void C_fcall f_9600(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9608)
static void C_fcall f_9608(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9618)
static void C_ccall f_9618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9656)
static void C_ccall f_9656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9659)
static void C_ccall f_9659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9662)
static void C_ccall f_9662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9737)
static void C_fcall f_9737(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9747)
static void C_ccall f_9747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9665)
static void C_ccall f_9665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9668)
static void C_ccall f_9668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9671)
static void C_ccall f_9671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9691)
static void C_fcall f_9691(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9701)
static void C_ccall f_9701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9704)
static void C_ccall f_9704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9707)
static void C_ccall f_9707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9674)
static void C_ccall f_9674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9677)
static void C_ccall f_9677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9594)
static void C_fcall f_9594(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9588)
static void C_fcall f_9588(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9582)
static void C_fcall f_9582(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9511)
static void C_fcall f_9511(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9552)
static void C_ccall f_9552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9556)
static void C_ccall f_9556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9560)
static void C_ccall f_9560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9564)
static void C_ccall f_9564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9568)
static void C_ccall f_9568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9572)
static void C_ccall f_9572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9576)
static void C_ccall f_9576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9580)
static void C_ccall f_9580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9513)
static void C_fcall f_9513(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9519)
static void C_fcall f_9519(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9541)
static void C_ccall f_9541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9530)
static void C_ccall f_9530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9360)
static void C_fcall f_9360(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9375)
static void C_fcall f_9375(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9388)
static void C_ccall f_9388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9348)
static void C_ccall f_9348(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9336)
static void C_ccall f_9336(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9324)
static void C_ccall f_9324(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9318)
static void C_fcall f_9318(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9312)
static void C_ccall f_9312(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9300)
static void C_ccall f_9300(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9288)
static void C_ccall f_9288(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9276)
static void C_ccall f_9276(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9264)
static void C_ccall f_9264(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9258)
static void C_fcall f_9258(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8949)
static void C_ccall f_8949(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9202)
static void C_ccall f_9202(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9235)
static void C_ccall f_9235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9231)
static void C_ccall f_9231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9220)
static void C_ccall f_9220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9216)
static void C_ccall f_9216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9110)
static void C_ccall f_9110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9113)
static void C_ccall f_9113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9116)
static void C_ccall f_9116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9196)
static void C_ccall f_9196(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9021)
static void C_ccall f_9021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8962)
static void C_ccall f_8962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9119)
static void C_ccall f_9119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9126)
static void C_ccall f_9126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9186)
static void C_ccall f_9186(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9172)
static void C_ccall f_9172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9138)
static void C_ccall f_9138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9164)
static void C_ccall f_9164(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9099)
static void C_ccall f_9099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9146)
static void C_ccall f_9146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9142)
static void C_ccall f_9142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8905)
static void C_ccall f_8905(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_8905)
static void C_ccall f_8905r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_8939)
static void C_ccall f_8939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8943)
static void C_ccall f_8943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8947)
static void C_ccall f_8947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8913)
static void C_ccall f_8913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8931)
static void C_ccall f_8931(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8922)
static void C_ccall f_8922(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8930)
static void C_ccall f_8930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8917)
static void C_ccall f_8917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8861)
static void C_ccall f_8861(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_8861)
static void C_ccall f_8861r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_8895)
static void C_ccall f_8895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8899)
static void C_ccall f_8899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8903)
static void C_ccall f_8903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8869)
static void C_ccall f_8869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8887)
static void C_ccall f_8887(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8878)
static void C_ccall f_8878(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8886)
static void C_ccall f_8886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8873)
static void C_ccall f_8873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8787)
static void C_fcall f_8787(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8791)
static void C_ccall f_8791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8798)
static void C_ccall f_8798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8800)
static void C_fcall f_8800(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_8814)
static void C_ccall f_8814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8827)
static void C_ccall f_8827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8817)
static void C_fcall f_8817(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8701)
static void C_ccall f_8701(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_8701)
static void C_ccall f_8701r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_8583)
static void C_fcall f_8583(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8589)
static void C_fcall f_8589(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8613)
static void C_ccall f_8613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8599)
static void C_fcall f_8599(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8484)
static void C_ccall f_8484(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8484)
static void C_ccall f_8484r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8488)
static void C_ccall f_8488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8513)
static void C_fcall f_8513(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8530)
static void C_ccall f_8530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8534)
static void C_ccall f_8534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8490)
static void C_fcall f_8490(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8507)
static void C_ccall f_8507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8322)
static void C_ccall f_8322(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8322)
static void C_ccall f_8322r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8331)
static void C_fcall f_8331(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8369)
static void C_fcall f_8369(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8347)
static void C_ccall f_8347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8232)
static void C_ccall f_8232(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8184)
static void C_ccall f_8184(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8218)
static void C_ccall f_8218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8161)
static void C_ccall f_8161(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8155)
static void C_ccall f_8155(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8140)
static void C_ccall f_8140(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8126)
static void C_ccall f_8126(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8116)
static void C_ccall f_8116(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8106)
static void C_ccall f_8106(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8096)
static void C_ccall f_8096(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8086)
static void C_ccall f_8086(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8076)
static void C_ccall f_8076(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7184)
static void C_ccall f_7184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8045)
static void C_ccall f_8045(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8045)
static void C_ccall f_8045r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8055)
static void C_fcall f_8055(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8039)
static void C_ccall f_8039(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7142)
static void C_ccall f_7142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8033)
static void C_ccall f_8033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7780)
static void C_fcall f_7780(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7613)
static void C_fcall f_7613(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7622)
static void C_ccall f_7622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7522)
static void C_fcall f_7522(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7502)
static void C_fcall f_7502(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7471)
static void C_ccall f_7471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7468)
static void C_ccall f_7468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7461)
static void C_fcall f_7461(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7458)
static void C_ccall f_7458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7451)
static void C_fcall f_7451(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7433)
static void C_fcall f_7433(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7422)
static void C_fcall f_7422(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7419)
static void C_ccall f_7419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7416)
static void C_ccall f_7416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7413)
static void C_ccall f_7413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7384)
static void C_fcall f_7384(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7377)
static void C_fcall f_7377(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7374)
static void C_ccall f_7374(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7353)
static void C_fcall f_7353(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7334)
static void C_ccall f_7334(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7315)
static void C_ccall f_7315(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7301)
static void C_ccall f_7301(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7294)
static void C_ccall f_7294(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7279)
static void C_fcall f_7279(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7268)
static void C_fcall f_7268(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7261)
static void C_ccall f_7261(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7207)
static void C_fcall f_7207(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_7151)
static void C_fcall f_7151(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7156)
static void C_ccall f_7156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7030)
static void C_fcall f_7030(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7024)
static void C_ccall f_7024(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7017)
static void C_ccall f_7017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7011)
static void C_ccall f_7011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7001)
static void C_ccall f_7001(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6981)
static void C_ccall f_6981(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6993)
static void C_ccall f_6993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6975)
static void C_ccall f_6975(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6975)
static void C_ccall f_6975r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6969)
static void C_ccall f_6969(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6969)
static void C_ccall f_6969r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6963)
static void C_ccall f_6963(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6963)
static void C_ccall f_6963r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6957)
static void C_ccall f_6957(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6957)
static void C_ccall f_6957r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6951)
static void C_ccall f_6951(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;

C_noret_decl(trf_12749)
static void C_fcall trf_12749(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12749(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12749(t0,t1);}

C_noret_decl(trf_12611)
static void C_fcall trf_12611(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12611(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12611(t0,t1);}

C_noret_decl(trf_12825)
static void C_fcall trf_12825(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12825(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12825(t0,t1);}

C_noret_decl(trf_45458)
static void C_fcall trf_45458(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_45458(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_45458(t0,t1,t2);}

C_noret_decl(trf_45518)
static void C_fcall trf_45518(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_45518(void *dummy){
C_word t13=C_pick(0);
C_word t12=C_pick(1);
C_word t11=C_pick(2);
C_word t10=C_pick(3);
C_word t9=C_pick(4);
C_word t8=C_pick(5);
C_word t7=C_pick(6);
C_word t6=C_pick(7);
C_word t5=C_pick(8);
C_word t4=C_pick(9);
C_word t3=C_pick(10);
C_word t2=C_pick(11);
C_word t1=C_pick(12);
C_word t0=C_pick(13);
C_adjust_stack(-14);
f_45518(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}

C_noret_decl(trf_45538)
static void C_fcall trf_45538(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_45538(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_45538(t0,t1);}

C_noret_decl(trf_45541)
static void C_fcall trf_45541(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_45541(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_45541(t0,t1);}

C_noret_decl(trf_45384)
static void C_fcall trf_45384(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_45384(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_45384(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_45335)
static void C_fcall trf_45335(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_45335(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_45335(t0,t1);}

C_noret_decl(trf_45257)
static void C_fcall trf_45257(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_45257(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_45257(t0,t1,t2);}

C_noret_decl(trf_45109)
static void C_fcall trf_45109(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_45109(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_45109(t0,t1);}

C_noret_decl(trf_29390)
static void C_fcall trf_29390(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29390(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29390(t0,t1,t2);}

C_noret_decl(trf_29403)
static void C_fcall trf_29403(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29403(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29403(t0,t1);}

C_noret_decl(trf_43987)
static void C_fcall trf_43987(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_43987(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_43987(t0,t1);}

C_noret_decl(trf_43860)
static void C_fcall trf_43860(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_43860(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_43860(t0,t1,t2);}

C_noret_decl(trf_43512)
static void C_fcall trf_43512(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_43512(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_43512(t0,t1);}

C_noret_decl(trf_42607)
static void C_fcall trf_42607(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42607(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_42607(t0,t1,t2);}

C_noret_decl(trf_42642)
static void C_fcall trf_42642(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42642(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_42642(t0,t1);}

C_noret_decl(trf_42666)
static void C_fcall trf_42666(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42666(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_42666(t0,t1);}

C_noret_decl(trf_42645)
static void C_fcall trf_42645(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42645(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_42645(t0,t1);}

C_noret_decl(trf_42448)
static void C_fcall trf_42448(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42448(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_42448(t0,t1);}

C_noret_decl(trf_42204)
static void C_fcall trf_42204(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42204(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_42204(t0,t1);}

C_noret_decl(trf_42211)
static void C_fcall trf_42211(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42211(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_42211(t0,t1);}

C_noret_decl(trf_42192)
static void C_fcall trf_42192(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42192(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_42192(t0,t1);}

C_noret_decl(trf_31452)
static void C_fcall trf_31452(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31452(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31452(t0,t1);}

C_noret_decl(trf_31459)
static void C_fcall trf_31459(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31459(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31459(t0,t1);}

C_noret_decl(trf_31776)
static void C_fcall trf_31776(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31776(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31776(t0,t1,t2);}

C_noret_decl(trf_31799)
static void C_fcall trf_31799(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31799(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31799(t0,t1,t2);}

C_noret_decl(trf_31816)
static void C_fcall trf_31816(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31816(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31816(t0,t1);}

C_noret_decl(trf_31819)
static void C_fcall trf_31819(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31819(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31819(t0,t1);}

C_noret_decl(trf_31822)
static void C_fcall trf_31822(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31822(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31822(t0,t1);}

C_noret_decl(trf_31740)
static void C_fcall trf_31740(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31740(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31740(t0,t1,t2);}

C_noret_decl(trf_31680)
static void C_fcall trf_31680(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31680(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31680(t0,t1,t2);}

C_noret_decl(trf_31696)
static void C_fcall trf_31696(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31696(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31696(t0,t1);}

C_noret_decl(trf_31651)
static void C_fcall trf_31651(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31651(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31651(t0,t1);}

C_noret_decl(trf_31468)
static void C_fcall trf_31468(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31468(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31468(t0,t1);}

C_noret_decl(trf_31471)
static void C_fcall trf_31471(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31471(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31471(t0,t1);}

C_noret_decl(trf_31474)
static void C_fcall trf_31474(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31474(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31474(t0,t1);}

C_noret_decl(trf_41701)
static void C_fcall trf_41701(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41701(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41701(t0,t1);}

C_noret_decl(trf_41704)
static void C_fcall trf_41704(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41704(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41704(t0,t1);}

C_noret_decl(trf_41547)
static void C_fcall trf_41547(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41547(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41547(t0,t1);}

C_noret_decl(trf_41355)
static void C_fcall trf_41355(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41355(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41355(t0,t1);}

C_noret_decl(trf_41205)
static void C_fcall trf_41205(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41205(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41205(t0,t1);}

C_noret_decl(trf_41294)
static void C_fcall trf_41294(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41294(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41294(t0,t1);}

C_noret_decl(trf_41208)
static void C_fcall trf_41208(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41208(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41208(t0,t1);}

C_noret_decl(trf_41224)
static void C_fcall trf_41224(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41224(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_41224(t0,t1,t2,t3);}

C_noret_decl(trf_41246)
static void C_fcall trf_41246(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41246(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41246(t0,t1);}

C_noret_decl(trf_41141)
static void C_fcall trf_41141(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41141(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_41141(t0,t1,t2);}

C_noret_decl(trf_41088)
static void C_fcall trf_41088(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41088(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41088(t0,t1);}

C_noret_decl(trf_40675)
static void C_fcall trf_40675(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40675(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_40675(t0,t1,t2);}

C_noret_decl(trf_40703)
static void C_fcall trf_40703(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40703(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40703(t0,t1);}

C_noret_decl(trf_40654)
static void C_fcall trf_40654(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40654(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40654(t0,t1);}

C_noret_decl(trf_40585)
static void C_fcall trf_40585(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40585(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_40585(t0,t1,t2);}

C_noret_decl(trf_40510)
static void C_fcall trf_40510(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40510(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_40510(t0,t1,t2);}

C_noret_decl(trf_40434)
static void C_fcall trf_40434(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40434(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_40434(t0,t1,t2,t3);}

C_noret_decl(trf_40381)
static void C_fcall trf_40381(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40381(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_40381(t0,t1,t2);}

C_noret_decl(trf_40404)
static void C_fcall trf_40404(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40404(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40404(t0,t1);}

C_noret_decl(trf_40329)
static void C_fcall trf_40329(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40329(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_40329(t0,t1,t2);}

C_noret_decl(trf_40198)
static void C_fcall trf_40198(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40198(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40198(t0,t1);}

C_noret_decl(trf_40268)
static void C_fcall trf_40268(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40268(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_40268(t0,t1,t2);}

C_noret_decl(trf_40227)
static void C_fcall trf_40227(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40227(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40227(t0,t1);}

C_noret_decl(trf_40199)
static void C_fcall trf_40199(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40199(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40199(t0,t1);}

C_noret_decl(trf_39931)
static void C_fcall trf_39931(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39931(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39931(t0,t1);}

C_noret_decl(trf_39948)
static void C_fcall trf_39948(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39948(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39948(t0,t1);}

C_noret_decl(trf_40092)
static void C_fcall trf_40092(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40092(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40092(t0,t1);}

C_noret_decl(trf_39961)
static void C_fcall trf_39961(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39961(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39961(t0,t1);}

C_noret_decl(trf_39892)
static void C_fcall trf_39892(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39892(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39892(t0,t1,t2);}

C_noret_decl(trf_39833)
static void C_fcall trf_39833(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39833(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39833(t0,t1);}

C_noret_decl(trf_39279)
static void C_fcall trf_39279(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39279(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39279(t0,t1);}

C_noret_decl(trf_39612)
static void C_fcall trf_39612(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39612(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_39612(t0,t1,t2,t3);}

C_noret_decl(trf_39539)
static void C_fcall trf_39539(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39539(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39539(t0,t1,t2);}

C_noret_decl(trf_39576)
static void C_fcall trf_39576(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39576(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39576(t0,t1);}

C_noret_decl(trf_39494)
static void C_fcall trf_39494(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39494(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39494(t0,t1);}

C_noret_decl(trf_39499)
static void C_fcall trf_39499(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39499(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39499(t0,t1);}

C_noret_decl(trf_39448)
static void C_fcall trf_39448(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39448(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39448(t0,t1);}

C_noret_decl(trf_39453)
static void C_fcall trf_39453(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39453(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39453(t0,t1);}

C_noret_decl(trf_39345)
static void C_fcall trf_39345(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39345(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39345(t0,t1);}

C_noret_decl(trf_39354)
static void C_fcall trf_39354(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39354(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39354(t0,t1,t2);}

C_noret_decl(trf_39209)
static void C_fcall trf_39209(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39209(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39209(t0,t1);}

C_noret_decl(trf_38957)
static void C_fcall trf_38957(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38957(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_38957(t0,t1,t2);}

C_noret_decl(trf_39130)
static void C_fcall trf_39130(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39130(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39130(t0,t1);}

C_noret_decl(trf_38972)
static void C_fcall trf_38972(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38972(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_38972(t0,t1,t2,t3);}

C_noret_decl(trf_38797)
static void C_fcall trf_38797(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38797(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_38797(t0,t1,t2,t3);}

C_noret_decl(trf_38728)
static void C_fcall trf_38728(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38728(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38728(t0,t1);}

C_noret_decl(trf_38684)
static void C_fcall trf_38684(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38684(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38684(t0,t1);}

C_noret_decl(trf_38713)
static void C_fcall trf_38713(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38713(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38713(t0,t1);}

C_noret_decl(trf_38687)
static void C_fcall trf_38687(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38687(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38687(t0,t1);}

C_noret_decl(trf_38515)
static void C_fcall trf_38515(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38515(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38515(t0,t1);}

C_noret_decl(trf_38522)
static void C_fcall trf_38522(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38522(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38522(t0,t1);}

C_noret_decl(trf_38528)
static void C_fcall trf_38528(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38528(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_38528(t0,t1,t2);}

C_noret_decl(trf_38410)
static void C_fcall trf_38410(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38410(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38410(t0,t1);}

C_noret_decl(trf_38417)
static void C_fcall trf_38417(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38417(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38417(t0,t1);}

C_noret_decl(trf_38423)
static void C_fcall trf_38423(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38423(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_38423(t0,t1,t2);}

C_noret_decl(trf_37872)
static void C_fcall trf_37872(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37872(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37872(t0,t1);}

C_noret_decl(trf_37875)
static void C_fcall trf_37875(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37875(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37875(t0,t1);}

C_noret_decl(trf_37878)
static void C_fcall trf_37878(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37878(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37878(t0,t1);}

C_noret_decl(trf_37443)
static void C_fcall trf_37443(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37443(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37443(t0,t1);}

C_noret_decl(trf_37446)
static void C_fcall trf_37446(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37446(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37446(t0,t1);}

C_noret_decl(trf_37449)
static void C_fcall trf_37449(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37449(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37449(t0,t1);}

C_noret_decl(trf_37014)
static void C_fcall trf_37014(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37014(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37014(t0,t1);}

C_noret_decl(trf_37017)
static void C_fcall trf_37017(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37017(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37017(t0,t1);}

C_noret_decl(trf_37020)
static void C_fcall trf_37020(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37020(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37020(t0,t1);}

C_noret_decl(trf_36307)
static void C_fcall trf_36307(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36307(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36307(t0,t1);}

C_noret_decl(trf_36310)
static void C_fcall trf_36310(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36310(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36310(t0,t1);}

C_noret_decl(trf_36313)
static void C_fcall trf_36313(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36313(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36313(t0,t1);}

C_noret_decl(trf_36316)
static void C_fcall trf_36316(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36316(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36316(t0,t1);}

C_noret_decl(trf_35600)
static void C_fcall trf_35600(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35600(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35600(t0,t1);}

C_noret_decl(trf_35603)
static void C_fcall trf_35603(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35603(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35603(t0,t1);}

C_noret_decl(trf_35606)
static void C_fcall trf_35606(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35606(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35606(t0,t1);}

C_noret_decl(trf_35609)
static void C_fcall trf_35609(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35609(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35609(t0,t1);}

C_noret_decl(trf_34893)
static void C_fcall trf_34893(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34893(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34893(t0,t1);}

C_noret_decl(trf_34896)
static void C_fcall trf_34896(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34896(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34896(t0,t1);}

C_noret_decl(trf_34899)
static void C_fcall trf_34899(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34899(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34899(t0,t1);}

C_noret_decl(trf_34902)
static void C_fcall trf_34902(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34902(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34902(t0,t1);}

C_noret_decl(trf_34464)
static void C_fcall trf_34464(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34464(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34464(t0,t1);}

C_noret_decl(trf_34467)
static void C_fcall trf_34467(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34467(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34467(t0,t1);}

C_noret_decl(trf_34470)
static void C_fcall trf_34470(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34470(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34470(t0,t1);}

C_noret_decl(trf_33409)
static void C_fcall trf_33409(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33409(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33409(t0,t1);}

C_noret_decl(trf_33412)
static void C_fcall trf_33412(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33412(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33412(t0,t1);}

C_noret_decl(trf_33415)
static void C_fcall trf_33415(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33415(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33415(t0,t1);}

C_noret_decl(trf_33418)
static void C_fcall trf_33418(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33418(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33418(t0,t1);}

C_noret_decl(trf_33421)
static void C_fcall trf_33421(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33421(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33421(t0,t1);}

C_noret_decl(trf_33246)
static void C_fcall trf_33246(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33246(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33246(t0,t1);}

C_noret_decl(trf_33253)
static void C_fcall trf_33253(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33253(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33253(t0,t1);}

C_noret_decl(trf_33191)
static void C_fcall trf_33191(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33191(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33191(t0,t1);}

C_noret_decl(trf_33198)
static void C_fcall trf_33198(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33198(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33198(t0,t1);}

C_noret_decl(trf_32948)
static void C_fcall trf_32948(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32948(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32948(t0,t1);}

C_noret_decl(trf_32951)
static void C_fcall trf_32951(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32951(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32951(t0,t1);}

C_noret_decl(trf_32737)
static void C_fcall trf_32737(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32737(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32737(t0,t1,t2);}

C_noret_decl(trf_32613)
static void C_fcall trf_32613(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32613(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_32613(t0,t1,t2,t3,t4);}

C_noret_decl(trf_32649)
static void C_fcall trf_32649(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32649(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32649(t0,t1,t2);}

C_noret_decl(trf_32451)
static void C_fcall trf_32451(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32451(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32451(t0,t1);}

C_noret_decl(trf_32455)
static void C_fcall trf_32455(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32455(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32455(t0,t1);}

C_noret_decl(trf_31971)
static void C_fcall trf_31971(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31971(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31971(t0,t1);}

C_noret_decl(trf_31974)
static void C_fcall trf_31974(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31974(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31974(t0,t1);}

C_noret_decl(trf_31977)
static void C_fcall trf_31977(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31977(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31977(t0,t1);}

C_noret_decl(trf_31983)
static void C_fcall trf_31983(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31983(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31983(t0,t1);}

C_noret_decl(trf_29791)
static void C_fcall trf_29791(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29791(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29791(t0,t1);}

C_noret_decl(trf_32579)
static void C_fcall trf_32579(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32579(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32579(t0,t1,t2);}

C_noret_decl(trf_32589)
static void C_fcall trf_32589(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32589(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32589(t0,t1);}

C_noret_decl(trf_32549)
static void C_fcall trf_32549(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32549(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32549(t0,t1,t2);}

C_noret_decl(trf_32559)
static void C_fcall trf_32559(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32559(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32559(t0,t1);}

C_noret_decl(trf_31133)
static void C_fcall trf_31133(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31133(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31133(t0,t1);}

C_noret_decl(trf_31136)
static void C_fcall trf_31136(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31136(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31136(t0,t1);}

C_noret_decl(trf_31139)
static void C_fcall trf_31139(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31139(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31139(t0,t1);}

C_noret_decl(trf_31142)
static void C_fcall trf_31142(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31142(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31142(t0,t1);}

C_noret_decl(trf_31145)
static void C_fcall trf_31145(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31145(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31145(t0,t1);}

C_noret_decl(trf_31148)
static void C_fcall trf_31148(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31148(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31148(t0,t1);}

C_noret_decl(trf_30976)
static void C_fcall trf_30976(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30976(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30976(t0,t1);}

C_noret_decl(trf_30905)
static void C_fcall trf_30905(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30905(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30905(t0,t1);}

C_noret_decl(trf_30720)
static void C_fcall trf_30720(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30720(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30720(t0,t1);}

C_noret_decl(trf_30732)
static void C_fcall trf_30732(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30732(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30732(t0,t1);}

C_noret_decl(trf_30769)
static void C_fcall trf_30769(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30769(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_30769(t0,t1,t2,t3,t4);}

C_noret_decl(trf_30804)
static void C_fcall trf_30804(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30804(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30804(t0,t1);}

C_noret_decl(trf_30699)
static void C_fcall trf_30699(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30699(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30699(t0,t1);}

C_noret_decl(trf_30634)
static void C_fcall trf_30634(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30634(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30634(t0,t1,t2);}

C_noret_decl(trf_30643)
static void C_fcall trf_30643(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30643(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30643(t0,t1,t2);}

C_noret_decl(trf_30656)
static void C_fcall trf_30656(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30656(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30656(t0,t1);}

C_noret_decl(trf_30590)
static void C_fcall trf_30590(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30590(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30590(t0,t1,t2);}

C_noret_decl(trf_30578)
static void C_fcall trf_30578(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30578(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30578(t0,t1);}

C_noret_decl(trf_30476)
static void C_fcall trf_30476(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30476(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30476(t0,t1);}

C_noret_decl(trf_30428)
static void C_fcall trf_30428(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30428(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30428(t0,t1);}

C_noret_decl(trf_29809)
static void C_fcall trf_29809(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29809(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_29809(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_29819)
static void C_fcall trf_29819(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29819(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29819(t0,t1);}

C_noret_decl(trf_29948)
static void C_fcall trf_29948(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29948(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29948(t0,t1);}

C_noret_decl(trf_30036)
static void C_fcall trf_30036(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30036(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30036(t0,t1);}

C_noret_decl(trf_30109)
static void C_fcall trf_30109(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30109(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30109(t0,t1);}

C_noret_decl(trf_30187)
static void C_fcall trf_30187(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30187(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30187(t0,t1);}

C_noret_decl(trf_30138)
static void C_fcall trf_30138(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30138(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30138(t0,t1);}

C_noret_decl(trf_30154)
static void C_fcall trf_30154(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30154(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30154(t0,t1);}

C_noret_decl(trf_30118)
static void C_fcall trf_30118(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30118(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30118(t0,t1);}

C_noret_decl(trf_30060)
static void C_fcall trf_30060(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30060(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30060(t0,t1,t2);}

C_noret_decl(trf_29979)
static void C_fcall trf_29979(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29979(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29979(t0,t1,t2);}

C_noret_decl(trf_29995)
static void C_fcall trf_29995(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29995(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29995(t0,t1);}

C_noret_decl(trf_29963)
static void C_fcall trf_29963(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29963(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29963(t0,t1);}

C_noret_decl(trf_29705)
static void C_fcall trf_29705(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29705(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29705(t0,t1);}

C_noret_decl(trf_29714)
static void C_fcall trf_29714(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29714(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29714(t0,t1);}

C_noret_decl(trf_29719)
static void C_fcall trf_29719(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29719(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29719(t0,t1,t2);}

C_noret_decl(trf_29697)
static void C_fcall trf_29697(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29697(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29697(t0,t1);}

C_noret_decl(trf_29489)
static void C_fcall trf_29489(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29489(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_29489(t0,t1,t2,t3);}

C_noret_decl(trf_29456)
static void C_fcall trf_29456(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29456(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_29456(t0,t1,t2,t3);}

C_noret_decl(trf_29438)
static void C_fcall trf_29438(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29438(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_29438(t0,t1,t2,t3);}

C_noret_decl(trf_29371)
static void C_fcall trf_29371(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29371(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_29371(t0,t1,t2,t3);}

C_noret_decl(trf_29359)
static void C_fcall trf_29359(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29359(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29359(t0,t1,t2);}

C_noret_decl(trf_29327)
static void C_fcall trf_29327(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29327(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29327(t0,t1,t2);}

C_noret_decl(trf_29311)
static void C_fcall trf_29311(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29311(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29311(t0,t1);}

C_noret_decl(trf_29302)
static void C_fcall trf_29302(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29302(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29302(t0,t1);}

C_noret_decl(trf_29284)
static void C_fcall trf_29284(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29284(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29284(t0,t1);}

C_noret_decl(trf_29266)
static void C_fcall trf_29266(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29266(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29266(t0,t1);}

C_noret_decl(trf_29251)
static void C_fcall trf_29251(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29251(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29251(t0,t1);}

C_noret_decl(trf_29245)
static void C_fcall trf_29245(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29245(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_29245(t0,t1,t2,t3);}

C_noret_decl(trf_29197)
static void C_fcall trf_29197(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29197(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29197(t0,t1,t2);}

C_noret_decl(trf_29165)
static void C_fcall trf_29165(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29165(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29165(t0,t1);}

C_noret_decl(trf_29107)
static void C_fcall trf_29107(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29107(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29107(t0,t1,t2);}

C_noret_decl(trf_29097)
static void C_fcall trf_29097(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29097(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29097(t0,t1);}

C_noret_decl(trf_29091)
static void C_fcall trf_29091(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29091(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29091(t0,t1);}

C_noret_decl(trf_29079)
static void C_fcall trf_29079(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29079(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29079(t0,t1);}

C_noret_decl(trf_29058)
static void C_fcall trf_29058(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29058(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29058(t0,t1);}

C_noret_decl(trf_28953)
static void C_fcall trf_28953(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28953(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_28953(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_28943)
static void C_fcall trf_28943(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28943(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28943(t0,t1);}

C_noret_decl(trf_28931)
static void C_fcall trf_28931(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28931(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28931(t0,t1);}

C_noret_decl(trf_28899)
static void C_fcall trf_28899(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28899(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28899(t0,t1);}

C_noret_decl(trf_28863)
static void C_fcall trf_28863(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28863(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28863(t0,t1);}

C_noret_decl(trf_28650)
static void C_fcall trf_28650(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28650(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28650(t0,t1);}

C_noret_decl(trf_28799)
static void C_fcall trf_28799(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28799(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28799(t0,t1,t2);}

C_noret_decl(trf_28685)
static void C_fcall trf_28685(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28685(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28685(t0,t1,t2,t3);}

C_noret_decl(trf_28726)
static void C_fcall trf_28726(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28726(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_28726(t0,t1,t2,t3,t4);}

C_noret_decl(trf_28610)
static void C_fcall trf_28610(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28610(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28610(t0,t1);}

C_noret_decl(trf_28573)
static void C_fcall trf_28573(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28573(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28573(t0,t1,t2,t3);}

C_noret_decl(trf_28471)
static void C_fcall trf_28471(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28471(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_28471(t0,t1,t2,t3,t4);}

C_noret_decl(trf_28418)
static void C_fcall trf_28418(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28418(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28418(t0,t1,t2);}

C_noret_decl(trf_28590)
static void C_fcall trf_28590(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28590(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28590(t0,t1);}

C_noret_decl(trf_28531)
static void C_fcall trf_28531(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28531(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28531(t0,t1);}

C_noret_decl(trf_28386)
static void C_fcall trf_28386(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28386(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28386(t0,t1);}

C_noret_decl(trf_28017)
static void C_fcall trf_28017(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28017(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28017(t0,t1);}

C_noret_decl(trf_28020)
static void C_fcall trf_28020(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28020(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28020(t0,t1);}

C_noret_decl(trf_28023)
static void C_fcall trf_28023(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28023(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28023(t0,t1);}

C_noret_decl(trf_8668)
static void C_fcall trf_8668(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8668(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8668(t0,t1,t2,t3);}

C_noret_decl(trf_8681)
static void C_fcall trf_8681(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8681(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8681(t0,t1);}

C_noret_decl(trf_28181)
static void C_fcall trf_28181(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28181(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28181(t0,t1);}

C_noret_decl(trf_28184)
static void C_fcall trf_28184(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28184(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28184(t0,t1);}

C_noret_decl(trf_28193)
static void C_fcall trf_28193(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28193(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28193(t0,t1,t2);}

C_noret_decl(trf_28203)
static void C_fcall trf_28203(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28203(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28203(t0,t1);}

C_noret_decl(trf_28150)
static void C_fcall trf_28150(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28150(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28150(t0,t1,t2);}

C_noret_decl(trf_28112)
static void C_fcall trf_28112(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28112(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28112(t0,t1,t2);}

C_noret_decl(trf_27485)
static void C_fcall trf_27485(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27485(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_27485(t0,t1,t2,t3);}

C_noret_decl(trf_28067)
static void C_fcall trf_28067(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28067(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28067(t0,t1,t2);}

C_noret_decl(trf_28037)
static void C_fcall trf_28037(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28037(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28037(t0,t1,t2);}

C_noret_decl(trf_27972)
static void C_fcall trf_27972(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27972(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_27972(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_27916)
static void C_fcall trf_27916(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27916(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27916(t0,t1,t2);}

C_noret_decl(trf_27884)
static void C_fcall trf_27884(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27884(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27884(t0,t1,t2);}

C_noret_decl(trf_27835)
static void C_fcall trf_27835(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27835(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27835(t0,t1,t2);}

C_noret_decl(trf_27854)
static void C_fcall trf_27854(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27854(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27854(t0,t1,t2);}

C_noret_decl(trf_27774)
static void C_fcall trf_27774(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27774(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_27774(t0,t1,t2,t3);}

C_noret_decl(trf_27757)
static void C_fcall trf_27757(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27757(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27757(t0,t1);}

C_noret_decl(trf_27740)
static void C_fcall trf_27740(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27740(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27740(t0,t1);}

C_noret_decl(trf_27573)
static void C_fcall trf_27573(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27573(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_27573(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_27583)
static void C_fcall trf_27583(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27583(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27583(t0,t1);}

C_noret_decl(trf_27398)
static void C_fcall trf_27398(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27398(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_27398(t0,t1,t2,t3,t4);}

C_noret_decl(trf_27420)
static void C_fcall trf_27420(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27420(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27420(t0,t1);}

C_noret_decl(trf_27239)
static void C_fcall trf_27239(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27239(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_27239(t0,t1,t2,t3);}

C_noret_decl(trf_27328)
static void C_fcall trf_27328(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27328(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_27328(t0,t1,t2,t3,t4);}

C_noret_decl(trf_27342)
static void C_fcall trf_27342(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27342(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27342(t0,t1);}

C_noret_decl(trf_27270)
static void C_fcall trf_27270(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27270(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27270(t0,t1);}

C_noret_decl(trf_27177)
static void C_fcall trf_27177(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27177(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_27177(t0,t1,t2,t3,t4);}

C_noret_decl(trf_25684)
static void C_fcall trf_25684(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25684(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25684(t0,t1);}

C_noret_decl(trf_25687)
static void C_fcall trf_25687(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25687(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25687(t0,t1);}

C_noret_decl(trf_25690)
static void C_fcall trf_25690(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25690(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25690(t0,t1);}

C_noret_decl(trf_25693)
static void C_fcall trf_25693(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25693(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25693(t0,t1);}

C_noret_decl(trf_25696)
static void C_fcall trf_25696(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25696(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25696(t0,t1);}

C_noret_decl(trf_25699)
static void C_fcall trf_25699(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25699(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25699(t0,t1);}

C_noret_decl(trf_25448)
static void C_fcall trf_25448(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25448(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25448(t0,t1);}

C_noret_decl(trf_8436)
static void C_fcall trf_8436(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8436(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_8436(t0,t1,t2,t3,t4);}

C_noret_decl(trf_25533)
static void C_fcall trf_25533(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25533(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25533(t0,t1,t2);}

C_noret_decl(trf_25459)
static void C_fcall trf_25459(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25459(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25459(t0,t1,t2);}

C_noret_decl(trf_25500)
static void C_fcall trf_25500(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25500(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25500(t0,t1);}

C_noret_decl(trf_25474)
static void C_fcall trf_25474(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25474(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25474(t0,t1);}

C_noret_decl(trf_25319)
static void C_fcall trf_25319(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25319(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25319(t0,t1,t2);}

C_noret_decl(trf_25245)
static void C_fcall trf_25245(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25245(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25245(t0,t1,t2);}

C_noret_decl(trf_25227)
static void C_fcall trf_25227(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25227(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25227(t0,t1,t2);}

C_noret_decl(trf_25209)
static void C_fcall trf_25209(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25209(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25209(t0,t1,t2);}

C_noret_decl(trf_25185)
static void C_fcall trf_25185(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25185(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25185(t0,t1);}

C_noret_decl(trf_25179)
static void C_fcall trf_25179(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25179(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_25179(t0,t1,t2,t3,t4);}

C_noret_decl(trf_25134)
static void C_fcall trf_25134(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25134(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25134(t0,t1);}

C_noret_decl(trf_25092)
static void C_fcall trf_25092(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25092(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25092(t0,t1);}

C_noret_decl(trf_23901)
static void C_fcall trf_23901(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23901(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23901(t0,t1);}

C_noret_decl(trf_24047)
static void C_fcall trf_24047(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24047(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_24047(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_23996)
static void C_fcall trf_23996(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23996(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23996(t0,t1,t2,t3);}

C_noret_decl(trf_24002)
static void C_fcall trf_24002(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24002(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_24002(t0,t1,t2,t3);}

C_noret_decl(trf_24012)
static void C_fcall trf_24012(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24012(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24012(t0,t1);}

C_noret_decl(trf_23881)
static void C_fcall trf_23881(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23881(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23881(t0,t1,t2);}

C_noret_decl(trf_23876)
static void C_fcall trf_23876(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23876(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23876(t0,t1,t2,t3);}

C_noret_decl(trf_23733)
static void C_fcall trf_23733(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23733(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23733(t0,t1);}

C_noret_decl(trf_23616)
static void C_fcall trf_23616(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23616(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23616(t0,t1,t2);}

C_noret_decl(trf_23625)
static void C_fcall trf_23625(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23625(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23625(t0,t1,t2,t3);}

C_noret_decl(trf_23458)
static void C_fcall trf_23458(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23458(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23458(t0,t1);}

C_noret_decl(trf_23474)
static void C_fcall trf_23474(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23474(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23474(t0,t1,t2,t3);}

C_noret_decl(trf_23282)
static void C_fcall trf_23282(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23282(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_23282(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_23312)
static void C_fcall trf_23312(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23312(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23312(t0,t1);}

C_noret_decl(trf_23295)
static void C_fcall trf_23295(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23295(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23295(t0,t1);}

C_noret_decl(trf_23160)
static void C_fcall trf_23160(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23160(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_23160(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_23190)
static void C_fcall trf_23190(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23190(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23190(t0,t1);}

C_noret_decl(trf_23173)
static void C_fcall trf_23173(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23173(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23173(t0,t1);}

C_noret_decl(trf_23063)
static void C_fcall trf_23063(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23063(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_23063(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_23076)
static void C_fcall trf_23076(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23076(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23076(t0,t1);}

C_noret_decl(trf_22995)
static void C_fcall trf_22995(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22995(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22995(t0,t1,t2,t3);}

C_noret_decl(trf_22974)
static void C_fcall trf_22974(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22974(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22974(t0,t1);}

C_noret_decl(trf_22896)
static void C_fcall trf_22896(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22896(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22896(t0,t1,t2,t3);}

C_noret_decl(trf_22565)
static void C_fcall trf_22565(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22565(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22565(t0,t1);}

C_noret_decl(trf_22568)
static void C_fcall trf_22568(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22568(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22568(t0,t1);}

C_noret_decl(trf_22574)
static void C_fcall trf_22574(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22574(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22574(t0,t1);}

C_noret_decl(trf_22477)
static void C_fcall trf_22477(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22477(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_22477(t0,t1,t2,t3,t4);}

C_noret_decl(trf_22369)
static void C_fcall trf_22369(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22369(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22369(t0,t1);}

C_noret_decl(trf_22374)
static void C_fcall trf_22374(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22374(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22374(t0,t1,t2,t3);}

C_noret_decl(trf_22042)
static void C_fcall trf_22042(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22042(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22042(t0,t1);}

C_noret_decl(trf_21843)
static void C_fcall trf_21843(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21843(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21843(t0,t1);}

C_noret_decl(trf_21925)
static void C_fcall trf_21925(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21925(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21925(t0,t1);}

C_noret_decl(trf_21936)
static void C_fcall trf_21936(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21936(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21936(t0,t1,t2,t3);}

C_noret_decl(trf_21948)
static void C_fcall trf_21948(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21948(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21948(t0,t1,t2);}

C_noret_decl(trf_21869)
static void C_fcall trf_21869(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21869(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21869(t0,t1,t2);}

C_noret_decl(trf_21730)
static void C_fcall trf_21730(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21730(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21730(t0,t1);}

C_noret_decl(trf_21739)
static void C_fcall trf_21739(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21739(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_21739(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_21752)
static void C_fcall trf_21752(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21752(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21752(t0,t1);}

C_noret_decl(trf_21594)
static void C_fcall trf_21594(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21594(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21594(t0,t1);}

C_noret_decl(trf_21597)
static void C_fcall trf_21597(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21597(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21597(t0,t1);}

C_noret_decl(trf_21599)
static void C_fcall trf_21599(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21599(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_21599(t0,t1,t2,t3,t4);}

C_noret_decl(trf_21527)
static void C_fcall trf_21527(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21527(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21527(t0,t1);}

C_noret_decl(trf_21530)
static void C_fcall trf_21530(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21530(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21530(t0,t1);}

C_noret_decl(trf_21533)
static void C_fcall trf_21533(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21533(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21533(t0,t1);}

C_noret_decl(trf_21391)
static void C_fcall trf_21391(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21391(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21391(t0,t1,t2,t3);}

C_noret_decl(trf_21407)
static void C_fcall trf_21407(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21407(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21407(t0,t1,t2);}

C_noret_decl(trf_21114)
static void C_fcall trf_21114(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21114(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21114(t0,t1);}

C_noret_decl(trf_21117)
static void C_fcall trf_21117(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21117(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21117(t0,t1);}

C_noret_decl(trf_20670)
static void C_fcall trf_20670(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20670(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20670(t0,t1);}

C_noret_decl(trf_19595)
static void C_fcall trf_19595(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19595(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19595(t0,t1);}

C_noret_decl(trf_19598)
static void C_fcall trf_19598(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19598(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19598(t0,t1);}

C_noret_decl(trf_20338)
static void C_fcall trf_20338(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20338(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20338(t0,t1,t2);}

C_noret_decl(trf_20361)
static void C_fcall trf_20361(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20361(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_20361(t0,t1,t2,t3,t4);}

C_noret_decl(trf_20396)
static void C_fcall trf_20396(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20396(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20396(t0,t1);}

C_noret_decl(trf_20300)
static void C_fcall trf_20300(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20300(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20300(t0,t1);}

C_noret_decl(trf_19803)
static void C_fcall trf_19803(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19803(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19803(t0,t1);}

C_noret_decl(trf_20171)
static void C_fcall trf_20171(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20171(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20171(t0,t1,t2,t3);}

C_noret_decl(trf_20257)
static void C_fcall trf_20257(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20257(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20257(t0,t1,t2,t3);}

C_noret_decl(trf_20214)
static void C_fcall trf_20214(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20214(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20214(t0,t1,t2);}

C_noret_decl(trf_20138)
static void C_fcall trf_20138(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20138(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20138(t0,t1,t2);}

C_noret_decl(trf_20076)
static void C_fcall trf_20076(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20076(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20076(t0,t1,t2);}

C_noret_decl(trf_20111)
static void C_fcall trf_20111(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20111(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20111(t0,t1,t2,t3);}

C_noret_decl(trf_19871)
static void C_fcall trf_19871(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19871(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19871(t0,t1,t2);}

C_noret_decl(trf_19767)
static void C_fcall trf_19767(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19767(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19767(t0,t1,t2);}

C_noret_decl(trf_20049)
static void C_fcall trf_20049(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20049(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20049(t0,t1,t2,t3);}

C_noret_decl(trf_20022)
static void C_fcall trf_20022(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20022(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20022(t0,t1,t2,t3);}

C_noret_decl(trf_19908)
static void C_fcall trf_19908(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19908(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19908(t0,t1,t2);}

C_noret_decl(trf_19949)
static void C_fcall trf_19949(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19949(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19949(t0,t1);}

C_noret_decl(trf_19961)
static void C_fcall trf_19961(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19961(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19961(t0,t1,t2,t3);}

C_noret_decl(trf_19690)
static void C_fcall trf_19690(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19690(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_19690(t0,t1,t2,t3,t4);}

C_noret_decl(trf_19608)
static void C_fcall trf_19608(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19608(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19608(t0,t1,t2,t3);}

C_noret_decl(trf_8629)
static void C_fcall trf_8629(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8629(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_8629(t0,t1,t2,t3,t4);}

C_noret_decl(trf_8639)
static void C_fcall trf_8639(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8639(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8639(t0,t1);}

C_noret_decl(trf_19680)
static void C_fcall trf_19680(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19680(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19680(t0,t1,t2);}

C_noret_decl(trf_19529)
static void C_fcall trf_19529(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19529(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19529(t0,t1,t2);}

C_noret_decl(trf_19554)
static void C_fcall trf_19554(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19554(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19554(t0,t1);}

C_noret_decl(trf_19257)
static void C_fcall trf_19257(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19257(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19257(t0,t1);}

C_noret_decl(trf_19260)
static void C_fcall trf_19260(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19260(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19260(t0,t1);}

C_noret_decl(trf_19266)
static void C_fcall trf_19266(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19266(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19266(t0,t1);}

C_noret_decl(trf_18980)
static void C_fcall trf_18980(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18980(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18980(t0,t1);}

C_noret_decl(trf_18983)
static void C_fcall trf_18983(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18983(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18983(t0,t1);}

C_noret_decl(trf_18910)
static void C_fcall trf_18910(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18910(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18910(t0,t1);}

C_noret_decl(trf_18758)
static void C_fcall trf_18758(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18758(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_18758(t0,t1,t2,t3,t4);}

C_noret_decl(trf_18683)
static void C_fcall trf_18683(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18683(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_18683(t0,t1,t2,t3,t4);}

C_noret_decl(trf_18693)
static void C_fcall trf_18693(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18693(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18693(t0,t1);}

C_noret_decl(trf_18700)
static void C_fcall trf_18700(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18700(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18700(t0,t1);}

C_noret_decl(trf_18795)
static void C_fcall trf_18795(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18795(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18795(t0,t1,t2);}

C_noret_decl(trf_18573)
static void C_fcall trf_18573(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18573(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_18573(t0,t1,t2,t3);}

C_noret_decl(trf_18585)
static void C_fcall trf_18585(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18585(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_18585(t0,t1,t2,t3,t4);}

C_noret_decl(trf_18646)
static void C_fcall trf_18646(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18646(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18646(t0,t1,t2);}

C_noret_decl(trf_18010)
static void C_fcall trf_18010(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18010(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_18010(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_17946)
static void C_fcall trf_17946(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17946(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17946(t0,t1);}

C_noret_decl(trf_17893)
static void C_fcall trf_17893(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17893(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17893(t0,t1);}

C_noret_decl(trf_17896)
static void C_fcall trf_17896(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17896(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17896(t0,t1);}

C_noret_decl(trf_18090)
static void C_fcall trf_18090(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18090(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18090(t0,t1);}

C_noret_decl(trf_18093)
static void C_fcall trf_18093(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18093(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18093(t0,t1);}

C_noret_decl(trf_18096)
static void C_fcall trf_18096(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18096(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18096(t0,t1);}

C_noret_decl(trf_18111)
static void C_fcall trf_18111(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18111(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18111(t0,t1);}

C_noret_decl(trf_17672)
static void C_fcall trf_17672(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17672(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17672(t0,t1);}

C_noret_decl(trf_17764)
static void C_fcall trf_17764(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17764(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17764(t0,t1,t2);}

C_noret_decl(trf_17783)
static void C_fcall trf_17783(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17783(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17783(t0,t1);}

C_noret_decl(trf_17737)
static void C_fcall trf_17737(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17737(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17737(t0,t1,t2);}

C_noret_decl(trf_17682)
static void C_fcall trf_17682(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17682(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17682(t0,t1,t2);}

C_noret_decl(trf_17692)
static void C_fcall trf_17692(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17692(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_17692(t0,t1,t2,t3);}

C_noret_decl(trf_17550)
static void C_fcall trf_17550(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17550(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17550(t0,t1,t2);}

C_noret_decl(trf_17607)
static void C_fcall trf_17607(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17607(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17607(t0,t1,t2);}

C_noret_decl(trf_17565)
static void C_fcall trf_17565(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17565(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_17565(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17107)
static void C_fcall trf_17107(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17107(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17107(t0,t1);}

C_noret_decl(trf_17110)
static void C_fcall trf_17110(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17110(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17110(t0,t1);}

C_noret_decl(trf_17113)
static void C_fcall trf_17113(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17113(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17113(t0,t1);}

C_noret_decl(trf_17116)
static void C_fcall trf_17116(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17116(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17116(t0,t1);}

C_noret_decl(trf_17080)
static void C_fcall trf_17080(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17080(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17080(t0,t1);}

C_noret_decl(trf_16803)
static void C_fcall trf_16803(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16803(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16803(t0,t1);}

C_noret_decl(trf_16806)
static void C_fcall trf_16806(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16806(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16806(t0,t1);}

C_noret_decl(trf_16809)
static void C_fcall trf_16809(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16809(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16809(t0,t1);}

C_noret_decl(trf_16700)
static void C_fcall trf_16700(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16700(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16700(t0,t1);}

C_noret_decl(trf_16691)
static void C_fcall trf_16691(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16691(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16691(t0,t1,t2);}

C_noret_decl(trf_16682)
static void C_fcall trf_16682(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16682(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16682(t0,t1);}

C_noret_decl(trf_16664)
static void C_fcall trf_16664(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16664(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16664(t0,t1);}

C_noret_decl(trf_16646)
static void C_fcall trf_16646(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16646(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16646(t0,t1);}

C_noret_decl(trf_16628)
static void C_fcall trf_16628(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16628(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16628(t0,t1);}

C_noret_decl(trf_16619)
static void C_fcall trf_16619(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16619(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16619(t0,t1,t2);}

C_noret_decl(trf_16610)
static void C_fcall trf_16610(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16610(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16610(t0,t1);}

C_noret_decl(trf_16441)
static void C_fcall trf_16441(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16441(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16441(t0,t1);}

C_noret_decl(trf_16397)
static void C_fcall trf_16397(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16397(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16397(t0,t1,t2);}

C_noret_decl(trf_15918)
static void C_fcall trf_15918(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15918(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15918(t0,t1);}

C_noret_decl(trf_15921)
static void C_fcall trf_15921(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15921(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15921(t0,t1);}

C_noret_decl(trf_15924)
static void C_fcall trf_15924(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15924(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15924(t0,t1);}

C_noret_decl(trf_15927)
static void C_fcall trf_15927(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15927(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15927(t0,t1);}

C_noret_decl(trf_15873)
static void C_fcall trf_15873(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15873(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_15873(t0,t1,t2,t3,t4);}

C_noret_decl(trf_15579)
static void C_fcall trf_15579(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15579(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15579(t0,t1);}

C_noret_decl(trf_15582)
static void C_fcall trf_15582(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15582(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15582(t0,t1);}

C_noret_decl(trf_15585)
static void C_fcall trf_15585(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15585(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15585(t0,t1);}

C_noret_decl(trf_15296)
static void C_fcall trf_15296(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15296(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15296(t0,t1);}

C_noret_decl(trf_15299)
static void C_fcall trf_15299(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15299(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15299(t0,t1);}

C_noret_decl(trf_15302)
static void C_fcall trf_15302(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15302(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15302(t0,t1);}

C_noret_decl(trf_15255)
static void C_fcall trf_15255(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15255(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15255(t0,t1);}

C_noret_decl(trf_15211)
static void C_fcall trf_15211(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15211(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15211(t0,t1);}

C_noret_decl(trf_15126)
static void C_fcall trf_15126(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15126(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15126(t0,t1);}

C_noret_decl(trf_14611)
static void C_fcall trf_14611(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14611(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14611(t0,t1);}

C_noret_decl(trf_14614)
static void C_fcall trf_14614(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14614(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14614(t0,t1);}

C_noret_decl(trf_14617)
static void C_fcall trf_14617(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14617(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14617(t0,t1);}

C_noret_decl(trf_14620)
static void C_fcall trf_14620(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14620(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14620(t0,t1);}

C_noret_decl(trf_14527)
static void C_fcall trf_14527(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14527(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14527(t0,t1,t2);}

C_noret_decl(trf_14518)
static void C_fcall trf_14518(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14518(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14518(t0,t1);}

C_noret_decl(trf_14453)
static void C_fcall trf_14453(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14453(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14453(t0,t1);}

C_noret_decl(trf_14195)
static void C_fcall trf_14195(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14195(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14195(t0,t1);}

C_noret_decl(trf_14198)
static void C_fcall trf_14198(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14198(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14198(t0,t1);}

C_noret_decl(trf_14201)
static void C_fcall trf_14201(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14201(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14201(t0,t1);}

C_noret_decl(trf_14076)
static void C_fcall trf_14076(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14076(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14076(t0,t1);}

C_noret_decl(trf_14100)
static void C_fcall trf_14100(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14100(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14100(t0,t1);}

C_noret_decl(trf_14030)
static void C_fcall trf_14030(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14030(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14030(t0,t1,t2);}

C_noret_decl(trf_14021)
static void C_fcall trf_14021(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14021(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14021(t0,t1);}

C_noret_decl(trf_13729)
static void C_fcall trf_13729(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13729(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13729(t0,t1);}

C_noret_decl(trf_13965)
static void C_fcall trf_13965(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13965(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13965(t0,t1);}

C_noret_decl(trf_13971)
static void C_fcall trf_13971(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13971(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13971(t0,t1);}

C_noret_decl(trf_13863)
static void C_fcall trf_13863(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13863(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13863(t0,t1);}

C_noret_decl(trf_13865)
static void C_fcall trf_13865(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13865(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13865(t0,t1,t2,t3);}

C_noret_decl(trf_13914)
static void C_fcall trf_13914(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13914(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13914(t0,t1);}

C_noret_decl(trf_13879)
static void C_fcall trf_13879(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13879(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13879(t0,t1);}

C_noret_decl(trf_13763)
static void C_fcall trf_13763(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13763(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13763(t0,t1);}

C_noret_decl(trf_13677)
static void C_fcall trf_13677(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13677(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13677(t0,t1,t2,t3,t4);}

C_noret_decl(trf_13696)
static void C_fcall trf_13696(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13696(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13696(t0,t1);}

C_noret_decl(trf_13627)
static void C_fcall trf_13627(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13627(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13627(t0,t1,t2,t3);}

C_noret_decl(trf_13388)
static void C_fcall trf_13388(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13388(void *dummy){
C_word t9=C_pick(0);
C_word t8=C_pick(1);
C_word t7=C_pick(2);
C_word t6=C_pick(3);
C_word t5=C_pick(4);
C_word t4=C_pick(5);
C_word t3=C_pick(6);
C_word t2=C_pick(7);
C_word t1=C_pick(8);
C_word t0=C_pick(9);
C_adjust_stack(-10);
f_13388(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9);}

C_noret_decl(trf_13407)
static void C_fcall trf_13407(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13407(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13407(t0,t1);}

C_noret_decl(trf_13422)
static void C_fcall trf_13422(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13422(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13422(t0,t1);}

C_noret_decl(trf_13431)
static void C_fcall trf_13431(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13431(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13431(t0,t1);}

C_noret_decl(trf_13378)
static void C_fcall trf_13378(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13378(void *dummy){
C_word t0=C_pick(0);
C_adjust_stack(-1);
f_13378(t0);}

C_noret_decl(trf_13319)
static void C_fcall trf_13319(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13319(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13319(t0,t1);}

C_noret_decl(trf_13310)
static void C_fcall trf_13310(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13310(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13310(t0,t1,t2);}

C_noret_decl(trf_13193)
static void C_fcall trf_13193(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13193(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13193(t0,t1);}

C_noret_decl(trf_13184)
static void C_fcall trf_13184(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13184(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13184(t0,t1,t2);}

C_noret_decl(trf_13166)
static void C_fcall trf_13166(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13166(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13166(t0,t1,t2);}

C_noret_decl(trf_13157)
static void C_fcall trf_13157(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13157(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13157(t0,t1);}

C_noret_decl(trf_13139)
static void C_fcall trf_13139(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13139(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13139(t0,t1);}

C_noret_decl(trf_13130)
static void C_fcall trf_13130(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13130(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13130(t0,t1,t2);}

C_noret_decl(trf_13121)
static void C_fcall trf_13121(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13121(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13121(t0,t1);}

C_noret_decl(trf_13103)
static void C_fcall trf_13103(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13103(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13103(t0,t1);}

C_noret_decl(trf_13094)
static void C_fcall trf_13094(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13094(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13094(t0,t1,t2);}

C_noret_decl(trf_13085)
static void C_fcall trf_13085(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13085(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13085(t0,t1);}

C_noret_decl(trf_13070)
static void C_fcall trf_13070(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13070(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13070(t0,t1);}

C_noret_decl(trf_13025)
static void C_fcall trf_13025(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13025(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13025(t0,t1);}

C_noret_decl(trf_13007)
static void C_fcall trf_13007(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13007(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13007(t0,t1);}

C_noret_decl(trf_12998)
static void C_fcall trf_12998(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12998(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12998(t0,t1,t2);}

C_noret_decl(trf_12971)
static void C_fcall trf_12971(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12971(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12971(t0,t1);}

C_noret_decl(trf_12953)
static void C_fcall trf_12953(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12953(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12953(t0,t1);}

C_noret_decl(trf_12935)
static void C_fcall trf_12935(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12935(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12935(t0,t1);}

C_noret_decl(trf_12926)
static void C_fcall trf_12926(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12926(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12926(t0,t1,t2);}

C_noret_decl(trf_12914)
static void C_fcall trf_12914(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12914(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_12914(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_12576)
static void C_fcall trf_12576(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12576(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_12576(t0,t1,t2,t3);}

C_noret_decl(trf_12416)
static void C_fcall trf_12416(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12416(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12416(t0,t1);}

C_noret_decl(trf_12451)
static void C_fcall trf_12451(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12451(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_12451(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_12461)
static void C_fcall trf_12461(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12461(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12461(t0,t1);}

C_noret_decl(trf_12424)
static void C_fcall trf_12424(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12424(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12424(t0,t1,t2);}

C_noret_decl(trf_12584)
static void C_fcall trf_12584(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12584(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12584(t0,t1);}

C_noret_decl(trf_12202)
static void C_fcall trf_12202(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12202(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12202(t0,t1);}

C_noret_decl(trf_12208)
static void C_fcall trf_12208(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12208(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12208(t0,t1);}

C_noret_decl(trf_12231)
static void C_fcall trf_12231(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12231(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12231(t0,t1);}

C_noret_decl(trf_12244)
static void C_fcall trf_12244(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12244(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12244(t0,t1);}

C_noret_decl(trf_12218)
static void C_fcall trf_12218(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12218(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12218(t0,t1);}

C_noret_decl(trf_12031)
static void C_fcall trf_12031(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12031(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_12031(t0,t1,t2,t3);}

C_noret_decl(trf_12040)
static void C_fcall trf_12040(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12040(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_12040(t0,t1,t2,t3,t4);}

C_noret_decl(trf_11994)
static void C_fcall trf_11994(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11994(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11994(t0,t1);}

C_noret_decl(trf_11857)
static void C_fcall trf_11857(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11857(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11857(t0,t1);}

C_noret_decl(trf_11787)
static void C_fcall trf_11787(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11787(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11787(t0,t1);}

C_noret_decl(trf_11148)
static void C_fcall trf_11148(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11148(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11148(t0,t1,t2);}

C_noret_decl(trf_11108)
static void C_fcall trf_11108(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11108(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11108(t0,t1,t2);}

C_noret_decl(trf_11121)
static void C_fcall trf_11121(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11121(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11121(t0,t1);}

C_noret_decl(trf_11700)
static void C_fcall trf_11700(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11700(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11700(t0,t1);}

C_noret_decl(trf_11490)
static void C_fcall trf_11490(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11490(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11490(t0,t1);}

C_noret_decl(trf_11606)
static void C_fcall trf_11606(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11606(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11606(t0,t1);}

C_noret_decl(trf_11493)
static void C_fcall trf_11493(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11493(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11493(t0,t1);}

C_noret_decl(trf_11496)
static void C_fcall trf_11496(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11496(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11496(t0,t1);}

C_noret_decl(trf_11401)
static void C_fcall trf_11401(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11401(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11401(t0,t1);}

C_noret_decl(trf_11316)
static void C_fcall trf_11316(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11316(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11316(t0,t1);}

C_noret_decl(trf_11273)
static void C_fcall trf_11273(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11273(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11273(t0,t1);}

C_noret_decl(trf_11240)
static void C_fcall trf_11240(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11240(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11240(t0,t1);}

C_noret_decl(trf_11235)
static void C_fcall trf_11235(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11235(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11235(t0,t1);}

C_noret_decl(trf_11230)
static void C_fcall trf_11230(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11230(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_11230(t0,t1,t2,t3,t4);}

C_noret_decl(trf_10977)
static void C_fcall trf_10977(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10977(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10977(t0,t1);}

C_noret_decl(trf_10824)
static void C_fcall trf_10824(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10824(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10824(t0,t1,t2,t3);}

C_noret_decl(trf_10670)
static void C_fcall trf_10670(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10670(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10670(t0,t1,t2);}

C_noret_decl(trf_10512)
static void C_fcall trf_10512(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10512(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10512(t0,t1,t2);}

C_noret_decl(trf_10545)
static void C_fcall trf_10545(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10545(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10545(t0,t1);}

C_noret_decl(trf_10452)
static void C_fcall trf_10452(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10452(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10452(t0,t1);}

C_noret_decl(trf_10417)
static void C_fcall trf_10417(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10417(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10417(t0,t1);}

C_noret_decl(trf_10433)
static void C_fcall trf_10433(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10433(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10433(t0,t1);}

C_noret_decl(trf_10388)
static void C_fcall trf_10388(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10388(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10388(t0,t1);}

C_noret_decl(trf_10295)
static void C_fcall trf_10295(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10295(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10295(t0,t1);}

C_noret_decl(trf_10051)
static void C_fcall trf_10051(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10051(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10051(t0,t1,t2);}

C_noret_decl(trf_9855)
static void C_fcall trf_9855(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9855(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9855(t0,t1);}

C_noret_decl(trf_10018)
static void C_fcall trf_10018(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10018(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10018(t0,t1);}

C_noret_decl(trf_9858)
static void C_fcall trf_9858(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9858(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9858(t0,t1);}

C_noret_decl(trf_9861)
static void C_fcall trf_9861(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9861(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9861(t0,t1);}

C_noret_decl(trf_9864)
static void C_fcall trf_9864(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9864(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9864(t0,t1);}

C_noret_decl(trf_9906)
static void C_fcall trf_9906(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9906(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9906(t0,t1);}

C_noret_decl(trf_9871)
static void C_fcall trf_9871(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9871(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9871(t0,t1);}

C_noret_decl(trf_9600)
static void C_fcall trf_9600(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9600(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9600(t0,t1,t2,t3);}

C_noret_decl(trf_9608)
static void C_fcall trf_9608(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9608(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9608(t0,t1,t2,t3);}

C_noret_decl(trf_9737)
static void C_fcall trf_9737(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9737(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9737(t0,t1,t2);}

C_noret_decl(trf_9691)
static void C_fcall trf_9691(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9691(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9691(t0,t1,t2);}

C_noret_decl(trf_9594)
static void C_fcall trf_9594(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9594(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9594(t0,t1,t2);}

C_noret_decl(trf_9588)
static void C_fcall trf_9588(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9588(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9588(t0,t1);}

C_noret_decl(trf_9582)
static void C_fcall trf_9582(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9582(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9582(t0,t1,t2);}

C_noret_decl(trf_9511)
static void C_fcall trf_9511(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9511(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9511(t0,t1,t2);}

C_noret_decl(trf_9513)
static void C_fcall trf_9513(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9513(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9513(t0,t1,t2);}

C_noret_decl(trf_9519)
static void C_fcall trf_9519(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9519(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9519(t0,t1,t2);}

C_noret_decl(trf_9360)
static void C_fcall trf_9360(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9360(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9360(t0,t1);}

C_noret_decl(trf_9375)
static void C_fcall trf_9375(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9375(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9375(t0,t1,t2);}

C_noret_decl(trf_9318)
static void C_fcall trf_9318(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9318(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9318(t0,t1,t2);}

C_noret_decl(trf_9258)
static void C_fcall trf_9258(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9258(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9258(t0,t1,t2);}

C_noret_decl(trf_8787)
static void C_fcall trf_8787(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8787(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_8787(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_8800)
static void C_fcall trf_8800(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8800(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_8800(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_8817)
static void C_fcall trf_8817(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8817(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8817(t0,t1);}

C_noret_decl(trf_8583)
static void C_fcall trf_8583(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8583(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8583(t0,t1,t2);}

C_noret_decl(trf_8589)
static void C_fcall trf_8589(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8589(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_8589(t0,t1,t2,t3,t4);}

C_noret_decl(trf_8599)
static void C_fcall trf_8599(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8599(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8599(t0,t1);}

C_noret_decl(trf_8513)
static void C_fcall trf_8513(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8513(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8513(t0,t1,t2,t3);}

C_noret_decl(trf_8490)
static void C_fcall trf_8490(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8490(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8490(t0,t1,t2,t3);}

C_noret_decl(trf_8331)
static void C_fcall trf_8331(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8331(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8331(t0,t1,t2);}

C_noret_decl(trf_8369)
static void C_fcall trf_8369(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8369(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8369(t0,t1,t2);}

C_noret_decl(trf_8055)
static void C_fcall trf_8055(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8055(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8055(t0,t1);}

C_noret_decl(trf_7780)
static void C_fcall trf_7780(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7780(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_7780(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_7613)
static void C_fcall trf_7613(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7613(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7613(t0,t1);}

C_noret_decl(trf_7522)
static void C_fcall trf_7522(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7522(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7522(t0,t1);}

C_noret_decl(trf_7502)
static void C_fcall trf_7502(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7502(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7502(t0,t1,t2,t3);}

C_noret_decl(trf_7461)
static void C_fcall trf_7461(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7461(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7461(t0,t1);}

C_noret_decl(trf_7451)
static void C_fcall trf_7451(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7451(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7451(t0,t1);}

C_noret_decl(trf_7433)
static void C_fcall trf_7433(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7433(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7433(t0,t1);}

C_noret_decl(trf_7422)
static void C_fcall trf_7422(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7422(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7422(t0,t1,t2);}

C_noret_decl(trf_7384)
static void C_fcall trf_7384(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7384(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7384(t0,t1);}

C_noret_decl(trf_7377)
static void C_fcall trf_7377(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7377(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7377(t0,t1);}

C_noret_decl(trf_7353)
static void C_fcall trf_7353(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7353(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7353(t0,t1);}

C_noret_decl(trf_7279)
static void C_fcall trf_7279(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7279(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7279(t0,t1,t2,t3);}

C_noret_decl(trf_7268)
static void C_fcall trf_7268(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7268(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7268(t0,t1,t2);}

C_noret_decl(trf_7207)
static void C_fcall trf_7207(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7207(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_7207(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_7151)
static void C_fcall trf_7151(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7151(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7151(t0,t1,t2);}

C_noret_decl(trf_7030)
static void C_fcall trf_7030(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7030(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7030(t0,t1);}

C_noret_decl(tr7)
static void C_fcall tr7(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7(C_proc7 k){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
(k)(7,t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr6)
static void C_fcall tr6(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6(C_proc6 k){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
(k)(6,t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr5)
static void C_fcall tr5(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5(C_proc5 k){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
(k)(5,t0,t1,t2,t3,t4);}

C_noret_decl(tr4)
static void C_fcall tr4(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4(C_proc4 k){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
(k)(4,t0,t1,t2,t3);}

C_noret_decl(tr3)
static void C_fcall tr3(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3(C_proc3 k){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
(k)(3,t0,t1,t2);}

C_noret_decl(tr2)
static void C_fcall tr2(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2(C_proc2 k){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
(k)(2,t0,t1);}

C_noret_decl(tr7r)
static void C_fcall tr7r(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7r(C_proc7 k){
int n;
C_word *a,t7;
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
n=C_rest_count(0);
a=C_alloc(n*3);
t7=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6,t7);}

C_noret_decl(tr6r)
static void C_fcall tr6r(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6r(C_proc6 k){
int n;
C_word *a,t6;
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
n=C_rest_count(0);
a=C_alloc(n*3);
t6=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr5r)
static void C_fcall tr5r(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5r(C_proc5 k){
int n;
C_word *a,t5;
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
n=C_rest_count(0);
a=C_alloc(n*3);
t5=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr2r)
static void C_fcall tr2r(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2r(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n*3);
t2=C_restore_rest(a,n);
(k)(t0,t1,t2);}

C_noret_decl(tr4r)
static void C_fcall tr4r(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4r(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n*3);
t4=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3r)
static void C_fcall tr3r(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3r(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n*3);
t3=C_restore_rest(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr3rv)
static void C_fcall tr3rv(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3rv(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n+1);
t3=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr2rv)
static void C_fcall tr2rv(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2rv(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n+1);
t2=C_restore_rest_vector(a,n);
(k)(t0,t1,t2);}

/* toplevel */
static C_TLS int toplevel_initialized=0;
C_noret_decl(toplevel_trampoline)
static void C_fcall toplevel_trampoline(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall toplevel_trampoline(void *dummy){
C_cm_toplevel(2,C_SCHEME_UNDEFINED,C_restore);}

void C_ccall C_cm_toplevel(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(toplevel_initialized) C_kontinue(t1,C_SCHEME_UNDEFINED);
else C_toplevel_entry(C_text("cm_toplevel"));
C_check_nursery_minimum(3);
if(!C_demand(3)){
C_save(t1);
C_reclaim((void*)toplevel_trampoline,NULL);}
toplevel_initialized=1;
if(!C_demand_2(6052)){
C_save(t1);
C_rereclaim2(6052*sizeof(C_word), 1);
t1=C_restore;}
a=C_alloc(3);
C_initialize_lf(lf,1081);
lf[0]=C_h_intern(&lf[0],3,"ash");
lf[1]=C_h_intern(&lf[1],6,"logand");
lf[2]=C_h_intern(&lf[2],11,"bitwise-and");
lf[3]=C_h_intern(&lf[3],6,"lognot");
lf[4]=C_h_intern(&lf[4],11,"bitwise-not");
lf[5]=C_h_intern(&lf[5],6,"logxor");
lf[6]=C_h_intern(&lf[6],11,"bitwise-xor");
lf[7]=C_h_intern(&lf[7],6,"logior");
lf[8]=C_h_intern(&lf[8],11,"bitwise-ior");
lf[9]=C_h_intern(&lf[9],7,"logtest");
lf[10]=C_h_intern(&lf[10],20,"most-positive-fixnum");
lf[11]=C_h_intern(&lf[11],20,"most-negative-fixnum");
lf[12]=C_h_intern(&lf[12],2,"pi");
lf[13]=C_decode_literal(C_heaptop,"\376U3.14159265358979\000");
lf[14]=C_h_intern(&lf[14],9,"list-set!");
lf[15]=C_h_intern(&lf[15],21,"make-equal-hash-table");
lf[16]=C_h_intern(&lf[16],15,"make-hash-table");
lf[17]=C_h_intern(&lf[17],6,"equal\077");
lf[18]=C_h_intern(&lf[18],18,"make-eq-hash-table");
lf[19]=C_h_intern(&lf[19],3,"eq\077");
lf[20]=C_h_intern(&lf[20],9,"hash-set!");
lf[21]=C_h_intern(&lf[21],15,"hash-table-set!");
lf[22]=C_h_intern(&lf[22],8,"hash-ref");
lf[23]=C_h_intern(&lf[23],22,"hash-table-ref/default");
lf[25]=C_h_intern(&lf[25],22,"call-with-input-string");
lf[26]=C_h_intern(&lf[26],4,"read");
lf[28]=C_h_intern(&lf[28],17,"\003sysmake-c-string");
lf[54]=C_h_intern(&lf[54],17,"\003syspeek-c-string");
lf[56]=C_h_intern(&lf[56],4,"quit");
lf[57]=C_h_intern(&lf[57],11,"print-error");
lf[58]=C_h_intern(&lf[58],12,"print-output");
lf[59]=C_h_intern(&lf[59],5,"shell");
lf[60]=C_h_intern(&lf[60],5,"first");
lf[61]=C_h_intern(&lf[61],3,"car");
lf[62]=C_h_intern(&lf[62],6,"second");
lf[63]=C_h_intern(&lf[63],4,"cadr");
lf[64]=C_h_intern(&lf[64],5,"third");
lf[65]=C_h_intern(&lf[65],5,"caddr");
lf[66]=C_h_intern(&lf[66],6,"fourth");
lf[67]=C_h_intern(&lf[67],6,"cadddr");
lf[68]=C_h_intern(&lf[68],5,"fifth");
lf[69]=C_h_intern(&lf[69],5,"sixth");
lf[70]=C_h_intern(&lf[70],7,"seventh");
lf[71]=C_h_intern(&lf[71],6,"eighth");
lf[72]=C_h_intern(&lf[72],5,"ninth");
lf[73]=C_h_intern(&lf[73],5,"tenth");
lf[74]=C_h_intern(&lf[74],3,"nth");
lf[75]=C_h_intern(&lf[75],8,"list-ref");
lf[76]=C_h_intern(&lf[76],4,"rest");
lf[77]=C_h_intern(&lf[77],4,"last");
lf[78]=C_h_intern(&lf[78],7,"butlast");
lf[79]=C_h_intern(&lf[79],4,"tail");
lf[80]=C_h_intern(&lf[80],6,"concat");
lf[81]=C_h_intern(&lf[81],9,"make-list");
lf[82]=C_h_intern(&lf[82],5,"error");
lf[83]=C_decode_literal(C_heaptop,"\376B\000\000\034Negative length to make-list");
lf[87]=C_h_intern(&lf[87],6,"length");
lf[88]=C_h_intern(&lf[88],10,"string-ref");
lf[89]=C_h_intern(&lf[89],13,"string-length");
lf[90]=C_h_intern(&lf[90],10,"vector-ref");
lf[91]=C_h_intern(&lf[91],13,"vector-length");
lf[92]=C_decode_literal(C_heaptop,"\376B\000\000\034not a list, string or vector");
lf[93]=C_h_intern(&lf[93],4,"find");
lf[94]=C_h_intern(&lf[94],12,"with-optkeys");
lf[95]=C_h_intern(&lf[95],3,"key");
lf[96]=C_h_intern(&lf[96],5,"start");
lf[97]=C_h_intern(&lf[97],3,"end");
lf[98]=C_h_intern(&lf[98],8,"position");
lf[99]=C_h_intern(&lf[99],14,"expand-optkeys");
lf[100]=C_h_intern(&lf[100],3,"let");
lf[101]=C_h_intern(&lf[101],4,"let*");
lf[102]=C_h_intern(&lf[102],5,"null\077");
lf[103]=C_decode_literal(C_heaptop,"\376B\000\000\022Too many arguments");
lf[104]=C_h_intern(&lf[104],6,"unless");
lf[105]=C_h_intern(&lf[105],10,"\003sysappend");
lf[106]=C_h_intern(&lf[106],4,"case");
lf[107]=C_decode_literal(C_heaptop,"\376B\000\000\031Positional after keywords");
lf[108]=C_h_intern(&lf[108],4,"when");
lf[109]=C_h_intern(&lf[109],4,"set!");
lf[110]=C_h_intern(&lf[110],8,"keyword\077");
lf[111]=C_decode_literal(C_heaptop,"\376B\000\000\017Unknown keyword");
lf[112]=C_h_intern(&lf[112],3,"cdr");
lf[113]=C_h_intern(&lf[113],4,"else");
lf[114]=C_h_intern(&lf[114],7,"\003sysmap");
lf[115]=C_h_intern(&lf[115],6,"append");
lf[116]=C_decode_literal(C_heaptop,"\376B\000\000\021Redundant keyword");
lf[117]=C_h_intern(&lf[117],2,"if");
lf[118]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing keyword value in");
lf[119]=C_h_intern(&lf[119],4,"cddr");
lf[120]=C_h_intern(&lf[120],15,"string->keyword");
lf[121]=C_h_intern(&lf[121],14,"symbol->string");
lf[122]=C_h_intern(&lf[122],6,"gensym");
lf[123]=C_decode_literal(C_heaptop,"\376B\000\000\004keyp");
lf[124]=C_decode_literal(C_heaptop,"\376B\000\000\004args");
lf[136]=C_h_intern(&lf[136],8,"operator");
lf[137]=C_h_intern(&lf[137],8,"bindings");
lf[138]=C_h_intern(&lf[138],10,"collectors");
lf[139]=C_h_intern(&lf[139],9,"initially");
lf[140]=C_h_intern(&lf[140],9,"end-tests");
lf[141]=C_h_intern(&lf[141],7,"looping");
lf[142]=C_h_intern(&lf[142],8,"stepping");
lf[143]=C_h_intern(&lf[143],7,"finally");
lf[144]=C_h_intern(&lf[144],9,"returning");
lf[150]=C_decode_literal(C_heaptop,"\376B\000\000\023illegal loop syntax");
lf[151]=C_h_intern(&lf[151],7,"newline");
lf[152]=C_h_intern(&lf[152],7,"display");
lf[153]=C_decode_literal(C_heaptop,"\376B\000\000\002()");
lf[154]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[155]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[156]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[157]=C_decode_literal(C_heaptop,"\376B\000\000\020clause context: ");
lf[158]=C_decode_literal(C_heaptop,"\376B\000\000\014LOOP ERROR: ");
lf[159]=C_h_intern(&lf[159],7,"reverse");
lf[161]=C_decode_literal(C_heaptop,"\376B\000\000*Variable expected but source code ran out.");
lf[162]=C_decode_literal(C_heaptop,"\376B\000\000.\047for\047 clause expected but source code ran out.");
lf[163]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[164]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[165]=C_decode_literal(C_heaptop,"\376B\000\000\031 is not valid with \047for\047.");
lf[166]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[167]=C_decode_literal(C_heaptop,"\376B\000\000\034\047 where a variable expected.");
lf[169]=C_h_intern(&lf[169],3,"for");
lf[170]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[171]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[172]=C_h_intern(&lf[172],8,"downfrom");
lf[173]=C_h_intern(&lf[173],1,"-");
lf[174]=C_h_intern(&lf[174],5,"above");
lf[175]=C_h_intern(&lf[175],2,"<=");
lf[176]=C_h_intern(&lf[176],1,"<");
lf[177]=C_h_intern(&lf[177],1,"+");
lf[178]=C_h_intern(&lf[178],5,"below");
lf[179]=C_h_intern(&lf[179],2,">=");
lf[180]=C_h_intern(&lf[180],1,">");
lf[181]=C_h_intern(&lf[181],6,"downto");
lf[182]=C_h_intern(&lf[182],4,"from");
lf[183]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[184]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[185]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[186]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[187]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[188]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[189]=C_h_intern(&lf[189],2,"to");
lf[190]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[191]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[192]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[193]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[194]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[195]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[196]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[197]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[198]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[199]=C_h_intern(&lf[199],2,"by");
lf[200]=C_decode_literal(C_heaptop,"\376B\000\000\025Found duplicate \047by\047.");
lf[201]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[202]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[203]=C_decode_literal(C_heaptop,"\376B\000\000,Expected expression but source code ran out.");
lf[205]=C_decode_literal(C_heaptop,"\376B\000\0001\047repeat\047 clause expected but source code ran out.");
lf[206]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[208]=C_h_intern(&lf[208],6,"across");
lf[209]=C_h_intern(&lf[209],3,"not");
lf[210]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[211]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[212]=C_h_intern(&lf[212],4,"over");
lf[213]=C_h_intern(&lf[213],4,"eod\077");
lf[214]=C_h_intern(&lf[214],5,"begin");
lf[215]=C_h_intern(&lf[215],4,"next");
lf[216]=C_h_intern(&lf[216],2,"in");
lf[217]=C_h_intern(&lf[217],5,"quote");
lf[218]=C_decode_literal(C_heaptop,"\376B\000\000\014Extraneous \047");
lf[219]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[220]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[221]=C_decode_literal(C_heaptop,"\376B\000\000\017Duplicate \047by\047.");
lf[222]=C_decode_literal(C_heaptop,"\376B\000\000\036\047by\047 is invalid with \047across\047.");
lf[223]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[224]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[225]=C_h_intern(&lf[225],2,"on");
lf[226]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[227]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[229]=C_h_intern(&lf[229],1,"=");
lf[230]=C_decode_literal(C_heaptop,"\376B\000\000\016Duplicate \047=\047.");
lf[231]=C_h_intern(&lf[231],4,"then");
lf[232]=C_decode_literal(C_heaptop,"\376B\000\000\021Duplicate \047then\047.");
lf[233]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[234]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[235]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[237]=C_h_intern(&lf[237],4,"with");
lf[238]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[239]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[240]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[241]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[242]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[243]=C_h_intern(&lf[243],3,"and");
lf[244]=C_decode_literal(C_heaptop,"\376B\000\000\020Duplicate \047and\047.");
lf[245]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[246]=C_decode_literal(C_heaptop,"\376B\000\000\037Found \047=\047 where \047and\047 expected.");
lf[247]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[248]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where variable expected.");
lf[249]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[250]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 where \047=\047 or \047and\047 expected.");
lf[252]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[253]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[255]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[256]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[258]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[259]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[261]=C_h_intern(&lf[261],3,"sum");
lf[262]=C_h_intern(&lf[262],5,"count");
lf[263]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[264]=C_h_intern(&lf[264],8,"minimize");
lf[265]=C_h_intern(&lf[265],8,"maximize");
lf[266]=C_h_intern(&lf[266],2,"or");
lf[267]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[268]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[269]=C_h_intern(&lf[269],4,"list");
lf[270]=C_h_intern(&lf[270],8,"set-cdr!");
lf[271]=C_h_intern(&lf[271],9,"last-pair");
lf[272]=C_h_intern(&lf[272],7,"collect");
lf[273]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\003\000\000\002\376\377\006\000\376\377\016");
lf[274]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[275]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[276]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[277]=C_h_intern(&lf[277],5,"nconc");
lf[278]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[279]=C_decode_literal(C_heaptop,"\376B\000\000\007\047 and \047");
lf[280]=C_decode_literal(C_heaptop,"\376B\000\000 \047 are incompatible accumulators.");
lf[281]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007collect\376\003\000\000\002\376\001\000\000\006append\376\003\000\000\002\376\001\000\000\005nconc\376\377\016");
lf[282]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[283]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010minimize\376\003\000\000\002\376\001\000\000\010maximize\376\377\016");
lf[284]=C_h_intern(&lf[284],4,"into");
lf[285]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[286]=C_decode_literal(C_heaptop,"\376B\000\000!\047 where \047into\047 variable expected.");
lf[287]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing \047into\047 variable.");
lf[288]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[289]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[291]=C_h_intern(&lf[291],6,"return");
lf[293]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[294]=C_h_intern(&lf[294],5,"until");
lf[295]=C_h_intern(&lf[295],5,"while");
lf[296]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[297]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[299]=C_h_intern(&lf[299],7,"thereis");
lf[300]=C_h_intern(&lf[300],6,"always");
lf[301]=C_h_intern(&lf[301],5,"never");
lf[302]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[303]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[305]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[306]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[308]=C_decode_literal(C_heaptop,"\376B\000\000\025Missing \047and\047 clause.");
lf[309]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[310]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 is not conditional operator.");
lf[311]=C_h_intern(&lf[311],4,"task");
lf[312]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007thereis\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[314]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004else\376\377\016");
lf[315]=C_decode_literal(C_heaptop,"\376B\000\000\026Missing \047else\047 clause.");
lf[316]=C_decode_literal(C_heaptop,"\376B\000\000\033Missing conditional clause.");
lf[317]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[318]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[320]=C_h_intern(&lf[320],2,"do");
lf[321]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[322]=C_decode_literal(C_heaptop,"\376B\000\000\030\047 clause cannot follow \047");
lf[323]=C_decode_literal(C_heaptop,"\376B\000\000\002\047.");
lf[324]=C_h_intern(&lf[324],4,"iter");
lf[325]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[326]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where operator expected.");
lf[327]=C_h_intern(&lf[327],6,"repeat");
lf[328]=C_h_intern(&lf[328],2,"as");
lf[331]=C_h_intern(&lf[331],6,"period");
lf[333]=C_h_intern(&lf[333],14,"\003sysblock-set!");
lf[341]=C_h_intern(&lf[341],7,"pattern");
lf[356]=C_h_intern(&lf[356],4,"\000nad");
lf[357]=C_h_intern(&lf[357],8,"\000periods");
lf[358]=C_h_intern(&lf[358],12,"\000depth-first");
lf[360]=C_h_intern(&lf[360],14,"\000breadth-first");
lf[361]=C_decode_literal(C_heaptop,"\376B\000\000\026Illegal for traversing");
lf[362]=C_h_intern(&lf[362],7,"\000values");
lf[363]=C_decode_literal(C_heaptop,"\376B\000\000\024Illegal for counting");
lf[365]=C_h_intern(&lf[365],4,"eop\077");
lf[366]=C_h_intern(&lf[366],4,"\000eop");
lf[367]=C_h_intern(&lf[367],4,"\000eod");
lf[371]=C_h_intern(&lf[371],3,"max");
lf[372]=C_h_intern(&lf[372],10,"make-cycle");
lf[373]=C_h_intern(&lf[373],12,"\003sysfor-each");
lf[375]=C_h_intern(&lf[375],4,"\000for");
lf[376]=C_h_intern(&lf[376],7,"\000repeat");
lf[378]=C_h_intern(&lf[378],5,"palin");
lf[380]=C_h_intern(&lf[380],15,"make-palindrome");
lf[382]=C_h_intern(&lf[382],6,"\000elide");
lf[383]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\000\376\003\000\000\002\376\377\006\001\376\377\016");
lf[384]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\001\376\003\000\000\002\376\377\006\000\376\377\016");
lf[385]=C_h_intern(&lf[385],9,"make-line");
lf[387]=C_h_intern(&lf[387],9,"make-heap");
lf[389]=C_h_intern(&lf[389],13,"make-rotation");
lf[391]=C_h_intern(&lf[391],7,"\000rotate");
lf[393]=C_h_intern(&lf[393],11,"random-item");
lf[401]=C_h_intern(&lf[401],14,"make-weighting");
lf[404]=C_h_intern(&lf[404],7,"\000weight");
lf[405]=C_h_intern(&lf[405],4,"\000min");
lf[406]=C_h_intern(&lf[406],4,"\000max");
lf[407]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[408]=C_h_intern(&lf[408],11,"make-markov");
lf[409]=C_h_intern(&lf[409],1,"*");
lf[411]=C_h_intern(&lf[411],5,"\000past");
lf[412]=C_h_intern(&lf[412],2,"->");
lf[413]=C_decode_literal(C_heaptop,"\376B\000\000.Left hand sides have different number of items");
lf[414]=C_h_intern(&lf[414],3,"\000->");
lf[415]=C_decode_literal(C_heaptop,"\376B\000\000\042Transition missing right hand side");
lf[416]=C_decode_literal(C_heaptop,"\376B\000\000\030Transition is not a list");
lf[417]=C_decode_literal(C_heaptop,"\376B\000\000 Not a list of Markov transitions");
lf[418]=C_decode_literal(C_heaptop,"\376B\000\000\032No transition matches past");
lf[420]=C_h_intern(&lf[420],10,"graph-node");
lf[421]=C_h_intern(&lf[421],10,"make-graph");
lf[423]=C_h_intern(&lf[423],3,"\000to");
lf[424]=C_h_intern(&lf[424],3,"\000id");
lf[425]=C_decode_literal(C_heaptop,"\376B\000\000\025Graph node not a list");
lf[426]=C_decode_literal(C_heaptop,"\376B\000\000\016Not graph data");
lf[427]=C_decode_literal(C_heaptop,"\376B\000\000\024No graph node for id");
lf[428]=C_h_intern(&lf[428],14,"markov-analyze");
lf[429]=C_h_intern(&lf[429],6,"format");
lf[430]=C_decode_literal(C_heaptop,"\376B\000\000\002~s");
lf[431]=C_h_intern(&lf[431],19,"\003sysundefined-value");
lf[432]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002->\376\377\016");
lf[433]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[434]=C_h_intern(&lf[434],19,"\003syswrite-char/port");
lf[435]=C_h_intern(&lf[435],19,"\003sysstandard-output");
lf[436]=C_h_intern(&lf[436],9,"substring");
lf[437]=C_h_intern(&lf[437],3,"min");
lf[438]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[439]=C_h_intern(&lf[439],13,"string-append");
lf[440]=C_decode_literal(C_heaptop,"\376B\000\000\003 ~a");
lf[441]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[442]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[443]=C_h_intern(&lf[443],11,"make-string");
lf[444]=C_h_intern(&lf[444],4,"sort");
lf[445]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[446]=C_h_intern(&lf[446],8,"decimals");
lf[447]=C_h_intern(&lf[447],11,"string-ci<\077");
lf[448]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[449]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[450]=C_h_intern(&lf[450],6,"modulo");
lf[451]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[452]=C_h_intern(&lf[452],6,"\000order");
lf[453]=C_h_intern(&lf[453],5,"\000mode");
lf[454]=C_h_intern(&lf[454],7,"rescale");
lf[455]=C_h_intern(&lf[455],8,"discrete");
lf[456]=C_h_intern(&lf[456],12,"ffi_discrete");
lf[457]=C_h_intern(&lf[457],4,"not\077");
lf[458]=C_h_intern(&lf[458],3,"int");
lf[459]=C_h_intern(&lf[459],5,"float");
lf[460]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[461]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[462]=C_h_intern(&lf[462],5,"log10");
lf[463]=C_h_intern(&lf[463],4,"log2");
lf[464]=C_h_intern(&lf[464],4,"plus");
lf[465]=C_h_intern(&lf[465],5,"times");
lf[466]=C_h_intern(&lf[466],5,"minus");
lf[467]=C_h_intern(&lf[467],6,"divide");
lf[468]=C_h_intern(&lf[468],1,"/");
lf[469]=C_h_intern(&lf[469],8,"quantize");
lf[470]=C_h_intern(&lf[470],5,"round");
lf[471]=C_h_intern(&lf[471],4,"expt");
lf[472]=C_decode_literal(C_heaptop,"\376U10.0\000");
lf[473]=C_h_intern(&lf[473],15,"rhythm->seconds");
lf[474]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[475]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[476]=C_h_intern(&lf[476],6,"\000tempo");
lf[477]=C_h_intern(&lf[477],5,"\000beat");
lf[478]=C_h_intern(&lf[478],12,"ratio->cents");
lf[479]=C_h_intern(&lf[479],12,"cents->ratio");
lf[481]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[482]=C_h_intern(&lf[482],3,"err");
lf[483]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[484]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[485]=C_h_intern(&lf[485],6,"interp");
lf[486]=C_decode_literal(C_heaptop,"\376B\000\000\027missing x y coordinates");
lf[487]=C_h_intern(&lf[487],8,"tendency");
lf[488]=C_h_intern(&lf[488],3,"ran");
lf[489]=C_h_intern(&lf[489],3,"fit");
lf[490]=C_h_intern(&lf[490],9,"remainder");
lf[491]=C_decode_literal(C_heaptop,"\376B\000\000\021mode not 1 2 or 3");
lf[492]=C_h_intern(&lf[492],5,"scale");
lf[493]=C_decode_literal(C_heaptop,"\376B\000\000\023limit same as start");
lf[494]=C_h_intern(&lf[494],4,"segs");
lf[495]=C_decode_literal(C_heaptop,"\376B\000\000\014Illegal base");
lf[496]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[497]=C_h_intern(&lf[497],8,"ran-set!");
lf[498]=C_h_intern(&lf[498],7,"between");
lf[499]=C_h_intern(&lf[499],4,"pick");
lf[500]=C_h_intern(&lf[500],4,"vary");
lf[501]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[502]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[503]=C_h_intern(&lf[503],8,"shuffle!");
lf[504]=C_h_intern(&lf[504],7,"shuffle");
lf[505]=C_h_intern(&lf[505],6,"ranlow");
lf[506]=C_h_intern(&lf[506],7,"ranhigh");
lf[507]=C_h_intern(&lf[507],9,"ranmiddle");
lf[508]=C_h_intern(&lf[508],7,"ranbeta");
lf[509]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[510]=C_h_intern(&lf[510],2,"\000a");
lf[511]=C_h_intern(&lf[511],2,"\000b");
lf[512]=C_h_intern(&lf[512],6,"ranexp");
lf[513]=C_h_intern(&lf[513],8,"rangauss");
lf[514]=C_h_intern(&lf[514],9,"rancauchy");
lf[515]=C_h_intern(&lf[515],10,"ranpoisson");
lf[516]=C_h_intern(&lf[516],8,"rangamma");
lf[517]=C_h_intern(&lf[517],8,"ranbrown");
lf[518]=C_h_intern(&lf[518],7,"ranpink");
lf[521]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[522]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[524]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[525]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[526]=C_decode_literal(C_heaptop,"\376U0.333333333333333\000");
lf[527]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[528]=C_h_intern(&lf[528],5,"floor");
lf[529]=C_h_intern(&lf[529],15,"keyword->string");
lf[530]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[531]=C_h_intern(&lf[531],4,"note");
lf[532]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[533]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[534]=C_h_intern(&lf[534],2,"hz");
lf[535]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[536]=C_h_intern(&lf[536],2,"pc");
lf[537]=C_h_intern(&lf[537],6,"invert");
lf[538]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[539]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[540]=C_h_intern(&lf[540],9,"transpose");
lf[541]=C_decode_literal(C_heaptop,"\376B\000\000\022No transposion for");
lf[542]=C_h_intern(&lf[542],10,"retrograde");
lf[543]=C_h_intern(&lf[543],11,"scale-order");
lf[544]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[545]=C_h_intern(&lf[545],7,"*tempo*");
lf[546]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[547]=C_h_intern(&lf[547],6,"*beat*");
lf[548]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[550]=C_h_intern(&lf[550],14,"string->symbol");
lf[551]=C_h_intern(&lf[551],6,"rhythm");
lf[552]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\012\000\000+\376\003\000\000\002\376\377\012\000\000-\376\003\000\000\002\376\377\012\000\000*\376\003\000\000\002\376\377\012\000\000/\376\377\016");
lf[553]=C_decode_literal(C_heaptop,"\376B\000\000\014Not a rhythm");
lf[554]=C_decode_literal(C_heaptop,"\376B\000\000\014Not a rhythm");
lf[555]=C_decode_literal(C_heaptop,"\376B\000\000\014not a rhythm");
lf[556]=C_decode_literal(C_heaptop,"\376B\000\000\014Not a rhythm");
lf[557]=C_decode_literal(C_heaptop,"\376B\000\000\014not a rhythm");
lf[558]=C_decode_literal(C_heaptop,"\376B\000\000\014Not a rhythm");
lf[559]=C_decode_literal(C_heaptop,"\376B\000\000\014not a rhythm");
lf[560]=C_h_intern(&lf[560],8,"in-tempo");
lf[561]=C_h_intern(&lf[561],3,"cwd");
lf[562]=C_h_intern(&lf[562],5,"chdir");
lf[564]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[565]=C_decode_literal(C_heaptop,"\376B\000\000\030pathname is not a string");
lf[567]=C_decode_literal(C_heaptop,"\376B\000\000\030pathname is not a string");
lf[569]=C_h_intern(&lf[569],8,"spectrum");
lf[571]=C_h_intern(&lf[571],13,"spectrum-time");
lf[573]=C_h_intern(&lf[573],13,"spectrum-size");
lf[575]=C_h_intern(&lf[575],14,"spectrum-freqs");
lf[577]=C_h_intern(&lf[577],13,"spectrum-amps");
lf[578]=C_h_intern(&lf[578],13,"spectrum-copy");
lf[579]=C_h_intern(&lf[579],14,"spectrum-pairs");
lf[580]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[581]=C_h_intern(&lf[581],16,"spectrum-minfreq");
lf[582]=C_h_intern(&lf[582],16,"spectrum-maxfreq");
lf[583]=C_h_intern(&lf[583],15,"spectrum-minamp");
lf[584]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[585]=C_h_intern(&lf[585],15,"spectrum-maxamp");
lf[586]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[587]=C_h_intern(&lf[587],13,"spectrum-keys");
lf[588]=C_h_intern(&lf[588],5,"sort!");
lf[589]=C_decode_literal(C_heaptop,"\376B\000\000\022mode not -1 0 or 1");
lf[590]=C_h_intern(&lf[590],4,"mode");
lf[591]=C_h_intern(&lf[591],8,"for-each");
lf[592]=C_h_intern(&lf[592],7,"\000thresh");
lf[593]=C_h_intern(&lf[593],6,"\000quant");
lf[594]=C_h_intern(&lf[594],7,"\000unique");
lf[595]=C_h_intern(&lf[595],11,"fm-spectrum");
lf[596]=C_h_intern(&lf[596],4,"caar");
lf[597]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[598]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[599]=C_h_intern(&lf[599],13,"spectrum-add!");
lf[600]=C_h_intern(&lf[600],11,"rm-spectrum");
lf[601]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[602]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[603]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[604]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[605]=C_h_intern(&lf[605],14,"spectrum-flip!");
lf[606]=C_h_intern(&lf[606],17,"spectrum-rescale!");
lf[607]=C_h_intern(&lf[607],3,"map");
lf[608]=C_decode_literal(C_heaptop,"\376B\000\000\037Non-numerical y can\047t be scaler");
lf[609]=C_h_intern(&lf[609],7,"number\077");
lf[610]=C_decode_literal(C_heaptop,"\376B\000\000\014Mode not 1-8");
lf[611]=C_decode_literal(C_heaptop,"\376B\000\000%Need a scaler, envelope or x y values");
lf[612]=C_decode_literal(C_heaptop,"\376B\000\000\024Not a number or pair");
lf[613]=C_h_intern(&lf[613],19,"import-spear-frames");
lf[614]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[615]=C_h_intern(&lf[615],9,"read-line");
lf[616]=C_decode_literal(C_heaptop,"\376B\000\000\016Bad frame data");
lf[617]=C_h_intern(&lf[617],17,"open-input-string");
lf[618]=C_decode_literal(C_heaptop,"\376B\000\000\012frame-data");
lf[619]=C_decode_literal(C_heaptop,"\376B\000\000$point-type index frequency amplitude");
lf[620]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[621]=C_decode_literal(C_heaptop,"\376B\000\000\025par-text-frame-format");
lf[622]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[623]=C_h_intern(&lf[623],18,"current-input-port");
lf[624]=C_h_intern(&lf[624],20,"with-input-from-file");
lf[625]=C_h_intern(&lf[625],19,"export-spear-frames");
lf[626]=C_decode_literal(C_heaptop,"\376B\000\000\002~%");
lf[627]=C_decode_literal(C_heaptop,"\376B\000\000\011 ~S ~S ~S");
lf[628]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[629]=C_decode_literal(C_heaptop,"\376B\000\000\005~S ~S");
lf[630]=C_decode_literal(C_heaptop,"\376B\000\000\014frame-data~%");
lf[631]=C_decode_literal(C_heaptop,"\376B\000\000\020frame-count ~S~%");
lf[632]=C_decode_literal(C_heaptop,"\376B\000\000\023partials-count ~S~%");
lf[633]=C_decode_literal(C_heaptop,"\376B\000\000&point-type index frequency amplitude~%");
lf[634]=C_decode_literal(C_heaptop,"\376B\000\000\027par-text-frame-format~%");
lf[635]=C_h_intern(&lf[635],19,"current-output-port");
lf[636]=C_h_intern(&lf[636],19,"with-output-to-file");
lf[638]=C_h_intern(&lf[638],5,"token");
lf[642]=C_h_intern(&lf[642],1,"t");
lf[647]=C_h_intern(&lf[647],4,"rule");
lf[649]=C_decode_literal(C_heaptop,"\376B\000\000\012not a rule");
lf[656]=C_h_intern(&lf[656],11,"parse-error");
lf[658]=C_h_intern(&lf[658],10,"parse-unit");
lf[670]=C_decode_literal(C_heaptop,"\376B\000\000\014no info for ");
lf[672]=C_decode_literal(C_heaptop,"\376B\000\0005emit-token-unit: dont know how to emit slotref token ");
lf[673]=C_decode_literal(C_heaptop,"\376B\000\000\047emit-token-unit: dont know how to emit ");
lf[676]=C_decode_literal(C_heaptop,"\376B\000\000\033emit: dont know how to emit");
lf[678]=C_h_intern(&lf[678],2,"!=");
lf[683]=C_decode_literal(C_heaptop,"\376B\000\000\035Not a token type or rule type");
lf[684]=C_decode_literal(C_heaptop,"\376B\000\000\047Pattern opr not one of and, or, *, +, @");
lf[685]=C_h_intern(&lf[685],1,"@");
lf[686]=C_decode_literal(C_heaptop,"\376B\000\000\047Not a pattern value or pattern operator");
lf[687]=C_decode_literal(C_heaptop,"\376B\000\000!~%parse[~A]: pattern=~S tokens=~S");
lf[692]=C_decode_literal(C_heaptop,"\376B\000\000\004stop");
lf[693]=C_decode_literal(C_heaptop,"\376B\000\000\004temp");
lf[694]=C_decode_literal(C_heaptop,"\376B\000\000\004bool");
lf[695]=C_decode_literal(C_heaptop,"\376B\000\000\004tail");
lf[696]=C_decode_literal(C_heaptop,"\376B\000\000\004goal");
lf[697]=C_decode_literal(C_heaptop,"\376B\000\000\004from");
lf[698]=C_decode_literal(C_heaptop,"\376B\000\000\004step");
lf[699]=C_h_intern(&lf[699],3,"sal");
lf[700]=C_decode_literal(C_heaptop,"\376B\000\000\013>>> Error: ");
lf[701]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[702]=C_h_intern(&lf[702],4,"eval");
lf[703]=C_h_intern(&lf[703],23,"interaction-environment");
lf[704]=C_h_intern(&lf[704],7,"\000syntax");
lf[705]=C_h_intern(&lf[705],7,"\000scheme");
lf[706]=C_decode_literal(C_heaptop,"\376B\000\000\023Illegal statement: ");
lf[707]=C_h_intern(&lf[707],7,"call/cc");
lf[709]=C_h_intern(&lf[709],7,"\000tokens");
lf[710]=C_h_intern(&lf[710],8,"\000expand\077");
lf[711]=C_h_intern(&lf[711],5,"\000rule");
lf[712]=C_h_intern(&lf[712],9,"sal:print");
lf[713]=C_decode_literal(C_heaptop,"\376B\000\000\002{}");
lf[714]=C_decode_literal(C_heaptop,"\376B\000\000\001}");
lf[715]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[716]=C_decode_literal(C_heaptop,"\376B\000\000\001{");
lf[717]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[718]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[719]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[720]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[721]=C_h_intern(&lf[721],9,"sal:chdir");
lf[722]=C_h_intern(&lf[722],8,"sal:load");
lf[723]=C_decode_literal(C_heaptop,"\376B\000\000\003sal");
lf[724]=C_h_intern(&lf[724],13,"load-sal-file");
lf[725]=C_h_intern(&lf[725],4,"load");
lf[726]=C_decode_literal(C_heaptop,"\376B\000\000\010Loading ");
lf[727]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[728]=C_decode_literal(C_heaptop,"\376B\000\000\021>>> Error: file \042");
lf[729]=C_decode_literal(C_heaptop,"\376B\000\000\021\042 does not exist\012");
lf[730]=C_decode_literal(C_heaptop,"\376B\000\000\030pathname is not a string");
lf[731]=C_h_intern(&lf[731],8,"sal:open");
lf[732]=C_decode_literal(C_heaptop,"\376B\000\000)>>> Error: open command not implemented.\012");
lf[733]=C_h_intern(&lf[733],5,"ports");
lf[735]=C_decode_literal(C_heaptop,"\376B\000\000\003mid");
lf[737]=C_decode_literal(C_heaptop,"\376B\000\000\004aiff");
lf[738]=C_decode_literal(C_heaptop,"\376B\000\000\003snd");
lf[739]=C_decode_literal(C_heaptop,"\376B\000\000\003wav");
lf[741]=C_decode_literal(C_heaptop,"\376B\000\000\003sco");
lf[742]=C_h_intern(&lf[742],19,"cs:open-output-file");
lf[743]=C_decode_literal(C_heaptop,"\376B\000\000\026don\047t know how to open");
lf[744]=C_decode_literal(C_heaptop,"\376B\000\000\021file not writable");
lf[745]=C_decode_literal(C_heaptop,"\376B\000\000\033Scheduler busy, cannot open");
lf[746]=C_h_intern(&lf[746],6,"mm:off");
lf[747]=C_h_intern(&lf[747],5,"mm:on");
lf[748]=C_h_intern(&lf[748],8,"mm:touch");
lf[749]=C_h_intern(&lf[749],7,"mm:ctrl");
lf[750]=C_h_intern(&lf[750],7,"mm:prog");
lf[751]=C_h_intern(&lf[751],8,"mm:press");
lf[752]=C_h_intern(&lf[752],7,"mm:bend");
lf[753]=C_h_intern(&lf[753],7,"mp:open");
lf[756]=C_h_intern(&lf[756],4,"\000out");
lf[757]=C_h_intern(&lf[757],3,"\000in");
lf[758]=C_decode_literal(C_heaptop,"\376B\000\000\030not a midi device number");
lf[759]=C_decode_literal(C_heaptop,"\376B\000\000\030not a midi device number");
lf[760]=C_h_intern(&lf[760],7,"mp:midi");
lf[761]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[762]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[763]=C_h_intern(&lf[763],5,"\000time");
lf[764]=C_h_intern(&lf[764],4,"\000dur");
lf[765]=C_h_intern(&lf[765],4,"\000key");
lf[766]=C_h_intern(&lf[766],4,"\000amp");
lf[767]=C_h_intern(&lf[767],5,"\000chan");
lf[768]=C_h_intern(&lf[768],6,"mp:off");
lf[769]=C_h_intern(&lf[769],5,"mp:on");
lf[770]=C_h_intern(&lf[770],4,"\000vel");
lf[771]=C_h_intern(&lf[771],8,"mp:touch");
lf[772]=C_h_intern(&lf[772],4,"\000val");
lf[773]=C_h_intern(&lf[773],7,"mp:ctrl");
lf[774]=C_h_intern(&lf[774],4,"\000num");
lf[775]=C_h_intern(&lf[775],7,"mp:prog");
lf[776]=C_h_intern(&lf[776],8,"mp:press");
lf[777]=C_h_intern(&lf[777],7,"mp:bend");
lf[778]=C_h_intern(&lf[778],9,"mp:tuning");
lf[779]=C_decode_literal(C_heaptop,"\376B\000\000\035not a tuning division 1 to 16");
lf[780]=C_h_intern(&lf[780],10,"mp:playseq");
lf[781]=C_h_intern(&lf[781],10,"mp:saveseq");
lf[782]=C_h_intern(&lf[782],10,"mp:copyseq");
lf[783]=C_h_intern(&lf[783],10,"mp:plotseq");
lf[784]=C_h_intern(&lf[784],11,"mp:clearseq");
lf[785]=C_h_intern(&lf[785],12,"mp:recordseq");
lf[786]=C_h_intern(&lf[786],21,"ffi_mp_set_record_seq");
lf[787]=C_h_intern(&lf[787],9,"mp:inhook");
lf[788]=C_h_intern(&lf[788],7,"sprintf");
lf[789]=C_decode_literal(C_heaptop,"\376B\000\000*>>> Error: ~A~%    Aborting MIDI inhook.~%");
lf[790]=C_h_intern(&lf[790],27,"condition-property-accessor");
lf[791]=C_h_intern(&lf[791],3,"exn");
lf[792]=C_h_intern(&lf[792],7,"message");
lf[793]=C_h_intern(&lf[793],22,"with-exception-handler");
lf[794]=C_h_intern(&lf[794],30,"call-with-current-continuation");
lf[795]=C_h_intern(&lf[795],10,"mp:inchans");
lf[796]=C_decode_literal(C_heaptop,"\376B\000\000\031missing a channel 0 to 15");
lf[797]=C_decode_literal(C_heaptop,"\376B\000\000\025not a channel 0 to 15");
lf[798]=C_h_intern(&lf[798],8,"mp:inops");
lf[799]=C_decode_literal(C_heaptop,"\376B\000\000(missing message type (mm:off to mm:bend)");
lf[800]=C_decode_literal(C_heaptop,"\376B\000\000$not a message type mm:off to mm:bend");
lf[802]=C_h_intern(&lf[802],9,"\000channels");
lf[803]=C_h_intern(&lf[803],14,"*clm-channels*");
lf[804]=C_h_intern(&lf[804],15,"init-with-sound");
lf[805]=C_h_intern(&lf[805],7,"\000output");
lf[806]=C_decode_literal(C_heaptop,"\376B\000\000\004aiff");
lf[807]=C_h_intern(&lf[807],12,"\000header-type");
lf[808]=C_h_intern(&lf[808],8,"mus-aifc");
lf[809]=C_decode_literal(C_heaptop,"\376B\000\000\003wav");
lf[810]=C_h_intern(&lf[810],8,"mus-riff");
lf[811]=C_decode_literal(C_heaptop,"\376B\000\000\003snd");
lf[812]=C_h_intern(&lf[812],8,"mus-next");
lf[813]=C_decode_literal(C_heaptop,"\376B\000\000\004aiff");
lf[814]=C_h_intern(&lf[814],12,"\000data-format");
lf[815]=C_h_intern(&lf[815],10,"mus-bshort");
lf[816]=C_decode_literal(C_heaptop,"\376B\000\000\003wav");
lf[817]=C_h_intern(&lf[817],10,"mus-lshort");
lf[818]=C_decode_literal(C_heaptop,"\376B\000\000\003snd");
lf[819]=C_h_intern(&lf[819],5,"\000play");
lf[820]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[821]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[822]=C_decode_literal(C_heaptop,"\376B\000\000\007 :play ");
lf[823]=C_h_intern(&lf[823],6,"\000write");
lf[824]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[825]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[826]=C_decode_literal(C_heaptop,"\376B\000\000\010 :write ");
lf[827]=C_h_intern(&lf[827],8,"\000options");
lf[828]=C_decode_literal(C_heaptop,"\376B\000\000\013 :options \042");
lf[829]=C_decode_literal(C_heaptop,"\376B\000\000\001\042");
lf[830]=C_decode_literal(C_heaptop,"\376B\000\000\024options not a string");
lf[831]=C_h_intern(&lf[831],7,"\000header");
lf[832]=C_decode_literal(C_heaptop,"\376B\000\000\012 :header \042");
lf[833]=C_decode_literal(C_heaptop,"\376B\000\000\001\042");
lf[834]=C_decode_literal(C_heaptop,"\376B\000\000\023header not a string");
lf[835]=C_h_intern(&lf[835],10,"\000orchestra");
lf[836]=C_decode_literal(C_heaptop,"\376B\000\000\015 :orchestra \042");
lf[837]=C_decode_literal(C_heaptop,"\376B\000\000\001\042");
lf[838]=C_decode_literal(C_heaptop,"\376B\000\000\026orchestra not a string");
lf[839]=C_decode_literal(C_heaptop,"\376B\000\000\025unknown Csound option");
lf[840]=C_decode_literal(C_heaptop,"\376B\000\000\023uneven options list");
lf[841]=C_decode_literal(C_heaptop,"\376B\000\000\001\042");
lf[842]=C_decode_literal(C_heaptop,"\376B\000\000\001\042");
lf[844]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[845]=C_h_intern(&lf[845],1,"i");
lf[846]=C_h_intern(&lf[846],14,"cs:f_statement");
lf[847]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[848]=C_decode_literal(C_heaptop,"\376B\000\000#pfield not number, string or symbol");
lf[849]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[850]=C_decode_literal(C_heaptop,"\376B\000\000\027missing pfield 2 (time)");
lf[851]=C_decode_literal(C_heaptop,"\376B\000\000\025pfield 2 not a number");
lf[852]=C_decode_literal(C_heaptop,"\376B\000\000\027pfield 1 not an integer");
lf[853]=C_decode_literal(C_heaptop,"\376B\000\000\023missing pfield data");
lf[854]=C_h_intern(&lf[854],4,"cs:i");
lf[855]=C_h_intern(&lf[855],4,"cs:f");
lf[856]=C_h_intern(&lf[856],1,"f");
lf[858]=C_h_intern(&lf[858],11,"expand-send");
lf[859]=C_decode_literal(C_heaptop,"\376B\000\000\022not a send message");
lf[861]=C_decode_literal(C_heaptop,"\376B\000\000\030too many arguments in ~S");
lf[862]=C_decode_literal(C_heaptop,"\376B\000\000\036Uneven keyword arguments in ~S");
lf[863]=C_decode_literal(C_heaptop,"\376B\000\000%~A not a valid keyword argument in ~S");
lf[864]=C_decode_literal(C_heaptop,"\376B\000\000\031~A not a keyword argument");
lf[865]=C_decode_literal(C_heaptop,"\376B\000\000%send missing required arguments in ~S");
lf[866]=C_decode_literal(C_heaptop,"\376B\000\000%send missing required arguments in ~S");
lf[867]=C_h_intern(&lf[867],4,"\000opt");
lf[868]=C_h_intern(&lf[868],7,"\000optkey");
lf[869]=C_h_intern(&lf[869],5,"\000rest");
lf[870]=C_decode_literal(C_heaptop,"\376B\000\000\012not a mode");
lf[871]=C_h_intern(&lf[871],9,"\000optional");
lf[872]=C_decode_literal(C_heaptop,"\376B\000\000\010shouldnt");
lf[873]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\003out\376\003\000\000\002\376\001\000\000\002in\376\377\016");
lf[874]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003dur\376\003\000\000\002\376\001\000\000\003key\376\003\000\000\002\376\001\000\000\003amp\376\003\000\000\002\376\001\000\000\004"
"chan\376\377\016");
lf[875]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003key\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[876]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003key\376\003\000\000\002\376\001\000\000\003vel\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[877]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003key\376\003\000\000\002\376\001\000\000\003val\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[878]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003num\376\003\000\000\002\376\001\000\000\003val\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[879]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003val\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[880]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003val\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[881]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004time\376\003\000\000\002\376\001\000\000\003val\376\003\000\000\002\376\001\000\000\004chan\376\377\016");
lf[882]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\002mm\376\377\016");
lf[883]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\004func\376\377\016");
lf[884]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\003div\376\377\016");
lf[885]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007\000optkey\376\003\000\000\002\376\001\000\000\003rec\376\377\016");
lf[886]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005\000rest\376\003\000\000\002\376\001\000\000\004args\376\377\016");
lf[887]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005\000rest\376\003\000\000\002\376\001\000\000\004args\376\377\016");
lf[888]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005\000rest\376\003\000\000\002\376\001\000\000\004args\376\377\016");
lf[889]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005\000rest\376\003\000\000\002\376\001\000\000\004args\376\377\016");
lf[890]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\003arg\376\377\016");
lf[892]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005throw\376\003\000\000\002\376\377\001\377\377\377\377\376\377\016");
lf[894]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[895]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[899]=C_h_intern(&lf[899],4,"args");
lf[900]=C_h_intern(&lf[900],22,"ffi_sched_score_mode_p");
lf[901]=C_h_intern(&lf[901],20,"ffi_sched_score_time");
lf[902]=C_h_intern(&lf[902],6,"lambda");
lf[903]=C_h_intern(&lf[903],7,"elapsed");
lf[904]=C_h_intern(&lf[904],1,"x");
lf[905]=C_h_intern(&lf[905],4,"wait");
lf[906]=C_h_intern(&lf[906],5,"throw");
lf[907]=C_h_intern(&lf[907],18,"current-error-port");
lf[908]=C_h_intern(&lf[908],19,"print-error-message");
lf[909]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[910]=C_decode_literal(C_heaptop,"\376B\000\000\006errvar");
lf[911]=C_decode_literal(C_heaptop,"\376B\000\000*Warning: possible non-terminating process.");
lf[912]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[913]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[914]=C_h_intern(&lf[914],7,"process");
lf[915]=C_h_intern(&lf[915],6,"sprout");
lf[916]=C_decode_literal(C_heaptop,"\376B\000\000\011not an id");
lf[917]=C_decode_literal(C_heaptop,"\376B\000\000\011not an id");
lf[918]=C_decode_literal(C_heaptop,"\376B\000\000\020not a start time");
lf[919]=C_decode_literal(C_heaptop,"\376B\000\000\020not a start time");
lf[920]=C_decode_literal(C_heaptop,"\376B\000\000\021illegal arguments");
lf[921]=C_decode_literal(C_heaptop,"\376B\000\000\015not a process");
lf[922]=C_decode_literal(C_heaptop,"\376B\000\000\015not a process");
lf[923]=C_h_intern(&lf[923],3,"now");
lf[924]=C_h_intern(&lf[924],5,"pause");
lf[925]=C_h_intern(&lf[925],7,"paused\077");
lf[926]=C_h_intern(&lf[926],8,"continue");
lf[927]=C_h_intern(&lf[927],4,"stop");
lf[928]=C_decode_literal(C_heaptop,"\376B\000\000\021Not an integer id");
lf[929]=C_h_intern(&lf[929],4,"hush");
lf[930]=C_h_intern(&lf[930],14,"ffi_sched_hush");
lf[931]=C_h_intern(&lf[931],14,"return-to-host");
lf[932]=C_h_intern(&lf[932],6,"define");
lf[933]=C_decode_literal(C_heaptop,"\376B\000\000\027Illegal process formals");
lf[934]=C_h_intern(&lf[934],18,"\003sysregister-macro");
lf[935]=C_h_intern(&lf[935],14,"define-process");
lf[936]=C_h_intern(&lf[936],20,"\003sysregister-macro-2");
lf[937]=C_decode_literal(C_heaptop,"\376B\000\000\007cs:data");
lf[938]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:f");
lf[939]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:i");
lf[940]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:inops");
lf[941]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:inchans");
lf[942]=C_decode_literal(C_heaptop,"\376B\000\000\013mp:clearseq");
lf[943]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:copyseq");
lf[944]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:saveseq");
lf[945]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:playseq");
lf[946]=C_decode_literal(C_heaptop,"\376B\000\000\014mp:recordseq");
lf[947]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:tuning");
lf[948]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:inhook");
lf[949]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:mm");
lf[950]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:bend");
lf[951]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:press");
lf[952]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:prog");
lf[953]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:ctrl");
lf[954]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:touch");
lf[955]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:on");
lf[956]=C_decode_literal(C_heaptop,"\376B\000\000\006mp:off");
lf[957]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:midi");
lf[958]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:open");
lf[959]=C_h_intern(&lf[959],19,"make-message-parser");
lf[960]=C_h_intern(&lf[960],4,"cons");
lf[961]=C_h_intern(&lf[961],10,"*messages*");
lf[962]=C_decode_literal(C_heaptop,"\376B\000\000\004temp");
lf[963]=C_h_intern(&lf[963],19,"define-send-message");
lf[964]=C_h_intern(&lf[964],4,"send");
lf[965]=C_decode_literal(C_heaptop,"\376B\000\000\030SalStatementSequenceRule");
lf[966]=C_decode_literal(C_heaptop,"\376B\000\000\020SalStatementRule");
lf[967]=C_decode_literal(C_heaptop,"\376B\000\000\017Variable: ~A = ");
lf[968]=C_decode_literal(C_heaptop,"\376B\000\000\002)\012");
lf[969]=C_decode_literal(C_heaptop,"\376B\000\000\002, ");
lf[970]=C_decode_literal(C_heaptop,"\376B\000\000\002 (");
lf[971]=C_decode_literal(C_heaptop,"\376B\000\000\012Function: ");
lf[972]=C_h_intern(&lf[972],7,"\000return");
lf[973]=C_h_intern(&lf[973],9,"\000function");
lf[974]=C_decode_literal(C_heaptop,"\376B\000\000\011Process: ");
lf[975]=C_h_intern(&lf[975],8,"\000process");
lf[976]=C_decode_literal(C_heaptop,"\376B\000\000\003...");
lf[977]=C_decode_literal(C_heaptop,"\376B\000\000\026SalDefineStatementRule");
lf[978]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunDeclRule");
lf[979]=C_h_intern(&lf[979],2,"go");
lf[980]=C_h_intern(&lf[980],4,"void");
lf[981]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\000\376\377\016");
lf[982]=C_h_intern(&lf[982],5,"\000loop");
lf[983]=C_h_intern(&lf[983],4,"\000run");
lf[984]=C_decode_literal(C_heaptop,"\376B\000\000\035run statement outside process");
lf[985]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoopStatementRule");
lf[986]=C_decode_literal(C_heaptop,"\376B\000\000\022SalTerminationRule");
lf[987]=C_decode_literal(C_heaptop,"\376B\000\000\017SalSteppingRule");
lf[988]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[989]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[990]=C_decode_literal(C_heaptop,"\376B\000\000\022SalConditionalRule");
lf[991]=C_decode_literal(C_heaptop,"\376B\000\000\014SalBlockRule");
lf[992]=C_h_intern(&lf[992],9,"list-tail");
lf[993]=C_h_intern(&lf[993],8,"set-car!");
lf[994]=C_decode_literal(C_heaptop,"\376B\000\000\021SalAssignmentRule");
lf[995]=C_decode_literal(C_heaptop,"\376B\000\000\015SalAssignRule");
lf[996]=C_h_intern(&lf[996],9,"\000bindings");
lf[997]=C_decode_literal(C_heaptop,"\376B\000\000\017SalBindingsRule");
lf[998]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[999]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBindRule");
lf[1000]=C_decode_literal(C_heaptop,"\376B\000\000!return statement outside function");
lf[1001]=C_decode_literal(C_heaptop,"\376B\000\000\025SalFunctionReturnRule");
lf[1002]=C_decode_literal(C_heaptop,"\376B\000\000 wait statement outside run block");
lf[1003]=C_decode_literal(C_heaptop,"\376B\000\000\022SalProcessWaitRule");
lf[1004]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006fix-me\376\003\000\000\002\376\001\000\000\004plot\376\377\016");
lf[1005]=C_decode_literal(C_heaptop,"\376B\000\000\024SalPlotStatementRule");
lf[1006]=C_decode_literal(C_heaptop,"\376B\000\000\026SalOutputStatementRule");
lf[1007]=C_h_intern(&lf[1007],10,"sal:output");
lf[1008]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSystemStatementRule");
lf[1009]=C_h_intern(&lf[1009],10,"sal:system");
lf[1010]=C_decode_literal(C_heaptop,"\376B\000\000\025SalChdirStatementRule");
lf[1011]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoadStatementRule");
lf[1012]=C_decode_literal(C_heaptop,"\376B\000\000\024SalExecStatementRule");
lf[1013]=C_decode_literal(C_heaptop,"\376B\000\000\024SalSendStatementRule");
lf[1014]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSproutStatementRule");
lf[1015]=C_decode_literal(C_heaptop,"\376B\000\000\025SalPrintStatementRule");
lf[1016]=C_decode_literal(C_heaptop,"\376B\000\000\014SalSexprRule");
lf[1017]=C_decode_literal(C_heaptop,"\376B\000\000\013SalTermRule");
lf[1018]=C_decode_literal(C_heaptop,"\376B\000\000\014SalMexprRule");
lf[1019]=C_decode_literal(C_heaptop,"\376B\000\000\011SalOpRule");
lf[1020]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFuncallRule");
lf[1021]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunargsRule");
lf[1022]=C_decode_literal(C_heaptop,"\376B\000\000\014SalKargsRule");
lf[1023]=C_decode_literal(C_heaptop,"\376B\000\000\014SalPargsRule");
lf[1024]=C_decode_literal(C_heaptop,"\376B\000\000\015SalIfExprRule");
lf[1025]=C_decode_literal(C_heaptop,"\376B\000\000\013SalArefRule");
lf[1026]=C_decode_literal(C_heaptop,"\376B\000\000\012SalEltRule");
lf[1027]=C_h_intern(&lf[1027],7,"unquote");
lf[1028]=C_h_intern(&lf[1028],16,"unquote-splicing");
lf[1029]=C_h_intern(&lf[1029],5,"\000list");
lf[1030]=C_h_intern(&lf[1030],8,"\000unquote");
lf[1031]=C_decode_literal(C_heaptop,"\376B\000\000\023#$ outside of list.");
lf[1032]=C_decode_literal(C_heaptop,"\376B\000\000\023#^ outside of list.");
lf[1033]=C_decode_literal(C_heaptop,"\376B\000\000\016SalUnquoteRule");
lf[1034]=C_h_intern(&lf[1034],10,"quasiquote");
lf[1035]=C_decode_literal(C_heaptop,"\376B\000\000\013SalListRule");
lf[1036]=C_decode_literal(C_heaptop,"\376B\000\000\013SalAtomRule");
lf[1037]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBoolRule");
lf[1038]=C_decode_literal(C_heaptop,"\376B\000\000\015SalNumberRule");
lf[1039]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[1040]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\001+\376\003\000\000\002\376\001\000\000\001*\376\003\000\000\002\376\001\000\000\001@\376\003\000\000\002\376\001\000\000\003and\376\003\000\000\002\376\001\000\000\002or\376\377\016");
lf[1041]=C_h_intern(&lf[1041],6,"ruleid");
lf[1042]=C_h_intern(&lf[1042],9,"make-rule");
lf[1043]=C_h_intern(&lf[1043],7,"*rules*");
lf[1044]=C_h_intern(&lf[1044],7,"defrule");
lf[1045]=C_h_intern(&lf[1045],7,"promise");
lf[1046]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376B\000\000\001.\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002..\376\003\000\000\002\376U0.75\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\003..."
"\376\003\000\000\002\376U0.875\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\004....\376\003\000\000\002\376U0.9375\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\005.....\376\003\000\000\002\376U0"
".96875\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\006......\376\003\000\000\002\376U0.984375\000\376\377\016\376\377\016");
lf[1047]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[1048]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[1049]=C_decode_literal(C_heaptop,"\376B\000\000\001t");
lf[1050]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[1051]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[1052]=C_decode_literal(C_heaptop,"\376B\000\000\001t");
lf[1053]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[1054]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376U0.015625\000\376\003\000\000\002\376B\000\000\001x\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376U0.03125\000\376\003\000\000\002\376B\000\000\001t\376\003"
"\000\000\002\376\377\001\000\000\000\001\376\377\016\376\003\000\000\002\376\003\000\000\002\376U0.0625\000\376\003\000\000\002\376B\000\000\001s\376\003\000\000\002\376\377\001\000\000\000\002\376\377\016\376\003\000\000\002\376\003\000\000\002\376U0.125\000\376\003\000\000"
"\002\376B\000\000\001e\376\003\000\000\002\376\377\001\000\000\000\003\376\377\016\376\003\000\000\002\376\003\000\000\002\376U0.25\000\376\003\000\000\002\376B\000\000\001q\376\003\000\000\002\376\377\001\000\000\000\004\376\377\016\376\003\000\000\002\376\003\000\000\002\376U0.5"
"\000\376\003\000\000\002\376B\000\000\001h\376\003\000\000\002\376\377\001\000\000\000\005\376\377\016\376\003\000\000\002\376\003\000\000\002\376\377\001\000\000\000\001\376\003\000\000\002\376B\000\000\001w\376\003\000\000\002\376\377\001\000\000\000\006\376\377\016\376\377\016");
lf[1055]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[1056]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[1057]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[1058]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376B\000\000\001c\376\003\000\000\002\376B\000\000\002bs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002df\376\003\000\000\002\376B\000\000\002cs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001d\376"
"\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002ef\376\003\000\000\002\376B\000\000\002ds\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001e\376\003\000\000\002\376B\000\000\002ff\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001"
"f\376\003\000\000\002\376B\000\000\002es\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002fs\376\003\000\000\002\376B\000\000\002gf\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001g\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000"
"\000\002af\376\003\000\000\002\376B\000\000\002gs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001a\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002bf\376\003\000\000\002\376B\000\000\002as\376\377\016\376\003\000\000\002\376\003\000\000\002"
"\376B\000\000\001b\376\003\000\000\002\376B\000\000\002cf\376\377\016\376\377\016");
lf[1059]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[1060]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[1061]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376B\000\000\00200\376\003\000\000\002\376B\000\000\0010\376\003\000\000\002\376B\000\000\0011\376\003\000\000\002\376B\000\000\0012\376\003\000\000\002\376B\000\000\0013\376\003\000\000\002\376B\000\000\0014\376\003\000\000\002\376B\000\000\0015\376\003"
"\000\000\002\376B\000\000\0016\376\003\000\000\002\376B\000\000\0017\376\003\000\000\002\376B\000\000\0018\376\003\000\000\002\376B\000\000\0019\376\377\016");
lf[1062]=C_decode_literal(C_heaptop,"\376B\000\000\001>");
lf[1063]=C_decode_literal(C_heaptop,"\376B\000\000\001<");
lf[1064]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[1065]=C_decode_literal(C_heaptop,"\376B\000\000\002cf");
lf[1066]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[1067]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[1068]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[1069]=C_h_intern(&lf[1069],5,":loop");
lf[1070]=C_h_intern(&lf[1070],7,"tagbody");
lf[1071]=C_h_intern(&lf[1071],5,"block");
lf[1072]=C_h_intern(&lf[1072],3,"nil");
lf[1073]=C_h_intern(&lf[1073],8,"function");
lf[1074]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[1075]=C_h_intern(&lf[1075],3,"pop");
lf[1076]=C_h_intern(&lf[1076],4,"push");
lf[1077]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[1078]=C_h_intern(&lf[1078],4,"loop");
lf[1079]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[1080]=C_h_intern(&lf[1080],15,"enable-warnings");
C_register_lf2(lf,1081,create_ptable());
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6940,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_library_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6938 */
static void C_ccall f_6940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6940,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6943,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_eval_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6941 in k6938 */
static void C_ccall f_6943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6943,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6946,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6944 in k6941 in k6938 */
static void C_ccall f_6946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6946,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6949,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_6949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6949,2,t0,t1);}
t2=C_mutate((C_word*)lf[0]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6951,a[2]=((C_word)li0),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[1]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6957,a[2]=((C_word)li1),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[3]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6963,a[2]=((C_word)li2),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[5]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6969,a[2]=((C_word)li3),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[7]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6975,a[2]=((C_word)li4),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[9]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6981,a[2]=((C_word)li5),tmp=(C_word)a,a+=3,tmp));
t8=C_set_block_item(lf[10],0,C_fix(1073741823));
t9=C_set_block_item(lf[11],0,C_fix(-1073741823));
t10=C_mutate((C_word*)lf[12]+1,lf[13]);
t11=C_mutate((C_word*)lf[14]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7001,a[2]=((C_word)li6),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[15]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7011,a[2]=((C_word)li7),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[18]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7017,a[2]=((C_word)li8),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[20]+1,C_retrieve(lf[21]));
t15=C_mutate((C_word*)lf[22]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7024,a[2]=((C_word)li9),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[24],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7030,a[2]=((C_word)li10),tmp=(C_word)a,a+=3,tmp));
t17=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7132,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 77   enable-warnings");
t18=C_retrieve(lf[1080]);
((C_proc3)C_retrieve_proc(t18))(3,t18,t17,C_SCHEME_FALSE);}

/* k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word ab[153],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7132,2,t0,t1);}
t2=C_mutate(&lf[27],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7151,a[2]=((C_word)li11),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[29],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7207,a[2]=((C_word)li12),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[30],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7261,a[2]=((C_word)li13),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[31],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7268,a[2]=((C_word)li14),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[32],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7279,a[2]=((C_word)li15),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[33],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7294,a[2]=((C_word)li16),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[34],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7301,a[2]=((C_word)li17),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[35],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7315,a[2]=((C_word)li18),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[36],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7334,a[2]=((C_word)li19),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[37],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7353,a[2]=((C_word)li20),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[38],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7374,a[2]=((C_word)li21),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[39],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7377,a[2]=((C_word)li22),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[40],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7384,a[2]=((C_word)li23),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[41],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7413,a[2]=((C_word)li24),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[42],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7416,a[2]=((C_word)li25),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[43],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7419,a[2]=((C_word)li26),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[44],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7422,a[2]=((C_word)li27),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[45],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7433,a[2]=((C_word)li28),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[46],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7451,a[2]=((C_word)li29),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[47],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7458,a[2]=((C_word)li30),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[48],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7461,a[2]=((C_word)li31),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[49],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7468,a[2]=((C_word)li32),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[50],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7471,a[2]=((C_word)li33),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[51],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7502,a[2]=((C_word)li34),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[52],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7522,a[2]=((C_word)li35),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[53],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7613,a[2]=((C_word)li36),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[55],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7780,a[2]=((C_word)li37),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[56]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8033,a[2]=((C_word)li38),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[57]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8039,a[2]=((C_word)li39),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[58]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8045,a[2]=((C_word)li40),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[59]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8076,a[2]=((C_word)li41),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[60]+1,*((C_word*)lf[61]+1));
t34=C_mutate((C_word*)lf[62]+1,*((C_word*)lf[63]+1));
t35=C_mutate((C_word*)lf[64]+1,*((C_word*)lf[65]+1));
t36=C_mutate((C_word*)lf[66]+1,*((C_word*)lf[67]+1));
t37=C_mutate((C_word*)lf[68]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8086,a[2]=((C_word)li42),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[69]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8096,a[2]=((C_word)li43),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[70]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8106,a[2]=((C_word)li44),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate((C_word*)lf[71]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8116,a[2]=((C_word)li45),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[72]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8126,a[2]=((C_word)li46),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[73]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8140,a[2]=((C_word)li47),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate((C_word*)lf[74]+1,*((C_word*)lf[75]+1));
t44=C_mutate((C_word*)lf[76]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8155,a[2]=((C_word)li48),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate((C_word*)lf[77]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8161,a[2]=((C_word)li49),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[78]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8184,a[2]=((C_word)li50),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate((C_word*)lf[79]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8232,a[2]=((C_word)li51),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate((C_word*)lf[80]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8322,a[2]=((C_word)li54),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate((C_word*)lf[81]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8484,a[2]=((C_word)li57),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate(&lf[84],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8583,a[2]=((C_word)li59),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate(&lf[85],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8701,a[2]=((C_word)li60),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate(&lf[86],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8787,a[2]=((C_word)li62),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[93]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8861,a[2]=((C_word)li65),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate((C_word*)lf[98]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8905,a[2]=((C_word)li68),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate((C_word*)lf[99]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8949,a[2]=((C_word)li73),tmp=(C_word)a,a+=3,tmp));
t56=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9238,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t57=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45880,a[2]=((C_word)li619),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 79   ##sys#register-macro");
t58=C_retrieve(lf[934]);
((C_proc4)C_retrieve_proc(t58))(4,t58,t56,lf[94],t57);}

/* a45879 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45880(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_45880r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_45880r(t0,t1,t2,t3);}}

static void C_ccall f_45880r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 79   expand-optkeys");
t6=C_retrieve(lf[99]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t1,t4,t5,t3);}

/* k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9238,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9241,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45874,a[2]=((C_word)li618),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 80   ##sys#register-macro-2");
t4=C_retrieve(lf[936]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[1078],t3);}

/* a45873 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45874(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_45874,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12594,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 80   gensym");
t4=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[1079]);}

/* k12592 in a45873 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12594,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12597,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 80   parse-iteration");
f_12576(t2,lf[1078],((C_word*)t0)[2],C_retrieve2(lf[329],"*loop-operators*"));}

/* k12595 in k12592 in a45873 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12597,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_assoc(lf[291],C_retrieve2(lf[329],"*loop-operators*"));
t7=(C_word)C_i_cadddr(t6);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12604,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12749,a[2]=t8,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12763,a[2]=t1,a[3]=t9,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 80   loop-returning");
t11=C_retrieve2(lf[134],"loop-returning");
f_9348(3,t11,t10,t1);}

/* k12761 in k12595 in k12592 in a45873 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12763,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=((C_word*)t0)[3];
f_12749(t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12759,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 80   loop-returning");
t3=C_retrieve2(lf[134],"loop-returning");
f_9348(3,t3,t2,((C_word*)t0)[2]);}}

/* k12757 in k12761 in k12595 in k12592 in a45873 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_12749(t2,(C_word)C_i_car(t1));}

/* k12747 in k12595 in k12592 in a45873 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_12749(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 80   returnfn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k12602 in k12595 in k12592 in a45873 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12604,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12608,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 80   loop-end-tests");
t4=C_retrieve2(lf[129],"loop-end-tests");
f_9300(3,t4,t3,((C_word*)t0)[2]);}

/* k12606 in k12602 in k12595 in k12592 in a45873 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12608,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12611,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(t1))){
t3=t2;
f_12611(t3,C_SCHEME_END_OF_LIST);}
else{
t3=(C_word)C_i_cdr(t1);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(t1):(C_word)C_a_i_cons(&a,2,lf[266],t1));
t6=(C_word)C_a_i_list(&a,4,lf[117],t5,lf[1077],C_SCHEME_FALSE);
t7=t2;
f_12611(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k12609 in k12606 in k12602 in k12595 in k12592 in a45873 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_12611(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12611,NULL,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12622,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 80   loop-bindings");
t4=C_retrieve2(lf[126],"loop-bindings");
f_9264(3,t4,t3,((C_word*)t0)[2]);}

/* k12620 in k12609 in k12606 in k12602 in k12595 in k12592 in a45873 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12622,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12626,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12630,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 80   loop-initially");
t4=C_retrieve2(lf[128],"loop-initially");
f_9288(3,t4,t3,((C_word*)t0)[3]);}

/* k12628 in k12620 in k12609 in k12606 in k12602 in k12595 in k12592 in a45873 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12630,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[291]);
t3=(C_word)C_a_i_list(&a,1,lf[979]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12694,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t3,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12698,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12702,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 80   loop-looping");
t7=C_retrieve2(lf[130],"loop-looping");
f_9312(3,t7,t6,((C_word*)t0)[3]);}

/* k12700 in k12628 in k12620 in k12609 in k12606 in k12602 in k12595 in k12592 in a45873 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12702,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12706,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12710,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 80   loop-stepping");
t4=C_retrieve2(lf[132],"loop-stepping");
f_9324(3,t4,t3,((C_word*)t0)[2]);}

/* k12708 in k12700 in k12628 in k12620 in k12609 in k12606 in k12602 in k12595 in k12592 in a45873 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12710,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
C_trace("ChickenBridge.scm: 80   ##sys#append");
t4=*((C_word*)lf[105]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t1,t3);}

/* k12704 in k12700 in k12628 in k12620 in k12609 in k12606 in k12602 in k12595 in k12592 in a45873 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 80   ##sys#append");
t2=*((C_word*)lf[105]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k12696 in k12628 in k12620 in k12609 in k12606 in k12602 in k12595 in k12592 in a45873 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 80   ##sys#append");
t2=*((C_word*)lf[105]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k12692 in k12628 in k12620 in k12609 in k12606 in k12602 in k12595 in k12592 in a45873 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12694,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[100],t3);
t5=(C_word)C_a_i_list(&a,3,lf[902],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[794],t5);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12662,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12666,a[2]=t7,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 80   loop-finally");
t9=C_retrieve2(lf[133],"loop-finally");
f_9336(3,t9,t8,((C_word*)t0)[2]);}

/* k12664 in k12692 in k12628 in k12620 in k12609 in k12606 in k12602 in k12595 in k12592 in a45873 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12666,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 80   ##sys#append");
t3=*((C_word*)lf[105]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k12660 in k12692 in k12628 in k12620 in k12609 in k12606 in k12602 in k12595 in k12592 in a45873 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12662,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[902],t3);
t5=(C_word)C_a_i_list(&a,2,lf[794],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 80   ##sys#append");
t7=*((C_word*)lf[105]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],((C_word*)t0)[2],t6);}

/* k12624 in k12620 in k12609 in k12606 in k12602 in k12595 in k12592 in a45873 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12626,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[100],t2));}

/* k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9241,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9244,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45860,a[2]=((C_word)li617),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 80   ##sys#register-macro");
t4=C_retrieve(lf[934]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[1076],t3);}

/* a45859 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45860(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_45860,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,3,lf[960],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[109],t3,t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,3,lf[214],t5,t3));}

/* k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9244,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9247,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45831,a[2]=((C_word)li616),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 80   ##sys#register-macro");
t4=C_retrieve(lf[934]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[1075],t3);}

/* a45830 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45831(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_45831,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_45835,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 80   gensym");
t4=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[1074]);}

/* k45833 in a45830 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45835,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[61],((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,2,t1,t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_a_i_list(&a,2,lf[112],((C_word*)t0)[3]);
t6=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)t0)[3],t5);
t7=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,4,lf[100],t4,t6,t1));}

/* k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9247,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9250,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45828,a[2]=((C_word)li615),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 80   ##sys#register-macro");
t4=C_retrieve(lf[934]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[1073],t3);}

/* a45827 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45828(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_45828,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word ab[492],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9250,2,t0,t1);}
t2=C_mutate(&lf[125],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9258,a[2]=((C_word)li74),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[126],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9264,a[2]=((C_word)li75),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[127],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9276,a[2]=((C_word)li76),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[128],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9288,a[2]=((C_word)li77),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[129],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9300,a[2]=((C_word)li78),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[130],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9312,a[2]=((C_word)li79),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[131],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9318,a[2]=((C_word)li80),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[132],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9324,a[2]=((C_word)li81),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[133],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9336,a[2]=((C_word)li82),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[134],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9348,a[2]=((C_word)li83),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[135],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9360,a[2]=((C_word)li85),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[145],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9511,a[2]=((C_word)li88),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[146],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9582,a[2]=((C_word)li89),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[147],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9588,a[2]=((C_word)li90),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[148],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9594,a[2]=((C_word)li91),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[149],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9600,a[2]=((C_word)li95),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[160],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9760,a[2]=((C_word)li96),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[168],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9842,a[2]=((C_word)li98),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[204],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10224,a[2]=((C_word)li101),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[207],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10271,a[2]=((C_word)li103),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[228],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10622,a[2]=((C_word)li105),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[236],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10764,a[2]=((C_word)li107),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[251],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10957,a[2]=((C_word)li109),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[254],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11024,a[2]=((C_word)li110),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[257],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11062,a[2]=((C_word)li111),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[260],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11221,a[2]=((C_word)li117),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[290],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11767,a[2]=((C_word)li118),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[292],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11773,a[2]=((C_word)li119),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[298],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11839,a[2]=((C_word)li120),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[304],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11930,a[2]=((C_word)li121),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[307],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12031,a[2]=((C_word)li125),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[313],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12162,a[2]=((C_word)li130),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[319],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12576,a[2]=((C_word)li135),tmp=(C_word)a,a+=3,tmp));
t35=(C_word)C_a_i_list(&a,3,lf[237],C_retrieve2(lf[236],"parse-with"),C_SCHEME_FALSE);
t36=(C_word)C_a_i_list(&a,3,lf[139],C_retrieve2(lf[257],"parse-initially"),C_SCHEME_FALSE);
t37=(C_word)C_a_i_list(&a,3,lf[327],C_retrieve2(lf[204],"parse-repeat"),lf[324]);
t38=(C_word)C_a_i_list(&a,2,lf[182],C_retrieve2(lf[168],"parse-numerical-for"));
t39=(C_word)C_a_i_list(&a,2,lf[172],C_retrieve2(lf[168],"parse-numerical-for"));
t40=(C_word)C_a_i_list(&a,2,lf[178],C_retrieve2(lf[168],"parse-numerical-for"));
t41=(C_word)C_a_i_list(&a,2,lf[189],C_retrieve2(lf[168],"parse-numerical-for"));
t42=(C_word)C_a_i_list(&a,2,lf[174],C_retrieve2(lf[168],"parse-numerical-for"));
t43=(C_word)C_a_i_list(&a,2,lf[181],C_retrieve2(lf[168],"parse-numerical-for"));
t44=(C_word)C_a_i_list(&a,2,lf[216],C_retrieve2(lf[207],"parse-sequence-iteration"));
t45=(C_word)C_a_i_list(&a,2,lf[225],C_retrieve2(lf[207],"parse-sequence-iteration"));
t46=(C_word)C_a_i_list(&a,2,lf[208],C_retrieve2(lf[207],"parse-sequence-iteration"));
t47=(C_word)C_a_i_list(&a,2,lf[229],C_retrieve2(lf[228],"parse-general-iteration"));
t48=(C_word)C_a_i_list(&a,2,lf[212],C_retrieve2(lf[207],"parse-sequence-iteration"));
t49=(C_word)C_a_i_list(&a,14,lf[169],C_retrieve2(lf[160],"parse-for"),lf[324],t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48);
t50=(C_word)C_a_i_list(&a,3,lf[328],C_retrieve2(lf[160],"parse-for"),lf[324]);
t51=(C_word)C_a_i_list(&a,3,lf[320],C_retrieve2(lf[251],"parse-do"),lf[311]);
t52=(C_word)C_a_i_list(&a,3,lf[272],C_retrieve2(lf[260],"parse-accumulation"),lf[311]);
t53=(C_word)C_a_i_list(&a,3,lf[115],C_retrieve2(lf[260],"parse-accumulation"),lf[311]);
t54=(C_word)C_a_i_list(&a,3,lf[277],C_retrieve2(lf[260],"parse-accumulation"),lf[311]);
t55=(C_word)C_a_i_list(&a,3,lf[261],C_retrieve2(lf[260],"parse-accumulation"),lf[311]);
t56=(C_word)C_a_i_list(&a,3,lf[262],C_retrieve2(lf[260],"parse-accumulation"),lf[311]);
t57=(C_word)C_a_i_list(&a,3,lf[264],C_retrieve2(lf[260],"parse-accumulation"),lf[311]);
t58=(C_word)C_a_i_list(&a,3,lf[265],C_retrieve2(lf[260],"parse-accumulation"),lf[311]);
t59=(C_word)C_a_i_list(&a,4,lf[299],C_retrieve2(lf[298],"parse-thereis"),lf[311],C_retrieve2(lf[290],"loop-return"));
t60=(C_word)C_a_i_list(&a,4,lf[300],C_retrieve2(lf[298],"parse-thereis"),lf[311],C_retrieve2(lf[290],"loop-return"));
t61=(C_word)C_a_i_list(&a,4,lf[301],C_retrieve2(lf[298],"parse-thereis"),lf[311],C_retrieve2(lf[290],"loop-return"));
t62=(C_word)C_a_i_list(&a,4,lf[291],C_retrieve2(lf[304],"parse-return"),lf[311],C_retrieve2(lf[290],"loop-return"));
t63=(C_word)C_a_i_list(&a,3,lf[295],C_retrieve2(lf[292],"parse-while-until"),C_SCHEME_FALSE);
t64=(C_word)C_a_i_list(&a,3,lf[294],C_retrieve2(lf[292],"parse-while-until"),C_SCHEME_FALSE);
t65=(C_word)C_a_i_list(&a,3,lf[108],C_retrieve2(lf[313],"parse-conditional"),lf[311]);
t66=(C_word)C_a_i_list(&a,3,lf[104],C_retrieve2(lf[313],"parse-conditional"),lf[311]);
t67=(C_word)C_a_i_list(&a,3,lf[117],C_retrieve2(lf[313],"parse-conditional"),lf[311]);
t68=(C_word)C_a_i_list(&a,3,lf[143],C_retrieve2(lf[254],"parse-finally"),C_SCHEME_FALSE);
t69=(C_word)C_a_i_list(&a,23,t35,t36,t37,t49,t50,t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68);
t70=C_mutate(&lf[329],t69);
t71=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12770,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t72=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45686,a[2]=((C_word)li614),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 80   ##sys#register-macro-2");
t73=C_retrieve(lf[936]);
((C_proc4)C_retrieve_proc(t73))(4,t73,t71,lf[324],t72);}

/* a45685 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45686(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_45686,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12776,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 80   parse-iteration");
f_12576(t3,lf[324],t2,C_retrieve2(lf[329],"*loop-operators*"));}

/* k12774 in a45685 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12776,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12779,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_assoc(lf[291],C_retrieve2(lf[329],"*loop-operators*"));
t4=(C_word)C_i_cadddr(t3);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12908,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 80   loop-returning");
t6=C_retrieve2(lf[134],"loop-returning");
f_9348(3,t6,t5,t1);}

/* k12906 in k12774 in a45685 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12908,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,t2);
C_apply(4,0,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k12777 in k12774 in a45685 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12779,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12790,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 80   loop-bindings");
t3=C_retrieve2(lf[126],"loop-bindings");
f_9264(3,t3,t2,((C_word*)t0)[2]);}

/* k12788 in k12777 in k12774 in a45685 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12790,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12794,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12798,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 80   loop-initially");
t4=C_retrieve2(lf[128],"loop-initially");
f_9288(3,t4,t3,((C_word*)t0)[2]);}

/* k12796 in k12788 in k12777 in k12774 in a45685 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12798,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12818,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12822,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 80   loop-end-tests");
t4=C_retrieve2(lf[129],"loop-end-tests");
f_9300(3,t4,t3,((C_word*)t0)[2]);}

/* k12820 in k12796 in k12788 in k12777 in k12774 in a45685 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12822,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12825,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cdr(t1);
t4=(C_truep(t3)?(C_word)C_a_i_cons(&a,2,lf[266],t1):(C_word)C_i_car(t1));
t5=(C_word)C_a_i_list(&a,2,lf[979],lf[642]);
t6=(C_word)C_a_i_list(&a,3,lf[117],t4,t5);
t7=t2;
f_12825(t7,(C_word)C_a_i_list(&a,1,t6));}
else{
t3=t2;
f_12825(t3,C_SCHEME_END_OF_LIST);}}

/* k12823 in k12820 in k12796 in k12788 in k12777 in k12774 in a45685 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_12825(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12825,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12829,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12833,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 80   loop-looping");
t4=C_retrieve2(lf[130],"loop-looping");
f_9312(3,t4,t3,((C_word*)t0)[2]);}

/* k12831 in k12823 in k12820 in k12796 in k12788 in k12777 in k12774 in a45685 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12833,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12837,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12841,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 80   loop-stepping");
t4=C_retrieve2(lf[132],"loop-stepping");
f_9324(3,t4,t3,((C_word*)t0)[2]);}

/* k12839 in k12831 in k12823 in k12820 in k12796 in k12788 in k12777 in k12774 in a45685 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12841,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[979],lf[1069]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12857,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12861,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 80   loop-finally");
t5=C_retrieve2(lf[133],"loop-finally");
f_9336(3,t5,t4,((C_word*)t0)[2]);}

/* k12859 in k12839 in k12831 in k12823 in k12820 in k12796 in k12788 in k12777 in k12774 in a45685 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12861,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("##sys#append");
t3=*((C_word*)lf[105]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k12855 in k12839 in k12831 in k12823 in k12820 in k12796 in k12788 in k12777 in k12774 in a45685 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12857,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[642],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
C_trace("##sys#append");
t4=*((C_word*)lf[105]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k12835 in k12831 in k12823 in k12820 in k12796 in k12788 in k12777 in k12774 in a45685 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[105]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k12827 in k12823 in k12820 in k12796 in k12788 in k12777 in k12774 in a45685 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[105]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k12816 in k12796 in k12788 in k12777 in k12774 in a45685 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12818,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[1069],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[1070],t2);
t4=(C_word)C_a_i_list(&a,3,lf[1071],lf[1072],t3);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("##sys#append");
t6=*((C_word*)lf[105]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[3],((C_word*)t0)[2],t5);}

/* k12792 in k12788 in k12777 in k12774 in a45685 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12794,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[100],t2));}

/* k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word t77;
C_word t78;
C_word t79;
C_word t80;
C_word t81;
C_word t82;
C_word t83;
C_word t84;
C_word t85;
C_word t86;
C_word t87;
C_word t88;
C_word t89;
C_word t90;
C_word t91;
C_word t92;
C_word t93;
C_word t94;
C_word t95;
C_word t96;
C_word t97;
C_word t98;
C_word t99;
C_word t100;
C_word t101;
C_word t102;
C_word ab[279],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12770,2,t0,t1);}
t2=C_mutate(&lf[330],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12914,a[2]=((C_word)li136),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[332],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12926,a[2]=((C_word)li137),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[334],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12935,a[2]=((C_word)li138),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[335],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12953,a[2]=((C_word)li139),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[336],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12971,a[2]=((C_word)li140),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[337],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12998,a[2]=((C_word)li141),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[338],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13007,a[2]=((C_word)li142),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[339],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13025,a[2]=((C_word)li143),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[340],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13070,a[2]=((C_word)li144),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[342],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13085,a[2]=((C_word)li145),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[343],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13094,a[2]=((C_word)li146),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[344],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13103,a[2]=((C_word)li147),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[345],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13121,a[2]=((C_word)li148),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[346],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13130,a[2]=((C_word)li149),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[347],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13139,a[2]=((C_word)li150),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[348],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13157,a[2]=((C_word)li151),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[349],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13166,a[2]=((C_word)li152),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[350],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13175,a[2]=((C_word)li153),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[351],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13184,a[2]=((C_word)li154),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[352],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13193,a[2]=((C_word)li155),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[353],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13310,a[2]=((C_word)li156),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[354],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13319,a[2]=((C_word)li157),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[355],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13378,a[2]=((C_word)li158),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[359],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13388,a[2]=((C_word)li160),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[365]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13568,a[2]=((C_word)li161),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[213]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13587,a[2]=((C_word)li162),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[215]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13606,a[2]=((C_word)li165),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[368],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13729,a[2]=((C_word)li168),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[369],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14021,a[2]=((C_word)li169),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[364],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14030,a[2]=((C_word)li170),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[370],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14076,a[2]=((C_word)li172),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[372]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14191,a[2]=((C_word)li174),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[374],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14446,a[2]=((C_word)li175),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[377],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14518,a[2]=((C_word)li176),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[379],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14527,a[2]=((C_word)li177),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[380]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14607,a[2]=((C_word)li179),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[381],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15077,a[2]=((C_word)li180),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[385]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15292,a[2]=((C_word)li182),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate(&lf[386],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15539,a[2]=((C_word)li183),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[387]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15575,a[2]=((C_word)li185),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate(&lf[388],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15838,a[2]=((C_word)li187),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate((C_word*)lf[389]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15914,a[2]=((C_word)li189),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate(&lf[390],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16388,a[2]=((C_word)li192),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate(&lf[392],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16610,a[2]=((C_word)li193),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate(&lf[394],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16619,a[2]=((C_word)li194),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate(&lf[395],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16628,a[2]=((C_word)li195),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate(&lf[396],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16646,a[2]=((C_word)li196),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate(&lf[397],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16664,a[2]=((C_word)li197),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate(&lf[398],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16682,a[2]=((C_word)li198),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate(&lf[399],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16691,a[2]=((C_word)li199),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate(&lf[400],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16700,a[2]=((C_word)li200),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[401]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16783,a[2]=((C_word)li205),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate(&lf[402],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17550,a[2]=((C_word)li208),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate(&lf[403],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17650,a[2]=((C_word)li213),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[408]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18083,a[2]=((C_word)li218),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate(&lf[410],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18570,a[2]=((C_word)li225),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate(&lf[419],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18910,a[2]=((C_word)li226),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate((C_word*)lf[421]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18973,a[2]=((C_word)li231),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate(&lf[422],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19491,a[2]=((C_word)li233),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate((C_word*)lf[428]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19585,a[2]=((C_word)li257),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate((C_word*)lf[454]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20632,a[2]=((C_word)li259),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate((C_word*)lf[455]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20666,a[2]=((C_word)li262),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate((C_word*)lf[458]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20777,a[2]=((C_word)li263),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate((C_word*)lf[459]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20792,a[2]=((C_word)li265),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate((C_word*)lf[462]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20813,a[2]=((C_word)li266),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate((C_word*)lf[463]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20819,a[2]=((C_word)li267),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate((C_word*)lf[464]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20825,a[2]=((C_word)li269),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate((C_word*)lf[465]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20894,a[2]=((C_word)li271),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate((C_word*)lf[466]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20963,a[2]=((C_word)li273),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate((C_word*)lf[467]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21006,a[2]=((C_word)li275),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate((C_word*)lf[469]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21049,a[2]=((C_word)li277),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate((C_word*)lf[446]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21070,a[2]=((C_word)li279),tmp=(C_word)a,a+=3,tmp));
t74=C_mutate((C_word*)lf[473]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21110,a[2]=((C_word)li281),tmp=(C_word)a,a+=3,tmp));
t75=C_mutate((C_word*)lf[478]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21346,a[2]=((C_word)li282),tmp=(C_word)a,a+=3,tmp));
t76=C_mutate((C_word*)lf[479]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21376,a[2]=((C_word)li283),tmp=(C_word)a,a+=3,tmp));
t77=C_mutate(&lf[480],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21391,a[2]=((C_word)li285),tmp=(C_word)a,a+=3,tmp));
t78=C_mutate((C_word*)lf[485]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21477,a[2]=((C_word)li286),tmp=(C_word)a,a+=3,tmp));
t79=C_mutate((C_word*)lf[487]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21523,a[2]=((C_word)li287),tmp=(C_word)a,a+=3,tmp));
t80=C_mutate((C_word*)lf[489]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21590,a[2]=((C_word)li290),tmp=(C_word)a,a+=3,tmp));
t81=C_mutate((C_word*)lf[492]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21723,a[2]=((C_word)li292),tmp=(C_word)a,a+=3,tmp));
t82=C_mutate((C_word*)lf[494]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21830,a[2]=((C_word)li296),tmp=(C_word)a,a+=3,tmp));
t83=C_mutate((C_word*)lf[497]+1,C_retrieve2(lf[38],"ffi_ranseed"));
t84=C_mutate((C_word*)lf[488]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22038,a[2]=((C_word)li297),tmp=(C_word)a,a+=3,tmp));
t85=C_mutate((C_word*)lf[498]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22073,a[2]=((C_word)li298),tmp=(C_word)a,a+=3,tmp));
t86=C_mutate((C_word*)lf[499]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22094,a[2]=((C_word)li299),tmp=(C_word)a,a+=3,tmp));
t87=C_mutate((C_word*)lf[500]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22365,a[2]=((C_word)li302),tmp=(C_word)a,a+=3,tmp));
t88=C_mutate((C_word*)lf[503]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22464,a[2]=((C_word)li304),tmp=(C_word)a,a+=3,tmp));
t89=C_mutate((C_word*)lf[504]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22519,a[2]=((C_word)li305),tmp=(C_word)a,a+=3,tmp));
t90=C_mutate((C_word*)lf[505]+1,C_retrieve2(lf[41],"ffi_ranlow"));
t91=C_mutate((C_word*)lf[506]+1,C_retrieve2(lf[42],"ffi_ranhigh"));
t92=C_mutate((C_word*)lf[507]+1,C_retrieve2(lf[43],"ffi_ranmiddle"));
t93=C_mutate((C_word*)lf[508]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22561,a[2]=((C_word)li306),tmp=(C_word)a,a+=3,tmp));
t94=C_mutate((C_word*)lf[512]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22789,a[2]=((C_word)li307),tmp=(C_word)a,a+=3,tmp));
t95=C_mutate((C_word*)lf[513]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22808,a[2]=((C_word)li308),tmp=(C_word)a,a+=3,tmp));
t96=C_mutate((C_word*)lf[514]+1,C_retrieve2(lf[47],"ffi_rancauchy"));
t97=C_mutate((C_word*)lf[515]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22849,a[2]=((C_word)li309),tmp=(C_word)a,a+=3,tmp));
t98=C_mutate((C_word*)lf[516]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22868,a[2]=((C_word)li310),tmp=(C_word)a,a+=3,tmp));
t99=C_mutate((C_word*)lf[517]+1,C_retrieve2(lf[50],"ffi_ranbrown"));
t100=C_mutate((C_word*)lf[518]+1,C_retrieve2(lf[49],"ffi_ranpink"));
t101=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22891,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 82   make-equal-hash-table");
t102=C_retrieve(lf[15]);
((C_proc2)C_retrieve_proc(t102))(2,t102,t101);}

/* k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22891,2,t0,t1);}
t2=C_mutate(&lf[519],t1);
t3=C_SCHEME_END_OF_LIST;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22894,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45458,a[2]=t7,a[3]=t4,a[4]=((C_word)li613),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_45458(t9,t5,C_fix(0));}

/* do3448 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_45458(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_45458,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(128)))){
t3=(C_word)C_a_i_list(&a,5,lf[1055],C_fix(-1),lf[1056],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_45471,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 82   hash-set!");
t5=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_retrieve2(lf[519],"*notes*"),lf[1057],t3);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_45684,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 82   modulo");
t4=*((C_word*)lf[450]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(12));}}

/* k45682 in do3448 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45684,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[1058],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45481,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45492,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 82   modulo");
t6=*((C_word*)lf[450]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t0)[4],C_fix(12));}

/* k45490 in k45682 in do3448 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45492,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],lf[1059]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],lf[1060]);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_45504,a[2]=t3,a[3]=t2,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 82   ffi_keynum_to_hertz");
f_7353(t4,((C_word*)t0)[4]);}

/* k45502 in k45490 in k45682 in do3448 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45504,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_45508,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],lf[1068]);
C_trace("ChickenBridge.scm: 82   ffi_keynum_to_hertz");
f_7353(t2,t3);}

/* k45506 in k45502 in k45490 in k45682 in do3448 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45508,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_45512,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],lf[1067]);
C_trace("ChickenBridge.scm: 82   ffi_keynum_to_hertz");
f_7353(t2,t3);}

/* k45510 in k45506 in k45502 in k45490 in k45682 in do3448 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45512,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_45668,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_a_i_divide(&a,2,((C_word*)t0)[8],C_fix(12));
C_trace("ChickenBridge.scm: 82   floor");
t4=*((C_word*)lf[528]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k45666 in k45510 in k45506 in k45502 in k45490 in k45682 in do3448 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45668,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_45518,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=t4,a[5]=((C_word)li612),tmp=(C_word)a,a+=6,tmp));
t6=((C_word*)t4)[1];
f_45518(t6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do3454 in k45666 in k45510 in k45506 in k45502 in k45490 in k45682 in do3448 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_45518(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13){
C_word tmp;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[41],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_45518,NULL,14,t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}
t14=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t18=t1;
((C_proc2)(void*)(*((C_word*)t18+1)))(2,t18,C_SCHEME_FALSE);}
else{
t18=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_45528,a[2]=t17,a[3]=t16,a[4]=t15,a[5]=t14,a[6]=t9,a[7]=t8,a[8]=t7,a[9]=t6,a[10]=t5,a[11]=t4,a[12]=t3,a[13]=t1,a[14]=((C_word*)t0)[4],a[15]=t2,tmp=(C_word)a,a+=16,tmp);
t19=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_45538,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t8,a[6]=t6,a[7]=t9,a[8]=t5,a[9]=t17,a[10]=t4,a[11]=t7,a[12]=t3,a[13]=t16,a[14]=t15,a[15]=t14,a[16]=t18,tmp=(C_word)a,a+=17,tmp);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(0)))){
t20=(C_word)C_i_car(t2);
t21=t19;
f_45538(t21,(C_word)C_i_string_equal_p(t20,lf[1066]));}
else{
t20=t19;
f_45538(t20,C_SCHEME_FALSE);}}}

/* k45536 in do3454 in k45666 in k45510 in k45506 in k45502 in k45490 in k45682 in do3448 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_45538(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_45538,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[16];
f_45528(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_45541,a[2]=((C_word*)t0)[16],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[15],tmp=(C_word)a,a+=17,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_string_equal_p(t3,lf[1064]))){
t4=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[15])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[15])+1,t4);
t6=t2;
f_45541(t6,t5);}
else{
t4=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_string_equal_p(t4,lf[1065]))){
t5=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[15])[1],C_fix(1));
t6=C_mutate(((C_word *)((C_word*)t0)[15])+1,t5);
t7=t2;
f_45541(t7,t6);}
else{
t5=t2;
f_45541(t5,C_SCHEME_UNDEFINED);}}}}

/* k45539 in k45536 in do3454 in k45666 in k45510 in k45506 in k45502 in k45490 in k45682 in do3448 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_45541(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_45541,NULL,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[1061],((C_word*)((C_word*)t0)[16])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[15])+1,t2);
t4=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_45549,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[15],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],tmp=(C_word)a,a+=16,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 82   string-append");
t6=*((C_word*)lf[439]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[15])[1]);}

/* k45547 in k45539 in k45536 in do3454 in k45666 in k45510 in k45506 in k45502 in k45490 in k45682 in do3448 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45549,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[15])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[15])[1],((C_word*)t0)[14],((C_word*)t0)[13],((C_word*)t0)[12],((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[10])+1,t3);
t5=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_45556,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[15],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 82   hash-set!");
t6=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[519],"*notes*"),((C_word*)((C_word*)t0)[15])[1],((C_word*)((C_word*)t0)[10])[1]);}

/* k45554 in k45547 in k45539 in k45536 in do3454 in k45666 in k45510 in k45506 in k45502 in k45490 in k45682 in do3448 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45556,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_45559,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 82   hash-set!");
t4=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[519],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[9])[1]);}
else{
t4=t2;
f_45559(2,t4,C_SCHEME_UNDEFINED);}}

/* k45557 in k45554 in k45547 in k45539 in k45536 in do3454 in k45666 in k45510 in k45506 in k45502 in k45490 in k45682 in do3448 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45559,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_45563,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 82   string-append");
t4=*((C_word*)lf[439]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[1063],((C_word*)((C_word*)t0)[9])[1]);}

/* k45561 in k45557 in k45554 in k45547 in k45539 in k45536 in do3454 in k45666 in k45510 in k45506 in k45502 in k45490 in k45682 in do3448 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45563,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[12])[1],((C_word*)t0)[11],((C_word*)t0)[10],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_45570,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 82   hash-set!");
t6=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[519],"*notes*"),((C_word*)((C_word*)t0)[12])[1],((C_word*)((C_word*)t0)[8])[1]);}

/* k45568 in k45561 in k45557 in k45554 in k45547 in k45539 in k45536 in do3454 in k45666 in k45510 in k45506 in k45502 in k45490 in k45682 in do3448 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45570,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_45573,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(1));
t5=(C_word)C_a_i_plus(&a,2,t4,C_fix(1000));
C_trace("ChickenBridge.scm: 82   hash-set!");
t6=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t2,C_retrieve2(lf[519],"*notes*"),t5,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=t2;
f_45573(2,t4,C_SCHEME_UNDEFINED);}}

/* k45571 in k45568 in k45561 in k45557 in k45554 in k45547 in k45539 in k45536 in do3454 in k45666 in k45510 in k45506 in k45502 in k45490 in k45682 in do3448 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45573,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_45577,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 82   string-append");
t4=*((C_word*)lf[439]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[1062],((C_word*)((C_word*)t0)[7])[1]);}

/* k45575 in k45571 in k45568 in k45561 in k45557 in k45554 in k45547 in k45539 in k45536 in do3454 in k45666 in k45510 in k45506 in k45502 in k45490 in k45682 in do3448 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45577,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)t0)[8],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_45584,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 82   hash-set!");
t6=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[519],"*notes*"),((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* k45582 in k45575 in k45571 in k45568 in k45561 in k45557 in k45554 in k45547 in k45539 in k45536 in do3454 in k45666 in k45510 in k45506 in k45502 in k45490 in k45682 in do3448 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45584,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);
if(C_truep(t2)){
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1000));
C_trace("ChickenBridge.scm: 82   hash-set!");
t4=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[3],C_retrieve2(lf[519],"*notes*"),t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=((C_word*)t0)[3];
f_45528(2,t3,C_SCHEME_UNDEFINED);}}

/* k45526 in do3454 in k45666 in k45510 in k45506 in k45502 in k45490 in k45682 in do3448 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[15]);
t3=((C_word*)((C_word*)t0)[14])[1];
f_45518(t3,((C_word*)t0)[13],t2,((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)t0)[10],((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k45479 in k45682 in do3448 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45481,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_45458(t3,((C_word*)t0)[2],t2);}

/* k45469 in do3448 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45471,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45474,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 82   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve2(lf[519],"*notes*"),C_fix(-1),((C_word*)t0)[2]);}

/* k45472 in k45469 in do3448 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}

/* k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22894,2,t0,t1);}
t2=C_mutate(&lf[520],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22896,a[2]=((C_word)li311),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[523],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22995,a[2]=((C_word)li312),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[531]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23048,a[2]=((C_word)li314),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[95]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23145,a[2]=((C_word)li316),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[534]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23267,a[2]=((C_word)li318),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[536]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23383,a[2]=((C_word)li319),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[537]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23428,a[2]=((C_word)li323),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[540]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23563,a[2]=((C_word)li327),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[542]+1,*((C_word*)lf[159]+1));
t11=C_mutate((C_word*)lf[543]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23729,a[2]=((C_word)li330),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[545]+1,lf[546]);
t13=C_mutate((C_word*)lf[547]+1,lf[548]);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23875,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 82   make-equal-hash-table");
t15=C_retrieve(lf[15]);
((C_proc2)C_retrieve_proc(t15))(2,t15,t14);}

/* k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23875,2,t0,t1);}
t2=C_mutate(&lf[549],t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23876,a[2]=((C_word)li331),tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23881,a[2]=((C_word)li332),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23895,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45363,a[2]=t3,a[3]=t4,a[4]=((C_word)li611),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t7=*((C_word*)lf[373]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t5,t6,lf[1054]);}

/* a45362 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45363(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_45363,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_i_caddr(t2);
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_45376,a[2]=t1,a[3]=t4,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=t3,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 82   addryth");
f_23881(t6,t4,t3);}

/* k45374 in a45362 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45376,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_45379,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45452,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 82   rsym");
f_23876(t3,lf[1052],((C_word*)t0)[3],lf[1053]);}

/* k45450 in k45374 in a45362 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45452,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[4],lf[1051]);
C_trace("ChickenBridge.scm: 82   addryth");
f_23881(((C_word*)t0)[2],t1,t2);}

/* k45377 in k45374 in a45362 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45379,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_45384,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word*)t0)[7],a[8]=((C_word)li610),tmp=(C_word)a,a+=9,tmp));
t5=((C_word*)t3)[1];
f_45384(t5,((C_word*)t0)[2],C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do3599 in k45377 in k45374 in a45362 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_45384(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_45384,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[7]))){
t9=(C_word)C_i_list_ref(lf[1046],t2);
t10=C_set_block_item(t6,0,t9);
t11=(C_word)C_i_car(((C_word*)t6)[1]);
t12=C_set_block_item(t7,0,t11);
t13=(C_word)C_i_cadr(((C_word*)t6)[1]);
t14=C_set_block_item(t8,0,t13);
t15=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_45406,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t8,a[7]=t7,a[8]=t6,a[9]=t1,a[10]=((C_word*)t0)[6],a[11]=t2,tmp=(C_word)a,a+=12,tmp);
t16=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_45436,a[2]=t15,a[3]=((C_word*)t0)[4],a[4]=t8,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 82   rsym");
f_23876(t16,lf[1050],((C_word*)t0)[2],((C_word*)t7)[1]);}
else{
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,C_SCHEME_FALSE);}}

/* k45434 in do3599 in k45377 in k45374 in a45362 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45436,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],t2);
C_trace("ChickenBridge.scm: 82   addryth");
f_23881(((C_word*)t0)[2],t1,t3);}

/* k45404 in do3599 in k45377 in k45374 in a45362 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45406,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_45409,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_45420,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 82   rsym");
f_23876(t3,lf[1049],((C_word*)t0)[2],((C_word*)((C_word*)t0)[7])[1]);}

/* k45418 in k45404 in do3599 in k45377 in k45374 in a45362 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45420,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],lf[1047]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_45432,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 82   *");
C_times(5,0,t3,((C_word*)t0)[5],lf[1048],((C_word*)((C_word*)t0)[2])[1]);}

/* k45430 in k45418 in k45404 in do3599 in k45377 in k45374 in a45362 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45432,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],t1);
C_trace("ChickenBridge.scm: 82   addryth");
f_23881(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k45407 in k45404 in do3599 in k45377 in k45374 in a45362 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45409,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t3=((C_word*)((C_word*)t0)[6])[1];
f_45384(t3,((C_word*)t0)[5],t2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23895,2,t0,t1);}
t2=C_mutate((C_word*)lf[551]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23897,a[2]=((C_word)li337),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[560]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24213,a[2]=((C_word)li338),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24224,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45357,a[2]=((C_word)li609),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 82   ##sys#register-macro");
t6=C_retrieve(lf[934]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[1045],t5);}

/* a45356 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45357(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_45357,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[902],C_SCHEME_END_OF_LIST,t2));}

/* k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_24224(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word ab[102],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24224,2,t0,t1);}
t2=C_mutate((C_word*)lf[561]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24238,a[2]=((C_word)li339),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[562]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24244,a[2]=((C_word)li340),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[563],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25092,a[2]=((C_word)li341),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[566],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25134,a[2]=((C_word)li342),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[568],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25179,a[2]=((C_word)li343),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[570],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25185,a[2]=((C_word)li344),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[571]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25200,a[2]=((C_word)li345),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[572],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25209,a[2]=((C_word)li346),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[573]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25218,a[2]=((C_word)li347),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[574],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25227,a[2]=((C_word)li348),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[575]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25236,a[2]=((C_word)li349),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[576],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25245,a[2]=((C_word)li350),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[577]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25254,a[2]=((C_word)li351),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[578]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25263,a[2]=((C_word)li352),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[579]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25301,a[2]=((C_word)li354),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[581]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25360,a[2]=((C_word)li355),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[582]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25370,a[2]=((C_word)li356),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[583]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25388,a[2]=((C_word)li358),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[585]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25419,a[2]=((C_word)li360),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[587]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25680,a[2]=((C_word)li370),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[595]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27153,a[2]=((C_word)li375),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[599]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27559,a[2]=((C_word)li377),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[600]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27738,a[2]=((C_word)li385),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[605]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27950,a[2]=((C_word)li387),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[606]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28007,a[2]=((C_word)li397),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[613]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28520,a[2]=((C_word)li404),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[625]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28646,a[2]=((C_word)li409),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[637],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28842,a[2]=((C_word)li410),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[639],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28863,a[2]=((C_word)li411),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[640],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28899,a[2]=((C_word)li412),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[641],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28908,a[2]=((C_word)li413),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[643],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28931,a[2]=((C_word)li414),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[644],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28943,a[2]=((C_word)li415),tmp=(C_word)a,a+=3,tmp));
t35=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28951,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   make-eq-hash-table");
t36=C_retrieve(lf[18]);
((C_proc2)C_retrieve_proc(t36))(2,t36,t35);}

/* k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28951,2,t0,t1);}
t2=C_mutate(&lf[645],t1);
t3=C_mutate(&lf[646],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28953,a[2]=((C_word)li416),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29056,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45254,a[2]=((C_word)li608),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   ##sys#register-macro");
t6=C_retrieve(lf[934]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[1044],t5);}

/* a45253 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45254(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr4r,(void*)f_45254r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_45254r(t0,t1,t2,t3,t4);}}

static void C_ccall f_45254r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(22);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_45257,a[2]=t6,a[3]=((C_word)li607),tmp=(C_word)a,a+=4,tmp));
t8=(C_word)C_a_i_list(&a,2,lf[1041],t2);
t9=(C_word)C_a_i_list(&a,1,t8);
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_45317,a[2]=t3,a[3]=t6,a[4]=t9,a[5]=t1,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   symbol->string");
t11=*((C_word*)lf[121]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k45315 in a45253 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45317,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_45321,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   ppat");
t3=((C_word*)((C_word*)t0)[3])[1];
f_45257(t3,t2,((C_word*)t0)[2]);}

/* k45319 in k45315 in a45253 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45321,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)t0)[5]);
t3=(C_truep(t2)?C_SCHEME_FALSE:(C_word)C_i_car(((C_word*)t0)[5]));
t4=(C_word)C_i_nullp(((C_word*)t0)[5]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_45335,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t1,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t4)){
t6=t5;
f_45335(t6,t4);}
else{
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=t5;
f_45335(t7,(C_word)C_i_nullp(t6));}}

/* k45333 in k45319 in k45315 in a45253 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_45335(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_45335,NULL,2,t0,t1);}
t2=(C_truep(t1)?C_SCHEME_FALSE:(C_word)C_i_cadr(((C_word*)t0)[7]));
t3=(C_word)C_a_i_list(&a,6,lf[1042],((C_word*)t0)[6],lf[1041],((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_list(&a,4,lf[20],lf[1043],lf[1041],t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_list(&a,3,lf[100],((C_word*)t0)[2],t4));}

/* ppat in a45253 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_45257(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_45257,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[1039]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45277,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 84   ppat");
t7=t3;
t8=t4;
t1=t7;
t2=t8;
goto loop;}
else{
t3=(C_word)C_i_member(t2,lf[1040]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_list(&a,2,lf[217],t2):t2));}}}

/* k45275 in ppat in a45253 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45277,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_45281,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 84   ppat");
t4=((C_word*)((C_word*)t0)[2])[1];
f_45257(t4,t2,t3);}

/* k45279 in k45275 in ppat in a45253 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45281,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[960],((C_word*)t0)[2],t1));}

/* k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word ab[102],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29056,2,t0,t1);}
t2=C_mutate(&lf[648],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29058,a[2]=((C_word)li417),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[350],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29076,a[2]=((C_word)li418),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[650],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29079,a[2]=((C_word)li419),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[651],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29091,a[2]=((C_word)li420),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[652],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29097,a[2]=((C_word)li421),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[653],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29107,a[2]=((C_word)li422),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[654],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29165,a[2]=((C_word)li423),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[655],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29197,a[2]=((C_word)li424),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[657],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29245,a[2]=((C_word)li425),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[659],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29251,a[2]=((C_word)li426),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[660],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29266,a[2]=((C_word)li427),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[661],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29284,a[2]=((C_word)li428),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[662],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29302,a[2]=((C_word)li429),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[663],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29311,a[2]=((C_word)li430),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[665],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29327,a[2]=((C_word)li431),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[667],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29359,a[2]=((C_word)li432),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[668],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29371,a[2]=((C_word)li433),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[669],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29438,a[2]=((C_word)li434),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[671],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29456,a[2]=((C_word)li435),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[675],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29489,a[2]=((C_word)li436),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[678]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29520,a[2]=((C_word)li437),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[679],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29697,a[2]=((C_word)li439),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[680],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29705,a[2]=((C_word)li442),tmp=(C_word)a,a+=3,tmp));
t25=lf[681]=C_SCHEME_FALSE;;
t26=C_mutate(&lf[682],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29809,a[2]=((C_word)li456),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[664],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30428,a[2]=((C_word)li457),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[674],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30476,a[2]=((C_word)li458),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[677],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30578,a[2]=((C_word)li459),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[666],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30590,a[2]=((C_word)li460),tmp=(C_word)a,a+=3,tmp));
t31=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30611,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t32=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45232,a[2]=t31,tmp=(C_word)a,a+=3,tmp);
t33=(C_word)C_a_i_cons(&a,2,C_fix(3072),C_SCHEME_END_OF_LIST);
t34=(C_word)C_a_i_cons(&a,2,C_fix(3328),t33);
t35=(C_word)C_a_i_cons(&a,2,C_fix(2816),t34);
t36=(C_word)C_a_i_cons(&a,2,lf[266],t35);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t32,lf[1038],C_fix(25856),t36,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k45230 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(25856),t1);}

/* k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30611,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30614,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45212,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[266],t5);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t3,lf[1037],C_fix(26112),t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k45210 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(26112),t1);}

/* k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30614,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30617,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45172,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(3840),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(3072),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(3328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(2816),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[266],t10);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t3,lf[1036],C_fix(26368),t11,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k45170 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(26368),t1);}

/* k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30617,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30620,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45062,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26880),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[409],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1280),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(1024),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[243],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45068,a[2]=((C_word)li605),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_45078,a[2]=((C_word)li606),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t3,lf[1035],C_fix(26624),t9,t10,t11);}

/* a45077 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45078(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_45078,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_45082,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   get-emit-info");
f_29359(t5,lf[1029],t3);}

/* k45080 in a45077 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45082,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_45085,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-parsed");
f_29284(t2,((C_word*)t0)[2]);}

/* k45083 in k45080 in a45077 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45085,2,t0,t1);}
t2=((C_word*)t0)[5];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 84   emit");
f_29456(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_nullp(t1))){
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,1,lf[269]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_45103,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   add-emit-info");
f_29371(t3,lf[1029],C_SCHEME_TRUE,((C_word*)t0)[3]);}}}

/* k45101 in k45083 in k45080 in a45077 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45103,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45106,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k45104 in k45101 in k45083 in k45080 in a45077 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45106,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45109,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45137,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   get-emit-info");
f_29359(t5,lf[1029],((C_word*)t0)[2]);}

/* k45135 in k45104 in k45101 in k45083 in k45080 in a45077 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45137,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[1030]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,2,lf[1034],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_45109(t5,t4);}
else{
t3=(C_word)C_a_i_list(&a,2,lf[217],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_45109(t5,t4);}}

/* k45107 in k45104 in k45101 in k45083 in k45080 in a45077 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_45109(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_45109,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_45115,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   get-emit-info");
f_29359(t2,lf[996],((C_word*)t0)[2]);}

/* k45113 in k45107 in k45104 in k45101 in k45083 in k45080 in a45077 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_45115,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,lf[269]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[115],((C_word*)((C_word*)t0)[2])[1],t2));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* a45067 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45068(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_45068,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 84   make-parse-unit");
f_29245(t1,C_fix(26624),t4,C_SCHEME_FALSE);}

/* k45060 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(26624),t1);}

/* k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30620,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30623,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44958,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(5632),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(5376),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[266],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[243],t8);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44966,a[2]=t9,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   simple-unit-parser");
f_29697(t10,C_fix(27648));}

/* k44964 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44966,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44968,a[2]=((C_word)li604),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(((C_word*)t0)[3],lf[1033],C_fix(27648),((C_word*)t0)[2],t1,t2);}

/* a44967 in k44964 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44968(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_44968,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44972,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-parsed");
f_29284(t5,t2);}

/* k44970 in a44967 in k44964 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44972,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_44975,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 84   token-unit-type=?");
f_29327(t2,t3,C_fix(5376));}

/* k44973 in k44970 in a44967 in k44964 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44975,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_44978,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   get-emit-info");
f_29359(t2,lf[1029],((C_word*)t0)[4]);}

/* k44976 in k44973 in k44970 in a44967 in k44964 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44978,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_44981,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t1)){
t3=t2;
f_44981(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_45014,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_truep(((C_word*)t0)[5])?lf[1031]:lf[1032]);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_45022,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 84   parse-unit-position");
f_29302(t5,t6);}}

/* k45020 in k44976 in k44973 in k44970 in a44967 in k44964 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   make-parse-error");
f_29197(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k45012 in k44976 in k44973 in k44970 in a44967 in k44964 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k44979 in k44976 in k44973 in k44970 in a44967 in k44964 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44981,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44984,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_45004,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=lf[1029];
t6=((C_word*)t0)[4];
t7=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_set_block_item(t11,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29390,a[2]=t9,a[3]=t5,a[4]=t11,a[5]=t7,a[6]=((C_word)li603),tmp=(C_word)a,a+=7,tmp));
t13=((C_word*)t11)[1];
f_29390(t13,t4,t6);}

/* do4668 in k44979 in k44976 in k44973 in k44970 in a44967 in k44964 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29390(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29390,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29403,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29436,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t3,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   caar");
t5=*((C_word*)lf[596]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}

/* k29434 in do4668 in k44979 in k44976 in k44973 in k44970 in a44967 in k44964 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29436,2,t0,t1);}
t2=(C_word)C_eqp(t1,((C_word*)t0)[5]);
if(C_truep(t2)){
t3=((C_word*)t0)[4];
f_29403(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=((C_word*)t0)[4];
f_29403(t8,t7);}}

/* k29401 in do4668 in k44979 in k44976 in k44973 in k44970 in a44967 in k44964 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29403(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_29390(t3,((C_word*)t0)[2],t2);}

/* k45002 in k44979 in k44976 in k44973 in k44970 in a44967 in k44964 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_45004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   emit");
f_29456(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k44982 in k44979 in k44976 in k44973 in k44970 in a44967 in k44964 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44984,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44987,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   set-emit-info!");
f_29438(t2,lf[1029],lf[1030],((C_word*)t0)[2]);}

/* k44985 in k44982 in k44979 in k44976 in k44973 in k44970 in a44967 in k44964 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44987,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(((C_word*)t0)[3])?(C_word)C_a_i_list(&a,2,lf[1027],((C_word*)t0)[2]):(C_word)C_a_i_list(&a,2,lf[1028],((C_word*)t0)[2])));}

/* k44956 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(27648),t1);}

/* k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30623,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30626,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44930,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(27648),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(26624),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26368),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[266],t7);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t3,lf[1026],C_fix(26880),t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k44928 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(26880),t1);}

/* k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30626,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30629,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44870,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(1792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1536),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[243],t7);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44876,a[2]=((C_word)li601),tmp=(C_word)a,a+=3,tmp);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44894,a[2]=((C_word)li602),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t3,lf[1025],C_fix(27136),t8,t9,t10);}

/* a44893 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44894(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_44894,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44902,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44906,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-parsed");
f_29284(t6,t2);}

/* k44904 in a44893 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   emit");
f_29456(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k44900 in a44893 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44902,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[75],t1));}

/* a44875 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44876(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_44876,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 84   make-parse-unit");
f_29245(t1,C_fix(27136),t6,C_SCHEME_FALSE);}

/* k44868 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(27136),t1);}

/* k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30629,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30632,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44747,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[685],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(256),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(5120),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[243],t13);
t15=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44753,a[2]=((C_word)li599),tmp=(C_word)a,a+=3,tmp);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44784,a[2]=((C_word)li600),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t3,lf[1024],C_fix(27392),t14,t15,t16);}

/* a44783 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44784(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_44784,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44788,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-parsed");
f_29284(t5,t2);}

/* k44786 in a44783 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44788,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_44791,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k44789 in k44786 in a44783 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44791,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_44794,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k44792 in k44789 in k44786 in a44783 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44794,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44807,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,4,lf[117],((C_word*)t0)[4],t1,C_SCHEME_FALSE));}}

/* k44805 in k44792 in k44789 in k44786 in a44783 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44807,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,4,lf[117],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* a44752 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44753(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_44753,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44757,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   sixth");
t5=C_retrieve(lf[69]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k44755 in a44752 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44757,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44772,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   fifth");
t4=C_retrieve(lf[68]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[3]);}

/* k44770 in k44755 in a44752 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44772,2,t0,t1);}
t2=(C_word)C_i_pairp(((C_word*)t0)[4]);
t3=(C_truep(t2)?(C_word)C_i_cadr(((C_word*)t0)[4]):C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,((C_word*)t0)[3],t1,t3);
C_trace("ChickenBridge.scm: 84   make-parse-unit");
f_29245(((C_word*)t0)[2],C_fix(27392),t4,C_SCHEME_FALSE);}

/* k44745 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(27392),t1);}

/* k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30632,2,t0,t1);}
t2=C_mutate(&lf[688],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30634,a[2]=((C_word)li462),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30688,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44627,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[177],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[243],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t10,t11);
t13=(C_word)C_a_i_cons(&a,2,lf[266],t12);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44633,a[2]=((C_word)li598),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t4,lf[1023],C_fix(28416),t13,t14,C_SCHEME_FALSE);}

/* a44632 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44633(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_44633,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44649,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_cadr(t2);
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 84   token-unit-type=?");
f_29327(t4,t8,C_fix(256));}
else{
t7=t4;
f_44649(2,t7,C_SCHEME_FALSE);}}
else{
t6=t4;
f_44649(2,t6,C_SCHEME_FALSE);}}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,1,t2));}}

/* k44647 in a44632 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44649,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44660,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 84   remove-token-type");
f_30634(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k44658 in k44647 in a44632 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44660,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* k44625 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44627(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(28416),t1);}

/* k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30688,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30691,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44488,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[177],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(6144),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[243],t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t13=(C_word)C_a_i_cons(&a,2,C_fix(6144),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[243],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t11,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[266],t16);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44494,a[2]=((C_word)li597),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t3,lf[1022],C_fix(28672),t17,t18,C_SCHEME_FALSE);}

/* a44493 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44494(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_44494,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44514,a[2]=t4,a[3]=t1,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44517,a[2]=t6,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(C_word)C_i_caddr(t2);
if(C_truep((C_word)C_i_pairp(t9))){
t10=(C_word)C_i_caddr(t2);
t11=(C_word)C_i_car(t10);
C_trace("ChickenBridge.scm: 84   token-unit-type=?");
f_29327(t7,t11,C_fix(256));}
else{
t10=t7;
f_44517(2,t10,C_SCHEME_FALSE);}}
else{
t9=t7;
f_44517(2,t9,C_SCHEME_FALSE);}}

/* k44515 in a44493 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 84   remove-token-type");
f_30634(((C_word*)t0)[2],t2,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_44514(2,t2,C_SCHEME_END_OF_LIST);}}

/* k44512 in a44493 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44514,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t2));}

/* k44486 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(28672),t1);}

/* k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[75],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30691,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30694,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44336,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[243],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(28416),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(512),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[243],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28672),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[243],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(28672),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(28416),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(512),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[243],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,t14,t21);
t23=(C_word)C_a_i_cons(&a,2,t10,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[266],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44342,a[2]=((C_word)li596),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t3,lf[1021],C_fix(28160),t25,t26,C_SCHEME_FALSE);}

/* a44341 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44342(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_44342,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cdr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(C_word)C_i_cdr(((C_word*)t4)[1]);
t9=C_set_block_item(t4,0,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44360,a[2]=t7,a[3]=t4,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   token-unit-type=?");
f_29327(t10,t7,C_fix(768));}

/* k44358 in a44341 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44360,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44369,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 84   token-unit-type=?");
f_29327(t2,t3,C_fix(256));}}

/* k44367 in k44358 in a44341 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 84   append");
t3=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k44334 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(28160),t1);}

/* k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30694,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30697,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44265,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(28160),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(25088),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[243],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44271,a[2]=((C_word)li594),tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44289,a[2]=((C_word)li595),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t3,lf[1020],C_fix(27904),t6,t7,t8);}

/* a44288 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44289(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_44289,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44293,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-parsed");
f_29284(t5,t2);}

/* k44291 in a44288 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44293,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_44296,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k44294 in k44291 in a44288 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44296,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44312,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k44310 in k44294 in k44291 in a44288 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44312,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* a44270 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44271(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_44271,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_a_i_cons(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 84   make-parse-unit");
f_29245(t1,C_fix(27904),t6,C_SCHEME_FALSE);}

/* k44263 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(27904),t1);}

/* k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30697,2,t0,t1);}
t2=C_mutate(&lf[689],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30699,a[2]=((C_word)li463),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[690],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30720,a[2]=((C_word)li466),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30836,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44189,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(C_word)C_a_i_cons(&a,2,C_fix(8705),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(8450),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(10244),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(11268),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11012),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(9732),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(9476),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(9988),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(10756),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(8199),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(7941),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(7686),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(7430),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(7173),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(6917),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[266],t21);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t5,lf[1019],C_fix(28928),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k44187 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(28928),t1);}

/* k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30836,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30839,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44109,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(28928),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[409],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29440),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[243],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44115,a[2]=((C_word)li593),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t3,lf[1018],C_fix(29184),t9,t10,C_SCHEME_FALSE);}

/* a44114 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44115(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_44115,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_44122,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 84   is-op?");
f_30699(t4,t7);}
else{
t6=t4;
f_44122(2,t6,C_SCHEME_FALSE);}}

/* k44120 in a44114 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_44122,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(C_word)C_a_i_cons(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 84   inf->pre");
f_30720(((C_word*)t0)[2],t4);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}}

/* k44107 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(29184),t1);}

/* k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30839,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30842,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43973,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(7173),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[243],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[243],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[243],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(2304),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(26624),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(26368),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(27136),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(27904),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(27392),t18);
t20=(C_word)C_a_i_cons(&a,2,t13,t19);
t21=(C_word)C_a_i_cons(&a,2,t9,t20);
t22=(C_word)C_a_i_cons(&a,2,t6,t21);
t23=(C_word)C_a_i_cons(&a,2,lf[266],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43979,a[2]=((C_word)li591),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_44005,a[2]=((C_word)li592),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t3,lf[1017],C_fix(29440),t23,t24,t25);}

/* a44004 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44005(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_44005,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_44013,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-parsed");
f_29284(t5,t2);}

/* k44011 in a44004 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_44013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   emit");
f_29456(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a43978 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43979(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43979,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43987,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43996,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 84   token-unit-type=?");
f_29327(t5,t6,C_fix(512));}
else{
t5=t4;
f_43987(t5,t2);}}

/* k43994 in a43978 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_43987(t2,(C_truep(t1)?(C_word)C_i_cadr(((C_word*)t0)[2]):((C_word*)t0)[2]));}

/* k43985 in a43978 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_43987(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   make-parse-unit");
f_29245(((C_word*)t0)[2],C_fix(29440),t1,C_SCHEME_FALSE);}

/* k43971 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(29440),t1);}

/* k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30842,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30845,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43929,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26368),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6400),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(2304),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26624),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(27136),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(27904),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(27392),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[266],t11);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t3,lf[1016],C_fix(29696),t12,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k43927 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(29696),t1);}

/* k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30845,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30848,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43819,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[409],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(15872),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[243],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43825,a[2]=((C_word)li588),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43847,a[2]=((C_word)li590),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t3,lf[1015],C_fix(33536),t10,t11,t12);}

/* a43846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43847(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_43847,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_list(&a,1,lf[712]);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_43858,a[2]=t1,a[3]=t4,a[4]=t3,a[5]=t7,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-parsed");
f_29284(t8,t2);}

/* k43856 in a43846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43858,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_43860,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word)li589),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_43860(t5,((C_word*)t0)[2],t1);}

/* do5128 in k43856 in a43846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_43860(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_43860,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_43889,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k43887 in do5128 in k43856 in a43846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43889,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_43860(t7,((C_word*)t0)[2],t6);}

/* a43824 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43825(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43825,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43841,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 84   remove-token-type");
f_30634(t5,t6,C_fix(256));}

/* k43839 in a43824 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43841,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 84   make-parse-unit");
f_29245(((C_word*)t0)[2],C_fix(33536),t2,C_SCHEME_FALSE);}

/* k43817 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(33536),t1);}

/* k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[48],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30848,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30851,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43708,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[409],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(6144),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(256),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[409],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t6,t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(16896),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[243],t14);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43714,a[2]=((C_word)li586),tmp=(C_word)a,a+=3,tmp);
t17=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43748,a[2]=((C_word)li587),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t3,lf[1014],C_fix(34560),t15,t16,t17);}

/* a43747 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43748(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_43748,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43752,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-parsed");
f_29284(t5,t2);}

/* k43750 in a43747 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43752,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43759,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t2,t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k43757 in k43750 in a43747 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43759,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[915],t1));}

/* a43713 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43714(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43714,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43730,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43734,a[2]=t2,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 84   remove-token-type");
f_30634(t6,t7,C_fix(256));}

/* k43732 in a43713 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43734,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43738,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 84   remove-token-type");
f_30634(t2,t3,C_fix(256));}

/* k43736 in k43732 in a43713 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   append");
t2=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k43728 in a43713 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43730,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 84   make-parse-unit");
f_29245(((C_word*)t0)[2],C_fix(34560),t2,C_SCHEME_FALSE);}

/* k43706 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(34560),t1);}

/* k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30851,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30854,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43499,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[266],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(28416),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[243],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28416),t11);
t13=(C_word)C_a_i_cons(&a,2,t10,t12);
t14=(C_word)C_a_i_cons(&a,2,lf[266],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(256),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[685],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t6,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(16384),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[243],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43505,a[2]=((C_word)li583),tmp=(C_word)a,a+=3,tmp);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43580,a[2]=((C_word)li585),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t3,lf[1013],C_fix(34304),t21,t22,t23);}

/* a43579 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43580(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_43580,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43584,a[2]=t1,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43616,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-parsed");
f_29284(t6,t2);}

/* k43614 in a43579 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   emit");
f_29456(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k43582 in a43579 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43584,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_i_car(t1);
t4=(C_word)C_i_cdr(t1);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43600,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li584),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   expand-send");
t6=C_retrieve(lf[858]);
((C_proc5)C_retrieve_proc(t6))(5,t6,((C_word*)t0)[2],t3,t4,t5);}

/* a43599 in k43582 in a43579 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43600(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_43600,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43608,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43612,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-position");
f_29302(t4,((C_word*)t0)[2]);}

/* k43610 in a43599 in k43582 in a43579 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   make-parse-error");
f_29197(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k43606 in a43599 in k43582 in a43579 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a43504 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43505(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43505,4,t0,t1,t2,t3);}
t4=(C_word)C_i_caddr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43512,a[2]=t1,a[3]=t6,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t8=((C_word*)t6)[1];
if(C_truep(t8)){
t9=(C_word)C_i_cadr(((C_word*)t6)[1]);
t10=C_set_block_item(t6,0,t9);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43548,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t12=(C_word)C_i_cdr(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=t11;
f_43548(2,t13,C_SCHEME_FALSE);}
else{
t13=(C_word)C_i_cadr(((C_word*)t6)[1]);
C_trace("ChickenBridge.scm: 84   token-unit-type=?");
f_29327(t11,t13,C_fix(256));}}
else{
t9=C_set_block_item(t6,0,C_SCHEME_END_OF_LIST);
t10=t7;
f_43512(t10,t9);}}

/* k43546 in a43504 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43548,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43552,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 84   append");
t5=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,t3,t4);}
else{
t2=((C_word*)t0)[2];
f_43512(t2,C_SCHEME_UNDEFINED);}}

/* k43550 in k43546 in a43504 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_43512(t3,t2);}

/* k43510 in a43504 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_43512(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_43512,NULL,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43523,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 84   parse-unit-position");
f_29302(t4,t5);}

/* k43521 in k43510 in a43504 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   make-parse-unit");
f_29245(((C_word*)t0)[3],C_fix(34304),((C_word*)t0)[2],t1);}

/* k43497 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(34304),t1);}

/* k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30854,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30857,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43473,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14080),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[243],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43479,a[2]=((C_word)li582),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t3,lf[1012],C_fix(33792),t6,t7,C_SCHEME_FALSE);}

/* a43478 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43479(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43479,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t2));}

/* k43471 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(33792),t1);}

/* k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30857,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30860,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43445,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14592),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[243],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43453,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   simple-unit-parser");
f_29697(t7,C_fix(35072));}

/* k43451 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43453,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43457,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   simple-unit-emitter");
f_29705(t2,lf[722]);}

/* k43455 in k43451 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(((C_word*)t0)[4],lf[1011],C_fix(35072),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k43443 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(35072),t1);}

/* k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30860,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30863,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43417,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(13568),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[243],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43425,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   simple-unit-parser");
f_29697(t7,C_fix(35584));}

/* k43423 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43425,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43429,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   simple-unit-emitter");
f_29705(t2,lf[721]);}

/* k43427 in k43423 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(((C_word*)t0)[4],lf[1010],C_fix(35584),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k43415 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(35584),t1);}

/* k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30863,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30866,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43389,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(17152),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[243],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43397,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   simple-unit-parser");
f_29697(t7,C_fix(35328));}

/* k43395 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43397,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43401,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   simple-unit-emitter");
f_29705(t2,lf[1009]);}

/* k43399 in k43395 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(((C_word*)t0)[4],lf[1008],C_fix(35328),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k43387 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(35328),t1);}

/* k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30866,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30869,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43361,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18432),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[243],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43369,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   simple-unit-parser");
f_29697(t7,C_fix(34816));}

/* k43367 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43369,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43373,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   simple-unit-emitter");
f_29705(t2,lf[1007]);}

/* k43371 in k43367 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(((C_word*)t0)[4],lf[1006],C_fix(34816),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k43359 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(34816),t1);}

/* k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[69],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30869,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30872,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43224,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[243],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[266],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(6144),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[243],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,t12,t13);
t15=(C_word)C_a_i_cons(&a,2,lf[266],t14);
t16=(C_word)C_a_i_cons(&a,2,t15,C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[409],t17);
t19=(C_word)C_a_i_cons(&a,2,t18,C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,t9,t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(15616),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[243],t21);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43230,a[2]=((C_word)li580),tmp=(C_word)a,a+=3,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43260,a[2]=((C_word)li581),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t3,lf[1005],C_fix(36096),t22,t23,t24);}

/* a43259 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43260(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_43260,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,lf[1004]);}

/* a43229 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43230(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43230,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43254,a[2]=t1,a[3]=t4,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 84   remove-token-type");
f_30634(t6,t7,C_fix(256));}

/* k43252 in a43229 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43254,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t2);
C_trace("ChickenBridge.scm: 84   make-parse-unit");
f_29245(((C_word*)t0)[2],C_fix(36096),t3,C_SCHEME_FALSE);}

/* k43222 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43224(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(36096),t1);}

/* k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30872,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30875,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43166,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(19712),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[243],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43174,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   simple-unit-parser");
f_29697(t7,C_fix(31744));}

/* k43172 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43174,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43176,a[2]=((C_word)li579),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(((C_word*)t0)[3],lf[1003],C_fix(31744),((C_word*)t0)[2],t1,t2);}

/* a43175 in k43172 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43176(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_43176,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43180,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-parsed");
f_29284(t5,t2);}

/* k43178 in a43175 in k43172 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43180,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_43183,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43208,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   get-emit-info");
f_29359(t3,lf[983],((C_word*)t0)[3]);}

/* k43206 in k43178 in a43175 in k43172 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43208,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_43183(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43196,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43200,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 84   parse-unit-position");
f_29302(t3,t4);}}

/* k43198 in k43206 in k43178 in a43175 in k43172 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   make-parse-error");
f_29197(((C_word*)t0)[2],lf[1002],t1);}

/* k43194 in k43206 in k43178 in a43175 in k43172 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k43181 in k43178 in a43175 in k43172 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   emit");
f_29456(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k43164 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(31744),t1);}

/* k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30875,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30878,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43105,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18688),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[243],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43113,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   simple-unit-parser");
f_29697(t7,C_fix(31488));}

/* k43111 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43113,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43115,a[2]=((C_word)li578),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(((C_word*)t0)[3],lf[1001],C_fix(31488),((C_word*)t0)[2],t1,t2);}

/* a43114 in k43111 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43115(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_43115,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43119,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-parsed");
f_29284(t5,t2);}

/* k43117 in a43114 in k43111 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43119,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_43122,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43150,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   get-emit-info");
f_29359(t3,lf[973],((C_word*)t0)[3]);}

/* k43148 in k43117 in a43114 in k43111 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43150,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_43122(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43138,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43142,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 84   parse-unit-position");
f_29302(t3,t4);}}

/* k43140 in k43148 in k43117 in a43114 in k43111 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   make-parse-error");
f_29197(((C_word*)t0)[2],lf[1000],t1);}

/* k43136 in k43148 in k43117 in a43114 in k43111 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k43120 in k43117 in a43114 in k43111 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43122,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_43125,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   set-emit-info!");
f_29438(t2,lf[973],lf[972],((C_word*)t0)[3]);}

/* k43123 in k43120 in k43117 in a43114 in k43111 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   emit");
f_29456(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k43103 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(31488),t1);}

/* k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30878,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30881,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43014,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(10756),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[243],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,lf[266],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43020,a[2]=((C_word)li575),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_43055,a[2]=((C_word)li577),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t3,lf[999],C_fix(30208),t10,t11,t12);}

/* a43054 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43055(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_43055,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_43061,a[2]=t4,a[3]=t3,a[4]=((C_word)li576),tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43069,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-parsed");
f_29284(t6,t2);}

/* k43067 in a43054 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a43060 in a43054 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43061(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_43061,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a43019 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43020(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_43020,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 84   make-parse-unit");
f_29245(t1,C_fix(30208),t6,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_43053,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   make-parse-unit");
f_29245(t4,C_fix(4608),lf[998],C_SCHEME_FALSE);}}

/* k43051 in a43019 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_43053,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 84   make-parse-unit");
f_29245(((C_word*)t0)[2],C_fix(30208),t2,C_SCHEME_FALSE);}

/* k43012 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_43014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(30208),t1);}

/* k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30881,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30884,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42912,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[409],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(20480),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[243],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42918,a[2]=((C_word)li572),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42961,a[2]=((C_word)li574),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t3,lf[997],C_fix(29952),t10,t11,t12);}

/* a42960 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42961(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_42961,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42965,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   add-emit-info");
f_29371(t5,lf[996],C_SCHEME_TRUE,t3);}

/* k42963 in a42960 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42965,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42970,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word)li573),tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42978,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-parsed");
f_29284(t3,((C_word*)t0)[2]);}

/* k42976 in k42963 in a42960 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a42969 in k42963 in a42960 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42970(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_42970,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a42917 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42918(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42918,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42951,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 84   remove-token-type");
f_30634(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 84   make-parse-unit");
f_29245(t1,C_fix(29952),t5,C_SCHEME_FALSE);}}

/* k42949 in a42917 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42951,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 84   make-parse-unit");
f_29245(((C_word*)t0)[2],C_fix(29952),t2,C_SCHEME_FALSE);}

/* k42910 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(29952),t1);}

/* k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30884,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30887,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42826,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(27136),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[266],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(12800),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(12544),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(12288),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(12032),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11776),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(11268),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(11012),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(10756),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[266],t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,t15,t16);
t18=(C_word)C_a_i_cons(&a,2,t6,t17);
t19=(C_word)C_a_i_cons(&a,2,lf[243],t18);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42832,a[2]=((C_word)li571),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t3,lf[995],C_fix(30720),t19,t20,C_SCHEME_FALSE);}

/* a42831 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42832(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42832,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 84   make-parse-unit");
f_29245(t1,C_fix(30720),t2,C_SCHEME_FALSE);}

/* k42824 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(30720),t1);}

/* k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30887,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30890,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42546,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30720),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[409],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30720),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16640),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[243],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42552,a[2]=((C_word)li568),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42595,a[2]=((C_word)li570),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t3,lf[994],C_fix(30464),t10,t11,t12);}

/* a42594 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42595(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_42595,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42599,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-parsed");
f_29284(t5,t2);}

/* k42597 in a42594 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42599,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[214]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_42607,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t4,a[6]=t2,a[7]=((C_word)li569),tmp=(C_word)a,a+=8,tmp));
t8=((C_word*)t6)[1];
f_42607(t8,((C_word*)t0)[2],t1);}

/* do5206 in k42597 in a42594 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_42607(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42607,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cddr(((C_word*)t0)[6]);
t4=(C_word)C_i_nullp(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cadr(((C_word*)t0)[6]):((C_word*)t0)[6]));}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_42630,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 84   parse-unit-parsed");
f_29284(t3,t4);}}

/* k42628 in do5206 in k42597 in a42594 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42630,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_42633,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k42631 in k42628 in do5206 in k42597 in a42594 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42633,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_42636,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 84   parse-unit-type");
f_29266(t2,t3);}

/* k42634 in k42631 in k42628 in do5206 in k42597 in a42594 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42636,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_42639,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k42637 in k42634 in k42631 in k42628 in do5206 in k42597 in a42594 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42639,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_42642,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_42699,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t1,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   SalType=?");
f_30590(t5,((C_word*)t0)[2],C_fix(10756));}

/* k42697 in k42637 in k42634 in k42631 in k42628 in do5206 in k42597 in a42594 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42699,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
f_42642(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_42706,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   SalType=?");
f_30590(t2,((C_word*)t0)[2],C_fix(11776));}}

/* k42704 in k42697 in k42637 in k42634 in k42631 in k42628 in do5206 in k42597 in a42594 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42706,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[177],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_42642(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_42716,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   SalType=?");
f_30590(t2,((C_word*)t0)[2],C_fix(12032));}}

/* k42714 in k42704 in k42697 in k42637 in k42634 in k42631 in k42628 in do5206 in k42597 in a42594 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42716,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[409],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_42642(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_42726,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   SalType=?");
f_30590(t2,((C_word*)t0)[2],C_fix(12288));}}

/* k42724 in k42714 in k42704 in k42697 in k42637 in k42634 in k42631 in k42628 in do5206 in k42597 in a42594 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42726,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[269],((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,lf[115],((C_word*)t0)[5],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[3];
f_42642(t5,t4);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_42740,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   SalType=?");
f_30590(t2,((C_word*)t0)[2],C_fix(12544));}}

/* k42738 in k42724 in k42714 in k42704 in k42697 in k42637 in k42634 in k42631 in k42628 in do5206 in k42597 in a42594 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42740,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[960],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_42642(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_42750,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   SalType=?");
f_30590(t2,((C_word*)t0)[2],C_fix(12800));}}

/* k42748 in k42738 in k42724 in k42714 in k42704 in k42697 in k42637 in k42634 in k42631 in k42628 in do5206 in k42597 in a42594 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42750,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[115],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_42642(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_42760,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   SalType=?");
f_30590(t2,((C_word*)t0)[2],C_fix(11012));}}

/* k42758 in k42748 in k42738 in k42724 in k42714 in k42704 in k42697 in k42637 in k42634 in k42631 in k42628 in do5206 in k42597 in a42594 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42760,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[437],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_42642(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_42770,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   SalType=?");
f_30590(t2,((C_word*)t0)[2],C_fix(11268));}}

/* k42768 in k42758 in k42748 in k42738 in k42724 in k42714 in k42704 in k42697 in k42637 in k42634 in k42631 in k42628 in do5206 in k42597 in a42594 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42770,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[371],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_42642(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_42642(t2,C_SCHEME_UNDEFINED);}}

/* k42640 in k42637 in k42634 in k42631 in k42628 in do5206 in k42597 in a42594 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_42642(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42642,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_42645,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42666,a[2]=t2,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t3;
f_42666(t5,(C_word)C_eqp(t4,lf[75]));}
else{
t4=t3;
f_42666(t4,C_SCHEME_FALSE);}}

/* k42664 in k42640 in k42637 in k42634 in k42631 in k42628 in do5206 in k42597 in a42594 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_42666(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42666,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[992],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[993],t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_42645(t7,t6);}
else{
t2=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_42645(t4,t3);}}

/* k42643 in k42640 in k42637 in k42634 in k42631 in k42628 in do5206 in k42597 in a42594 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_42645(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42645,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_42607(t7,((C_word*)t0)[2],t6);}

/* a42551 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42552(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42552,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42585,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 84   remove-token-type");
f_30634(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 84   make-parse-unit");
f_29245(t1,C_fix(30464),t5,C_SCHEME_FALSE);}}

/* k42583 in a42551 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42585,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 84   make-parse-unit");
f_29245(((C_word*)t0)[2],C_fix(30464),t2,C_SCHEME_FALSE);}

/* k42544 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(30464),t1);}

/* k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30890,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30893,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42432,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[685],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,lf[409],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(13328),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[243],t11);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42438,a[2]=((C_word)li566),tmp=(C_word)a,a+=3,tmp);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42464,a[2]=((C_word)li567),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t3,lf[991],C_fix(32000),t12,t13,t14);}

/* a42463 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42464(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_42464,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42468,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-parsed");
f_29284(t5,t2);}

/* k42466 in a42463 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42468,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_42474,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k42472 in k42466 in a42463 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42474,2,t0,t1);}
if(C_truep(((C_word*)t0)[5])){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42494,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t2,((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[214],t1));}}

/* k42492 in k42472 in k42466 in a42463 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42494,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[101],t2));}

/* a42437 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42438(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42438,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_caddr(t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42448,a[2]=t1,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t9=((C_word*)t6)[1];
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)t6)[1]);
t11=C_set_block_item(t6,0,t10);
t12=t8;
f_42448(t12,t11);}
else{
t10=t8;
f_42448(t10,C_SCHEME_FALSE);}}

/* k42446 in a42437 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_42448(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42448,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 84   make-parse-unit");
f_29245(((C_word*)t0)[2],C_fix(32000),t2,C_SCHEME_FALSE);}

/* k42430 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(32000),t1);}

/* k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30893,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30896,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42173,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[685],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(17920),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[685],t7);
t9=(C_word)C_a_i_cons(&a,2,t8,C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(18944),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(14336),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[243],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(19968),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[243],t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(29696),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(19200),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[243],t21);
t23=(C_word)C_a_i_cons(&a,2,t22,C_SCHEME_END_OF_LIST);
t24=(C_word)C_a_i_cons(&a,2,t18,t23);
t25=(C_word)C_a_i_cons(&a,2,t14,t24);
t26=(C_word)C_a_i_cons(&a,2,lf[266],t25);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42179,a[2]=((C_word)li564),tmp=(C_word)a,a+=3,tmp);
t28=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42247,a[2]=((C_word)li565),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t3,lf[990],C_fix(32256),t26,t27,t28);}

/* a42246 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42247(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_42247,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42251,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-parsed");
f_29284(t5,t2);}

/* k42249 in a42246 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42251,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_42257,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 84   token-unit-type=?");
f_29327(t2,t3,C_fix(14336));}

/* k42255 in k42249 in a42246 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42257,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   emit");
f_29456(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_42266,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 84   token-unit-type=?");
f_29327(t2,t3,C_fix(19968));}}

/* k42264 in k42255 in k42249 in a42246 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42266,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_42273,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_42304,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k42302 in k42264 in k42255 in k42249 in a42246 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42304,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[209],t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42296,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k42294 in k42302 in k42264 in k42255 in k42249 in a42246 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42296,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[117],((C_word*)t0)[2],t1));}

/* k42271 in k42264 in k42255 in k42249 in a42246 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42273,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42277,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k42275 in k42271 in k42264 in k42255 in k42249 in a42246 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42277,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[117],((C_word*)t0)[2],t1));}

/* a42178 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42179(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42179,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42192,a[2]=t7,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_42198,a[2]=t8,a[3]=t7,a[4]=t5,a[5]=t4,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   token-unit-type=?");
f_29327(t9,t4,C_fix(14336));}

/* k42196 in a42178 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42198,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_42204,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t6,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t4,tmp=(C_word)a,a+=10,tmp);
t10=((C_word*)t4)[1];
if(C_truep(t10)){
t11=(C_word)C_i_car(((C_word*)t4)[1]);
t12=C_set_block_item(t6,0,t11);
t13=t9;
f_42204(t13,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42233,a[2]=t9,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   make-parse-unit");
f_29245(t11,C_fix(4608),lf[989],C_SCHEME_FALSE);}}
else{
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_42192(t5,t4);}}

/* k42231 in k42196 in a42178 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_42204(t3,t2);}

/* k42202 in k42196 in a42178 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_42204(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42204,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_42208,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 84   fifth");
t3=C_retrieve(lf[68]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k42206 in k42202 in k42196 in a42178 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42208,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_42211,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t4)){
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=t3;
f_42211(t7,t6);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42222,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   make-parse-unit");
f_29245(t5,C_fix(4608),lf[988],C_SCHEME_FALSE);}}

/* k42220 in k42206 in k42202 in k42196 in a42178 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42222(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_42211(t3,t2);}

/* k42209 in k42206 in k42202 in k42196 in a42178 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_42211(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42211,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_42192(t4,t3);}

/* k42190 in a42178 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_42192(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   make-parse-unit");
f_29245(((C_word*)t0)[3],C_fix(32256),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k42171 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_42173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(32256),t1);}

/* k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[174],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30896,2,t0,t1);}
t2=C_mutate(&lf[691],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30898,a[2]=((C_word)li467),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31419,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41901,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(23296),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[243],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(18944),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[685],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(10756),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(25088),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(22272),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[243],t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,C_fix(22784),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(25088),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(22272),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[243],t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t23=(C_word)C_a_i_cons(&a,2,C_fix(20992),t22);
t24=(C_word)C_a_i_cons(&a,2,C_fix(23552),t23);
t25=(C_word)C_a_i_cons(&a,2,C_fix(21248),t24);
t26=(C_word)C_a_i_cons(&a,2,lf[266],t25);
t27=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t28=(C_word)C_a_i_cons(&a,2,t26,t27);
t29=(C_word)C_a_i_cons(&a,2,lf[685],t28);
t30=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t31=(C_word)C_a_i_cons(&a,2,C_fix(21504),t30);
t32=(C_word)C_a_i_cons(&a,2,lf[685],t31);
t33=(C_word)C_a_i_cons(&a,2,t32,C_SCHEME_END_OF_LIST);
t34=(C_word)C_a_i_cons(&a,2,t29,t33);
t35=(C_word)C_a_i_cons(&a,2,C_fix(29696),t34);
t36=(C_word)C_a_i_cons(&a,2,C_fix(22528),t35);
t37=(C_word)C_a_i_cons(&a,2,C_fix(25088),t36);
t38=(C_word)C_a_i_cons(&a,2,C_fix(22272),t37);
t39=(C_word)C_a_i_cons(&a,2,lf[243],t38);
t40=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t41=(C_word)C_a_i_cons(&a,2,C_fix(20992),t40);
t42=(C_word)C_a_i_cons(&a,2,C_fix(23552),t41);
t43=(C_word)C_a_i_cons(&a,2,C_fix(21248),t42);
t44=(C_word)C_a_i_cons(&a,2,lf[266],t43);
t45=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t46=(C_word)C_a_i_cons(&a,2,C_fix(21504),t45);
t47=(C_word)C_a_i_cons(&a,2,lf[685],t46);
t48=(C_word)C_a_i_cons(&a,2,t47,C_SCHEME_END_OF_LIST);
t49=(C_word)C_a_i_cons(&a,2,C_fix(29696),t48);
t50=(C_word)C_a_i_cons(&a,2,t44,t49);
t51=(C_word)C_a_i_cons(&a,2,C_fix(25088),t50);
t52=(C_word)C_a_i_cons(&a,2,C_fix(22272),t51);
t53=(C_word)C_a_i_cons(&a,2,lf[243],t52);
t54=(C_word)C_a_i_cons(&a,2,t53,C_SCHEME_END_OF_LIST);
t55=(C_word)C_a_i_cons(&a,2,t39,t54);
t56=(C_word)C_a_i_cons(&a,2,t21,t55);
t57=(C_word)C_a_i_cons(&a,2,t16,t56);
t58=(C_word)C_a_i_cons(&a,2,t7,t57);
t59=(C_word)C_a_i_cons(&a,2,lf[266],t58);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t4,lf[987],C_fix(33024),t59,C_retrieve2(lf[691],"sal-parse-stepping"),C_SCHEME_FALSE);}

/* k41899 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(33024),t1);}

/* k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31419,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31422,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41845,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(20224),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[243],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(19456),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[243],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t6,t10);
t12=(C_word)C_a_i_cons(&a,2,lf[266],t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41853,a[2]=t12,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   simple-unit-parser");
f_29697(t13,C_fix(33280));}

/* k41851 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(((C_word*)t0)[3],lf[986],C_fix(33280),((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* k41843 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(33280),t1);}

/* k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[78],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31422,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31953,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41673,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(16144),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14864),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[266],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,lf[685],t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(33024),C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,lf[409],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(33280),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,lf[409],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,lf[177],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(22016),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[685],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,t14,t19);
t21=(C_word)C_a_i_cons(&a,2,t12,t20);
t22=(C_word)C_a_i_cons(&a,2,t10,t21);
t23=(C_word)C_a_i_cons(&a,2,t8,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[243],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41679,a[2]=((C_word)li558),tmp=(C_word)a,a+=3,tmp);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41725,a[2]=((C_word)li563),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t3,lf[985],C_fix(32512),t25,t26,t27);}

/* a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41725(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_41725,5,t0,t1,t2,t3,t4);}
t5=t3;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31428,a[2]=t4,a[3]=t6,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-parsed");
f_29284(t7,t2);}

/* k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31428,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_END_OF_LIST;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_END_OF_LIST;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_END_OF_LIST;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_END_OF_LIST;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31452,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t17,a[5]=t19,a[6]=t9,a[7]=t11,a[8]=t7,a[9]=t15,a[10]=t13,a[11]=((C_word*)t0)[4],a[12]=t5,a[13]=t3,tmp=(C_word)a,a+=14,tmp);
t21=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31912,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t20,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
t22=(C_word)C_i_car(((C_word*)t3)[1]);
C_trace("ChickenBridge.scm: 84   token-unit-type=?");
f_29327(t21,t22,C_fix(14864));}

/* k31910 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31912,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31916,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   add-emit-info");
f_29371(t2,lf[982],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31919,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31946,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   get-emit-info");
f_29359(t3,lf[975],((C_word*)((C_word*)t0)[6])[1]);}}

/* k31944 in k31910 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31946,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_31919(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31934,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31938,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 84   parse-unit-position");
f_29302(t3,t4);}}

/* k31936 in k31944 in k31910 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   make-parse-error");
f_29197(((C_word*)t0)[2],lf[984],t1);}

/* k31932 in k31944 in k31910 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k31917 in k31910 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31919,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31923,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   add-emit-info");
f_29371(t2,lf[983],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[4])[1]);}

/* k31921 in k31917 in k31910 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[2];
f_31452(t4,t3);}

/* k31914 in k31910 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31452(t3,t2);}

/* k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_31452(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31452,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31459,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[13])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31901,a[2]=t4,a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31905,a[2]=((C_word*)t0)[8],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[13])[1]);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t6,t7,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}
else{
t5=t4;
f_31459(t5,C_SCHEME_UNDEFINED);}}

/* k31903 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   append");
t2=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k31899 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31459(t3,t2);}

/* k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_31459(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31459,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31462,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[2])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31776,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[9],a[6]=t5,a[7]=((C_word)li562),tmp=(C_word)a,a+=8,tmp));
t7=((C_word*)t5)[1];
f_31776(t7,t2,t3);}

/* do5318 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_31776(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31776,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31786,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31797,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 84   parse-unit-parsed");
f_29284(t4,t5);}}

/* k31795 in do5318 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31797,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31799,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word)li561),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_31799(t5,((C_word*)t0)[2],t1);}

/* do5321 in k31795 in do5318 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_31799(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31799,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_31813,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=((C_word*)t0)[4],a[6]=t1,a[7]=((C_word*)t0)[5],a[8]=t2,a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cadr(t3);
t7=(C_word)C_a_i_list(&a,2,t5,t6);
t8=(C_word)C_a_i_list(&a,1,t7);
C_trace("ChickenBridge.scm: 84   append");
t9=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,((C_word*)((C_word*)t0)[6])[1],t8);}}

/* k31811 in do5321 in k31795 in do5318 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31813,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31816,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_caddr(((C_word*)t0)[4]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31866,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_caddr(((C_word*)t0)[4]);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 84   append");
t7=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t4,((C_word*)((C_word*)t0)[2])[1],t6);}
else{
t4=t3;
f_31816(t4,C_SCHEME_UNDEFINED);}}

/* k31864 in k31811 in do5321 in k31795 in do5318 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31816(t3,t2);}

/* k31814 in k31811 in do5321 in k31795 in do5318 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_31816(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31816,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31819,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_cadddr(((C_word*)t0)[3]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31851,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 84   append");
t6=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,((C_word*)((C_word*)t0)[2])[1],t5);}
else{
t3=t2;
f_31819(t3,C_SCHEME_UNDEFINED);}}

/* k31849 in k31814 in k31811 in do5321 in k31795 in do5318 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31819(t3,t2);}

/* k31817 in k31814 in k31811 in do5321 in k31795 in do5318 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_31819(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31819,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31822,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31832,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   fifth");
t4=C_retrieve(lf[68]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k31830 in k31817 in k31814 in k31811 in do5321 in k31795 in do5318 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31832,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31836,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31844,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   fifth");
t4=C_retrieve(lf[68]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_31822(t2,C_SCHEME_UNDEFINED);}}

/* k31842 in k31830 in k31817 in k31814 in k31811 in do5321 in k31795 in do5318 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31844,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 84   append");
t3=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k31834 in k31830 in k31817 in k31814 in k31811 in do5321 in k31795 in do5318 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31822(t3,t2);}

/* k31820 in k31817 in k31814 in k31811 in do5321 in k31795 in do5318 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_31822(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_31799(t3,((C_word*)t0)[2],t2);}

/* k31784 in do5318 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_31776(t3,((C_word*)t0)[2],t2);}

/* k31460 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31462,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31465,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=(C_word)C_i_cadddr(((C_word*)((C_word*)t0)[2])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31740,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word)li560),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_31740(t7,t2,t3);}

/* do5332 in k31460 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_31740(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31740,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31751,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31766,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t4,t5,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k31764 in do5332 in k31460 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31766,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 84   append");
t3=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k31749 in do5332 in k31460 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_31740(t4,((C_word*)t0)[2],t3);}

/* k31463 in k31460 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31465,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31468,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_pairp(t3))){
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_truep(((C_word*)((C_word*)t0)[13])[1])?C_retrieve2(lf[891],"*process-stop*"):lf[981]);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31648,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=t6,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
t8=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31680,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t10,a[5]=t5,a[6]=((C_word)li559),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_31680(t12,t7,t8);}
else{
t4=t2;
f_31468(t4,C_SCHEME_UNDEFINED);}}

/* do5339 in k31463 in k31460 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_31680(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31680,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31690,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 84   parse-unit-parsed");
f_29284(t3,t4);}}

/* k31688 in do5339 in k31463 in k31460 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31690,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31693,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t2,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k31691 in k31688 in do5339 in k31463 in k31460 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31693,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31696,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31714,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 84   token-unit-type=?");
f_29327(t5,t6,C_fix(20224));}

/* k31712 in k31691 in k31688 in do5339 in k31463 in k31460 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31714,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[209],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_31696(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_31696(t2,C_SCHEME_UNDEFINED);}}

/* k31694 in k31691 in k31688 in do5339 in k31463 in k31460 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_31696(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31696,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31700,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 84   append");
t4=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[6])[1],t3);}

/* k31698 in k31694 in k31691 in k31688 in do5339 in k31463 in k31460 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_31680(t4,((C_word*)t0)[2],t3);}

/* k31646 in k31463 in k31460 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31648,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31651,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t2;
f_31651(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[266],((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t2;
f_31651(t6,t5);}}

/* k31649 in k31646 in k31463 in k31460 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_31651(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31651,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[117],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31468(t5,t4);}

/* k31466 in k31463 in k31460 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_31468(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31468,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31471,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[11])[1]))){
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_31471(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[266],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_31471(t6,t5);}}
else{
t3=C_set_block_item(((C_word*)t0)[11],0,C_SCHEME_FALSE);
t4=t2;
f_31471(t4,t3);}}

/* k31469 in k31466 in k31463 in k31460 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_31471(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31471,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_31474,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31605,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   fifth");
t4=C_retrieve(lf[68]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k31603 in k31469 in k31466 in k31463 in k31460 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31605,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31609,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31613,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   fifth");
t4=C_retrieve(lf[68]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[5];
f_31474(t3,t2);}}

/* k31611 in k31603 in k31469 in k31466 in k31463 in k31460 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   emit");
f_29456(((C_word*)t0)[4],t1,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k31607 in k31603 in k31469 in k31466 in k31463 in k31460 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31474(t3,t2);}

/* k31472 in k31469 in k31466 in k31463 in k31460 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_31474(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31474,NULL,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31575,a[2]=((C_word*)t0)[9],tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31591,a[2]=((C_word*)t0)[5],a[3]=t4,a[4]=((C_word*)t0)[6],a[5]=t3,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   append");
t6=*((C_word*)lf[115]+1);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[7])[1]);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31509,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[9],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31513,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   ##sys#append");
t6=*((C_word*)lf[105]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t5,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(C_word)C_a_i_list(&a,1,lf[979]);
t4=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31560,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t3,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31564,a[2]=((C_word*)t0)[4],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31568,a[2]=((C_word*)t0)[3],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   ##sys#append");
t8=*((C_word*)lf[105]+1);
((C_proc4)(void*)(*((C_word*)t8+1)))(4,t8,t7,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[5])[1]);}}}

/* k31566 in k31472 in k31469 in k31466 in k31463 in k31460 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   ##sys#append");
t2=*((C_word*)lf[105]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k31562 in k31472 in k31469 in k31466 in k31463 in k31460 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   ##sys#append");
t2=*((C_word*)lf[105]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k31558 in k31472 in k31469 in k31466 in k31463 in k31460 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31560,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[6],t1);
t3=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t2);
t4=(C_word)C_a_i_cons(&a,2,lf[320],t3);
t5=(C_word)C_a_i_list(&a,3,lf[902],((C_word*)t0)[5],t4);
t6=(C_word)C_a_i_list(&a,2,lf[794],t5);
t7=(C_word)C_a_i_list(&a,1,lf[980]);
t8=(C_word)C_a_i_list(&a,5,lf[101],((C_word*)((C_word*)t0)[4])[1],t6,((C_word*)((C_word*)t0)[3])[1],t7);
t9=(C_word)C_a_i_list(&a,3,lf[902],C_SCHEME_END_OF_LIST,t8);
t10=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,(C_word)C_a_i_list(&a,1,t9));}

/* k31511 in k31472 in k31469 in k31466 in k31463 in k31460 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   ##sys#append");
t2=*((C_word*)lf[105]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k31507 in k31472 in k31469 in k31466 in k31463 in k31460 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31509,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t2);
t4=(C_word)C_a_i_cons(&a,2,lf[320],t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_list(&a,3,lf[101],((C_word*)((C_word*)t0)[2])[1],t4));}

/* k31589 in k31472 in k31469 in k31466 in k31463 in k31460 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31591,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[6])[1];
t3=(C_truep(t2)?t2:C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 84   make-loop-clause");
f_9360(((C_word*)t0)[5],(C_word)C_a_i_list(&a,18,lf[136],lf[914],lf[137],((C_word*)((C_word*)t0)[4])[1],lf[138],C_SCHEME_END_OF_LIST,lf[139],C_SCHEME_END_OF_LIST,lf[140],((C_word*)t0)[3],lf[141],t1,lf[142],((C_word*)((C_word*)t0)[2])[1],lf[143],t3,lf[144],C_SCHEME_END_OF_LIST));}

/* k31573 in k31472 in k31469 in k31466 in k31463 in k31460 in k31457 in k31450 in k31426 in a41724 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   expand-process");
f_39931(((C_word*)t0)[2],t1);}

/* a41678 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41679(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41679,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(C_word)C_i_cadddr(t2);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_41695,a[2]=t2,a[3]=t1,a[4]=t9,a[5]=t8,a[6]=t7,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 84   fifth");
t11=C_retrieve(lf[68]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k41693 in a41678 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41695,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_41698,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 84   sixth");
t3=C_retrieve(lf[69]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k41696 in k41693 in a41678 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41698,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_41701,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t4;
f_41701(t7,t6);}
else{
t5=t4;
f_41701(t5,C_SCHEME_UNDEFINED);}}

/* k41699 in k41696 in k41693 in a41678 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_41701(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41701,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_41704,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=t2;
f_41704(t5,t4);}
else{
t3=t2;
f_41704(t3,C_SCHEME_UNDEFINED);}}

/* k41702 in k41699 in k41696 in k41693 in a41678 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_41704(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41704,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41715,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-position");
f_29302(t3,((C_word*)t0)[8]);}

/* k41713 in k41702 in k41699 in k41696 in k41693 in a41678 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   make-parse-unit");
f_29245(((C_word*)t0)[3],C_fix(32512),((C_word*)t0)[2],t1);}

/* k41671 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(32512),t1);}

/* k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31953,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31956,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41528,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[243],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[409],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t9,t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(25088),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[243],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t6,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[266],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(25088),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[243],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41534,a[2]=((C_word)li557),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t3,lf[978],C_fix(37632),t21,t22,C_SCHEME_FALSE);}

/* a41533 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41534(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41534,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41547,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t10=(C_word)C_i_length(((C_word*)t7)[1]);
if(C_truep((C_word)C_i_nequalp(t10,C_fix(2)))){
t11=C_set_block_item(t7,0,C_SCHEME_END_OF_LIST);
t12=t9;
f_41547(t12,t11);}
else{
t11=(C_word)C_i_cadr(((C_word*)t7)[1]);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41573,a[2]=t9,a[3]=t7,a[4]=t11,tmp=(C_word)a,a+=5,tmp);
t13=(C_word)C_i_caddr(((C_word*)t7)[1]);
C_trace("ChickenBridge.scm: 84   remove-token-type");
f_30634(t12,t13,C_fix(256));}}

/* k41571 in a41533 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41573,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_41547(t4,t3);}

/* k41545 in a41533 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_41547(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41547,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 84   make-parse-unit");
f_29245(((C_word*)t0)[2],C_fix(37632),t2,C_SCHEME_FALSE);}

/* k41526 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(37632),t1);}

/* k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31956,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31959,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41071,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[409],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(24576),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[243],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(24064),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[243],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(24320),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[243],t15);
t17=(C_word)C_a_i_cons(&a,2,t16,C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,t13,t17);
t19=(C_word)C_a_i_cons(&a,2,t10,t18);
t20=(C_word)C_a_i_cons(&a,2,lf[266],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,C_fix(13824),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[243],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41077,a[2]=((C_word)li553),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41116,a[2]=((C_word)li556),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t3,lf[977],C_fix(36352),t23,t24,t25);}

/* a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41116(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_41116,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41120,a[2]=t4,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-parsed");
f_29284(t6,t2);}

/* k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41120,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,lf[214]);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41129,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_41132,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=t5,a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 84   token-unit-type=?");
f_29327(t7,t2,C_fix(24576));}

/* k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41132,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41141,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=t4,a[5]=((C_word*)t0)[7],a[6]=((C_word)li554),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_41141(t6,((C_word*)t0)[4],t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41190,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 84   parse-unit-parsed");
f_29284(t2,t3);}}

/* k41188 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41190,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_41193,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k41191 in k41188 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41193,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_41196,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k41194 in k41191 in k41188 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41196,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_41408,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 84   append");
t3=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,C_SCHEME_END_OF_LIST);}

/* k41406 in k41194 in k41191 in k41188 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41408,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[9],t1);
t3=(C_word)C_i_caddr(((C_word*)t0)[8]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_41205,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[7],a[11]=t7,a[12]=t5,tmp=(C_word)a,a+=13,tmp);
t9=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t9))){
t10=t8;
f_41205(t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_length(t2);
t11=(C_word)C_a_i_minus(&a,2,t10,C_fix(2));
t12=(C_word)C_i_list_tail(t2,t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41346,a[2]=t12,a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_cadr(t12);
C_trace("ChickenBridge.scm: 84   symbol->string");
t15=*((C_word*)lf[121]+1);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}}

/* k41344 in k41406 in k41194 in k41191 in k41188 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41346,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41355,a[2]=t1,a[3]=t2,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_greaterp(t2,C_fix(3)))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41380,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(3));
C_trace("ChickenBridge.scm: 84   substring");
t6=*((C_word*)lf[436]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t1,t5);}
else{
t4=t3;
f_41355(t4,C_SCHEME_FALSE);}}

/* k41378 in k41344 in k41406 in k41194 in k41191 in k41188 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_41355(t2,(C_word)C_i_string_equal_p(t1,lf[976]));}

/* k41353 in k41344 in k41406 in k41194 in k41191 in k41188 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_41355(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41355,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41362,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41366,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(3));
C_trace("ChickenBridge.scm: 84   substring");
t5=*((C_word*)lf[436]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t3,((C_word*)t0)[2],C_fix(0),t4);}
else{
t2=((C_word*)t0)[5];
f_41205(t2,C_SCHEME_UNDEFINED);}}

/* k41364 in k41353 in k41344 in k41406 in k41194 in k41191 in k41188 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   string->symbol");
t2=*((C_word*)lf[550]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k41360 in k41353 in k41344 in k41406 in k41194 in k41191 in k41188 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_41205(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k41203 in k41406 in k41194 in k41191 in k41188 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_41205(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41205,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_41208,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_41283,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 84   token-unit-type=?");
f_29327(t3,((C_word*)t0)[2],C_fix(24064));}

/* k41281 in k41203 in k41406 in k41194 in k41191 in k41188 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41283,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_41287,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 84   add-emit-info");
f_29371(t2,lf[973],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[9])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_41324,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 84   token-unit-type=?");
f_29327(t2,((C_word*)t0)[2],C_fix(24320));}}

/* k41322 in k41281 in k41203 in k41406 in k41194 in k41191 in k41188 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41324,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_41328,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 84   add-emit-info");
f_29371(t2,lf[975],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[8])[1]);}
else{
t2=((C_word*)t0)[4];
f_41208(t2,C_SCHEME_UNDEFINED);}}

/* k41326 in k41322 in k41281 in k41203 in k41406 in k41194 in k41191 in k41188 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41328,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41332,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k41330 in k41326 in k41322 in k41281 in k41203 in k41406 in k41194 in k41191 in k41188 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41332,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[932],((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[974]);
t6=((C_word*)t0)[2];
f_41208(t6,t5);}

/* k41285 in k41281 in k41203 in k41406 in k41194 in k41191 in k41188 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41287,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41291,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k41289 in k41285 in k41281 in k41203 in k41406 in k41194 in k41191 in k41188 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41291,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41294,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41318,a[2]=t3,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   get-emit-info");
f_29359(t4,lf[973],((C_word*)((C_word*)t0)[2])[1]);}

/* k41316 in k41289 in k41285 in k41281 in k41203 in k41406 in k41194 in k41191 in k41188 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41318,2,t0,t1);}
t2=(C_word)C_eqp(lf[972],t1);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,1,lf[291]);
t4=(C_word)C_a_i_list(&a,3,lf[902],t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[794],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_41294(t7,t6);}
else{
t3=((C_word*)t0)[2];
f_41294(t3,C_SCHEME_UNDEFINED);}}

/* k41292 in k41289 in k41285 in k41281 in k41203 in k41406 in k41194 in k41191 in k41188 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_41294(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41294,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[932],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[971]);
t5=((C_word*)t0)[2];
f_41208(t5,t4);}

/* k41206 in k41203 in k41406 in k41194 in k41191 in k41188 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_41208(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41208,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41211,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41222,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41280,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   symbol->string");
t5=*((C_word*)lf[121]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[2]);}

/* k41278 in k41206 in k41203 in k41406 in k41194 in k41191 in k41188 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   string-append");
t2=*((C_word*)lf[439]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1,lf[970]);}

/* k41220 in k41206 in k41203 in k41406 in k41194 in k41191 in k41188 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41222(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41222,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41224,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li555),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_41224(t5,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* do5419 in k41220 in k41206 in k41203 in k41406 in k41194 in k41191 in k41188 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_41224(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41224,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41239,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   string-append");
t6=*((C_word*)lf[439]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],lf[968]);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41243,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41272,a[2]=t4,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 84   symbol->string");
t8=*((C_word*)lf[121]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k41270 in do5419 in k41220 in k41206 in k41203 in k41406 in k41194 in k41191 in k41188 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   string-append");
t2=*((C_word*)lf[439]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k41241 in do5419 in k41220 in k41206 in k41203 in k41406 in k41194 in k41191 in k41188 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41243,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41246,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_41246(t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41260,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   string-append");
t6=*((C_word*)lf[439]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)((C_word*)t0)[5])[1],lf[969]);}}

/* k41258 in k41241 in do5419 in k41220 in k41206 in k41203 in k41406 in k41194 in k41191 in k41188 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_41246(t3,t2);}

/* k41244 in k41241 in do5419 in k41220 in k41206 in k41203 in k41406 in k41194 in k41191 in k41188 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_41246(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_41224(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k41237 in do5419 in k41220 in k41206 in k41203 in k41406 in k41194 in k41191 in k41188 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41239,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[58],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k41209 in k41206 in k41203 in k41406 in k41194 in k41191 in k41188 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41211,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[3];
f_41129(2,t3,(C_word)C_i_set_cdr(((C_word*)t0)[2],t2));}

/* do5393 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_41141(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41141,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41151,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t3,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k41149 in do5393 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41151,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_41157,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 84   format");
t4=C_retrieve(lf[429]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,C_SCHEME_FALSE,lf[967],t2);}

/* k41155 in k41149 in do5393 in k41130 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41157,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[932],((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,3,lf[712],t1,((C_word*)t0)[6]);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t4);
t6=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[5])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[5])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)t0)[4]);
t9=((C_word*)((C_word*)t0)[3])[1];
f_41141(t9,((C_word*)t0)[2],t8);}

/* k41127 in k41118 in a41115 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* a41076 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41077(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41077,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cadr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41088,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41094,a[2]=t8,a[3]=t7,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   token-unit-type=?");
f_29327(t9,t7,C_fix(24576));}

/* k41092 in a41076 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41094,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41110,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 84   remove-token-type");
f_30634(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_41088(t2,C_SCHEME_UNDEFINED);}}

/* k41108 in k41092 in a41076 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41110,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_41088(t5,t4);}

/* k41086 in a41076 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_41088(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   make-parse-unit");
f_29245(((C_word*)t0)[3],C_fix(36352),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k41069 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_41071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(36352),t1);}

/* k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31959,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31962,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40995,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(33792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(35584),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(35072),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(36096),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(34816),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(35328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(31488),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(31744),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(32512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(32256),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(30464),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(34304),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(34560),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(33536),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(32000),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36352),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[266],t19);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t3,lf[966],C_fix(36608),t20,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k40993 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(36608),t1);}

/* k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31962,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31965,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40951,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[177],t4);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40957,a[2]=((C_word)li551),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40971,a[2]=((C_word)li552),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   make-rule");
f_28953(t3,lf[965],C_fix(36864),t5,t6,t7);}

/* a40970 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40971(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_40971,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40979,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40983,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-parsed");
f_29284(t6,t2);}

/* k40981 in a40970 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   emit");
f_29456(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k40977 in a40970 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40979,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[214],t1));}

/* a40956 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40957(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40957,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40965,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 84   parse-unit-position");
f_29302(t4,t5);}

/* k40963 in a40956 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   make-parse-unit");
f_29245(((C_word*)t0)[3],C_fix(36864),((C_word*)t0)[2],t1);}

/* k40949 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[645],"*rules*"),C_fix(36864),t1);}

/* k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word ab[111],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31965,2,t0,t1);}
t2=C_mutate((C_word*)lf[699]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31967,a[2]=((C_word)li473),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[708],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32451,a[2]=((C_word)li474),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[712]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32610,a[2]=((C_word)li478),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[721]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32763,a[2]=((C_word)li479),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[722]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32772,a[2]=((C_word)li480),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[731]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32821,a[2]=((C_word)li481),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[733]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32845,a[2]=((C_word)li482),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[734],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32873,a[2]=((C_word)li483),tmp=(C_word)a,a+=3,tmp));
t10=C_set_block_item(lf[746],0,C_fix(8));
t11=C_set_block_item(lf[747],0,C_fix(9));
t12=C_set_block_item(lf[748],0,C_fix(10));
t13=C_set_block_item(lf[749],0,C_fix(11));
t14=C_set_block_item(lf[750],0,C_fix(12));
t15=C_set_block_item(lf[751],0,C_fix(13));
t16=C_set_block_item(lf[752],0,C_fix(14));
t17=C_mutate((C_word*)lf[753]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32944,a[2]=((C_word)li484),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[755],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33191,a[2]=((C_word)li485),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[754],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33246,a[2]=((C_word)li486),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[736],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33399,a[2]=((C_word)li487),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[760]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33405,a[2]=((C_word)li488),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[768]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34460,a[2]=((C_word)li489),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[769]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34889,a[2]=((C_word)li490),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[771]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35596,a[2]=((C_word)li491),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[773]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36303,a[2]=((C_word)li492),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[775]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37010,a[2]=((C_word)li493),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[776]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37439,a[2]=((C_word)li494),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[777]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37868,a[2]=((C_word)li495),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[778]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38297,a[2]=((C_word)li496),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[780]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38327,a[2]=((C_word)li497),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[781]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38333,a[2]=((C_word)li498),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[782]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38339,a[2]=((C_word)li499),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[783]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38345,a[2]=((C_word)li500),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[784]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38351,a[2]=((C_word)li501),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[785]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38357,a[2]=((C_word)li502),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[787]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38372,a[2]=((C_word)li507),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[795]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38391,a[2]=((C_word)li509),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[798]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38496,a[2]=((C_word)li511),tmp=(C_word)a,a+=3,tmp));
t39=lf[801]=C_SCHEME_FALSE;;
t40=C_mutate(&lf[740],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38672,a[2]=((C_word)li512),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[742]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38785,a[2]=((C_word)li514),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate(&lf[843],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38957,a[2]=((C_word)li516),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate((C_word*)lf[854]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39150,a[2]=((C_word)li517),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate((C_word*)lf[855]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39156,a[2]=((C_word)li518),tmp=(C_word)a,a+=3,tmp));
t45=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39196,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t46=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40943,a[2]=((C_word)li550),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   ##sys#register-macro");
t47=C_retrieve(lf[934]);
((C_proc4)C_retrieve_proc(t47))(4,t47,t45,lf[964],t46);}

/* a40942 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40943(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_40943r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_40943r(t0,t1,t2,t3);}}

static void C_ccall f_40943r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_trace("ChickenBridge.scm: 85   expand-send");
t4=C_retrieve(lf[858]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t2,t3);}

/* k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39196,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39200,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   make-equal-hash-table");
t3=C_retrieve(lf[15]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39200,2,t0,t1);}
t2=C_mutate(&lf[857],t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39203,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40914,a[2]=((C_word)li549),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   ##sys#register-macro");
t5=C_retrieve(lf[934]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[963],t4);}

/* a40913 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40914(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40914,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40918,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 85   gensym");
t5=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[962]);}

/* k40916 in a40913 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40918,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,t1,((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[959],t1);
t5=(C_word)C_a_i_list(&a,3,lf[960],t4,t1);
t6=(C_word)C_a_i_list(&a,4,lf[20],lf[961],((C_word*)t0)[3],t5);
t7=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,3,lf[100],t3,t6));}

/* k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39203,2,t0,t1);}
t2=C_mutate((C_word*)lf[858]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39205,a[2]=((C_word)li519),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[860],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39279,a[2]=((C_word)li527),tmp=(C_word)a,a+=3,tmp));
t4=lf[873];
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39753,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40912,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   make-message-parser");
f_39279(t6,t4);}

/* k40910 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40912,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[857],"*messages*"),lf[958],t2);}

/* k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39753,2,t0,t1);}
t2=lf[874];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39756,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40904,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   make-message-parser");
f_39279(t4,t2);}

/* k40902 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40904,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[857],"*messages*"),lf[957],t2);}

/* k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39756,2,t0,t1);}
t2=lf[875];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39759,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40896,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   make-message-parser");
f_39279(t4,t2);}

/* k40894 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40896,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[857],"*messages*"),lf[956],t2);}

/* k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39759,2,t0,t1);}
t2=lf[876];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39762,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40888,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   make-message-parser");
f_39279(t4,t2);}

/* k40886 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40888,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[857],"*messages*"),lf[955],t2);}

/* k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39762,2,t0,t1);}
t2=lf[877];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39765,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40880,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   make-message-parser");
f_39279(t4,t2);}

/* k40878 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40880,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[857],"*messages*"),lf[954],t2);}

/* k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39765,2,t0,t1);}
t2=lf[878];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39768,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40872,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   make-message-parser");
f_39279(t4,t2);}

/* k40870 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40872,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[857],"*messages*"),lf[953],t2);}

/* k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39768,2,t0,t1);}
t2=lf[879];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39771,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40864,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   make-message-parser");
f_39279(t4,t2);}

/* k40862 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40864,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[857],"*messages*"),lf[952],t2);}

/* k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39771,2,t0,t1);}
t2=lf[880];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39774,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40856,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   make-message-parser");
f_39279(t4,t2);}

/* k40854 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40856,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[857],"*messages*"),lf[951],t2);}

/* k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39774,2,t0,t1);}
t2=lf[881];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39777,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40848,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   make-message-parser");
f_39279(t4,t2);}

/* k40846 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40848,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[857],"*messages*"),lf[950],t2);}

/* k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39777,2,t0,t1);}
t2=lf[882];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39780,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40840,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   make-message-parser");
f_39279(t4,t2);}

/* k40838 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40840,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[857],"*messages*"),lf[949],t2);}

/* k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39780,2,t0,t1);}
t2=lf[883];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39783,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40832,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   make-message-parser");
f_39279(t4,t2);}

/* k40830 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40832,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[857],"*messages*"),lf[948],t2);}

/* k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39783,2,t0,t1);}
t2=lf[884];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39786,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40824,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   make-message-parser");
f_39279(t4,t2);}

/* k40822 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40824,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[857],"*messages*"),lf[947],t2);}

/* k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39786,2,t0,t1);}
t2=lf[885];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39789,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40816,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   make-message-parser");
f_39279(t4,t2);}

/* k40814 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40816,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[857],"*messages*"),lf[946],t2);}

/* k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39789,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39792,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40808,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   make-message-parser");
f_39279(t4,t2);}

/* k40806 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40808,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[857],"*messages*"),lf[945],t2);}

/* k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39792,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39795,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40800,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   make-message-parser");
f_39279(t4,t2);}

/* k40798 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40800,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[857],"*messages*"),lf[944],t2);}

/* k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39795,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39798,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40792,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   make-message-parser");
f_39279(t4,t2);}

/* k40790 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40792,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[857],"*messages*"),lf[943],t2);}

/* k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39798,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39801,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40784,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   make-message-parser");
f_39279(t4,t2);}

/* k40782 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40784,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[857],"*messages*"),lf[942],t2);}

/* k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39801,2,t0,t1);}
t2=lf[886];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39804,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40776,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   make-message-parser");
f_39279(t4,t2);}

/* k40774 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40776,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[857],"*messages*"),lf[941],t2);}

/* k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39804,2,t0,t1);}
t2=lf[887];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39807,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40768,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   make-message-parser");
f_39279(t4,t2);}

/* k40766 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40768,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[857],"*messages*"),lf[940],t2);}

/* k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39807,2,t0,t1);}
t2=lf[888];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39810,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40760,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   make-message-parser");
f_39279(t4,t2);}

/* k40758 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40760,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[857],"*messages*"),lf[939],t2);}

/* k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39810,2,t0,t1);}
t2=lf[889];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39813,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40752,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   make-message-parser");
f_39279(t4,t2);}

/* k40750 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40752,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[857],"*messages*"),lf[938],t2);}

/* k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39813,2,t0,t1);}
t2=lf[890];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39816,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40744,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   make-message-parser");
f_39279(t4,t2);}

/* k40742 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40744,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 85   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[857],"*messages*"),lf[937],t2);}

/* k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39816,2,t0,t1);}
t2=C_mutate(&lf[891],lf[892]);
t3=C_mutate(&lf[893],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39819,a[2]=((C_word)li528),tmp=(C_word)a,a+=3,tmp));
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39890,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40675,a[2]=t9,a[3]=t4,a[4]=t6,a[5]=((C_word)li548),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_40675(t11,t7,C_retrieve2(lf[329],"*loop-operators*"));}

/* do6812 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_40675(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40675,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_a_i_list(&a,3,lf[295],C_retrieve2(lf[893],"run-while-until"),C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[294],C_retrieve2(lf[893],"run-while-until"),C_SCHEME_FALSE);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40703,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t4);
if(C_truep((C_truep((C_word)C_i_equalp(t5,lf[272]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[115]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[277]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[261]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[262]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[264]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[265]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[299]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[300]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[301]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[291]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[295]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[294]))?C_SCHEME_TRUE:C_SCHEME_FALSE))))))))))))))){
t6=t3;
f_40703(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t3;
f_40703(t11,t10);}}}

/* k40701 in do6812 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_40703(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_40675(t3,((C_word*)t0)[2],t2);}

/* k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39890,2,t0,t1);}
t2=C_mutate(&lf[896],t1);
t3=C_mutate(&lf[897],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39892,a[2]=((C_word)li529),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[898],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39931,a[2]=((C_word)li530),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40168,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40669,a[2]=((C_word)li547),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 86   ##sys#register-macro-2");
t7=C_retrieve(lf[936]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[914],t6);}

/* a40668 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40669(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_40669,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 86   expand-process");
f_39931(t1,t2);}

/* k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40168,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40171,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40640,a[2]=((C_word)li546),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 86   ##sys#register-macro");
t4=C_retrieve(lf[934]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[935],t3);}

/* a40639 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40640(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr3r,(void*)f_40640r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_40640r(t0,t1,t2,t3);}}

static void C_ccall f_40640r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40644,a[2]=t1,a[3]=t3,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40654,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t6=(C_word)C_i_car(t2);
t7=t5;
f_40654(t7,(C_word)C_i_symbolp(t6));}
else{
t6=t5;
f_40654(t6,C_SCHEME_FALSE);}}

/* k40652 in a40639 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_40654(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_40644(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 86   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[933],((C_word*)t0)[2]);}}

/* k40642 in a40639 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40644,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[932],t2));}

/* k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40171,2,t0,t1);}
t2=C_mutate((C_word*)lf[915]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40173,a[2]=((C_word)li538),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[923]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40543,a[2]=((C_word)li539),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[924]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40549,a[2]=((C_word)li540),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[925]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40555,a[2]=((C_word)li541),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[926]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40561,a[2]=((C_word)li542),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[927]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40567,a[2]=((C_word)li544),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[929]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40625,a[2]=((C_word)li545),tmp=(C_word)a,a+=3,tmp));
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40638,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 92   return-to-host");
t10=C_retrieve(lf[931]);
((C_proc2)C_retrieve_proc(t10))(2,t10,t9);}

/* k40636 in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}

/* hush in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40625,2,t0,t1);}
C_trace("ChickenBridge.scm: 86   ffi_sched_hush");
t2=C_retrieve(lf[930]);
((C_proc2)C_retrieve_proc(t2))(2,t2,t1);}

/* stop in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40567(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr2r,(void*)f_40567r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_40567r(t0,t1,t2);}}

static void C_ccall f_40567r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40571,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 86   ffi_sched_stop");
f_7522(t3,C_fix(-1));}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40585,a[2]=t5,a[3]=((C_word)li543),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_40585(t7,t3,t2);}}

/* do6900 in stop in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_40585(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40585,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40595,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t4))){
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 86   ffi_sched_stop");
f_7522(t3,t5);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 86   error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[928],t5);}}}

/* k40593 in do6900 in stop in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_40585(t3,((C_word*)t0)[2],t2);}

/* k40569 in stop in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_retrieve(lf[431]));}

/* continue in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40561,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub282(C_SCHEME_UNDEFINED));}

/* paused? in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40555,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub278(C_SCHEME_UNDEFINED));}

/* pause in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40549,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub280(C_SCHEME_UNDEFINED));}

/* now in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40543,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub267(t2));}

/* sprout in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40173(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+27)){
C_save_and_reclaim((void*)tr3r,(void*)f_40173r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_40173r(t0,t1,t2,t3);}}

static void C_ccall f_40173r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(27);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(-1);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(C_word)C_i_closurep(t2);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40180,a[2]=t4,a[3]=t10,a[4]=t2,a[5]=t1,a[6]=t8,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(t11)){
t13=t12;
f_40180(2,t13,t11);}
else{
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40496,a[2]=t2,a[3]=t12,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40510,a[2]=t2,a[3]=t15,a[4]=((C_word)li537),tmp=(C_word)a,a+=5,tmp));
t17=((C_word*)t15)[1];
f_40510(t17,t13,t2);}
else{
t14=t13;
f_40496(2,t14,C_SCHEME_FALSE);}}}

/* do6849 in sprout in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_40510(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40510,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_TRUE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40520,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_closurep(t4))){
t5=t3;
f_40520(2,t5,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 86   error");
t5=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[922],((C_word*)t0)[2]);}}}

/* k40518 in do6849 in sprout in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_40510(t3,((C_word*)t0)[2],t2);}

/* k40494 in sprout in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_40180(2,t2,t1);}
else{
C_trace("ChickenBridge.scm: 86   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[921],((C_word*)t0)[2]);}}

/* k40178 in sprout in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40180,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40183,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40434,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=t4,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=((C_word)li536),tmp=(C_word)a,a+=8,tmp));
t6=((C_word*)t4)[1];
f_40434(t6,t2,((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* do6854 in k40178 in sprout in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_40434(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40434,NULL,4,t0,t1,t2,t3);}
t4=(C_word)C_i_nullp(t2);
t5=(C_truep(t4)?t4:((C_word*)((C_word*)t0)[6])[1]);
if(C_truep(t5)){
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40448,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_stringp(t7))){
t8=(C_word)C_i_car(t2);
t9=C_mutate(((C_word *)((C_word*)t0)[6])+1,t8);
t10=t6;
f_40448(2,t10,t9);}
else{
if(C_truep((C_word)C_i_nequalp(t3,C_fix(0)))){
t8=(C_word)C_i_car(t2);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t6;
f_40448(2,t10,t9);}
else{
if(C_truep((C_word)C_i_nequalp(t3,C_fix(1)))){
t8=(C_word)C_i_car(t2);
t9=C_mutate(((C_word *)((C_word*)t0)[2])+1,t8);
t10=t6;
f_40448(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 86   error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t6,lf[920],((C_word*)((C_word*)t0)[5])[1]);}}}}}

/* k40446 in do6854 in k40178 in sprout in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40448,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_40434(t4,((C_word*)t0)[2],t2,t3);}

/* k40181 in k40178 in sprout in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40183,2,t0,t1);}
t2=(C_word)C_i_numberp(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_truep(t2)?(C_word)C_i_greater_or_equalp(((C_word*)((C_word*)t0)[7])[1],C_fix(0)):C_SCHEME_FALSE);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40189,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t3)){
t5=t4;
f_40189(2,t5,t3);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40367,a[2]=((C_word*)t0)[7],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[7])[1]))){
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40381,a[2]=t7,a[3]=((C_word)li535),tmp=(C_word)a,a+=4,tmp));
t9=((C_word*)t7)[1];
f_40381(t9,t5,((C_word*)((C_word*)t0)[7])[1]);}
else{
t6=t5;
f_40367(2,t6,C_SCHEME_FALSE);}}}

/* do6866 in k40181 in k40178 in sprout in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_40381(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40381,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_TRUE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40391,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_numberp(t4);
t6=(C_word)C_i_not(t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40404,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t6)){
t8=t7;
f_40404(t8,t6);}
else{
t8=(C_word)C_i_car(t2);
t9=t7;
f_40404(t9,(C_word)C_i_lessp(t8,C_fix(0)));}}}

/* k40402 in do6866 in k40181 in k40178 in sprout in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_40404(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 86   error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],lf[919],t2);}
else{
t2=((C_word*)t0)[2];
f_40391(2,t2,C_SCHEME_UNDEFINED);}}

/* k40389 in do6866 in k40181 in k40178 in sprout in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_40381(t3,((C_word*)t0)[2],t2);}

/* k40365 in k40181 in k40178 in sprout in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_40189(2,t2,t1);}
else{
C_trace("ChickenBridge.scm: 86   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[918],((C_word*)((C_word*)t0)[2])[1]);}}

/* k40187 in k40181 in k40178 in sprout in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40189,2,t0,t1);}
t2=(C_word)C_i_integerp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40195,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t2)){
t4=t3;
f_40195(2,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40315,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[7])[1]))){
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40329,a[2]=t6,a[3]=((C_word)li534),tmp=(C_word)a,a+=4,tmp));
t8=((C_word*)t6)[1];
f_40329(t8,t4,((C_word*)((C_word*)t0)[7])[1]);}
else{
t5=t4;
f_40315(2,t5,C_SCHEME_FALSE);}}}

/* do6877 in k40187 in k40181 in k40178 in sprout in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_40329(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40329,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_TRUE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40339,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_integerp(t4))){
t5=t3;
f_40339(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 86   error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[917],t5);}}}

/* k40337 in do6877 in k40187 in k40181 in k40178 in sprout in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_40329(t3,((C_word*)t0)[2],t2);}

/* k40313 in k40187 in k40181 in k40178 in sprout in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_40195(2,t2,t1);}
else{
C_trace("ChickenBridge.scm: 86   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[916],((C_word*)((C_word*)t0)[2])[1]);}}

/* k40193 in k40187 in k40181 in k40178 in sprout in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40195,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40198,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40312,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t3,C_retrieve2(lf[734],"open-file"),((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_40198(t3,C_SCHEME_UNDEFINED);}}

/* k40310 in k40193 in k40187 in k40181 in k40178 in sprout in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_40198(t3,t2);}

/* k40196 in k40193 in k40187 in k40181 in k40178 in sprout in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_40198(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40198,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40199,a[2]=((C_word*)t0)[5],a[3]=((C_word)li531),tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40227,a[2]=((C_word*)t0)[4],a[3]=((C_word)li532),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40257,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_40268,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word)li533),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_40268(t8,t4,((C_word*)t0)[2]);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40304,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   nextstart");
t6=t2;
f_40199(t6,t5);}}

/* k40302 in k40196 in k40193 in k40187 in k40181 in k40178 in sprout in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40304,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40308,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   nextid");
t3=((C_word*)t0)[2];
f_40227(t3,t2);}

/* k40306 in k40302 in k40196 in k40193 in k40187 in k40181 in k40178 in sprout in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 86   ffi_sched_sprout");
f_7502(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do6888 in k40196 in k40193 in k40187 in k40181 in k40178 in sprout in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_40268(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40268,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40278,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40293,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   nextstart");
t6=((C_word*)t0)[2];
f_40199(t6,t5);}}

/* k40291 in do6888 in k40196 in k40193 in k40187 in k40181 in k40178 in sprout in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40293,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40297,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   nextid");
t3=((C_word*)t0)[2];
f_40227(t3,t2);}

/* k40295 in k40291 in do6888 in k40196 in k40193 in k40187 in k40181 in k40178 in sprout in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 86   ffi_sched_sprout");
f_7502(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k40276 in do6888 in k40196 in k40193 in k40187 in k40181 in k40178 in sprout in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_40268(t3,((C_word*)t0)[2],t2);}

/* k40255 in k40196 in k40193 in k40187 in k40181 in k40178 in sprout in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_retrieve(lf[431]));}

/* nextid in k40196 in k40193 in k40187 in k40181 in k40178 in sprout in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_40227(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40227,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* nextstart in k40196 in k40193 in k40187 in k40181 in k40178 in sprout in k40169 in k40166 in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_40199(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40199,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* expand-process in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_39931(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39931,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39935,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_vectorp(t2))){
t4=t3;
f_39935(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 86   parse-iteration");
f_12576(t3,lf[914],t2,C_retrieve2(lf[896],"*run-operators*"));}}

/* k39933 in expand-process in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39935,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_retrieve2(lf[891],"*process-stop*");
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39938,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 86   gensym");
t9=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[913]);}

/* k39936 in k39933 in expand-process in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39938,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39941,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 86   gensym");
t3=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[912]);}

/* k39939 in k39936 in k39933 in expand-process in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39941,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_39945,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 86   loop-end-tests");
t3=C_retrieve2(lf[129],"loop-end-tests");
f_9300(3,t3,t2,((C_word*)t0)[3]);}

/* k39943 in k39939 in k39936 in k39933 in expand-process in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39945,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_39948,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40159,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   loop-finally");
t5=C_retrieve2(lf[133],"loop-finally");
f_9336(3,t5,t4,((C_word*)t0)[3]);}

/* k40157 in k39943 in k39939 in k39936 in k39933 in expand-process in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40159,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=((C_word*)t0)[4];
f_39948(t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40143,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40147,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   loop-finally");
t4=C_retrieve2(lf[133],"loop-finally");
f_9336(3,t4,t3,((C_word*)t0)[2]);}}

/* k40145 in k40157 in k39943 in k39939 in k39936 in k39933 in expand-process in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40147,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 86   ##sys#append");
t3=*((C_word*)lf[105]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k40141 in k40157 in k39943 in k39939 in k39936 in k39933 in expand-process in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40143,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[214],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_39948(t4,t3);}

/* k39946 in k39943 in k39939 in k39936 in k39933 in expand-process in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_39948(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39948,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39951,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40121,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40128,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   loop-looping");
t5=C_retrieve2(lf[130],"loop-looping");
f_9312(3,t5,t4,((C_word*)t0)[4]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40092,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_40092(t7,t6);}
else{
t5=(C_word)C_a_i_cons(&a,2,lf[266],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_40092(t7,t6);}}}

/* k40090 in k39946 in k39943 in k39939 in k39936 in k39933 in expand-process in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_40092(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40092,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[117],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_39951(2,t5,t4);}

/* k40126 in k39946 in k39943 in k39939 in k39936 in k39933 in expand-process in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 86   process-code-terminates?");
f_39892(((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k40119 in k39946 in k39943 in k39939 in k39936 in k39933 in expand-process in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[2];
f_39951(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 86   print-output");
t2=C_retrieve(lf[58]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[911]);}}

/* k39949 in k39946 in k39943 in k39939 in k39936 in k39933 in expand-process in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[124],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39951,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[6],C_fix(0));
t4=(C_word)C_a_i_list(&a,2,lf[102],lf[899]);
t5=(C_word)C_a_i_list(&a,2,lf[61],lf[899]);
t6=(C_word)C_a_i_list(&a,1,lf[900]);
t7=(C_word)C_a_i_list(&a,3,lf[243],t5,t6);
t8=(C_word)C_a_i_list(&a,1,lf[901]);
t9=(C_word)C_a_i_list(&a,4,lf[117],t7,t8,((C_word*)t0)[7]);
t10=(C_word)C_a_i_list(&a,4,lf[117],t4,((C_word*)t0)[7],t9);
t11=(C_word)C_a_i_list(&a,3,lf[902],lf[899],t10);
t12=(C_word)C_a_i_list(&a,2,lf[903],t11);
t13=(C_word)C_a_i_list(&a,1,lf[904]);
t14=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)t0)[6],lf[904]);
t15=(C_word)C_a_i_list(&a,3,lf[902],t13,t14);
t16=(C_word)C_a_i_list(&a,2,lf[905],t15);
t17=(C_word)C_a_i_list(&a,3,t3,t12,t16);
t18=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_40018,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=t17,tmp=(C_word)a,a+=7,tmp);
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40022,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=t18,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   loop-looping");
t20=C_retrieve2(lf[130],"loop-looping");
f_9312(3,t20,t19,((C_word*)t0)[3]);}

/* k40020 in k39949 in k39946 in k39943 in k39939 in k39936 in k39933 in expand-process in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40022,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40026,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 86   loop-stepping");
t3=C_retrieve2(lf[132],"loop-stepping");
f_9324(3,t3,t2,((C_word*)t0)[2]);}

/* k40024 in k40020 in k39949 in k39946 in k39943 in k39939 in k39936 in k39933 in expand-process in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40026,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 86   append");
t3=*((C_word*)lf[115]+1);
((C_proc6)C_retrieve_proc(t3))(6,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2],t1,t2);}

/* k40016 in k39949 in k39946 in k39943 in k39939 in k39936 in k39933 in expand-process in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_40018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40018,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7046,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 77   gensym");
t3=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[910]);}

/* k7044 in k40016 in k39949 in k39946 in k39943 in k39939 in k39936 in k39933 in expand-process in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[96],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7046,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[906]);
t3=(C_word)C_a_i_list(&a,1,t1);
t4=(C_word)C_a_i_list(&a,1,lf[907]);
t5=(C_word)C_a_i_list(&a,4,lf[908],t1,t4,lf[909]);
t6=(C_word)C_a_i_list(&a,2,lf[906],C_fix(-2));
t7=(C_word)C_a_i_list(&a,4,lf[902],t3,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,((C_word*)t0)[7]);
t9=(C_word)C_a_i_cons(&a,2,lf[902],t8);
t10=(C_word)C_a_i_list(&a,3,lf[793],t7,t9);
t11=(C_word)C_a_i_list(&a,3,lf[902],t2,t10);
t12=(C_word)C_a_i_list(&a,2,lf[794],t11);
t13=(C_word)C_a_i_list(&a,3,lf[101],((C_word*)t0)[6],t12);
t14=(C_word)C_a_i_list(&a,3,lf[902],((C_word*)t0)[5],t13);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39961,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t17=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39998,a[2]=((C_word*)t0)[2],a[3]=t16,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   loop-bindings");
t18=C_retrieve2(lf[126],"loop-bindings");
f_9264(3,t18,t17,((C_word*)t0)[2]);}

/* k39996 in k7044 in k40016 in k39949 in k39946 in k39943 in k39939 in k39936 in k39933 in expand-process in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39998,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39994,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 86   loop-initially");
t3=C_retrieve2(lf[128],"loop-initially");
f_9288(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_39961(t2,C_SCHEME_FALSE);}}

/* k39992 in k39996 in k7044 in k40016 in k39949 in k39946 in k39943 in k39939 in k39936 in k39933 in expand-process in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_39961(t2,(C_word)C_i_nullp(t1));}

/* k39959 in k7044 in k40016 in k39949 in k39946 in k39943 in k39939 in k39936 in k39933 in expand-process in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_39961(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39961,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39972,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 86   loop-bindings");
t3=C_retrieve2(lf[126],"loop-bindings");
f_9264(3,t3,t2,((C_word*)t0)[2]);}}

/* k39970 in k39959 in k7044 in k40016 in k39949 in k39946 in k39943 in k39939 in k39936 in k39933 in expand-process in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39972,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39976,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39980,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 86   loop-initially");
t4=C_retrieve2(lf[128],"loop-initially");
f_9288(3,t4,t3,((C_word*)t0)[2]);}

/* k39978 in k39970 in k39959 in k7044 in k40016 in k39949 in k39946 in k39943 in k39939 in k39936 in k39933 in expand-process in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39980,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 86   ##sys#append");
t3=*((C_word*)lf[105]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k39974 in k39970 in k39959 in k7044 in k40016 in k39949 in k39946 in k39943 in k39939 in k39936 in k39933 in expand-process in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39976,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[101],t2));}

/* process-code-terminates? in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_39892(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
loop:
a=C_alloc(5);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_39892,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39908,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 86   process-code-terminates?");
t8=t4;
t9=t5;
t10=t3;
t1=t8;
t2=t9;
t3=t10;
goto loop;}
else{
t4=(C_word)C_i_car(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_equalp(t2,t4));}}}

/* k39906 in process-code-terminates? in k39888 in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 86   process-code-terminates?");
f_39892(((C_word*)t0)[4],t2,((C_word*)t0)[2]);}}

/* run-while-until in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39819(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39819,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39830,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 86   loop-error");
f_9600(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[894],t7,lf[895]));}
else{
t13=t12;
f_39830(2,t13,C_SCHEME_UNDEFINED);}}

/* k39828 in run-while-until in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39830,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39833,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[294]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_39833(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[295]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[209],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_39833(t10,t9);}
else{
t5=t2;
f_39833(t5,C_SCHEME_UNDEFINED);}}}

/* k39831 in k39828 in run-while-until in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_39833(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39833,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39840,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[117],((C_word*)((C_word*)t0)[3])[1],C_retrieve2(lf[891],"*process-stop*"));
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 86   make-loop-clause");
f_9360(t2,(C_word)C_a_i_list(&a,4,lf[136],((C_word*)t0)[2],lf[141],t4));}

/* k39838 in k39831 in k39828 in run-while-until in k39814 in k39811 in k39808 in k39805 in k39802 in k39799 in k39796 in k39793 in k39790 in k39787 in k39784 in k39781 in k39778 in k39775 in k39772 in k39769 in k39766 in k39763 in k39760 in k39757 in k39754 in k39751 in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 86   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* make-message-parser in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_39279(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39279,NULL,2,t1,t2);}
t3=C_SCHEME_END_OF_LIST;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39283,a[2]=t12,a[3]=t1,a[4]=t10,a[5]=t8,a[6]=t6,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_39612,a[2]=t4,a[3]=t12,a[4]=t6,a[5]=t10,a[6]=t8,a[7]=t15,a[8]=((C_word)li526),tmp=(C_word)a,a+=9,tmp));
t17=((C_word*)t15)[1];
f_39612(t17,t13,t2,C_SCHEME_FALSE);}

/* do6618 in make-message-parser in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_39612(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39612,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39622,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[7],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_39632,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t5,a[8]=t4,a[9]=t2,tmp=(C_word)a,a+=10,tmp);
t7=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 85   keyword?");
t8=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k39630 in do6618 in make-message-parser in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39632,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[9]);
if(C_truep((C_truep((C_word)C_i_equalp(t2,lf[867]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t2,lf[765]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t2,lf[868]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t2,lf[869]))?C_SCHEME_TRUE:C_SCHEME_FALSE)))))){
t3=(C_word)C_i_car(((C_word*)t0)[9]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=((C_word*)t0)[7];
f_39622(2,t5,t4);}
else{
C_trace("ChickenBridge.scm: 85   error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[7],lf[870],((C_word*)((C_word*)t0)[8])[1]);}}
else{
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[8])[1],lf[765]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39658,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[9]);
if(C_truep((C_word)C_i_pairp(t3))){
C_trace("ChickenBridge.scm: 85   caar");
t4=*((C_word*)lf[596]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,((C_word*)t0)[9]);}
else{
t4=t2;
f_39658(2,t4,(C_word)C_i_car(((C_word*)t0)[9]));}}
else{
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[8])[1],lf[868]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39697,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39701,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 85   symbol->string");
t5=*((C_word*)lf[121]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[8])[1],lf[871]))){
t2=(C_word)C_i_car(((C_word*)t0)[9]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[7];
f_39622(2,t5,t4);}
else{
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[8])[1],lf[869]))){
t2=(C_word)C_i_car(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[7];
f_39622(2,t4,t3);}
else{
t2=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 85   error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[7],lf[872],((C_word*)((C_word*)t0)[8])[1]);}
else{
t3=(C_word)C_i_car(((C_word*)t0)[9]);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[7];
f_39622(2,t6,t5);}}}}}}}

/* k39699 in k39630 in do6618 in make-message-parser in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   string->keyword");
t2=C_retrieve(lf[120]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k39695 in k39630 in do6618 in make-message-parser in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39697,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_39622(2,t4,t3);}

/* k39656 in k39630 in do6618 in make-message-parser in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39658,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39666,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39670,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 85   symbol->string");
t4=*((C_word*)lf[121]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t1);}

/* k39668 in k39656 in k39630 in do6618 in make-message-parser in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   string->keyword");
t2=C_retrieve(lf[120]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k39664 in k39656 in k39630 in do6618 in make-message-parser in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39666,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_39622(2,t4,t3);}

/* k39620 in do6618 in make-message-parser in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_39612(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k39281 in make-message-parser in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39283,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39287,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 85   reverse");
t3=*((C_word*)lf[159]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[7])[1]);}

/* k39285 in k39281 in make-message-parser in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39287,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39291,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 85   reverse");
t4=*((C_word*)lf[159]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[6])[1]);}

/* k39289 in k39285 in k39281 in make-message-parser in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39291,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39295,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 85   reverse");
t4=*((C_word*)lf[159]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[6])[1]);}

/* k39293 in k39289 in k39285 in k39281 in make-message-parser in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39295,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39299,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 85   reverse");
t4=*((C_word*)lf[159]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[6])[1]);}

/* k39297 in k39293 in k39289 in k39285 in k39281 in make-message-parser in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39299,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39300,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word)li525),tmp=(C_word)a,a+=8,tmp));}

/* f_39300 in k39297 in k39293 in k39289 in k39285 in k39281 in make-message-parser in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39300(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_39300,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_39306,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t3,a[8]=((C_word)li524),tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 85   call-with-current-continuation");
t5=*((C_word*)lf[794]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}

/* a39305 */
static void C_ccall f_39306(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_39306,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[7])[1];
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_39310,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=t2,a[8]=t1,a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 85   return");
t5=t2;
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_SCHEME_TRUE);}
else{
t5=t4;
f_39310(2,t5,C_SCHEME_UNDEFINED);}}

/* k39308 in a39305 */
static void C_ccall f_39310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39310,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_39313,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_39539,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=t4,a[7]=((C_word*)t0)[9],a[8]=((C_word)li523),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_39539(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do6629 in k39308 in a39305 */
static void C_fcall f_39539(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39539,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39549,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39570,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   format");
t5=C_retrieve(lf[429]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_SCHEME_FALSE,lf[865],((C_word*)t0)[4]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39576,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39586,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 85   keyword?");
t7=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}}

/* k39584 in do6629 in k39308 in a39305 */
static void C_ccall f_39586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_member(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
t4=((C_word*)t0)[3];
f_39576(t4,t3);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t5=((C_word*)t0)[3];
f_39576(t5,(C_word)C_i_member(t4,((C_word*)((C_word*)t0)[2])[1]));}}
else{
t2=((C_word*)t0)[3];
f_39576(t2,C_SCHEME_FALSE);}}

/* k39574 in do6629 in k39308 in a39305 */
static void C_fcall f_39576(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39576,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39583,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   format");
t3=C_retrieve(lf[429]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_SCHEME_FALSE,lf[866],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_39549(2,t2,C_SCHEME_UNDEFINED);}}

/* k39581 in k39574 in do6629 in k39308 in a39305 */
static void C_ccall f_39583(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k39568 in do6629 in k39308 in a39305 */
static void C_ccall f_39570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k39547 in do6629 in k39308 in a39305 */
static void C_ccall f_39549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_39539(t5,((C_word*)t0)[2],t4);}

/* k39311 in k39308 in a39305 */
static void C_ccall f_39313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39313,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39316,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39494,a[2]=t2,a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t3;
f_39494(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_39494(t5,(C_word)C_i_not(t4));}}

/* k39492 in k39311 in k39308 in a39305 */
static void C_fcall f_39494(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39494,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39499,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word)li522),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_39499(t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[2];
f_39316(2,t2,C_SCHEME_UNDEFINED);}}

/* do6637 in k39492 in k39311 in k39308 in a39305 */
static void C_fcall f_39499(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39499,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39509,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_39509(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 85   keyword?");
t5=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k39507 in do6637 in k39492 in k39311 in k39308 in a39305 */
static void C_ccall f_39509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)((C_word*)t0)[2])[1];
f_39499(t4,((C_word*)t0)[4]);}}

/* k39314 in k39311 in k39308 in a39305 */
static void C_ccall f_39316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39316,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39319,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39448,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t4=t3;
f_39448(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_39448(t5,(C_word)C_i_not(t4));}}

/* k39446 in k39314 in k39311 in k39308 in a39305 */
static void C_fcall f_39448(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39448,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39453,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word)li521),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_39453(t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[2];
f_39319(2,t2,C_SCHEME_UNDEFINED);}}

/* do6643 in k39446 in k39314 in k39311 in k39308 in a39305 */
static void C_fcall f_39453(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39453,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39463,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_39463(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 85   keyword?");
t5=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k39461 in do6643 in k39446 in k39314 in k39311 in k39308 in a39305 */
static void C_ccall f_39463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)((C_word*)t0)[2])[1];
f_39453(t4,((C_word*)t0)[4]);}}

/* k39317 in k39314 in k39311 in k39308 in a39305 */
static void C_ccall f_39319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39319,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39322,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_not(t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39345,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t4)){
t6=t5;
f_39345(t6,t4);}
else{
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[2])[1]);
t7=t5;
f_39345(t7,(C_word)C_i_not(t6));}}

/* k39343 in k39317 in k39314 in k39311 in k39308 in a39305 */
static void C_fcall f_39345(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39345,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_truep(t2)?((C_word*)((C_word*)t0)[6])[1]:((C_word*)((C_word*)t0)[7])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39354,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word)li520),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_39354(t7,((C_word*)t0)[2],t3);}
else{
t2=((C_word*)t0)[2];
f_39322(2,t2,C_SCHEME_UNDEFINED);}}

/* do6651 in k39343 in k39317 in k39314 in k39311 in k39308 in a39305 */
static void C_fcall f_39354(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39354,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39364,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39370,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
C_trace("ChickenBridge.scm: 85   keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}}

/* k39368 in do6651 in k39343 in k39317 in k39314 in k39311 in k39308 in a39305 */
static void C_ccall f_39370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39370,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39373,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
if(C_truep((C_word)C_i_member(t3,((C_word*)t0)[2]))){
t4=t2;
f_39373(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39404,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 85   format");
t6=C_retrieve(lf[429]);
((C_proc6)C_retrieve_proc(t6))(6,t6,t4,C_SCHEME_FALSE,lf[863],t5,((C_word*)t0)[3]);}}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39423,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 85   format");
t4=C_retrieve(lf[429]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_SCHEME_FALSE,lf[864],t3);}}

/* k39421 in k39368 in do6651 in k39343 in k39317 in k39314 in k39311 in k39308 in a39305 */
static void C_ccall f_39423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k39402 in k39368 in do6651 in k39343 in k39317 in k39314 in k39311 in k39308 in a39305 */
static void C_ccall f_39404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k39371 in k39368 in do6651 in k39343 in k39317 in k39314 in k39311 in k39308 in a39305 */
static void C_ccall f_39373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39373,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39380,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39394,a[2]=t4,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   format");
t6=C_retrieve(lf[429]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_SCHEME_FALSE,lf[862],((C_word*)t0)[2]);}
else{
t5=t4;
f_39380(2,t5,C_SCHEME_UNDEFINED);}}

/* k39392 in k39371 in k39368 in do6651 in k39343 in k39317 in k39314 in k39311 in k39308 in a39305 */
static void C_ccall f_39394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k39378 in k39371 in k39368 in do6651 in k39343 in k39317 in k39314 in k39311 in k39308 in a39305 */
static void C_ccall f_39380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_39364(2,t4,t3);}

/* k39362 in do6651 in k39343 in k39317 in k39314 in k39311 in k39308 in a39305 */
static void C_ccall f_39364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_39354(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39320 in k39317 in k39314 in k39311 in k39308 in a39305 */
static void C_ccall f_39322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39322,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39335,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   format");
t3=C_retrieve(lf[429]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_SCHEME_FALSE,lf[861],((C_word*)t0)[2]);}}

/* k39333 in k39320 in k39317 in k39314 in k39311 in k39308 in a39305 */
static void C_ccall f_39335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   return");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* expand-send in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39205(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr4r,(void*)f_39205r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_39205r(t0,t1,t2,t3,t4);}}

static void C_ccall f_39205r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39209,a[2]=t3,a[3]=t1,a[4]=t5,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
t7=C_set_block_item(t5,0,*((C_word*)lf[82]+1));
t8=t6;
f_39209(t8,t7);}
else{
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=t6;
f_39209(t9,t8);}}

/* k39207 in expand-send in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_39209(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39209,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_stringp(((C_word*)t0)[5]))){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39218,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 85   hash-ref");
t3=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_retrieve2(lf[857],"*messages*"),((C_word*)t0)[5]);}
else{
if(C_truep((C_word)C_i_symbolp(((C_word*)t0)[5]))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[2]));}
else{
C_trace("ChickenBridge.scm: 85   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[859],((C_word*)t0)[5]);}}}

/* k39216 in k39207 in expand-send in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39218,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39234,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t1);
t5=t4;
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,((C_word*)t0)[3]);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39231,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   string->symbol");
t4=*((C_word*)lf[550]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k39229 in k39216 in k39207 in expand-send in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39231,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* k39232 in k39216 in k39207 in expand-send in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39234,2,t0,t1);}
if(C_truep((C_word)C_i_stringp(t1))){
C_trace("ChickenBridge.scm: 85   errcont");
t2=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],t1);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39250,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   string->symbol");
t3=*((C_word*)lf[550]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}}

/* k39248 in k39232 in k39216 in k39207 in expand-send in k39201 in k39198 in k39194 in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39250,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* cs:f in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39156(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_39156r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_39156r(t0,t1,t2);}}

static void C_ccall f_39156r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_trace("ChickenBridge.scm: 85   cs:send");
f_38957(t1,lf[856],t2);}

/* cs:i in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39150(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_39150r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_39150r(t0,t1,t2);}}

static void C_ccall f_39150r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_trace("ChickenBridge.scm: 85   cs:send");
f_38957(t1,lf[845],t2);}

/* cs:send in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_38957(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38957,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=lf[844];
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38961,a[2]=t4,a[3]=t1,a[4]=t10,a[5]=t8,a[6]=t6,a[7]=t2,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t4)[1]))){
C_trace("ChickenBridge.scm: 85   error");
t12=*((C_word*)lf[82]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,lf[853]);}
else{
t12=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39130,a[2]=t11,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t13=(C_word)C_i_cdr(((C_word*)t4)[1]);
if(C_truep((C_word)C_i_nullp(t13))){
t14=(C_word)C_i_car(((C_word*)t4)[1]);
t15=t12;
f_39130(t15,(C_word)C_i_pairp(t14));}
else{
t14=t12;
f_39130(t14,C_SCHEME_FALSE);}}}

/* k39128 in cs:send in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_39130(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_38961(2,t4,t3);}
else{
t2=((C_word*)t0)[2];
f_38961(2,t2,C_SCHEME_UNDEFINED);}}

/* k38959 in cs:send in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38961,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38964,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_integerp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t2;
f_38964(2,t8,t7);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 85   error");
t5=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,lf[852],t4);}}

/* k38962 in k38959 in cs:send in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38964,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38967,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[2])[1]))){
C_trace("ChickenBridge.scm: 85   error");
t3=*((C_word*)lf[82]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[850]);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_numberp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t2;
f_38967(2,t8,t7);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 85   error");
t5=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,lf[851],t4);}}}

/* k38965 in k38962 in k38959 in cs:send in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38967,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38972,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word)li515),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_38972(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],lf[849]);}

/* do6586 in k38965 in k38962 in k38959 in cs:send in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_38972(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38972,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=(C_word)C_eqp(((C_word*)t0)[6],lf[845]);
t5=(C_truep(t4)?C_fix(1):C_retrieve(lf[846]));
t6=t1;
t7=((C_word*)((C_word*)t0)[5])[1];
t8=((C_word*)((C_word*)t0)[4])[1];
t9=((C_word*)((C_word*)t0)[3])[1];
t10=(C_word)C_i_foreign_fixnum_argumentp(t5);
t11=(C_word)C_i_foreign_fixnum_argumentp(t7);
t12=(C_word)C_i_foreign_flonum_argumentp(t8);
t13=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7876,a[2]=t12,a[3]=t11,a[4]=t10,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
if(C_truep(t9)){
t14=(C_word)C_i_foreign_string_argumentp(t9);
C_trace("##sys#make-c-string");
t15=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}
else{
t14=t13;
f_7876(2,t14,C_SCHEME_FALSE);}}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38992,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t5))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39006,a[2]=t4,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39010,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t8=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 85   number->string");
C_number_to_string(3,0,t7,t8);}
else{
t6=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_stringp(t6))){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39024,a[2]=t4,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 85   string-append");
t9=*((C_word*)lf[439]+1);
((C_proc5)C_retrieve_proc(t9))(5,t9,t7,((C_word*)((C_word*)t0)[3])[1],t3,t8);}
else{
t7=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_symbolp(t7))){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39038,a[2]=t4,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39042,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=t8,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 85   symbol->string");
t11=*((C_word*)lf[121]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t9,t10);}
else{
t8=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 85   error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,lf[848],t8);}}}}}

/* k39040 in do6586 in k38965 in k38962 in k38959 in cs:send in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   string-append");
t2=*((C_word*)lf[439]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2],t1);}

/* k39036 in do6586 in k38965 in k38962 in k38959 in cs:send in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38992(2,t3,t2);}

/* k39022 in do6586 in k38965 in k38962 in k38959 in cs:send in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38992(2,t3,t2);}

/* k39008 in do6586 in k38965 in k38962 in k38959 in cs:send in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   string-append");
t2=*((C_word*)lf[439]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2],t1);}

/* k39004 in do6586 in k38965 in k38962 in k38959 in cs:send in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_39006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38992(2,t3,t2);}

/* k38990 in do6586 in k38965 in k38962 in k38959 in cs:send in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_38972(t3,((C_word*)t0)[2],t2,lf[847]);}

/* k7874 in do6586 in k38965 in k38962 in k38959 in cs:send in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub454(C_SCHEME_UNDEFINED,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* cs:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38785(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr3r,(void*)f_38785r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_38785r(t0,t1,t2,t3);}}

static void C_ccall f_38785r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(4);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38789,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   string-append");
t5=*((C_word*)lf[439]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,lf[841],t2,lf[842]);}

/* k38787 in cs:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38789,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38792,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_length(((C_word*)t0)[2]);
if(C_truep((C_word)C_i_evenp(t5))){
t6=t4;
f_38792(2,t6,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 85   error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[840],((C_word*)t0)[2]);}}

/* k38790 in k38787 in cs:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38792,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38797,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li513),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_38797(t5,((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do6566 in k38790 in k38787 in cs:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_38797(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38797,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
t6=((C_word*)((C_word*)t0)[3])[1];
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7850,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t6)){
t8=(C_word)C_i_foreign_string_argumentp(t6);
C_trace("##sys#make-c-string");
t9=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t7,t8);}
else{
t8=t7;
f_7850(2,t8,C_SCHEME_FALSE);}}
else{
t5=(C_word)C_i_cadr(t2);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(t2);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38817,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t9=(C_word)C_eqp(t7,lf[819]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38831,a[2]=t8,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_cadr(t2);
t12=(C_truep(t11)?lf[820]:lf[821]);
C_trace("ChickenBridge.scm: 85   string-append");
t13=*((C_word*)lf[439]+1);
((C_proc5)C_retrieve_proc(t13))(5,t13,t10,((C_word*)((C_word*)t0)[3])[1],lf[822],t12);}
else{
t10=(C_word)C_eqp(t7,lf[823]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38848,a[2]=t8,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t12=(C_word)C_i_cadr(t2);
t13=(C_truep(t12)?lf[824]:lf[825]);
C_trace("ChickenBridge.scm: 85   string-append");
t14=*((C_word*)lf[439]+1);
((C_proc5)C_retrieve_proc(t14))(5,t14,t11,((C_word*)((C_word*)t0)[3])[1],lf[826],t13);}
else{
t11=(C_word)C_eqp(t7,lf[827]);
if(C_truep(t11)){
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38864,a[2]=t2,a[3]=t8,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t13=t12;
f_38864(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 85   error");
t13=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[830],((C_word*)t4)[1]);}}
else{
t12=(C_word)C_eqp(t7,lf[831]);
if(C_truep(t12)){
t13=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38891,a[2]=t2,a[3]=t8,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t14=t13;
f_38891(2,t14,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 85   error");
t14=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t14))(4,t14,t13,lf[834],((C_word*)t4)[1]);}}
else{
t13=(C_word)C_eqp(t7,lf[835]);
if(C_truep(t13)){
t14=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38918,a[2]=t2,a[3]=t8,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t15=t14;
f_38918(2,t15,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 85   error");
t15=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t14,lf[838],((C_word*)t4)[1]);}}
else{
t14=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 85   error");
t15=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t8,lf[839],t14);}}}}}}}

/* k38916 in do6566 in k38790 in k38787 in cs:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38918,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38922,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 85   string-append");
t4=*((C_word*)lf[439]+1);
((C_proc6)C_retrieve_proc(t4))(6,t4,t2,((C_word*)((C_word*)t0)[4])[1],lf[836],t3,lf[837]);}

/* k38920 in k38916 in do6566 in k38790 in k38787 in cs:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38817(2,t3,t2);}

/* k38889 in do6566 in k38790 in k38787 in cs:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38891,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38895,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 85   string-append");
t4=*((C_word*)lf[439]+1);
((C_proc6)C_retrieve_proc(t4))(6,t4,t2,((C_word*)((C_word*)t0)[4])[1],lf[832],t3,lf[833]);}

/* k38893 in k38889 in do6566 in k38790 in k38787 in cs:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38817(2,t3,t2);}

/* k38862 in do6566 in k38790 in k38787 in cs:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38864,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38868,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 85   string-append");
t4=*((C_word*)lf[439]+1);
((C_proc6)C_retrieve_proc(t4))(6,t4,t2,((C_word*)((C_word*)t0)[4])[1],lf[828],t3,lf[829]);}

/* k38866 in k38862 in do6566 in k38790 in k38787 in cs:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38817(2,t3,t2);}

/* k38846 in do6566 in k38790 in k38787 in cs:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38817(2,t3,t2);}

/* k38829 in do6566 in k38790 in k38787 in cs:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38817(2,t3,t2);}

/* k38815 in do6566 in k38790 in k38787 in cs:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_38797(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k7848 in do6566 in k38790 in k38787 in cs:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub445(C_SCHEME_UNDEFINED,t1));}

/* snd:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38672(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr3r,(void*)f_38672r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_38672r(t0,t1,t2,t3);}}

static void C_ccall f_38672r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38677,a[2]=t5,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 85   full-pathname");
f_25134(t6,((C_word*)t4)[1]);}

/* k38675 in snd:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38677,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=lf[801]=C_SCHEME_FALSE;;
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38681,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 85   pathname-type");
f_25092(t4,((C_word*)((C_word*)t0)[4])[1]);}

/* k38679 in k38675 in snd:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38681,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38684,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38732,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 85   list-prop");
t4=C_retrieve2(lf[85],"list-prop");
f_8701(4,t4,t3,((C_word*)((C_word*)t0)[3])[1],lf[814]);}

/* k38730 in k38679 in k38675 in snd:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38732,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_38684(t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38724,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38728,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=((C_word*)t0)[2];
if(C_truep((C_word)C_i_string_equal_p(t4,lf[813]))){
t5=t3;
f_38728(t5,(C_word)C_a_i_list(&a,2,lf[814],C_retrieve(lf[815])));}
else{
if(C_truep((C_word)C_i_string_equal_p(t4,lf[816]))){
t5=t3;
f_38728(t5,(C_word)C_a_i_list(&a,2,lf[814],C_retrieve(lf[817])));}
else{
t5=(C_word)C_i_string_equal_p(t4,lf[818]);
t6=t3;
f_38728(t6,(C_truep(t5)?(C_word)C_a_i_list(&a,2,lf[814],C_retrieve(lf[815])):C_SCHEME_END_OF_LIST));}}}}

/* k38726 in k38730 in k38679 in k38675 in snd:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_38728(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   append");
t2=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k38722 in k38730 in k38679 in k38675 in snd:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38684(t3,t2);}

/* k38682 in k38679 in k38675 in snd:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_38684(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38684,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38687,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38717,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 85   list-prop");
t4=C_retrieve2(lf[85],"list-prop");
f_8701(4,t4,t3,((C_word*)((C_word*)t0)[4])[1],lf[807]);}

/* k38715 in k38682 in k38679 in k38675 in snd:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38717,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_38687(t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38709,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38713,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=((C_word*)t0)[2];
if(C_truep((C_word)C_i_string_equal_p(t4,lf[806]))){
t5=t3;
f_38713(t5,(C_word)C_a_i_list(&a,2,lf[807],C_retrieve(lf[808])));}
else{
if(C_truep((C_word)C_i_string_equal_p(t4,lf[809]))){
t5=t3;
f_38713(t5,(C_word)C_a_i_list(&a,2,lf[807],C_retrieve(lf[810])));}
else{
t5=(C_word)C_i_string_equal_p(t4,lf[811]);
t6=t3;
f_38713(t6,(C_truep(t5)?(C_word)C_a_i_list(&a,2,lf[807],C_retrieve(lf[812])):C_SCHEME_END_OF_LIST));}}}}

/* k38711 in k38715 in k38682 in k38679 in k38675 in snd:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_38713(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   append");
t2=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k38707 in k38715 in k38682 in k38679 in k38675 in snd:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38687(t3,t2);}

/* k38685 in k38682 in k38679 in k38675 in snd:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_38687(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38687,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38690,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_apply(6,0,t2,C_retrieve(lf[804]),lf[805],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);}

/* k38688 in k38685 in k38682 in k38679 in k38675 in snd:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38690,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38694,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38702,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   list-prop");
t4=C_retrieve2(lf[85],"list-prop");
f_8701(5,t4,t3,((C_word*)((C_word*)t0)[2])[1],lf[802],C_retrieve(lf[803]));}

/* k38700 in k38688 in k38685 in k38682 in k38679 in k38675 in snd:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38702,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 85   append");
t3=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k38692 in k38688 in k38685 in k38682 in k38679 in k38675 in snd:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[801],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_retrieve2(lf[801],"*sndfileinfo*"));}

/* mp:inops in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38496(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2r,(void*)f_38496r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_38496r(t0,t1,t2);}}

static void C_ccall f_38496r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38500,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 85   error");
t6=*((C_word*)lf[82]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[799]);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38515,a[2]=t2,a[3]=t5,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(t2);
t9=t6;
f_38515(t9,(C_word)C_eqp(t8,C_SCHEME_FALSE));}
else{
t8=t6;
f_38515(t8,C_SCHEME_FALSE);}}}

/* k38513 in mp:inops in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_38515(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38515,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t3=((C_word*)t0)[3];
f_38500(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38522,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[2]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t2;
f_38522(t5,(C_word)C_eqp(t4,C_SCHEME_TRUE));}
else{
t4=t2;
f_38522(t4,C_SCHEME_FALSE);}}}

/* k38520 in k38513 in mp:inops in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_38522(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38522,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[4],0,C_fix(127));
t3=((C_word*)t0)[3];
f_38500(2,t3,t2);}
else{
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38528,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word)li510),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_38528(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* do6541 in k38520 in k38513 in mp:inops in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_38528(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38528,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38538,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38548,a[2]=t2,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 85   <=");
C_less_or_equal_p(5,0,t4,C_retrieve(lf[746]),t5,C_retrieve(lf[752]));}}

/* k38546 in do6541 in k38520 in k38513 in mp:inops in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38548,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38552,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38556,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=(C_word)C_a_i_minus(&a,2,t4,C_retrieve(lf[746]));
C_trace("ChickenBridge.scm: 85   ash");
t6=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,C_fix(1),t5);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 85   error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],lf[800],t2);}}

/* k38554 in k38546 in do6541 in k38520 in k38513 in mp:inops in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   logior");
t2=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k38550 in k38546 in do6541 in k38520 in k38513 in mp:inops in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38538(2,t3,t2);}

/* k38536 in do6541 in k38520 in k38513 in mp:inops in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_38528(t3,((C_word*)t0)[2],t2);}

/* k38498 in mp:inops in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=((C_word*)t0)[3];
t3=((C_word*)((C_word*)t0)[2])[1];
t4=(C_word)C_i_foreign_fixnum_argumentp(t3);
t5=t2;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub421(C_SCHEME_UNDEFINED,t4));}

/* mp:inchans in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38391(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2r,(void*)f_38391r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_38391r(t0,t1,t2);}}

static void C_ccall f_38391r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38395,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 85   error");
t6=*((C_word*)lf[82]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[796]);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38410,a[2]=t2,a[3]=t5,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(t2);
t9=t6;
f_38410(t9,(C_word)C_eqp(t8,C_SCHEME_FALSE));}
else{
t8=t6;
f_38410(t8,C_SCHEME_FALSE);}}}

/* k38408 in mp:inchans in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_38410(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38410,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t3=((C_word*)t0)[3];
f_38395(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38417,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[2]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t2;
f_38417(t5,(C_word)C_eqp(t4,C_SCHEME_TRUE));}
else{
t4=t2;
f_38417(t4,C_SCHEME_FALSE);}}}

/* k38415 in k38408 in mp:inchans in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_38417(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38417,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[4],0,C_fix(65535));
t3=((C_word*)t0)[3];
f_38395(2,t3,t2);}
else{
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38423,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word)li508),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_38423(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* do6533 in k38415 in k38408 in mp:inchans in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_38423(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38423,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38433,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38443,a[2]=t2,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 85   <=");
C_less_or_equal_p(5,0,t4,C_fix(0),t5,C_fix(15));}}

/* k38441 in do6533 in k38415 in k38408 in mp:inchans in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38443,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38447,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38451,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 85   ash");
t5=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,C_fix(1),t4);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 85   error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],lf[797],t2);}}

/* k38449 in k38441 in do6533 in k38415 in k38408 in mp:inchans in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   logior");
t2=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k38445 in k38441 in do6533 in k38415 in k38408 in mp:inchans in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38433(2,t3,t2);}

/* k38431 in do6533 in k38415 in k38408 in mp:inchans in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_38423(t3,((C_word*)t0)[2],t2);}

/* k38393 in mp:inchans in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=((C_word*)t0)[3];
t3=((C_word*)((C_word*)t0)[2])[1];
t4=(C_word)C_i_foreign_fixnum_argumentp(t3);
t5=t2;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub417(C_SCHEME_UNDEFINED,t4));}

/* mp:inhook in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38372(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_38372,3,t0,t1,t2);}
if(C_truep((C_word)C_i_closurep(t2))){
t3=t2;
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7093,a[2]=t3,a[3]=((C_word)li506),tmp=(C_word)a,a+=4,tmp);
t5=t1;
t6=t5;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub439(C_SCHEME_UNDEFINED,t4));}
else{
t3=t1;
t4=t3;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub442(C_SCHEME_UNDEFINED));}}

/* f_7093 in mp:inhook in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7093(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_7093,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7099,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=t2,a[6]=((C_word*)t0)[2],a[7]=((C_word)li505),tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 77   call-with-current-continuation");
t7=*((C_word*)lf[794]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t1,t6);}

/* a7098 */
static void C_ccall f_7099(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7099,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7105,a[2]=t2,a[3]=((C_word)li503),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7125,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word)li504),tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 77   with-exception-handler");
t5=C_retrieve(lf[793]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t3,t4);}

/* a7124 in a7098 */
static void C_ccall f_7125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7125,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7129,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 77   $hook$");
t3=((C_word*)t0)[6];
((C_proc6)C_retrieve_proc(t3))(6,t3,t2,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k7127 in a7124 in a7098 */
static void C_ccall f_7129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* a7104 in a7098 */
static void C_ccall f_7105(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7105,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7109,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7116,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7120,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7123,a[2]=t2,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 77   condition-property-accessor");
t7=C_retrieve(lf[790]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[791],lf[792]);}

/* k7121 in a7104 in a7098 */
static void C_ccall f_7123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=t1;
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k7118 in a7104 in a7098 */
static void C_ccall f_7120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 77   sprintf");
t2=C_retrieve(lf[788]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[789],t1);}

/* k7114 in a7104 in a7098 */
static void C_ccall f_7116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 77   print-error");
t2=C_retrieve(lf[57]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k7107 in a7104 in a7098 */
static void C_ccall f_7109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 77   %cont");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],C_fix(-1));}

/* mp:recordseq in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38357(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_38357r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_38357r(t0,t1,t2);}}

static void C_ccall f_38357r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t2,C_fix(0)));
C_trace("ChickenBridge.scm: 85   ffi_mp_set_record_seq");
t5=C_retrieve(lf[786]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}

/* mp:clearseq in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38351,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub436(C_SCHEME_UNDEFINED));}

/* mp:plotseq in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38345,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub434(C_SCHEME_UNDEFINED));}

/* mp:copyseq in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38339,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub432(C_SCHEME_UNDEFINED));}

/* mp:saveseq in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38333,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub430(C_SCHEME_UNDEFINED));}

/* mp:playseq in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38327,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub428(C_SCHEME_UNDEFINED));}

/* mp:tuning in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38297(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2rv,(void*)f_38297r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_38297r(t0,t1,t2);}}

static void C_ccall f_38297r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(4);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?C_fix(1):(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38307,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_integerp(t4))){
C_trace("ChickenBridge.scm: 85   <");
C_lessp(5,0,t5,C_fix(0),t4,C_fix(17));}
else{
t6=t5;
f_38307(2,t6,C_SCHEME_FALSE);}}

/* k38305 in mp:tuning in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[2]);
t4=t2;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub425(C_SCHEME_UNDEFINED,t3));}
else{
C_trace("ChickenBridge.scm: 85   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[779],((C_word*)t0)[2]);}}

/* mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37868(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_37868r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_37868r(t0,t1,t2);}}

static void C_ccall f_37868r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(8192);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_37872,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_37872(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[763]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38175,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[116],lf[763]);}
else{
t23=t22;
f_38175(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[772]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38210,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[116],lf[772]);}
else{
t24=t23;
f_38210(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[767]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38245,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[116],lf[767]);}
else{
t25=t24;
f_38245(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38274,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[107],t2);}
else{
t25=t24;
f_38274(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k38272 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38274,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38281,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38289,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k38287 in k38272 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_38281(2,t2,C_SCHEME_UNDEFINED);}}

/* k38279 in k38272 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37872(t5,t4);}

/* k38243 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38245,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38249,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_38249(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k38247 in k38243 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37872(t7,t6);}

/* k38208 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38210,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38214,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_38214(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k38212 in k38208 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37872(t7,t6);}

/* k38173 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38175,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38179,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_38179(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k38177 in k38173 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37872(t7,t6);}

/* k37870 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_37872(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37872,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_37875,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_37875(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[763]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38040,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[763]);}
else{
t6=t5;
f_38040(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[772]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38075,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[772]);}
else{
t7=t6;
f_38075(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38110,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[767]);}
else{
t8=t7;
f_38110(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38139,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[107],((C_word*)t0)[6]);}
else{
t8=t7;
f_38139(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k38137 in k37870 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38139,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38146,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38154,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k38152 in k38137 in k37870 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_38146(2,t2,C_SCHEME_UNDEFINED);}}

/* k38144 in k38137 in k37870 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37875(t5,t4);}

/* k38108 in k37870 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38110,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38114,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_38114(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k38112 in k38108 in k37870 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37875(t7,t6);}

/* k38073 in k37870 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38075,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38079,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_38079(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k38077 in k38073 in k37870 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37875(t7,t6);}

/* k38038 in k37870 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38040,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38044,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_38044(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k38042 in k38038 in k37870 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37875(t7,t6);}

/* k37873 in k37870 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_37875(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37875,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37878,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_37878(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[763]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37905,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[763]);}
else{
t6=t5;
f_37905(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[772]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37940,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[772]);}
else{
t7=t6;
f_37940(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37975,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[767]);}
else{
t8=t7;
f_37975(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38004,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[107],((C_word*)t0)[6]);}
else{
t8=t7;
f_38004(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k38002 in k37873 in k37870 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38004,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38011,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38019,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k38017 in k38002 in k37873 in k37870 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_38011(2,t2,C_SCHEME_UNDEFINED);}}

/* k38009 in k38002 in k37873 in k37870 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_38011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37878(t5,t4);}

/* k37973 in k37873 in k37870 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37975,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37979,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_37979(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37977 in k37973 in k37873 in k37870 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37878(t7,t6);}

/* k37938 in k37873 in k37870 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37940,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37944,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_37944(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37942 in k37938 in k37873 in k37870 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37878(t7,t6);}

/* k37903 in k37873 in k37870 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37905,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37909,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_37909(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37907 in k37903 in k37873 in k37870 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37878(t7,t6);}

/* k37876 in k37873 in k37870 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_37878(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37878,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37881,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_37881(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[103],((C_word*)t0)[2]);}}

/* k37879 in k37876 in k37873 in k37870 in mp:bend in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   ffi_mp_send_data");
f_7780(((C_word*)t0)[5],C_retrieve(lf[752]),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37439(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_37439r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_37439r(t0,t1,t2);}}

static void C_ccall f_37439r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_37443,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_37443(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[763]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37746,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[116],lf[763]);}
else{
t23=t22;
f_37746(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[772]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37781,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[116],lf[772]);}
else{
t24=t23;
f_37781(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[767]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37816,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[116],lf[767]);}
else{
t25=t24;
f_37816(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37845,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[107],t2);}
else{
t25=t24;
f_37845(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k37843 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37845,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37852,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37860,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k37858 in k37843 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_37852(2,t2,C_SCHEME_UNDEFINED);}}

/* k37850 in k37843 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37443(t5,t4);}

/* k37814 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37816,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37820,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_37820(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37818 in k37814 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37443(t7,t6);}

/* k37779 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37781,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37785,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_37785(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37783 in k37779 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37443(t7,t6);}

/* k37744 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37746,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37750,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_37750(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37748 in k37744 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37443(t7,t6);}

/* k37441 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_37443(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37443,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_37446,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_37446(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[763]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37611,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[763]);}
else{
t6=t5;
f_37611(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[772]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37646,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[772]);}
else{
t7=t6;
f_37646(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37681,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[767]);}
else{
t8=t7;
f_37681(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37710,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[107],((C_word*)t0)[6]);}
else{
t8=t7;
f_37710(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k37708 in k37441 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37710,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37717,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37725,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k37723 in k37708 in k37441 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_37717(2,t2,C_SCHEME_UNDEFINED);}}

/* k37715 in k37708 in k37441 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37446(t5,t4);}

/* k37679 in k37441 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37681,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37685,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_37685(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37683 in k37679 in k37441 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37446(t7,t6);}

/* k37644 in k37441 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37646,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37650,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_37650(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37648 in k37644 in k37441 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37446(t7,t6);}

/* k37609 in k37441 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37611,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37615,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_37615(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37613 in k37609 in k37441 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37446(t7,t6);}

/* k37444 in k37441 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_37446(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37446,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37449,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_37449(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[763]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37476,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[763]);}
else{
t6=t5;
f_37476(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[772]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37511,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[772]);}
else{
t7=t6;
f_37511(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37546,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[767]);}
else{
t8=t7;
f_37546(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37575,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[107],((C_word*)t0)[6]);}
else{
t8=t7;
f_37575(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k37573 in k37444 in k37441 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37575,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37582,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37590,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k37588 in k37573 in k37444 in k37441 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_37582(2,t2,C_SCHEME_UNDEFINED);}}

/* k37580 in k37573 in k37444 in k37441 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37449(t5,t4);}

/* k37544 in k37444 in k37441 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37546,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37550,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_37550(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37548 in k37544 in k37444 in k37441 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37449(t7,t6);}

/* k37509 in k37444 in k37441 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37511,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37515,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_37515(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37513 in k37509 in k37444 in k37441 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37449(t7,t6);}

/* k37474 in k37444 in k37441 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37476,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37480,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_37480(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37478 in k37474 in k37444 in k37441 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37449(t7,t6);}

/* k37447 in k37444 in k37441 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_37449(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37449,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37452,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_37452(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[103],((C_word*)t0)[2]);}}

/* k37450 in k37447 in k37444 in k37441 in mp:press in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   ffi_mp_send_data");
f_7780(((C_word*)t0)[5],C_retrieve(lf[751]),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37010(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_37010r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_37010r(t0,t1,t2);}}

static void C_ccall f_37010r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_37014,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_37014(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[763]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37317,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[116],lf[763]);}
else{
t23=t22;
f_37317(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[772]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37352,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[116],lf[772]);}
else{
t24=t23;
f_37352(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[767]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37387,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[116],lf[767]);}
else{
t25=t24;
f_37387(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37416,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[107],t2);}
else{
t25=t24;
f_37416(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k37414 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37416,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37423,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37431,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k37429 in k37414 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_37423(2,t2,C_SCHEME_UNDEFINED);}}

/* k37421 in k37414 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37014(t5,t4);}

/* k37385 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37387,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37391,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_37391(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37389 in k37385 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37014(t7,t6);}

/* k37350 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37352,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37356,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_37356(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37354 in k37350 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37014(t7,t6);}

/* k37315 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37317,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37321,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_37321(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37319 in k37315 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37014(t7,t6);}

/* k37012 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_37014(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37014,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_37017,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_37017(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[763]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37182,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[763]);}
else{
t6=t5;
f_37182(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[772]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37217,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[772]);}
else{
t7=t6;
f_37217(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37252,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[767]);}
else{
t8=t7;
f_37252(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37281,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[107],((C_word*)t0)[6]);}
else{
t8=t7;
f_37281(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k37279 in k37012 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37281,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37288,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37296,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k37294 in k37279 in k37012 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_37288(2,t2,C_SCHEME_UNDEFINED);}}

/* k37286 in k37279 in k37012 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37017(t5,t4);}

/* k37250 in k37012 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37252,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37256,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_37256(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37254 in k37250 in k37012 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37017(t7,t6);}

/* k37215 in k37012 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37217,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37221,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_37221(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37219 in k37215 in k37012 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37017(t7,t6);}

/* k37180 in k37012 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37182,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37186,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_37186(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37184 in k37180 in k37012 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37017(t7,t6);}

/* k37015 in k37012 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_37017(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37017,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37020,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_37020(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[763]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37047,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[763]);}
else{
t6=t5;
f_37047(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[772]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37082,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[772]);}
else{
t7=t6;
f_37082(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37117,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[767]);}
else{
t8=t7;
f_37117(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37146,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[107],((C_word*)t0)[6]);}
else{
t8=t7;
f_37146(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k37144 in k37015 in k37012 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37146,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37153,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37161,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k37159 in k37144 in k37015 in k37012 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_37153(2,t2,C_SCHEME_UNDEFINED);}}

/* k37151 in k37144 in k37015 in k37012 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37020(t5,t4);}

/* k37115 in k37015 in k37012 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37117,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37121,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_37121(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37119 in k37115 in k37015 in k37012 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37020(t7,t6);}

/* k37080 in k37015 in k37012 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37082,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37086,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_37086(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37084 in k37080 in k37015 in k37012 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37020(t7,t6);}

/* k37045 in k37015 in k37012 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37047,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37051,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_37051(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k37049 in k37045 in k37015 in k37012 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37020(t7,t6);}

/* k37018 in k37015 in k37012 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_37020(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37020,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37023,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_37023(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[103],((C_word*)t0)[2]);}}

/* k37021 in k37018 in k37015 in k37012 in mp:prog in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   ffi_mp_send_data");
f_7780(((C_word*)t0)[5],C_retrieve(lf[750]),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36303(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_36303r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_36303r(t0,t1,t2);}}

static void C_ccall f_36303r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_36307,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_36307(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[763]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36853,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[116],lf[763]);}
else{
t27=t26;
f_36853(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[774]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36888,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[116],lf[774]);}
else{
t28=t27;
f_36888(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[772]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36923,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[116],lf[772]);}
else{
t29=t28;
f_36923(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[767]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36958,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[116],lf[767]);}
else{
t30=t29;
f_36958(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36987,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[107],t2);}
else{
t30=t29;
f_36987(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k36985 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36987,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36994,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37002,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k37000 in k36985 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_37002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36994(2,t2,C_SCHEME_UNDEFINED);}}

/* k36992 in k36985 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_36307(t5,t4);}

/* k36956 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36958,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36962,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_36962(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36960 in k36956 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36307(t7,t6);}

/* k36921 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36923,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36927,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_36927(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36925 in k36921 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36307(t7,t6);}

/* k36886 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36888,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36892,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_36892(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36890 in k36886 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36307(t7,t6);}

/* k36851 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36853,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36857,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_36857(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36855 in k36851 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36307(t7,t6);}

/* k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_36307(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36307,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_36310,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_36310(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[763]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36683,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[763]);}
else{
t6=t5;
f_36683(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[774]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36718,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[774]);}
else{
t7=t6;
f_36718(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[772]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36753,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[772]);}
else{
t8=t7;
f_36753(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36788,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[116],lf[767]);}
else{
t9=t8;
f_36788(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36817,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[107],((C_word*)t0)[7]);}
else{
t9=t8;
f_36817(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k36815 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36817,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36824,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36832,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36830 in k36815 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36824(2,t2,C_SCHEME_UNDEFINED);}}

/* k36822 in k36815 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_36310(t5,t4);}

/* k36786 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36788,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36792,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_36792(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36790 in k36786 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36310(t7,t6);}

/* k36751 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36753,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36757,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_36757(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36755 in k36751 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36310(t7,t6);}

/* k36716 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36718,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36722,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_36722(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36720 in k36716 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36310(t7,t6);}

/* k36681 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36683,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36687,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_36687(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36685 in k36681 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36310(t7,t6);}

/* k36308 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_36310(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36310,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_36313,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_36313(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[763]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36513,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[763]);}
else{
t6=t5;
f_36513(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[774]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36548,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[774]);}
else{
t7=t6;
f_36548(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[772]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36583,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[772]);}
else{
t8=t7;
f_36583(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36618,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[116],lf[767]);}
else{
t9=t8;
f_36618(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36647,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[107],((C_word*)t0)[7]);}
else{
t9=t8;
f_36647(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k36645 in k36308 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36647,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36654,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36662,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36660 in k36645 in k36308 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36654(2,t2,C_SCHEME_UNDEFINED);}}

/* k36652 in k36645 in k36308 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_36313(t5,t4);}

/* k36616 in k36308 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36618,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36622,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_36622(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36620 in k36616 in k36308 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36313(t7,t6);}

/* k36581 in k36308 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36583(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36583,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36587,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_36587(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36585 in k36581 in k36308 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36313(t7,t6);}

/* k36546 in k36308 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36548,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36552,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_36552(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36550 in k36546 in k36308 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36313(t7,t6);}

/* k36511 in k36308 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36513,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36517,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_36517(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36515 in k36511 in k36308 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36313(t7,t6);}

/* k36311 in k36308 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_36313(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36313,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_36316,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_36316(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[763]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36343,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[763]);}
else{
t6=t5;
f_36343(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[774]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36378,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[774]);}
else{
t7=t6;
f_36378(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[772]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36413,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[772]);}
else{
t8=t7;
f_36413(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36448,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[116],lf[767]);}
else{
t9=t8;
f_36448(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36477,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[107],((C_word*)t0)[7]);}
else{
t9=t8;
f_36477(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k36475 in k36311 in k36308 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36477,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36484,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36492,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36490 in k36475 in k36311 in k36308 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36484(2,t2,C_SCHEME_UNDEFINED);}}

/* k36482 in k36475 in k36311 in k36308 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_36316(t5,t4);}

/* k36446 in k36311 in k36308 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36448,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36452,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_36452(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36450 in k36446 in k36311 in k36308 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36316(t7,t6);}

/* k36411 in k36311 in k36308 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36413,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36417,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_36417(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36415 in k36411 in k36311 in k36308 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36316(t7,t6);}

/* k36376 in k36311 in k36308 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36378,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36382,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_36382(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36380 in k36376 in k36311 in k36308 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36316(t7,t6);}

/* k36341 in k36311 in k36308 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36343,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36347,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_36347(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36345 in k36341 in k36311 in k36308 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_36316(t7,t6);}

/* k36314 in k36311 in k36308 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_36316(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36316,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36319,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_36319(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[103],((C_word*)t0)[2]);}}

/* k36317 in k36314 in k36311 in k36308 in k36305 in mp:ctrl in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   ffi_mp_send_data");
f_7780(((C_word*)t0)[6],C_retrieve(lf[749]),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35596(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_35596r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_35596r(t0,t1,t2);}}

static void C_ccall f_35596r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_35600,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_35600(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[763]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36146,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[116],lf[763]);}
else{
t27=t26;
f_36146(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[765]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36181,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[116],lf[765]);}
else{
t28=t27;
f_36181(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[772]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36216,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[116],lf[772]);}
else{
t29=t28;
f_36216(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[767]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36251,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[116],lf[767]);}
else{
t30=t29;
f_36251(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36280,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[107],t2);}
else{
t30=t29;
f_36280(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k36278 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36280,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36287,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36295,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36293 in k36278 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36287(2,t2,C_SCHEME_UNDEFINED);}}

/* k36285 in k36278 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35600(t5,t4);}

/* k36249 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36251,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36255,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_36255(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36253 in k36249 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35600(t7,t6);}

/* k36214 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36216,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36220,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_36220(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36218 in k36214 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35600(t7,t6);}

/* k36179 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36181,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36185,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_36185(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36183 in k36179 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35600(t7,t6);}

/* k36144 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36146,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36150,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_36150(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36148 in k36144 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35600(t7,t6);}

/* k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_35600(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35600,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_35603,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_35603(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[763]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35976,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[763]);}
else{
t6=t5;
f_35976(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36011,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[765]);}
else{
t7=t6;
f_36011(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[772]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36046,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[772]);}
else{
t8=t7;
f_36046(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36081,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[116],lf[767]);}
else{
t9=t8;
f_36081(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36110,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[107],((C_word*)t0)[7]);}
else{
t9=t8;
f_36110(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k36108 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36110,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36117,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36125,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36123 in k36108 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36117(2,t2,C_SCHEME_UNDEFINED);}}

/* k36115 in k36108 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35603(t5,t4);}

/* k36079 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36081,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36085,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_36085(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36083 in k36079 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35603(t7,t6);}

/* k36044 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36046,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36050,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_36050(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36048 in k36044 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35603(t7,t6);}

/* k36009 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36011,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36015,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_36015(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36013 in k36009 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_36015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35603(t7,t6);}

/* k35974 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35976,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35980,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_35980(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35978 in k35974 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35603(t7,t6);}

/* k35601 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_35603(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35603,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_35606,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_35606(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[763]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35806,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[763]);}
else{
t6=t5;
f_35806(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35841,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[765]);}
else{
t7=t6;
f_35841(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[772]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35876,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[772]);}
else{
t8=t7;
f_35876(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35911,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[116],lf[767]);}
else{
t9=t8;
f_35911(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35940,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[107],((C_word*)t0)[7]);}
else{
t9=t8;
f_35940(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k35938 in k35601 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35940,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35947,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35955,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35953 in k35938 in k35601 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35947(2,t2,C_SCHEME_UNDEFINED);}}

/* k35945 in k35938 in k35601 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35606(t5,t4);}

/* k35909 in k35601 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35911,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35915,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_35915(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35913 in k35909 in k35601 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35606(t7,t6);}

/* k35874 in k35601 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35876,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35880,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_35880(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35878 in k35874 in k35601 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35606(t7,t6);}

/* k35839 in k35601 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35841,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35845,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_35845(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35843 in k35839 in k35601 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35606(t7,t6);}

/* k35804 in k35601 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35806,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35810,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_35810(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35808 in k35804 in k35601 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35606(t7,t6);}

/* k35604 in k35601 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_35606(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35606,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_35609,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_35609(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[763]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35636,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[763]);}
else{
t6=t5;
f_35636(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35671,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[765]);}
else{
t7=t6;
f_35671(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[772]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35706,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[772]);}
else{
t8=t7;
f_35706(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35741,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[116],lf[767]);}
else{
t9=t8;
f_35741(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35770,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[107],((C_word*)t0)[7]);}
else{
t9=t8;
f_35770(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k35768 in k35604 in k35601 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35770,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35777,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35785,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35783 in k35768 in k35604 in k35601 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35777(2,t2,C_SCHEME_UNDEFINED);}}

/* k35775 in k35768 in k35604 in k35601 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35609(t5,t4);}

/* k35739 in k35604 in k35601 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35741,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35745,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_35745(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35743 in k35739 in k35604 in k35601 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35609(t7,t6);}

/* k35704 in k35604 in k35601 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35706,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35710,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_35710(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35708 in k35704 in k35604 in k35601 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35609(t7,t6);}

/* k35669 in k35604 in k35601 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35671,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35675,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_35675(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35673 in k35669 in k35604 in k35601 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35609(t7,t6);}

/* k35634 in k35604 in k35601 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35636,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35640,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_35640(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35638 in k35634 in k35604 in k35601 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35609(t7,t6);}

/* k35607 in k35604 in k35601 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_35609(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35609,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35612,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_35612(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[103],((C_word*)t0)[2]);}}

/* k35610 in k35607 in k35604 in k35601 in k35598 in mp:touch in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   ffi_mp_send_data");
f_7780(((C_word*)t0)[6],C_retrieve(lf[748]),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34889(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_34889r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_34889r(t0,t1,t2);}}

static void C_ccall f_34889r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(64);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_34893,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_34893(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[763]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35439,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[116],lf[763]);}
else{
t27=t26;
f_35439(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[765]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35474,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[116],lf[765]);}
else{
t28=t27;
f_35474(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[770]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35509,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[116],lf[770]);}
else{
t29=t28;
f_35509(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[767]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35544,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[116],lf[767]);}
else{
t30=t29;
f_35544(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35573,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[107],t2);}
else{
t30=t29;
f_35573(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k35571 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35573,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35580,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35588,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35586 in k35571 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35580(2,t2,C_SCHEME_UNDEFINED);}}

/* k35578 in k35571 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34893(t5,t4);}

/* k35542 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35544,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35548,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_35548(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35546 in k35542 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34893(t7,t6);}

/* k35507 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35509,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35513,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_35513(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35511 in k35507 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34893(t7,t6);}

/* k35472 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35474,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35478,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_35478(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35476 in k35472 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34893(t7,t6);}

/* k35437 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35439,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35443,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_35443(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35441 in k35437 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34893(t7,t6);}

/* k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_34893(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34893,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_34896,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_34896(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[763]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35269,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[763]);}
else{
t6=t5;
f_35269(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35304,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[765]);}
else{
t7=t6;
f_35304(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[770]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35339,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[770]);}
else{
t8=t7;
f_35339(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35374,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[116],lf[767]);}
else{
t9=t8;
f_35374(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35403,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[107],((C_word*)t0)[7]);}
else{
t9=t8;
f_35403(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k35401 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35403,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35410,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35418,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35416 in k35401 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35410(2,t2,C_SCHEME_UNDEFINED);}}

/* k35408 in k35401 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34896(t5,t4);}

/* k35372 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35374,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35378,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_35378(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35376 in k35372 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34896(t7,t6);}

/* k35337 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35339,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35343,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_35343(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35341 in k35337 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34896(t7,t6);}

/* k35302 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35304,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35308,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_35308(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35306 in k35302 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34896(t7,t6);}

/* k35267 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35269,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35273,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_35273(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35271 in k35267 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34896(t7,t6);}

/* k34894 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_34896(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34896,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_34899,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_34899(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[763]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35099,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[763]);}
else{
t6=t5;
f_35099(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35134,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[765]);}
else{
t7=t6;
f_35134(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[770]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35169,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[770]);}
else{
t8=t7;
f_35169(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35204,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[116],lf[767]);}
else{
t9=t8;
f_35204(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35233,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[107],((C_word*)t0)[7]);}
else{
t9=t8;
f_35233(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k35231 in k34894 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35233,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35240,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35248,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35246 in k35231 in k34894 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35240(2,t2,C_SCHEME_UNDEFINED);}}

/* k35238 in k35231 in k34894 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34899(t5,t4);}

/* k35202 in k34894 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35204,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35208,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_35208(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35206 in k35202 in k34894 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34899(t7,t6);}

/* k35167 in k34894 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35169,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35173,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_35173(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35171 in k35167 in k34894 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34899(t7,t6);}

/* k35132 in k34894 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35134,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35138,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_35138(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35136 in k35132 in k34894 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34899(t7,t6);}

/* k35097 in k34894 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35099,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35103,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_35103(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35101 in k35097 in k34894 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34899(t7,t6);}

/* k34897 in k34894 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_34899(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34899,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_34902,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_34902(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[763]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34929,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[763]);}
else{
t6=t5;
f_34929(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34964,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[765]);}
else{
t7=t6;
f_34964(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[770]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34999,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[770]);}
else{
t8=t7;
f_34999(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35034,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[116],lf[767]);}
else{
t9=t8;
f_35034(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35063,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[107],((C_word*)t0)[7]);}
else{
t9=t8;
f_35063(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k35061 in k34897 in k34894 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35063,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35070,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35078,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35076 in k35061 in k34897 in k34894 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35070(2,t2,C_SCHEME_UNDEFINED);}}

/* k35068 in k35061 in k34897 in k34894 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34902(t5,t4);}

/* k35032 in k34897 in k34894 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35034,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35038,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_35038(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35036 in k35032 in k34897 in k34894 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34902(t7,t6);}

/* k34997 in k34897 in k34894 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34999,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35003,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_35003(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35001 in k34997 in k34897 in k34894 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_35003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34902(t7,t6);}

/* k34962 in k34897 in k34894 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34964,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34968,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_34968(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34966 in k34962 in k34897 in k34894 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34902(t7,t6);}

/* k34927 in k34897 in k34894 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34929,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34933,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_34933(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34931 in k34927 in k34897 in k34894 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34902(t7,t6);}

/* k34900 in k34897 in k34894 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_34902(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34902,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34905,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_34905(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[103],((C_word*)t0)[2]);}}

/* k34903 in k34900 in k34897 in k34894 in k34891 in mp:on in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   ffi_mp_send_data");
f_7780(((C_word*)t0)[6],C_retrieve(lf[747]),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34460(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_34460r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_34460r(t0,t1,t2);}}

static void C_ccall f_34460r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_34464,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_34464(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[763]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34767,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[116],lf[763]);}
else{
t23=t22;
f_34767(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[765]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34802,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[116],lf[765]);}
else{
t24=t23;
f_34802(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[767]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34837,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[116],lf[767]);}
else{
t25=t24;
f_34837(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34866,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[107],t2);}
else{
t25=t24;
f_34866(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k34864 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34866,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34873,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34881,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34879 in k34864 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34873(2,t2,C_SCHEME_UNDEFINED);}}

/* k34871 in k34864 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34464(t5,t4);}

/* k34835 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34837,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34841,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_34841(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34839 in k34835 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34464(t7,t6);}

/* k34800 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34802,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34806,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_34806(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34804 in k34800 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34464(t7,t6);}

/* k34765 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34767,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34771,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_34771(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34769 in k34765 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34464(t7,t6);}

/* k34462 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_34464(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34464,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_34467,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_34467(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[763]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34632,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[763]);}
else{
t6=t5;
f_34632(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34667,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[765]);}
else{
t7=t6;
f_34667(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34702,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[767]);}
else{
t8=t7;
f_34702(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34731,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[107],((C_word*)t0)[6]);}
else{
t8=t7;
f_34731(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k34729 in k34462 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34731,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34738,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34746,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34744 in k34729 in k34462 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34738(2,t2,C_SCHEME_UNDEFINED);}}

/* k34736 in k34729 in k34462 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34467(t5,t4);}

/* k34700 in k34462 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34702,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34706,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_34706(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34704 in k34700 in k34462 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34467(t7,t6);}

/* k34665 in k34462 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34667,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34671,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_34671(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34669 in k34665 in k34462 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34467(t7,t6);}

/* k34630 in k34462 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34632,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34636,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_34636(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34634 in k34630 in k34462 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34467(t7,t6);}

/* k34465 in k34462 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_34467(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34467,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34470,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_34470(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[763]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34497,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[763]);}
else{
t6=t5;
f_34497(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34532,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[765]);}
else{
t7=t6;
f_34532(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34567,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[767]);}
else{
t8=t7;
f_34567(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34596,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[107],((C_word*)t0)[6]);}
else{
t8=t7;
f_34596(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k34594 in k34465 in k34462 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34596,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34603,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34611,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34609 in k34594 in k34465 in k34462 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34603(2,t2,C_SCHEME_UNDEFINED);}}

/* k34601 in k34594 in k34465 in k34462 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34470(t5,t4);}

/* k34565 in k34465 in k34462 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34567,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34571,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_34571(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34569 in k34565 in k34465 in k34462 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34470(t7,t6);}

/* k34530 in k34465 in k34462 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34532,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34536,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_34536(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34534 in k34530 in k34465 in k34462 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34470(t7,t6);}

/* k34495 in k34465 in k34462 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34497,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34501,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_34501(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34499 in k34495 in k34465 in k34462 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34470(t7,t6);}

/* k34468 in k34465 in k34462 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_34470(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34470,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34473,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_34473(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[103],((C_word*)t0)[2]);}}

/* k34471 in k34468 in k34465 in k34462 in mp:off in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   ffi_mp_send_data");
f_7780(((C_word*)t0)[5],C_retrieve(lf[746]),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33405(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+86)){
C_save_and_reclaim((void*)tr2r,(void*)f_33405r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_33405r(t0,t1,t2);}}

static void C_ccall f_33405r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word *a=C_alloc(86);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=lf[761];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(60);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=lf[762];
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_fix(0);
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=t2;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_33409,a[2]=t22,a[3]=t20,a[4]=t18,a[5]=t16,a[6]=t26,a[7]=t14,a[8]=t2,a[9]=t24,a[10]=t12,a[11]=t10,a[12]=t8,a[13]=t6,a[14]=t4,a[15]=t1,tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t24)[1]))){
t28=t27;
f_33409(t28,C_SCHEME_UNDEFINED);}
else{
t28=(C_word)C_i_car(((C_word*)t24)[1]);
t29=(C_word)C_eqp(t28,lf[763]);
if(C_truep(t29)){
t30=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34268,a[2]=t2,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t14,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t31=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t31))(4,t31,t30,lf[116],lf[763]);}
else{
t31=t30;
f_34268(2,t31,C_SCHEME_UNDEFINED);}}
else{
t30=(C_word)C_eqp(t28,lf[764]);
if(C_truep(t30)){
t31=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34303,a[2]=t2,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t16,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t32=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[116],lf[764]);}
else{
t32=t31;
f_34303(2,t32,C_SCHEME_UNDEFINED);}}
else{
t31=(C_word)C_eqp(t28,lf[765]);
if(C_truep(t31)){
t32=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34338,a[2]=t2,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t18,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t33=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t33))(4,t33,t32,lf[116],lf[765]);}
else{
t33=t32;
f_34338(2,t33,C_SCHEME_UNDEFINED);}}
else{
t32=(C_word)C_eqp(t28,lf[766]);
if(C_truep(t32)){
t33=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34373,a[2]=t2,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t20,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t20)[1])){
C_trace("error");
t34=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t34))(4,t34,t33,lf[116],lf[766]);}
else{
t34=t33;
f_34373(2,t34,C_SCHEME_UNDEFINED);}}
else{
t33=(C_word)C_eqp(t28,lf[767]);
if(C_truep(t33)){
t34=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34408,a[2]=t2,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t22,a[7]=t12,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t35=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t35))(4,t35,t34,lf[116],lf[767]);}
else{
t35=t34;
f_34408(2,t35,C_SCHEME_UNDEFINED);}}
else{
t34=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34437,a[2]=t27,a[3]=t14,a[4]=t4,a[5]=t24,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t26)[1])){
C_trace("error");
t35=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t35))(4,t35,t34,lf[107],t2);}
else{
t35=t34;
f_34437(2,t35,C_SCHEME_UNDEFINED);}}}}}}}}

/* k34435 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34437,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34444,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34452,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34450 in k34435 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34444(2,t2,C_SCHEME_UNDEFINED);}}

/* k34442 in k34435 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33409(t5,t4);}

/* k34406 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34408,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34412,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_34412(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34410 in k34406 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33409(t7,t6);}

/* k34371 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34373,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34377,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_34377(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34375 in k34371 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33409(t7,t6);}

/* k34336 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34338,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34342,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_34342(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34340 in k34336 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33409(t7,t6);}

/* k34301 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34303,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34307,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_34307(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34305 in k34301 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33409(t7,t6);}

/* k34266 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34268,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34272,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_34272(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34270 in k34266 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33409(t7,t6);}

/* k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_33409(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[62],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33409,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_33412,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t3=t2;
f_33412(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t4=(C_word)C_eqp(t3,lf[763]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34063,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[763]);}
else{
t6=t5;
f_34063(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[764]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34098,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[764]);}
else{
t7=t6;
f_34098(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34133,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[765]);}
else{
t8=t7;
f_34133(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[766]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34168,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[116],lf[766]);}
else{
t9=t8;
f_34168(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34203,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t10=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[116],lf[767]);}
else{
t10=t9;
f_34203(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34232,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[9],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t10=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[107],((C_word*)t0)[8]);}
else{
t10=t9;
f_34232(2,t10,C_SCHEME_UNDEFINED);}}}}}}}}

/* k34230 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34232,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34239,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34247,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34245 in k34230 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34239(2,t2,C_SCHEME_UNDEFINED);}}

/* k34237 in k34230 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33412(t5,t4);}

/* k34201 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34203,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34207,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_34207(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34205 in k34201 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33412(t7,t6);}

/* k34166 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34168,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34172,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_34172(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34170 in k34166 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33412(t7,t6);}

/* k34131 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34133,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34137,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_34137(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34135 in k34131 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33412(t7,t6);}

/* k34096 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34098,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34102,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_34102(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34100 in k34096 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33412(t7,t6);}

/* k34061 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34063,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34067,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_34067(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34065 in k34061 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33412(t7,t6);}

/* k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_33412(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[62],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33412,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_33415,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t3=t2;
f_33415(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t4=(C_word)C_eqp(t3,lf[763]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33858,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[763]);}
else{
t6=t5;
f_33858(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[764]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33893,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[764]);}
else{
t7=t6;
f_33893(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33928,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[765]);}
else{
t8=t7;
f_33928(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[766]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33963,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[116],lf[766]);}
else{
t9=t8;
f_33963(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33998,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t10=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[116],lf[767]);}
else{
t10=t9;
f_33998(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34027,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[12],a[5]=((C_word*)t0)[9],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t10=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[107],((C_word*)t0)[8]);}
else{
t10=t9;
f_34027(2,t10,C_SCHEME_UNDEFINED);}}}}}}}}

/* k34025 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34027,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34034,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34042,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34040 in k34025 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34034(2,t2,C_SCHEME_UNDEFINED);}}

/* k34032 in k34025 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33415(t5,t4);}

/* k33996 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33998,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34002,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_34002(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34000 in k33996 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_34002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33415(t7,t6);}

/* k33961 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33963,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33967,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_33967(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33965 in k33961 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33415(t7,t6);}

/* k33926 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33928,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33932,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_33932(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33930 in k33926 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33415(t7,t6);}

/* k33891 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33893,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33897,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_33897(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33895 in k33891 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33415(t7,t6);}

/* k33856 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33858,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33862,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_33862(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33860 in k33856 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33415(t7,t6);}

/* k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_33415(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[62],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33415,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_33418,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t3=t2;
f_33418(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t4=(C_word)C_eqp(t3,lf[763]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33653,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[763]);}
else{
t6=t5;
f_33653(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[764]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33688,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[764]);}
else{
t7=t6;
f_33688(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33723,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[765]);}
else{
t8=t7;
f_33723(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[766]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33758,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[116],lf[766]);}
else{
t9=t8;
f_33758(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33793,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t10=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[116],lf[767]);}
else{
t10=t9;
f_33793(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33822,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[9],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t10=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[107],((C_word*)t0)[8]);}
else{
t10=t9;
f_33822(2,t10,C_SCHEME_UNDEFINED);}}}}}}}}

/* k33820 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33822,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33829,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33837,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33835 in k33820 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33829(2,t2,C_SCHEME_UNDEFINED);}}

/* k33827 in k33820 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33418(t5,t4);}

/* k33791 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33793,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33797,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_33797(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33795 in k33791 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33418(t7,t6);}

/* k33756 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33758,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33762,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_33762(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33760 in k33756 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33418(t7,t6);}

/* k33721 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33723(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33723,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33727,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_33727(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33725 in k33721 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33418(t7,t6);}

/* k33686 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33688,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33692,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_33692(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33690 in k33686 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33418(t7,t6);}

/* k33651 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33653,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33657,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_33657(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33655 in k33651 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33418(t7,t6);}

/* k33416 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_33418(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[56],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33418,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_33421,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],a[9]=((C_word*)t0)[15],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t3=t2;
f_33421(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t4=(C_word)C_eqp(t3,lf[763]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33448,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[763]);}
else{
t6=t5;
f_33448(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[764]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33483,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[764]);}
else{
t7=t6;
f_33483(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[765]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33518,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[765]);}
else{
t8=t7;
f_33518(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[766]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33553,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[116],lf[766]);}
else{
t9=t8;
f_33553(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[767]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33588,a[2]=((C_word*)t0)[8],a[3]=t2,a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t10=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[116],lf[767]);}
else{
t10=t9;
f_33588(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33617,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[9],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t10=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[107],((C_word*)t0)[8]);}
else{
t10=t9;
f_33617(2,t10,C_SCHEME_UNDEFINED);}}}}}}}}

/* k33615 in k33416 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33617,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33624,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33632,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33630 in k33615 in k33416 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33624(2,t2,C_SCHEME_UNDEFINED);}}

/* k33622 in k33615 in k33416 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33421(t5,t4);}

/* k33586 in k33416 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33588,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33592,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_33592(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33590 in k33586 in k33416 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33421(t7,t6);}

/* k33551 in k33416 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33553,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33557,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_33557(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33555 in k33551 in k33416 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33421(t7,t6);}

/* k33516 in k33416 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33518,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33522,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_33522(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33520 in k33516 in k33416 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33421(t7,t6);}

/* k33481 in k33416 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33483,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33487,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_33487(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33485 in k33481 in k33416 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33421(t7,t6);}

/* k33446 in k33416 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33448,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33452,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_33452(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33450 in k33446 in k33416 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33421(t7,t6);}

/* k33419 in k33416 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_33421(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33421,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33424,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_33424(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[103],((C_word*)t0)[2]);}}

/* k33422 in k33419 in k33416 in k33413 in k33410 in k33407 in mp:midi in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a;
t2=((C_word*)t0)[7];
t3=((C_word*)((C_word*)t0)[6])[1];
t4=((C_word*)((C_word*)t0)[5])[1];
t5=((C_word*)((C_word*)t0)[4])[1];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=(C_word)C_i_foreign_flonum_argumentp(t7);
t13=t2;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub397(C_SCHEME_UNDEFINED,t8,t9,t10,t11,t12));}

/* mp:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33399(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33399,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7748,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_7748(2,t4,C_SCHEME_FALSE);}}

/* k7746 in mp:open-output-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub387(C_SCHEME_UNDEFINED,t1));}

/* mp:open-input in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_33246(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33246,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33253,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_integerp(t5))){
t6=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_greater_or_equalp(t6,C_fix(0)))){
t7=(C_word)C_i_car(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t7);
t9=t3;
f_33253(t9,(C_word)stub375(C_SCHEME_UNDEFINED,t8));}
else{
t7=t3;
f_33253(t7,C_SCHEME_FALSE);}}
else{
t6=t3;
f_33253(t6,C_SCHEME_FALSE);}}
else{
t5=t3;
f_33253(t5,C_SCHEME_FALSE);}}
else{
t4=t3;
f_33253(t4,C_SCHEME_FALSE);}}

/* k33251 in mp:open-input in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_33253(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}
else{
C_trace("ChickenBridge.scm: 85   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[759],((C_word*)t0)[2]);}}

/* mp:open-output in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_33191(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33191,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33198,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_integerp(t5))){
t6=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_greater_or_equalp(t6,C_fix(0)))){
t7=(C_word)C_i_car(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t7);
t9=t3;
f_33198(t9,(C_word)stub371(C_SCHEME_UNDEFINED,t8));}
else{
t7=t3;
f_33198(t7,C_SCHEME_FALSE);}}
else{
t6=t3;
f_33198(t6,C_SCHEME_FALSE);}}
else{
t5=t3;
f_33198(t5,C_SCHEME_FALSE);}}
else{
t4=t3;
f_33198(t4,C_SCHEME_FALSE);}}

/* k33196 in mp:open-output in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_33198(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}
else{
C_trace("ChickenBridge.scm: 85   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[758],((C_word*)t0)[2]);}}

/* mp:open in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32944(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_32944r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_32944r(t0,t1,t2);}}

static void C_ccall f_32944r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_32948,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t1,a[8]=t6,a[9]=t4,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_32948(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[756]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33104,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[116],lf[756]);}
else{
t19=t18;
f_33104(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[757]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33139,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[116],lf[757]);}
else{
t20=t19;
f_33139(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33168,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[107],t2);}
else{
t20=t19;
f_33168(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k33166 in mp:open in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33168,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33175,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33183,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33181 in k33166 in mp:open in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33175(2,t2,C_SCHEME_UNDEFINED);}}

/* k33173 in k33166 in mp:open in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32948(t5,t4);}

/* k33137 in mp:open in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33139,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33143,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_33143(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33141 in k33137 in mp:open in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32948(t7,t6);}

/* k33102 in mp:open in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33104,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33108,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_33108(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33106 in k33102 in mp:open in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32948(t7,t6);}

/* k32946 in mp:open in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_32948(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32948,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32951,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_32951(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[756]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33004,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[756]);}
else{
t6=t5;
f_33004(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[757]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33039,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[757]);}
else{
t7=t6;
f_33039(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33068,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[107],((C_word*)t0)[5]);}
else{
t7=t6;
f_33068(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k33066 in k32946 in mp:open in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33068,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33075,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33083,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33081 in k33066 in k32946 in mp:open in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33075(2,t2,C_SCHEME_UNDEFINED);}}

/* k33073 in k33066 in k32946 in mp:open in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32951(t5,t4);}

/* k33037 in k32946 in mp:open in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33039,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33043,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_33043(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33041 in k33037 in k32946 in mp:open in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32951(t7,t6);}

/* k33002 in k32946 in mp:open in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33004,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33008,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_33008(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33006 in k33002 in k32946 in mp:open in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_33008(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32951(t7,t6);}

/* k32949 in k32946 in mp:open in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_32951(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32951,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32954,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_32954(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[103],((C_word*)t0)[2]);}}

/* k32952 in k32949 in k32946 in mp:open in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32954,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[4])[1])?((C_word*)((C_word*)t0)[3])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32967,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   mp:open-output");
f_33191(t3,(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 85   mp:open-output");
f_33191(((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 85   mp:open-input");
f_33246(((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]));}
else{
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}}}}

/* k32965 in k32952 in k32949 in k32946 in mp:open in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32967,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32971,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 85   mp:open-input");
f_33246(t2,(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]));}

/* k32969 in k32965 in k32952 in k32949 in k32946 in mp:open in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32971,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,2,((C_word*)t0)[2],t1));}

/* open-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32873(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_32873r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_32873r(t0,t1,t2,t3);}}

static void C_ccall f_32873r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32877,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 85   ffi_pathname_type");
f_7613(t4,t2);}

/* k32875 in open-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32877,2,t0,t1);}
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32880,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)stub288(C_SCHEME_UNDEFINED))){
C_trace("ChickenBridge.scm: 85   error");
t5=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[745],((C_word*)t0)[3]);}
else{
t5=t4;
f_32880(2,t5,C_SCHEME_UNDEFINED);}}

/* k32878 in k32875 in open-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32880,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32883,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7668,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t3)){
t5=(C_word)C_i_foreign_string_argumentp(t3);
C_trace("##sys#make-c-string");
t6=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t5=t4;
f_7668(2,t5,C_SCHEME_FALSE);}}

/* k7666 in k32878 in k32875 in open-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)stub349(C_SCHEME_UNDEFINED,t1))){
t2=((C_word*)t0)[3];
f_32883(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 85   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[744],((C_word*)t0)[2]);}}

/* k32881 in k32878 in k32875 in open-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32883,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32886,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_string_equal_p(((C_word*)t0)[3],lf[735]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32895,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t3,C_retrieve2(lf[736],"mp:open-output-file"),((C_word*)t0)[4],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[3];
if(C_truep((C_truep((C_word)C_i_equalp(t3,lf[737]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,lf[738]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,lf[739]))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32905,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t4,C_retrieve2(lf[740],"snd:open-output-file"),((C_word*)t0)[4],((C_word*)t0)[2]);}
else{
t4=((C_word*)t0)[3];
if(C_truep((C_truep((C_word)C_i_equalp(t4,lf[741]))?C_SCHEME_TRUE:C_SCHEME_FALSE))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32915,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t5,C_retrieve(lf[742]),((C_word*)t0)[4],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 85   error");
t5=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,lf[743],((C_word*)t0)[4]);}}}}

/* k32913 in k32881 in k32878 in k32875 in open-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(3));
t3=((C_word*)t0)[2];
f_32886(2,t3,t2);}

/* k32903 in k32881 in k32878 in k32875 in open-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(2));
t3=((C_word*)t0)[2];
f_32886(2,t3,t2);}

/* k32893 in k32881 in k32878 in k32875 in open-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(1));
t3=((C_word*)t0)[2];
f_32886(2,t3,t2);}

/* k32884 in k32881 in k32878 in k32875 in open-file in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=(C_word)stub293(C_SCHEME_UNDEFINED,t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,((C_word*)t0)[2]);}

/* ports in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32845,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32849,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t4=*((C_word*)lf[54]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,(C_word)stub367(t3),C_fix(0));}

/* k32847 in ports in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 85   read-from-string");
f_7030(((C_word*)t0)[2],t1);}

/* sal:open in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32821(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32821,2,t0,t1);}
C_trace("ChickenBridge.scm: 84   print-error");
t2=C_retrieve(lf[57]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[732]);}

/* sal:load in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32772(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32772,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32776,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=t2;
if(C_truep((C_word)C_i_stringp(t4))){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7654,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t4)){
t6=(C_word)C_i_foreign_string_argumentp(t4);
C_trace("##sys#make-c-string");
t7=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}
else{
t6=t5;
f_7654(2,t6,C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 82   error");
t5=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[730],t4);}}

/* k7652 in sal:load in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_32776(2,t2,(C_word)stub343(C_SCHEME_UNDEFINED,t1));}

/* k32774 in sal:load in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32776,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32779,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep(t1)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32795,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32819,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   string-append");
t5=*((C_word*)lf[439]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,lf[726],((C_word*)t0)[2],lf[727]);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32792,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   string-append");
t4=*((C_word*)lf[439]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,lf[728],((C_word*)t0)[2],lf[729]);}}

/* k32790 in k32774 in sal:load in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   print-error");
t2=C_retrieve(lf[57]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k32817 in k32774 in sal:load in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   print-output");
t2=C_retrieve(lf[58]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k32793 in k32774 in sal:load in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32795,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32815,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pathname-type");
f_25092(t2,((C_word*)t0)[2]);}

/* k32813 in k32793 in k32774 in sal:load in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32815,2,t0,t1);}
if(C_truep((C_word)C_i_equalp(lf[723],t1))){
C_trace("ChickenBridge.scm: 84   load-sal-file");
t2=C_retrieve(lf[724]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32811,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   full-pathname");
f_25134(t2,((C_word*)t0)[2]);}}

/* k32809 in k32813 in k32793 in k32774 in sal:load in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   load");
t2=C_retrieve(lf[725]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k32777 in k32774 in sal:load in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:chdir in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32763(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32763,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32767,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   chdir");
t4=C_retrieve(lf[562]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k32765 in sal:chdir in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:print in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32610(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr2r,(void*)f_32610r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_32610r(t0,t1,t2);}}

static void C_ccall f_32610r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(16);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32613,a[2]=t4,a[3]=((C_word)li476),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32732,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32737,a[2]=t4,a[3]=t8,a[4]=((C_word)li477),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_32737(t10,t6,t2);}

/* do5560 in sal:print in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_32737(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32737,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 84   print-output");
t3=C_retrieve(lf[58]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[720]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32750,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 84   printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_32613(t5,t3,t4,C_fix(0),C_SCHEME_FALSE);}}

/* k32748 in do5560 in sal:print in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_32737(t3,((C_word*)t0)[2],t2);}

/* k32730 in sal:print in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   values");
C_values(2,0,((C_word*)t0)[2]);}

/* printer in sal:print in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_32613(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32613,NULL,5,t0,t1,t2,t3,t4);}
t5=t2;
if(C_truep(t5)){
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 84   print-output");
t6=C_retrieve(lf[58]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,lf[713]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32641,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   print-output");
t7=C_retrieve(lf[58]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[716]);}
else{
t6=(C_word)C_eqp(t2,C_SCHEME_TRUE);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 84   print-output");
t7=C_retrieve(lf[58]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t1,lf[717]);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32713,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   number->string");
C_number_to_string(3,0,t7,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 84   print-output");
t7=C_retrieve(lf[58]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t2,t4);}
else{
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32729,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   format");
t8=C_retrieve(lf[429]);
((C_proc5)C_retrieve_proc(t8))(5,t8,t7,C_SCHEME_FALSE,lf[718],t2);}}}}}}
else{
C_trace("ChickenBridge.scm: 84   print-output");
t6=C_retrieve(lf[58]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,lf[719]);}}

/* k32727 in printer in sal:print in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   print-output");
t2=C_retrieve(lf[58]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k32711 in printer in sal:print in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   print-output");
t2=C_retrieve(lf[58]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k32639 in printer in sal:print in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32641,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32644,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32649,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word)li475),tmp=(C_word)a,a+=6,tmp));
t6=((C_word*)t4)[1];
f_32649(t6,t2,((C_word*)t0)[2]);}

/* do5552 in k32639 in printer in sal:print in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_32649(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32649,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32659,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],C_fix(1));
C_trace("ChickenBridge.scm: 84   printer");
t6=((C_word*)((C_word*)t0)[2])[1];
f_32613(t6,t3,t4,t5,C_SCHEME_TRUE);}}

/* k32657 in do5552 in k32639 in printer in sal:print in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32659,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32662,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_32662(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 84   print-output");
t4=C_retrieve(lf[58]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,lf[715]);}}

/* k32660 in k32657 in do5552 in k32639 in printer in sal:print in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_32649(t3,((C_word*)t0)[2],t2);}

/* k32642 in k32639 in printer in sal:print in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   print-output");
t2=C_retrieve(lf[58]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[714]);}

/* tokenize in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_32451(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32451,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32455,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_stringp(((C_word*)t3)[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32473,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)t3)[1];
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7700,a[2]=t5,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t6)){
t9=(C_word)C_i_foreign_string_argumentp(t6);
C_trace("##sys#make-c-string");
t10=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t8,t9);}
else{
t9=t8;
f_7700(2,t9,C_SCHEME_FALSE);}}
else{
t5=t4;
f_32455(t5,C_SCHEME_UNDEFINED);}}

/* k7698 in tokenize in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)stub361(((C_word*)t0)[3],t1);
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[54]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,C_fix(0));}

/* k32471 in tokenize in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32473,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32477,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   read-from-string");
f_7030(t2,t1);}

/* k32475 in k32471 in tokenize in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_32455(t3,t2);}

/* k32453 in tokenize in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_32455(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
C_trace("map");
t2=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[641],"list->token"),((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}}

/* sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31967(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+59)){
C_save_and_reclaim((void*)tr3r,(void*)f_31967r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_31967r(t0,t1,t2,t3);}}

static void C_ccall f_31967r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word *a=C_alloc(59);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_fix(36608);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=t3;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_31971,a[2]=t15,a[3]=t13,a[4]=t19,a[5]=t11,a[6]=t3,a[7]=t17,a[8]=t9,a[9]=t7,a[10]=t2,a[11]=t5,a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t17)[1]))){
t21=t20;
f_31971(t21,C_SCHEME_UNDEFINED);}
else{
t21=(C_word)C_i_car(((C_word*)t17)[1]);
t22=(C_word)C_eqp(t21,lf[709]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32329,a[2]=t3,a[3]=t20,a[4]=t17,a[5]=t19,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t24=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[116],lf[709]);}
else{
t24=t23;
f_32329(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t21,lf[710]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32364,a[2]=t3,a[3]=t20,a[4]=t17,a[5]=t19,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("error");
t25=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[116],lf[710]);}
else{
t25=t24;
f_32364(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(C_word)C_eqp(t21,lf[711]);
if(C_truep(t24)){
t25=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32399,a[2]=t3,a[3]=t20,a[4]=t17,a[5]=t19,a[6]=t15,a[7]=t9,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t26=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t26))(4,t26,t25,lf[116],lf[711]);}
else{
t26=t25;
f_32399(2,t26,C_SCHEME_UNDEFINED);}}
else{
t25=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32428,a[2]=t20,a[3]=t11,a[4]=t5,a[5]=t17,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t19)[1])){
C_trace("error");
t26=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t26))(4,t26,t25,lf[107],t3);}
else{
t26=t25;
f_32428(2,t26,C_SCHEME_UNDEFINED);}}}}}}

/* k32426 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32428,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32435,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32443,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32441 in k32426 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32435(2,t2,C_SCHEME_UNDEFINED);}}

/* k32433 in k32426 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31971(t5,t4);}

/* k32397 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32399,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32403,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_32403(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32401 in k32397 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31971(t7,t6);}

/* k32362 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32364,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32368,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_32368(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32366 in k32362 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31971(t7,t6);}

/* k32327 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32329,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32333,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_32333(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32331 in k32327 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31971(t7,t6);}

/* k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_31971(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31971,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_31974,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_31974(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[709]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32194,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[709]);}
else{
t6=t5;
f_32194(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[710]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32229,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[710]);}
else{
t7=t6;
f_32229(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[711]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32264,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[711]);}
else{
t8=t7;
f_32264(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32293,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[107],((C_word*)t0)[6]);}
else{
t8=t7;
f_32293(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k32291 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32293,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32300,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32308,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32306 in k32291 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32300(2,t2,C_SCHEME_UNDEFINED);}}

/* k32298 in k32291 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31974(t5,t4);}

/* k32262 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32264,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32268,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_32268(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32266 in k32262 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31974(t7,t6);}

/* k32227 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32229,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32233,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_32233(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32231 in k32227 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31974(t7,t6);}

/* k32192 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32194,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32198,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_32198(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32196 in k32192 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31974(t7,t6);}

/* k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_31974(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31974,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_31977,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_31977(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[709]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32059,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[709]);}
else{
t6=t5;
f_32059(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[710]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32094,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[710]);}
else{
t7=t6;
f_32094(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[711]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32129,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[711]);}
else{
t8=t7;
f_32129(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32158,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[107],((C_word*)t0)[6]);}
else{
t8=t7;
f_32158(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k32156 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32158,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32165,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32173,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32171 in k32156 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32165(2,t2,C_SCHEME_UNDEFINED);}}

/* k32163 in k32156 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31977(t5,t4);}

/* k32127 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32129,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32133,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_32133(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32131 in k32127 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31977(t7,t6);}

/* k32092 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32094,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32098,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_32098(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32096 in k32092 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31977(t7,t6);}

/* k32057 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32059,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32063,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_32063(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32061 in k32057 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31977(t7,t6);}

/* k31975 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_31977(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31977,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31980,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_31980(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[103],((C_word*)t0)[2]);}}

/* k31978 in k31975 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31980,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31983,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_not(((C_word*)((C_word*)t0)[5])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32031,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   tokenize");
f_32451(t5,((C_word*)t0)[4]);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32035,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   tokenize");
f_32451(t5,((C_word*)((C_word*)t0)[5])[1]);}}

/* k32033 in k31978 in k31975 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31983(t3,t2);}

/* k32029 in k31978 in k31975 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31983(t3,t2);}

/* k31981 in k31978 in k31975 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_31983(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31983,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31986,a[2]=((C_word*)t0)[6],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_31986(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31995,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t4=((C_word*)((C_word*)t0)[2])[1];
t5=((C_word*)((C_word*)t0)[5])[1];
t6=(C_word)C_a_i_list(&a,4,C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29771,a[2]=t5,a[3]=t4,a[4]=((C_word)li472),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   call/cc");
t8=*((C_word*)lf[707]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t3,t7);}}

/* a29770 in k31981 in k31978 in k31975 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29771(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29771,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29777,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word)li470),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29784,a[2]=t2,a[3]=((C_word)li471),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   call-with-values");
C_call_with_values(4,0,t1,t3,t4);}

/* a29783 in a29770 in k31981 in k31978 in k31975 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29784(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29784,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29791,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t6=(C_word)C_i_nullp(t4);
t7=t5;
f_29791(t7,(C_truep(t6)?t6:C_SCHEME_FALSE));}
else{
t6=t5;
f_29791(t6,C_SCHEME_FALSE);}}

/* k29789 in a29783 in a29770 in k31981 in k31978 in k31975 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29791(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29791,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29798,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   add-emit-info");
f_29371(t2,lf[704],lf[705],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 84   make-parse-error");
f_29197(((C_word*)t0)[4],lf[706],C_retrieve2(lf[681],"*maxtokpos*"));}}

/* k29796 in k29789 in a29783 in a29770 in k31981 in k31978 in k31975 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   emit");
f_29456(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a29776 in a29770 in k31981 in k31978 in k31975 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29777,2,t0,t1);}
t2=lf[681]=C_fix(0);;
C_trace("ChickenBridge.scm: 84   parser");
f_29809(t1,((C_word*)t0)[4],((C_word*)t0)[3],C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[2]);}

/* k31993 in k31981 in k31978 in k31975 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31995,2,t0,t1);}
t2=t1;
if(C_truep((C_word)C_i_structurep(t2,lf[656]))){
t3=((C_word*)t0)[4];
t4=t1;
t5=(C_word)C_i_string_length(t3);
t6=(C_word)C_i_check_structure(t4,lf[656]);
t7=(C_word)C_i_block_ref(t4,C_fix(2));
t8=(C_word)C_a_i_minus(&a,2,t7,C_fix(1));
t9=t8;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_fix(0);
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_32492,a[2]=t5,a[3]=t3,a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=t7,a[7]=t12,a[8]=t10,tmp=(C_word)a,a+=9,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32579,a[2]=t3,a[3]=t15,a[4]=t10,a[5]=((C_word)li469),tmp=(C_word)a,a+=6,tmp));
t17=((C_word*)t15)[1];
f_32579(t17,t13,C_SCHEME_FALSE);}
else{
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 84   format");
t3=C_retrieve(lf[429]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[3],C_SCHEME_TRUE,lf[701],t1);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32017,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   interaction-environment");
t4=C_retrieve(lf[703]);
((C_proc2)C_retrieve_proc(t4))(2,t4,t3);}}}

/* k32015 in k31993 in k31981 in k31978 in k31975 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   eval");
t2=C_retrieve(lf[702]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do5524 in k31993 in k31981 in k31978 in k31975 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_32579(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32579,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(-1)));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32589,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_32589(t10,t9);}
else{
t9=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t6;
f_32589(t11,t10);}}}

/* k32587 in do5524 in k31993 in k31981 in k31978 in k31975 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_32589(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_32579(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k32490 in k31993 in k31981 in k31978 in k31975 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32492,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[8])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)t0)[6]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32500,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32549,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=((C_word)li468),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_32549(t9,t5,C_SCHEME_FALSE);}

/* do5531 in k32490 in k31993 in k31981 in k31978 in k31975 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_32549(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32549,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32559,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_32559(t10,t9);}
else{
t9=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t6;
f_32559(t11,t10);}}}

/* k32557 in do5531 in k32490 in k31993 in k31981 in k31978 in k31975 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_32559(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_32549(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k32498 in k32490 in k31993 in k31981 in k31978 in k31975 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32500,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32503,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32510,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_check_structure(((C_word*)t0)[6],lf[656]);
t5=(C_word)C_i_block_ref(((C_word*)t0)[6],C_fix(1));
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32518,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=t3,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 84   make-string");
t7=*((C_word*)lf[443]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,C_fix(1),C_make_character(10));}

/* k32516 in k32498 in k32490 in k31993 in k31981 in k31978 in k31975 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32518,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32522,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   substring");
t3=*((C_word*)lf[436]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k32520 in k32516 in k32498 in k32490 in k31993 in k31981 in k31978 in k31975 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32522,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32526,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 84   make-string");
t3=*((C_word*)lf[443]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k32524 in k32520 in k32516 in k32498 in k32490 in k31993 in k31981 in k31978 in k31975 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32526,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32533,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_a_i_plus(&a,2,t2,C_fix(2));
C_trace("ChickenBridge.scm: 84   make-string");
t5=*((C_word*)lf[443]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_make_character(32));}

/* k32531 in k32524 in k32520 in k32516 in k32498 in k32490 in k31993 in k31981 in k31978 in k31975 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32533,2,t0,t1);}
t2=(C_word)C_i_string_set(t1,((C_word*)t0)[7],C_make_character(94));
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t4=(C_word)C_i_string_set(t1,t3,C_make_character(10));
C_trace("ChickenBridge.scm: 84   string-append");
t5=*((C_word*)lf[439]+1);
((C_proc8)C_retrieve_proc(t5))(8,t5,((C_word*)t0)[6],lf[700],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k32508 in k32498 in k32490 in k31993 in k31981 in k31978 in k31975 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   print-error");
t2=C_retrieve(lf[57]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k32501 in k32498 in k32490 in k31993 in k31981 in k31978 in k31975 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_32503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   values");
C_values(2,0,((C_word*)t0)[2]);}

/* k31984 in k31981 in k31978 in k31975 in k31972 in k31969 in sal in k31963 in k31960 in k31957 in k31954 in k31951 in k31420 in k31417 in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_retrieve(lf[431]));}

/* sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30898(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word ab[51],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30898,4,t0,t1,t2,t3);}
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=C_SCHEME_FALSE;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30905,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t33=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_30911,a[2]=t27,a[3]=t25,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t19,a[8]=t17,a[9]=t21,a[10]=t15,a[11]=t7,a[12]=t3,a[13]=t2,a[14]=t32,a[15]=t5,a[16]=t13,a[17]=t11,a[18]=t9,tmp=(C_word)a,a+=19,tmp);
t34=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 84   token-unit-type=?");
f_29327(t33,t34,C_fix(23296));}

/* k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30911,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30915,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[15],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[17],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[12]);}
else{
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_30961,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[10],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[11],tmp=(C_word)a,a+=18,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 84   token-unit-type=?");
f_29327(t2,t3,C_fix(10756));}}

/* k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30961,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_30965,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);}
else{
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_31058,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[16],a[14]=((C_word*)t0)[17],tmp=(C_word)a,a+=15,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 84   token-unit-type=?");
f_29327(t2,t3,C_fix(22784));}}

/* k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31058,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_31062,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}
else{
t2=(C_word)C_i_length(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_31126,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}}

/* k31124 in k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31126,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[11])[1],C_fix(1));
t4=(C_word)C_i_list_ref(((C_word*)t0)[10],t3);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_31133,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[8],tmp=(C_word)a,a+=13,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31383,a[2]=t6,a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t7,t8,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t7=C_set_block_item(((C_word*)t0)[9],0,C_fix(1));
t8=t6;
f_31133(t8,t7);}}

/* k31381 in k31124 in k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31133(t3,t2);}

/* k31131 in k31124 in k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_31133(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31133,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_31136,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(6)))){
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31322,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_fix(0));
t4=(C_word)C_i_caddr(((C_word*)t0)[2]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31371,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t6,t7,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}}

/* k31369 in k31131 in k31124 in k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31136(t3,t2);}

/* k31320 in k31131 in k31124 in k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31322,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31328,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   fifth");
t4=C_retrieve(lf[68]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k31326 in k31320 in k31131 in k31124 in k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31328,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31352,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   fifth");
t3=C_retrieve(lf[68]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=((C_word*)t0)[4];
f_31136(t4,t3);}}

/* k31350 in k31326 in k31320 in k31131 in k31124 in k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31352,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31336,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31348,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   fifth");
t6=C_retrieve(lf[68]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[2]);}

/* k31346 in k31350 in k31326 in k31320 in k31131 in k31124 in k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(((C_word*)t0)[3],t2,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k31334 in k31350 in k31326 in k31320 in k31131 in k31124 in k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31136(t3,t2);}

/* k31134 in k31131 in k31124 in k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_31136(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31136,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_31139,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_31139(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31298,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   gensym");
t4=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[698]);}}

/* k31296 in k31134 in k31131 in k31124 in k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31298,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31302,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 84   append");
t5=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k31300 in k31296 in k31134 in k31131 in k31124 in k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_31139(t4,t3);}

/* k31137 in k31134 in k31131 in k31124 in k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_31139(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31139,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_31142,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_31142(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31275,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   gensym");
t4=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[697]);}}

/* k31273 in k31137 in k31134 in k31131 in k31124 in k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31275,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31279,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 84   append");
t5=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k31277 in k31273 in k31137 in k31134 in k31131 in k31124 in k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_31142(t4,t3);}

/* k31140 in k31137 in k31134 in k31131 in k31124 in k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_31142(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31142,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_31145,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]))){
t3=t2;
f_31145(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31252,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   gensym");
t4=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[696]);}}
else{
t3=t2;
f_31145(t3,C_SCHEME_UNDEFINED);}}

/* k31250 in k31140 in k31137 in k31134 in k31131 in k31124 in k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31252,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31256,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 84   append");
t5=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k31254 in k31250 in k31140 in k31137 in k31134 in k31131 in k31124 in k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_31145(t4,t3);}

/* k31143 in k31140 in k31137 in k31134 in k31131 in k31124 in k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_31145(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31145,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31148,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31177,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 84   token-unit-type=?");
f_29327(t4,((C_word*)((C_word*)t0)[3])[1],C_fix(21248));}
else{
t4=(C_word)C_a_i_list(&a,3,lf[177],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=t2;
f_31148(t7,t6);}}

/* k31175 in k31143 in k31140 in k31137 in k31134 in k31131 in k31124 in k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31177,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[179],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[177],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_31148(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31195,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 84   token-unit-type=?");
f_29327(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(23552));}}

/* k31193 in k31175 in k31143 in k31140 in k31137 in k31134 in k31131 in k31124 in k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31195,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[180],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[177],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_31148(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31213,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 84   token-unit-type=?");
f_29327(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(20992));}}

/* k31211 in k31193 in k31175 in k31143 in k31140 in k31137 in k31134 in k31131 in k31124 in k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31213,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[175],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[173],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_31148(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31231,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   token-unit-type=?");
f_29327(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(21760));}}

/* k31229 in k31211 in k31193 in k31175 in k31143 in k31140 in k31137 in k31134 in k31131 in k31124 in k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31231,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[176],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[173],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)((C_word*)t0)[6])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31148(t7,t6);}
else{
t2=((C_word*)t0)[2];
f_31148(t2,C_SCHEME_UNDEFINED);}}

/* k31146 in k31143 in k31140 in k31137 in k31134 in k31131 in k31124 in k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_31148(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31148,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31152,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 84   append");
t5=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k31150 in k31146 in k31143 in k31140 in k31137 in k31134 in k31131 in k31124 in k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30905(t3,t2);}

/* k31060 in k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31062,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31066,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k31064 in k31060 in k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31066,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31070,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   gensym");
t4=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[695]);}

/* k31068 in k31064 in k31060 in k31056 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_31070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31070,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,2,lf[112],((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_a_i_list(&a,2,lf[102],((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,t4,t5);
t7=(C_word)C_a_i_list(&a,2,lf[61],((C_word*)((C_word*)t0)[6])[1]);
t8=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,2,t6,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_30905(t12,t11);}

/* k30963 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30965,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_30969,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}

/* k30967 in k30963 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30969,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_30973,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 84   fifth");
t4=C_retrieve(lf[68]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k30971 in k30967 in k30963 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30973,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30976,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30992,a[2]=t3,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t3;
f_30976(t6,t5);}}

/* k30990 in k30971 in k30967 in k30963 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30992,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30996,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 84   gensym");
t4=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[694]);}

/* k30994 in k30990 in k30971 in k30967 in k30963 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30996,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[214],t3,t4);
t6=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,4,lf[117],((C_word*)((C_word*)t0)[8])[1],t5,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_TRUE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,1,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_30976(t12,t11);}

/* k30974 in k30971 in k30967 in k30963 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_30976(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30976,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30980,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 84   append");
t5=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[5])[1],t4);}

/* k30978 in k30974 in k30971 in k30967 in k30963 in k30959 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30905(t3,t2);}

/* k30913 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30915,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30919,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   gensym");
t4=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[693]);}

/* k30917 in k30913 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30919,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30923,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   gensym");
t4=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[692]);}

/* k30921 in k30917 in k30913 in k30909 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30923,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[177],((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t5=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[179],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[6])[1]);
t7=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_fix(0),C_SCHEME_FALSE,t5,t6);
t8=(C_word)C_a_i_list(&a,2,t3,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=((C_word*)t0)[2];
f_30905(t10,t9);}

/* k30903 in sal-parse-stepping in k30894 in k30891 in k30888 in k30885 in k30882 in k30879 in k30876 in k30873 in k30870 in k30867 in k30864 in k30861 in k30858 in k30855 in k30852 in k30849 in k30846 in k30843 in k30840 in k30837 in k30834 in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_30905(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   make-parse-unit");
f_29245(((C_word*)t0)[3],C_fix(33024),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* inf->pre in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_30720(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30720,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t3)[1]))){
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30732,a[2]=t9,a[3]=t13,a[4]=t11,a[5]=t5,a[6]=t7,a[7]=t3,a[8]=((C_word)li465),tmp=(C_word)a,a+=9,tmp));
t15=((C_word*)t13)[1];
f_30732(t15,t1);}
else{
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t3)[1]);}}

/* do5088 in inf->pre in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_30732(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30732,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30751,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 84   is-op?");
f_30699(t6,((C_word*)((C_word*)t0)[5])[1]);}}

/* k30749 in do5088 in inf->pre in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30751,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30754,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30769,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word)li464),tmp=(C_word)a,a+=9,tmp));
t7=((C_word*)t5)[1];
f_30769(t7,t3,C_SCHEME_FALSE,C_SCHEME_TRUE,C_SCHEME_END_OF_LIST);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_30754(2,t5,t4);}}

/* do5090 in k30749 in do5088 in inf->pre in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_30769(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30769,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t6)[1]));
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30783,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30797,a[2]=t10,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   reverse");
t12=*((C_word*)lf[159]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t7)[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30801,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 84   is-op?");
f_30699(t10,t11);}}

/* k30799 in do5090 in k30749 in do5088 in inf->pre in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30801,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30804,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t6=t3;
f_30804(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[4])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=t3;
f_30804(t10,t9);}}

/* k30802 in k30799 in do5090 in k30749 in do5088 in inf->pre in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_30804(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_30769(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k30795 in do5090 in k30749 in do5088 in inf->pre in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   inf->pre");
f_30720(((C_word*)t0)[2],t1);}

/* k30781 in do5090 in k30749 in do5088 in inf->pre in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30783,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k30752 in k30749 in do5088 in inf->pre in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_30732(t2,((C_word*)t0)[2]);}

/* is-op? in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_30699(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30699,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30706,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   token-unit?");
f_29311(t3,t2);}

/* k30704 in is-op? in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30706,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30709,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-type");
f_29266(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k30707 in k30704 in is-op? in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30709,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30715,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   SalOpType?");
f_30476(t2,t1);}

/* k30713 in k30707 in k30704 in is-op? in k30695 in k30692 in k30689 in k30686 in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
C_trace("ChickenBridge.scm: 84   logand");
t4=*((C_word*)lf[1]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(255));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* remove-token-type in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_30634(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30634,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30643,a[2]=t3,a[3]=t6,a[4]=t8,a[5]=t4,a[6]=((C_word)li461),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_30643(t10,t1,t2);}

/* do5054 in remove-token-type in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_30643(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30643,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30656,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30666,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 84   token-unit-type=?");
f_29327(t4,t5,((C_word*)t0)[2]);}}

/* k30664 in do5054 in remove-token-type in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30666,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_30656(t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_30656(t7,t6);}}

/* k30654 in do5054 in remove-token-type in k30630 in k30627 in k30624 in k30621 in k30618 in k30615 in k30612 in k30609 in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_30656(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_30643(t3,((C_word*)t0)[2],t2);}

/* SalType=? in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_30590(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30590,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30598,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   ash");
t5=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t2,C_fix(-8));}

/* k30596 in SalType=? in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30598,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30602,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   ash");
t3=*((C_word*)lf[0]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],C_fix(-8));}

/* k30600 in k30596 in SalType=? in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_nequalp(((C_word*)t0)[2],t1));}

/* SalRuleType? in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_30578(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30578,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(25600),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(38400)):C_SCHEME_FALSE));}

/* SalOpType? in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_30476(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30476,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(6656),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(11520)):C_SCHEME_FALSE));}

/* SalTokenType? in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_30428(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30428,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(0),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(25600)):C_SCHEME_FALSE));}

/* parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29809(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29809,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29813,a[2]=t4,a[3]=t7,a[4]=t6,a[5]=t5,a[6]=t8,a[7]=t1,a[8]=t2,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 84   format");
t10=C_retrieve(lf[429]);
((C_proc7)C_retrieve_proc(t10))(7,t10,t9,C_SCHEME_TRUE,lf[687],t5,t2,((C_word*)t8)[1]);}
else{
t10=t9;
f_29813(2,t10,C_SCHEME_UNDEFINED);}}

/* k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29813,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29816,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 84   null-tokens?");
f_28943(t2,((C_word*)((C_word*)t0)[6])[1]);}

/* k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29816,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29819,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t1)){
t3=t2;
f_29819(t3,t1);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30234,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30238,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30242,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   first-token");
f_28931(t5,((C_word*)((C_word*)t0)[6])[1]);}}

/* k30240 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   token-position");
f_28899(((C_word*)t0)[2],t1);}

/* k30236 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   max");
t2=*((C_word*)lf[371]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[681],"*maxtokpos*"),t1);}

/* k30232 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[681],t1);
t3=((C_word*)t0)[2];
f_29819(t3,t2);}

/* k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29819(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29819,NULL,2,t0,t1);}
t2=((C_word*)t0)[8];
if(C_truep((C_word)C_i_numberp(t2))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29828,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   pattern-value");
t4=C_retrieve2(lf[350],"pattern-value");
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[8]);}
else{
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29942,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[2],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 84   pattern-clause?");
f_29079(t3,((C_word*)t0)[8]);}}

/* k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29942,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29948,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[2];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29124,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-clause?");
f_29079(t4,t3);}
else{
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[6],lf[686],((C_word*)t0)[2]);}}

/* k29122 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_29948(t3,(C_word)C_eqp(t2,lf[243]));}
else{
t2=((C_word*)t0)[2];
f_29948(t2,C_SCHEME_FALSE);}}

/* k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29948(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29948,NULL,2,t0,t1);}
t2=(C_truep(t1)?t1:((C_word*)t0)[8]);
if(C_truep(t2)){
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=((C_word*)((C_word*)t0)[7])[1];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29957,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t10,a[7]=((C_word*)t0)[7],a[8]=t6,a[9]=t8,a[10]=t4,a[11]=((C_word*)t0)[6],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 84   pattern-nsubs");
f_29097(t11,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30036,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)t0)[2];
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29140,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-clause?");
f_29079(t5,t4);}}

/* k29138 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_30036(t3,(C_word)C_eqp(t2,lf[266]));}
else{
t2=((C_word*)t0)[2];
f_30036(t2,C_SCHEME_FALSE);}}

/* k30034 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_30036(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30036,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_30042,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t5,a[9]=((C_word*)t0)[7],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 84   pattern-nsubs");
f_29097(t8,((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30106,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 84   pattern-zero-or-more?");
f_29165(t2,((C_word*)t0)[2]);}}

/* k30104 in k30034 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30106,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30109,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t1)){
t3=t2;
f_30109(t3,t1);}
else{
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29156,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-clause?");
f_29079(t4,t3);}}

/* k29154 in k30104 in k30034 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_30109(t3,(C_word)C_eqp(t2,lf[177]));}
else{
t2=((C_word*)t0)[2];
f_30109(t2,C_SCHEME_FALSE);}}

/* k30107 in k30104 in k30034 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_30109(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[46],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30109,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)((C_word*)t0)[7])[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30115,a[2]=((C_word*)t0)[5],a[3]=t11,a[4]=((C_word*)t0)[7],a[5]=t9,a[6]=t3,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30138,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t5,a[7]=t11,a[8]=t7,a[9]=((C_word*)t0)[7],a[10]=t9,a[11]=t14,a[12]=t3,a[13]=((C_word)li453),tmp=(C_word)a,a+=14,tmp));
t16=((C_word*)t14)[1];
f_30138(t16,t12);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30187,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29188,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-clause?");
f_29079(t4,t3);}}

/* k29186 in k30107 in k30104 in k30034 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_30187(t3,(C_word)C_eqp(t2,lf[685]));}
else{
t2=((C_word*)t0)[2];
f_30187(t2,C_SCHEME_FALSE);}}

/* k30185 in k30107 in k30104 in k30034 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_30187(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30187,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30196,a[2]=((C_word*)t0)[6],a[3]=t7,a[4]=t5,a[5]=((C_word*)t0)[7],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30207,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word)li454),tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30213,a[2]=t7,a[3]=t5,a[4]=t3,a[5]=((C_word)li455),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   call-with-values");
C_call_with_values(4,0,t8,t9,t10);}
else{
t2=((C_word*)t0)[5];
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 84   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[7],lf[684],t3);}}

/* a30212 in k30185 in k30107 in k30104 in k30034 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30213(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30213,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a30206 in k30185 in k30107 in k30104 in k30034 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30207,2,t0,t1);}
C_trace("ChickenBridge.scm: 84   parser");
f_29809(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30194 in k30185 in k30107 in k30104 in k30034 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 84   values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 84   values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_TRUE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1]);}}

/* do4791 in k30107 in k30104 in k30034 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_30138(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30138,NULL,2,t0,t1);}
t2=(C_word)C_i_not(((C_word*)((C_word*)t0)[12])[1]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30148,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[11],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t2)){
t4=t3;
f_30148(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 84   null-tokens?");
f_28943(t3,((C_word*)((C_word*)t0)[8])[1]);}}

/* k30146 in do4791 in k30107 in k30104 in k30034 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30148,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_30151,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[13],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30168,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word)li451),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30174,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[11],a[5]=((C_word)li452),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   call-with-values");
C_call_with_values(4,0,t2,t3,t4);}}

/* a30173 in k30146 in do4791 in k30107 in k30104 in k30034 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30174(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30174,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a30167 in k30146 in do4791 in k30107 in k30104 in k30034 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30168,2,t0,t1);}
C_trace("ChickenBridge.scm: 84   parser");
f_29809(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30149 in k30146 in do4791 in k30107 in k30104 in k30034 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30151,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30154,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30161,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   append");
t4=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_30154(t3,C_SCHEME_UNDEFINED);}}

/* k30159 in k30149 in k30146 in do4791 in k30107 in k30104 in k30034 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30161,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_30154(t6,t5);}

/* k30152 in k30149 in k30146 in do4791 in k30107 in k30104 in k30034 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_30154(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_30138(t2,((C_word*)t0)[2]);}

/* k30113 in k30107 in k30104 in k30034 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30115,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30118,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30124,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   pattern-zero-or-more?");
f_29165(t3,((C_word*)t0)[2]);}

/* k30122 in k30113 in k30107 in k30104 in k30034 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_truep(t1)?t1:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],C_fix(0)));
if(C_truep(t2)){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[3];
f_30118(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_END_OF_LIST);
t5=((C_word*)t0)[3];
f_30118(t5,t4);}}

/* k30116 in k30113 in k30107 in k30104 in k30034 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_30118(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k30040 in k30034 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30042,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30045,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_30060,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[5],a[9]=t4,a[10]=t1,a[11]=((C_word*)t0)[10],a[12]=((C_word)li450),tmp=(C_word)a,a+=13,tmp));
t6=((C_word*)t4)[1];
f_30060(t6,t2,C_fix(0));}

/* do4771 in k30040 in k30034 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_30060(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30060,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[11])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nequalp(t2,((C_word*)t0)[10]));
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30070,a[2]=t1,a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30079,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word)li448),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30093,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word)li449),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a30092 in do4771 in k30040 in k30034 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30093(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30093,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a30078 in do4771 in k30040 in k30034 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30079,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30087,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   pattern-sub");
f_29107(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30085 in a30078 in do4771 in k30040 in k30034 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30087,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 84   parser");
f_29809(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30068 in do4771 in k30040 in k30034 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30070,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_30060(t3,((C_word*)t0)[2],t2);}

/* k30043 in k30040 in k30034 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 84   values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 84   values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k29955 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29957,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29960,a[2]=((C_word*)t0)[7],a[3]=t3,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_29979,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=t6,a[11]=t3,a[12]=t1,a[13]=((C_word)li447),tmp=(C_word)a,a+=14,tmp));
t8=((C_word*)t6)[1];
f_29979(t8,t4,C_fix(0));}

/* do4749 in k29955 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29979(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29979,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nequalp(t2,((C_word*)t0)[12]);
t4=(C_truep(t3)?t3:((C_word*)((C_word*)t0)[11])[1]);
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29992,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=t1,a[7]=((C_word*)t0)[10],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30012,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word)li445),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30026,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word)li446),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a30025 in do4749 in k29955 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30026(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30026,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a30011 in do4749 in k29955 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30012,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30020,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   pattern-sub");
f_29107(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30018 in a30011 in do4749 in k29955 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_30020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30020,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 84   parser");
f_29809(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29990 in do4749 in k29955 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29992,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29995,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_29995(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t5=t2;
f_29995(t5,t4);}}

/* k29993 in k29990 in do4749 in k29955 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29995(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29995,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_29979(t3,((C_word*)t0)[2],t2);}

/* k29958 in k29955 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29960,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29963,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_END_OF_LIST);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[2])[1]);
t6=t2;
f_29963(t6,t5);}
else{
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29977,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   reverse");
t5=*((C_word*)lf[159]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[5])[1]);}}

/* k29975 in k29958 in k29955 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_29963(t3,t2);}

/* k29961 in k29958 in k29955 in k29946 in k29940 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29963(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k29826 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29828,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29834,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 84   SalTokenType?");
f_30428(t2,t1);}

/* k29832 in k29826 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29834,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29840,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   null-tokens?");
f_28943(t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29892,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 84   SalRuleType?");
f_30578(t2,((C_word*)t0)[5]);}}

/* k29890 in k29832 in k29826 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29892,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29895,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 84   get-rule");
f_29058(t2,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[683],((C_word*)t0)[2]);}}

/* k29893 in k29890 in k29832 in k29826 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29895,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[647]);
t4=(C_word)C_i_block_ref(t2,C_fix(3));
t5=t1;
t6=(C_word)C_i_check_structure(t5,lf[647]);
t7=(C_word)C_i_block_ref(t5,C_fix(4));
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29906,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[6],a[7]=((C_word)li443),tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29916,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word)li444),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   call-with-values");
C_call_with_values(4,0,((C_word*)t0)[2],t8,t9);}

/* a29915 in k29893 in k29890 in k29832 in k29826 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29916(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29916,5,t0,t1,t2,t3,t4);}
if(C_truep(t2)){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29927,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 84   func");
t6=((C_word*)t0)[3];
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t3,((C_word*)t0)[2]);}
else{
t6=t5;
f_29927(2,t6,t3);}}
else{
C_trace("ChickenBridge.scm: 84   values");
C_values(5,0,t1,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);}}

/* k29925 in a29915 in k29893 in k29890 in k29832 in k29826 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   values");
C_values(5,0,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a29905 in k29893 in k29890 in k29832 in k29826 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29906,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 84   parser");
f_29809(t1,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29838 in k29832 in k29826 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29840,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   values");
C_values(5,0,((C_word*)t0)[4],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29850,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   first-token");
f_28931(t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k29848 in k29838 in k29832 in k29826 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29850,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29856,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29886,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   token-type");
f_28863(t3,t1);}

/* k29884 in k29848 in k29838 in k29832 in k29826 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   SalType=?");
f_30590(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k29854 in k29848 in k29838 in k29832 in k29826 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29856,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29863,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29871,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   token-type");
f_28863(t3,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 84   values");
C_values(5,0,((C_word*)t0)[3],C_SCHEME_FALSE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[4])[1]);}}

/* k29869 in k29854 in k29848 in k29838 in k29832 in k29826 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29871,2,t0,t1);}
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[638]);
t4=(C_word)C_i_block_ref(t2,C_fix(2));
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29879,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   token-position");
f_28899(t5,((C_word*)t0)[3]);}

/* k29877 in k29869 in k29854 in k29848 in k29838 in k29832 in k29826 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   make-parse-unit");
f_29245(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k29861 in k29854 in k29848 in k29838 in k29832 in k29826 in k29817 in k29814 in k29811 in parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 84   values");
C_values(5,0,((C_word*)t0)[2],C_SCHEME_TRUE,t1,t3);}

/* simple-unit-emitter in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29705(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29705,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29707,a[2]=t2,a[3]=((C_word)li441),tmp=(C_word)a,a+=4,tmp));}

/* f_29707 in simple-unit-emitter in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29707(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29707,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29711,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29755,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-parsed");
f_29284(t6,t2);}

/* k29753 */
static void C_ccall f_29755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   append");
t2=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k29709 */
static void C_ccall f_29711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29711,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29714,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)t0)[2])){
t6=(C_word)C_i_set_car(((C_word*)t3)[1],((C_word*)t0)[2]);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
t8=C_set_block_item(t3,0,t7);
t9=t5;
f_29714(t9,t8);}
else{
t6=t5;
f_29714(t6,C_SCHEME_UNDEFINED);}}

/* k29712 in k29709 */
static void C_fcall f_29714(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29714,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29719,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t3,a[5]=((C_word*)t0)[6],a[6]=((C_word)li440),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_29719(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* do4706 in k29712 in k29709 */
static void C_fcall f_29719(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29719,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29740,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k29738 in do4706 in k29712 in k29709 */
static void C_ccall f_29740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_29719(t4,((C_word*)t0)[2],t3);}

/* simple-unit-parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29697(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29697,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29699,a[2]=t2,a[3]=((C_word)li438),tmp=(C_word)a,a+=4,tmp));}

/* f_29699 in simple-unit-parser in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29699(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29699,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 84   make-parse-unit");
f_29245(t1,((C_word*)t0)[2],t2,C_SCHEME_FALSE);}

/* != in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29520(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2r,(void*)f_29520r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_29520r(t0,t1,t2);}}

static void C_ccall f_29520r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a=C_alloc(3);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29528,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(4,0,t3,*((C_word*)lf[229]+1),t2);}

/* k29526 in != in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_not(t1));}

/* emit-list in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29489(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29489,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_END_OF_LIST);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29506,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 84   emit");
f_29456(t5,t6,t3,t4);}}

/* k29504 in emit-list in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29506,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29510,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 84   emit-list");
f_29489(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29508 in k29504 in emit-list in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29510,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* emit in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29456(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29456,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29463,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   token-unit?");
f_29311(t5,t2);}

/* k29461 in emit in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29463,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29534,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-type");
f_29266(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29472,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29350,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit?");
f_29251(t4,t3);}}

/* k29348 in k29461 in emit in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29350,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29357,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-type");
f_29266(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_29472(2,t2,C_SCHEME_FALSE);}}

/* k29355 in k29348 in k29461 in emit in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   SalRuleType?");
f_30578(((C_word*)t0)[2],t1);}

/* k29470 in k29461 in emit in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29472,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29672,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29695,a[2]=t6,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-type");
f_29266(t7,t3);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 84   emit-list");
f_29489(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[676],((C_word*)t0)[4]);}}}

/* k29693 in k29470 in k29461 in emit in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   get-rule");
f_29058(((C_word*)t0)[2],t1);}

/* k29670 in k29470 in k29461 in emit in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29672,2,t0,t1);}
t2=(C_word)C_i_check_structure(t1,lf[647]);
t3=(C_word)C_i_block_ref(t1,C_fix(5));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 84   meth");
t4=t3;
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29688,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-parsed");
f_29284(t4,((C_word*)t0)[4]);}}

/* k29686 in k29670 in k29470 in k29461 in emit in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   emit");
f_29456(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29532 in k29461 in emit in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29534,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29537,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-parsed");
f_29284(t2,((C_word*)t0)[2]);}

/* k29535 in k29532 in k29461 in emit in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29537,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_lessp(C_fix(2560),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(3584)):C_SCHEME_FALSE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 84   string->number");
C_string_to_number(3,0,((C_word*)t0)[3],t1);}
else{
t5=((C_word*)t0)[4];
t6=(C_word)C_i_lessp(C_fix(13056),t5);
t7=(C_truep(t6)?(C_word)C_i_lessp(t5,C_fix(23808)):C_SCHEME_FALSE);
if(C_truep(t7)){
C_trace("ChickenBridge.scm: 84   string->symbol");
t8=*((C_word*)lf[550]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,((C_word*)t0)[3],t1);}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29561,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   SalOpType?");
f_30476(t8,((C_word*)t0)[4]);}}}

/* k29559 in k29535 in k29532 in k29461 in emit in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29561,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29567,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   SalType=?");
f_30590(t2,((C_word*)t0)[3],C_fix(7941));}
else{
t2=((C_word*)t0)[3];
t3=(C_word)C_i_lessp(C_fix(4096),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(4864)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29612,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   SalType=?");
f_30590(t5,((C_word*)t0)[3],C_fix(4352));}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29618,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   SalType=?");
f_30590(t5,((C_word*)t0)[3],C_fix(2304));}}}

/* k29616 in k29559 in k29535 in k29532 in k29461 in emit in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29618,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29624,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   SalType=?");
f_30590(t2,((C_word*)t0)[2],C_fix(6144));}}

/* k29622 in k29616 in k29559 in k29535 in k29532 in k29461 in emit in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29624,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   string->keyword");
t2=C_retrieve(lf[120]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29633,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   SalType=?");
f_30590(t2,((C_word*)t0)[2],C_fix(3840));}}

/* k29631 in k29622 in k29616 in k29559 in k29535 in k29532 in k29461 in emit in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29633,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   string->keyword");
t2=C_retrieve(lf[120]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29642,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   SalType=?");
f_30590(t2,((C_word*)t0)[2],C_fix(6400));}}

/* k29640 in k29631 in k29622 in k29616 in k29559 in k29535 in k29532 in k29461 in emit in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29642,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   string->symbol");
t2=*((C_word*)lf[550]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29651,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 84   SalType=?");
f_30590(t2,((C_word*)t0)[2],C_fix(25344));}}

/* k29649 in k29640 in k29631 in k29622 in k29616 in k29559 in k29535 in k29532 in k29461 in emit in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29651,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[672],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29660,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   SalType=?");
f_30590(t2,((C_word*)t0)[2],C_fix(25088));}}

/* k29658 in k29649 in k29640 in k29631 in k29622 in k29616 in k29559 in k29535 in k29532 in k29461 in emit in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 84   string->symbol");
t2=*((C_word*)lf[550]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[673],((C_word*)t0)[2]);}}

/* k29610 in k29559 in k29535 in k29532 in k29461 in emit in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_SCHEME_TRUE:C_SCHEME_FALSE));}

/* k29565 in k29559 in k29535 in k29532 in k29461 in emit in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29567,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[450]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29573,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   SalType=?");
f_30590(t2,((C_word*)t0)[2],C_fix(8199));}}

/* k29571 in k29565 in k29559 in k29535 in k29532 in k29461 in emit in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29573,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[471]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29579,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   SalType=?");
f_30590(t2,((C_word*)t0)[2],C_fix(10244));}}

/* k29577 in k29571 in k29565 in k29559 in k29535 in k29532 in k29461 in emit in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29579,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[17]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29585,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   SalType=?");
f_30590(t2,((C_word*)t0)[2],C_fix(8450));}}

/* k29583 in k29577 in k29571 in k29565 in k29559 in k29535 in k29532 in k29461 in emit in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29585,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[243]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29591,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   SalType=?");
f_30590(t2,((C_word*)t0)[2],C_fix(8705));}}

/* k29589 in k29583 in k29577 in k29571 in k29565 in k29559 in k29535 in k29532 in k29461 in emit in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29591,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[266]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29597,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   SalType=?");
f_30590(t2,((C_word*)t0)[2],C_fix(8963));}}

/* k29595 in k29589 in k29583 in k29577 in k29571 in k29565 in k29559 in k29535 in k29532 in k29461 in emit in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[209]);}
else{
C_trace("ChickenBridge.scm: 84   string->symbol");
t2=*((C_word*)lf[550]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* set-emit-info! in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29438(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29438,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_assoc(t2,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29445,a[2]=t3,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=t6;
f_29445(2,t7,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 84   error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[670],t2);}}

/* k29443 in set-emit-info! in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_set_cdr(((C_word*)t0)[3],((C_word*)t0)[2]));}

/* add-emit-info in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29371(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29371,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_cons(&a,2,t2,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_cons(&a,2,t5,t4));}

/* get-emit-info in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29359(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29359,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_assoc(t2,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cdr(t4):C_SCHEME_FALSE));}

/* token-unit-type=? in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29327(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29327,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29334,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 84   token-unit?");
f_29311(t4,t2);}

/* k29332 in token-unit-type=? in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29334,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29341,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-type");
f_29266(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k29339 in k29332 in token-unit-type=? in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   SalType=?");
f_30590(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* token-unit? in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29311(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29311,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29318,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit?");
f_29251(t3,t2);}

/* k29316 in token-unit? in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29318,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29325,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   parse-unit-type");
f_29266(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k29323 in k29316 in token-unit? in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 84   SalTokenType?");
f_30428(((C_word*)t0)[2],t1);}

/* parse-unit-position in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29302(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29302,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[658]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* parse-unit-parsed in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29284(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29284,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[658]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-unit-type in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29266(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29266,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[658]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* parse-unit? in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29251(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29251,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[658]));}

/* make-parse-unit in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29245(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29245,NULL,4,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[658],t2,t3,t4));}

/* make-parse-error in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29197(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29197,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_record(&a,3,lf[656],t2,t3));}

/* pattern-zero-or-more? in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29165(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29165,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29172,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-clause?");
f_29079(t3,t2);}

/* k29170 in pattern-zero-or-more? in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_eqp(t2,lf[409]));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* pattern-sub in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29107(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29107,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29115,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   pattern-subs");
f_29091(t4,t2);}

/* k29113 in pattern-sub in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)t0)[2]));}

/* pattern-nsubs in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29097(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29097,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29105,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 84   pattern-subs");
f_29091(t3,t2);}

/* k29103 in pattern-nsubs in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_length(t1));}

/* pattern-subs in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29091(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29091,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* pattern-clause? in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29079(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29079,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_pairp(t2));}

/* pattern-value in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29076(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29076,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* get-rule in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_29058(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29058,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29062,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 84   hash-ref");
t4=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,C_retrieve2(lf[645],"*rules*"),t2);}

/* k29060 in get-rule in k29054 in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_29062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
C_trace("ChickenBridge.scm: 84   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[649],((C_word*)t0)[2]);}}

/* make-rule in k28949 in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_28953(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28953,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,6,lf[647],t2,t3,t4,t5,t6));}

/* null-tokens? in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_28943(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28943,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_nullp(t2));}

/* first-token in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_28931(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28931,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_car(t2));}

/* list->token in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28908(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28908,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_eqp(t3,lf[642]);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t2);
C_apply(4,0,t1,C_retrieve2(lf[637],"make-token"),t5);}
else{
C_apply(4,0,t1,C_retrieve2(lf[637],"make-token"),t2);}}

/* token-position in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_28899(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28899,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[638]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* token-type in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_28863(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28863,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[638]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-token in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28842(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28842,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[638],t2,t3,t4));}

/* export-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28646(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28646,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28650,a[2]=t3,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_28650(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_28650(t8,t7);}}

/* k28648 in export-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_28650(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28650,NULL,2,t0,t1);}
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_length(((C_word*)((C_word*)t0)[4])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28656,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t4,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28799,a[2]=t7,a[3]=t3,a[4]=((C_word)li408),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_28799(t9,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* do4465 in k28648 in export-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_28799(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28799,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28810,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28825,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 83   spectrum-freqs");
t6=C_retrieve(lf[575]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}}

/* k28823 in do4465 in k28648 in export-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_length(t1);
C_trace("ChickenBridge.scm: 83   max");
t3=*((C_word*)lf[371]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k28808 in do4465 in k28648 in export-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_28799(t4,((C_word*)t0)[2],t3);}

/* k28654 in k28648 in export-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28656,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28661,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word)li407),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   with-output-to-file");
t3=C_retrieve(lf[636]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a28660 in k28654 in k28648 in export-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28661,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28665,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   current-output-port");
t3=*((C_word*)lf[635]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k28663 in a28660 in k28654 in k28648 in export-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28665,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28668,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   format");
t3=C_retrieve(lf[429]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,lf[634]);}

/* k28666 in k28663 in a28660 in k28654 in k28648 in export-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28668,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28671,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   format");
t3=C_retrieve(lf[429]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[6],lf[633]);}

/* k28669 in k28666 in k28663 in a28660 in k28654 in k28648 in export-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28671,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28674,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   format");
t3=C_retrieve(lf[429]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[6],lf[632],((C_word*)((C_word*)t0)[2])[1]);}

/* k28672 in k28669 in k28666 in k28663 in a28660 in k28654 in k28648 in export-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28674,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28677,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   format");
t3=C_retrieve(lf[429]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[5],lf[631],((C_word*)t0)[2]);}

/* k28675 in k28672 in k28669 in k28666 in k28663 in a28660 in k28654 in k28648 in export-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28677,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28680,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   format");
t3=C_retrieve(lf[429]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[4],lf[630]);}

/* k28678 in k28675 in k28672 in k28669 in k28666 in k28663 in a28660 in k28654 in k28648 in export-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28680,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28685,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word)li406),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_28685(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* do4471 in k28678 in k28675 in k28672 in k28669 in k28666 in k28663 in a28660 in k28654 in k28648 in export-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_28685(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28685,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28695,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28779,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 83   spectrum-time");
t7=C_retrieve(lf[571]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k28777 in do4471 in k28678 in k28675 in k28672 in k28669 in k28666 in k28663 in a28660 in k28654 in k28648 in export-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28779,2,t0,t1);}
t2=(C_truep(t1)?t1:(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],lf[628]));
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28786,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 83   spectrum-size");
t5=C_retrieve(lf[573]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k28784 in k28777 in do4471 in k28678 in k28675 in k28672 in k28669 in k28666 in k28663 in a28660 in k28654 in k28648 in export-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   format");
t2=C_retrieve(lf[429]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[629],((C_word*)t0)[2],t1);}

/* k28693 in do4471 in k28678 in k28675 in k28672 in k28669 in k28666 in k28663 in a28660 in k28654 in k28648 in export-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28695,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28698,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28716,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 83   spectrum-freqs");
t5=C_retrieve(lf[575]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k28714 in k28693 in do4471 in k28678 in k28675 in k28672 in k28669 in k28666 in k28663 in a28660 in k28654 in k28648 in export-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28716,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28720,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 83   spectrum-amps");
t4=C_retrieve(lf[577]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k28718 in k28714 in k28693 in do4471 in k28678 in k28675 in k28672 in k28669 in k28666 in k28663 in a28660 in k28654 in k28648 in export-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28720,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28724,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 83   spectrum-size");
t4=C_retrieve(lf[573]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k28722 in k28718 in k28714 in k28693 in do4471 in k28678 in k28675 in k28672 in k28669 in k28666 in k28663 in a28660 in k28654 in k28648 in export-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28724,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28726,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word)li405),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_28726(t5,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do4477 in k28722 in k28718 in k28714 in k28693 in do4471 in k28678 in k28675 in k28672 in k28669 in k28666 in k28663 in a28660 in k28654 in k28648 in export-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_28726(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28726,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_less_or_equalp(t4,C_fix(0)))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28736,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(C_word)C_a_i_minus(&a,2,t4,C_fix(1));
t7=(C_word)C_i_car(t2);
t8=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 83   format");
t9=C_retrieve(lf[429]);
((C_proc7)C_retrieve_proc(t9))(7,t9,t5,((C_word*)t0)[2],lf[627],t6,t7,t8);}}

/* k28734 in do4477 in k28722 in k28718 in k28714 in k28693 in do4471 in k28678 in k28675 in k28672 in k28669 in k28666 in k28663 in a28660 in k28654 in k28648 in export-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28736,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],C_fix(1));
t5=((C_word*)((C_word*)t0)[3])[1];
f_28726(t5,((C_word*)t0)[2],t2,t3,t4);}

/* k28696 in k28693 in do4471 in k28678 in k28675 in k28672 in k28669 in k28666 in k28663 in a28660 in k28654 in k28648 in export-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28698,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28701,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   format");
t3=C_retrieve(lf[429]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],lf[626]);}

/* k28699 in k28696 in k28693 in do4471 in k28678 in k28675 in k28672 in k28669 in k28666 in k28663 in a28660 in k28654 in k28648 in export-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28701,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_28685(t4,((C_word*)t0)[2],t2,t3);}

/* import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28520(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28520,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28526,a[2]=((C_word)li403),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   with-input-from-file");
t4=C_retrieve(lf[624]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t2,t3);}

/* a28525 in import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28526,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28530,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   current-input-port");
t3=*((C_word*)lf[623]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k28528 in a28525 in import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28530,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28531,a[2]=((C_word)li398),tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28548,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   rhdr");
f_28531(t5,t1);}

/* k28546 in k28528 in a28525 in import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28548,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28551,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[621]))){
t4=t3;
f_28551(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 83   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[622],((C_word*)t0)[4]);}}

/* k28549 in k28546 in k28528 in a28525 in import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28551,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28555,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   rhdr");
f_28531(t2,((C_word*)t0)[4]);}

/* k28553 in k28549 in k28546 in k28528 in a28525 in import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28555,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28558,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[619]))){
t4=t3;
f_28558(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 83   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[620],((C_word*)t0)[4]);}}

/* k28556 in k28553 in k28549 in k28546 in k28528 in a28525 in import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28558,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28561,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28610,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word)li402),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_28610(t6,t2);}

/* do4442 in k28556 in k28553 in k28549 in k28546 in k28528 in a28525 in import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_28610(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28610,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[618]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28621,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   rhdr");
f_28531(t2,((C_word*)t0)[2]);}}

/* k28619 in do4442 in k28556 in k28553 in k28549 in k28546 in k28528 in a28525 in import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=((C_word*)((C_word*)t0)[3])[1];
f_28610(t3,((C_word*)t0)[2]);}

/* k28559 in k28556 in k28553 in k28549 in k28546 in k28528 in a28525 in import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28561,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28571,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   read-line");
t6=C_retrieve(lf[615]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[3]);}

/* k28569 in k28559 in k28556 in k28553 in k28549 in k28546 in k28528 in a28525 in import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28571,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28573,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li401),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_28573(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do4452 in k28569 in k28559 in k28556 in k28553 in k28549 in k28546 in k28528 in a28525 in import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_28573(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28573,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_eofp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28587,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t6=t2;
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28417,a[2]=t5,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   open-input-string");
t8=C_retrieve(lf[617]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,t6);}}

/* k28415 in do4452 in k28569 in k28559 in k28556 in k28553 in k28549 in k28546 in k28528 in a28525 in import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28417,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28418,a[2]=((C_word*)t0)[3],a[3]=((C_word)li399),tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28441,a[2]=t1,a[3]=t2,a[4]=t7,a[5]=((C_word*)t0)[2],a[6]=t8,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 83   rdat");
t10=t2;
f_28418(t10,t9,t1);}

/* k28439 in k28415 in do4452 in k28569 in k28559 in k28556 in k28553 in k28549 in k28546 in k28528 in a28525 in import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28441,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28445,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 83   rdat");
t4=((C_word*)t0)[3];
f_28418(t4,t3,((C_word*)t0)[2]);}

/* k28443 in k28439 in k28415 in do4452 in k28569 in k28559 in k28556 in k28553 in k28549 in k28546 in k28528 in a28525 in import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28445,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28448,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28471,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[8],a[6]=((C_word)li400),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_28471(t7,t3,C_fix(0),((C_word*)t0)[5],((C_word*)t0)[7]);}

/* do4421 in k28443 in k28439 in k28415 in do4452 in k28569 in k28559 in k28556 in k28553 in k28549 in k28546 in k28528 in a28525 in import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_28471(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28471,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)((C_word*)t0)[5])[1]))){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,C_SCHEME_FALSE);}
else{
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28481,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=t5,a[8]=t6,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 83   rdat");
t8=((C_word*)t0)[3];
f_28418(t8,t7,((C_word*)t0)[2]);}}

/* k28479 in do4421 in k28443 in k28439 in k28415 in do4452 in k28569 in k28559 in k28556 in k28553 in k28549 in k28546 in k28528 in a28525 in import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28481,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28518,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 83   rdat");
t3=((C_word*)t0)[3];
f_28418(t3,t2,((C_word*)t0)[2]);}

/* k28516 in k28479 in do4421 in k28443 in k28439 in k28415 in do4452 in k28569 in k28559 in k28556 in k28553 in k28549 in k28546 in k28528 in a28525 in import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28518,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[8])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t4);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28510,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   rdat");
t7=((C_word*)t0)[3];
f_28418(t7,t6,((C_word*)t0)[2]);}

/* k28508 in k28516 in k28479 in do4421 in k28443 in k28439 in k28415 in do4452 in k28569 in k28559 in k28556 in k28553 in k28549 in k28546 in k28528 in a28525 in import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28510,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t7=((C_word*)((C_word*)t0)[4])[1];
f_28471(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k28446 in k28443 in k28439 in k28415 in do4452 in k28569 in k28559 in k28556 in k28553 in k28549 in k28546 in k28528 in a28525 in import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
t3=((C_word*)t0)[5];
f_28587(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_cdr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 83   make-spectrum");
f_25179(((C_word*)t0)[5],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],t3,t4);}}

/* rdat in k28415 in do4452 in k28569 in k28559 in k28556 in k28553 in k28549 in k28546 in k28528 in a28525 in import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_28418(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28418,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28422,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   read");
t4=*((C_word*)lf[26]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k28420 in rdat in k28415 in do4452 in k28569 in k28559 in k28556 in k28553 in k28549 in k28546 in k28528 in a28525 in import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28422,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28425,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_eofp(t1))){
C_trace("ChickenBridge.scm: 83   error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[616],((C_word*)t0)[2]);}
else{
t3=t2;
f_28425(2,t3,C_SCHEME_UNDEFINED);}}

/* k28423 in k28420 in rdat in k28415 in do4452 in k28569 in k28559 in k28556 in k28553 in k28549 in k28546 in k28528 in a28525 in import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k28585 in do4452 in k28569 in k28559 in k28556 in k28553 in k28549 in k28546 in k28528 in a28525 in import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28587,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28590,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t3;
f_28590(t8,t7);}
else{
t4=t3;
f_28590(t4,C_SCHEME_UNDEFINED);}}

/* k28588 in k28585 in do4452 in k28569 in k28559 in k28556 in k28553 in k28549 in k28546 in k28528 in a28525 in import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_28590(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28590,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28597,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   read-line");
t3=C_retrieve(lf[615]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k28595 in k28588 in k28585 in do4452 in k28569 in k28559 in k28556 in k28553 in k28549 in k28546 in k28528 in a28525 in import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_28573(t2,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* rhdr in k28528 in a28525 in import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_28531(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28531,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28535,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   read-line");
t4=C_retrieve(lf[615]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k28533 in rhdr in k28528 in a28525 in import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28535,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28538,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_eofp(t1))){
C_trace("ChickenBridge.scm: 83   error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[614],((C_word*)t0)[2]);}
else{
t3=t2;
f_28538(2,t3,C_SCHEME_UNDEFINED);}}

/* k28536 in k28533 in rhdr in k28528 in a28525 in import-spear-frames in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28007(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+24)){
C_save_and_reclaim((void*)tr4r,(void*)f_28007r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_28007r(t0,t1,t2,t3,t4);}}

static void C_ccall f_28007r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a=C_alloc(24);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28011,a[2]=t5,a[3]=t10,a[4]=t8,a[5]=t6,a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t6)[1]))){
C_trace("ChickenBridge.scm: 83   error");
t12=*((C_word*)lf[82]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,lf[611]);}
else{
t12=(C_word)C_i_cdr(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28380,a[2]=t11,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_car(((C_word*)t6)[1]);
t15=(C_word)C_i_pairp(t14);
t16=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28386,a[2]=t6,a[3]=t13,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t15)){
t17=t16;
f_28386(t17,t15);}
else{
t17=(C_word)C_i_car(((C_word*)t6)[1]);
t18=t16;
f_28386(t18,(C_word)C_i_numberp(t17));}}
else{
t13=t11;
f_28011(2,t13,C_SCHEME_UNDEFINED);}}}

/* k28384 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_28386(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_28380(2,t2,(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]));}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 83   error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],lf[612],t2);}}

/* k28378 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28011(2,t3,t2);}

/* k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28011,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28014,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28364,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   <=");
C_less_or_equal_p(5,0,t3,C_fix(1),((C_word*)((C_word*)t0)[2])[1],C_fix(8));}

/* k28362 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28364,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_28014(2,t4,t3);}
else{
C_trace("ChickenBridge.scm: 83   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[610],((C_word*)((C_word*)t0)[3])[1]);}}

/* k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28014,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28017,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(2)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28346,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-amps");
t4=C_retrieve(lf[577]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28350,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-freqs");
t4=C_retrieve(lf[575]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}}

/* k28348 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28017(t3,t2);}

/* k28344 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28017(t3,t2);}

/* k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_28017(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28017,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28020,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(1)))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28335,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-amps");
t4=C_retrieve(lf[577]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28339,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-freqs");
t4=C_retrieve(lf[575]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}}

/* k28337 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_SCHEME_UNDEFINED;
t3=((C_word*)t0)[2];
f_28020(t3,t2);}

/* k28333 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_SCHEME_UNDEFINED;
t3=((C_word*)t0)[2];
f_28020(t3,t2);}

/* k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_28020(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28020,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28023,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=t2;
f_28023(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=t2;
f_28023(t4,t3);}}

/* k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_28023(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28023,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28026,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28037,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word)li388),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_28037(t6,t2,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28067,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word)li389),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_28067(t6,t2,((C_word*)((C_word*)t0)[3])[1]);}}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28087,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28323,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=*((C_word*)lf[609]+1);
t6=((C_word*)((C_word*)t0)[5])[1];
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8668,a[2]=t5,a[3]=t8,a[4]=((C_word)li396),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_8668(t10,t4,t6,C_SCHEME_TRUE);}}

/* do720 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_8668(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8668,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_not(((C_word*)t4)[1]);
t6=(C_truep(t5)?t5:(C_word)C_i_nullp(t2));
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,((C_word*)t4)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8681,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8691,a[2]=t4,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 79   f");
t10=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t10))(3,t10,t8,t9);}}

/* k8689 in do720 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_8681(t2,C_SCHEME_FALSE);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
f_8681(t3,t2);}}

/* k8679 in do720 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_8681(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_8668(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k28321 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28323,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
f_28087(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28181,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=t5,a[6]=t3,a[7]=t9,a[8]=t7,a[9]=((C_word*)t0)[4],a[10]=((C_word*)t0)[5],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28307,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-minamp");
t12=C_retrieve(lf[583]);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t0)[2]);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28315,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-minfreq");
t12=C_retrieve(lf[581]);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t0)[2]);}}}

/* k28313 in k28321 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28315,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28319,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-maxfreq");
t4=C_retrieve(lf[582]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k28317 in k28313 in k28321 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28181(t3,t2);}

/* k28305 in k28321 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28307,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28311,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-maxamp");
t4=C_retrieve(lf[585]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k28309 in k28305 in k28321 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28181(t3,t2);}

/* k28179 in k28321 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_28181(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28181,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28184,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(2)))){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28288,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-minamp");
t4=C_retrieve(lf[583]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28296,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-minfreq");
t4=C_retrieve(lf[581]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k28294 in k28179 in k28321 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28296,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28300,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-maxfreq");
t4=C_retrieve(lf[582]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k28298 in k28294 in k28179 in k28321 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28184(t3,t2);}

/* k28286 in k28179 in k28321 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28288,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28292,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-maxamp");
t4=C_retrieve(lf[585]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k28290 in k28286 in k28179 in k28321 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28184(t3,t2);}

/* k28182 in k28179 in k28321 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_28184(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28184,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28188,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 83   append");
t3=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_END_OF_LIST);}

/* k28186 in k28182 in k28179 in k28321 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28188,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28193,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t4,a[8]=((C_word)li395),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_28193(t6,((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}

/* do4384 in k28186 in k28182 in k28179 in k28321 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_28193(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28193,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28203,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_eqp(t4,C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t3;
f_28203(t6,(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[3])[1]));}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_eqp(t6,C_SCHEME_TRUE);
t8=t3;
f_28203(t8,(C_truep(t7)?(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[2])[1]):C_SCHEME_UNDEFINED));}}}

/* k28201 in do4384 in k28186 in k28182 in k28179 in k28321 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_28203(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28203,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28206,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 83   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[608],t3);}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
t4=(C_word)C_eqp(t3,C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(((C_word*)t0)[7]);
t6=t2;
f_28206(2,t6,(C_word)C_i_set_car(t5,((C_word*)((C_word*)t0)[3])[1]));}
else{
t5=(C_word)C_i_cadr(((C_word*)t0)[7]);
t6=(C_word)C_eqp(t5,C_SCHEME_TRUE);
if(C_truep(t6)){
t7=(C_word)C_i_cdr(((C_word*)t0)[7]);
t8=t2;
f_28206(2,t8,(C_word)C_i_set_car(t7,((C_word*)((C_word*)t0)[2])[1]));}
else{
t7=t2;
f_28206(2,t7,C_SCHEME_UNDEFINED);}}}}

/* k28204 in k28201 in do4384 in k28186 in k28182 in k28179 in k28321 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_28193(t3,((C_word*)t0)[2],t2);}

/* k28085 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28087,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28090,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28112,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word)li393),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_28112(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28150,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word)li394),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_28150(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* do4398 in k28085 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_28150(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28150,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28171,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 83   interp");
t5=C_retrieve(lf[485]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k28169 in do4398 in k28085 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_28150(t4,((C_word*)t0)[2],t3);}

/* do4393 in k28085 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_28112(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28112,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28141,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 83   interp");
t6=C_retrieve(lf[485]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}}

/* k28139 in do4393 in k28085 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28141,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[4],t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_28112(t5,((C_word*)t0)[2],t4);}

/* k28088 in k28085 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28090,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28103,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28107,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-freqs");
t4=C_retrieve(lf[575]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k28105 in k28088 in k28085 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_apply(4,0,((C_word*)t0)[2],*((C_word*)lf[175]+1),t1);}

/* k28101 in k28088 in k28085 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28103,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_28026(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=((C_word*)t0)[2];
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27473,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27545,a[2]=((C_word)li392),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27553,a[2]=t2,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-freqs");
t6=C_retrieve(lf[575]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}

/* k27551 in k28101 in k28088 in k28085 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27553,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27557,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-amps");
t3=C_retrieve(lf[577]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k27555 in k27551 in k28101 in k28088 in k28085 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   map");
t2=*((C_word*)lf[607]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a27544 in k28101 in k28088 in k28085 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27545(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27545,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* k27471 in k28101 in k28088 in k28085 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27473,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27477,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27531,a[2]=((C_word)li391),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   sort!");
t6=C_retrieve(lf[588]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)t3)[1],t5);}

/* a27530 in k27471 in k28101 in k28088 in k28085 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27531(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27531,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_lessp(t4,t5));}

/* k27475 in k27471 in k28101 in k28088 in k28085 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27477,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27485,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word)li390),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_27485(t8,((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1],t4);}

/* do4269 in k27475 in k27471 in k28101 in k28088 in k28085 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_27485(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word *a;
loop:
a=C_alloc(5);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_27485,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27495,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-freqs-set!");
f_25227(t4,((C_word*)t0)[5],((C_word*)t0)[3]);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t4);
t6=(C_word)C_i_cdr(t4);
t7=(C_word)C_i_set_cdr(t3,t6);
t8=(C_word)C_i_cdr(t3);
t9=t3=t8;
t10=(C_word)C_i_set_car(t2,t5);
t11=(C_word)C_i_cdr(t2);
t14=t1;
t15=t11;
t16=t3;
t1=t14;
t2=t15;
t3=t16;
goto loop;}}

/* k27493 in do4269 in k27475 in k27471 in k28101 in k28088 in k28085 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27495,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27498,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 83   spectrum-amps-set!");
f_25245(t2,((C_word*)t0)[3],t3);}

/* k27496 in k27493 in do4269 in k27475 in k27471 in k28101 in k28088 in k28085 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* do4371 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_28067(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28067,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_cdr(t2);
t6=t1;
t7=t4;
t1=t6;
t2=t7;
goto loop;}}

/* do4366 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_28037(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_28037,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_times(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_i_set_car(t2,t4);
t6=(C_word)C_i_cdr(t2);
t8=t1;
t9=t6;
t1=t8;
t2=t9;
goto loop;}}

/* k28024 in k28021 in k28018 in k28015 in k28012 in k28009 in spectrum-rescale! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_28026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* spectrum-flip! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27950(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27950,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27958,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-maxfreq");
t4=C_retrieve(lf[582]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k27956 in spectrum-flip! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27958,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27962,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-minfreq");
t3=C_retrieve(lf[581]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k27960 in k27956 in spectrum-flip! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27962,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27966,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-freqs");
t3=C_retrieve(lf[575]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[4]);}

/* k27964 in k27960 in k27956 in spectrum-flip! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27966,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27972,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word)li386),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_27972(t5,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* do4347 in k27964 in k27960 in k27956 in spectrum-flip! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_27972(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a;
loop:
a=C_alloc(15);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_27972,NULL,6,t0,t1,t2,t3,t4,t5);}
if(C_truep((C_word)C_i_nullp(t4))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27982,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-freqs-set!");
f_25227(t6,((C_word*)t0)[3],t5);}
else{
t6=(C_word)C_i_car(t4);
t7=(C_word)C_a_i_divide(&a,2,t2,t6);
t8=(C_word)C_a_i_times(&a,2,t3,t7);
t9=(C_word)C_a_i_cons(&a,2,t8,t5);
t10=t5=t9;
t11=(C_word)C_i_cdr(t4);
t14=t1;
t15=t2;
t16=t3;
t17=t11;
t18=t5;
t1=t14;
t2=t15;
t3=t16;
t4=t17;
t5=t18;
goto loop;}}

/* k27980 in do4347 in k27964 in k27960 in k27956 in spectrum-flip! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* rm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27738(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[17],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27738,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27740,a[2]=((C_word)li378),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27757,a[2]=((C_word)li379),tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27774,a[2]=((C_word)li380),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27806,a[2]=t4,a[3]=t2,a[4]=t3,a[5]=t5,a[6]=t6,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 83   getfreqs");
f_27740(t7,t2);}

/* k27804 in rm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27806,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27809,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t1,a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 83   getfreqs");
f_27740(t2,((C_word*)t0)[4]);}

/* k27807 in k27804 in rm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27809,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27812,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 83   getamps");
f_27757(t2,((C_word*)t0)[2]);}

/* k27810 in k27807 in k27804 in rm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27812,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27815,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   getamps");
f_27757(t2,((C_word*)t0)[2]);}

/* k27813 in k27810 in k27807 in k27804 in rm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27815,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27818,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   make-spectrum");
f_25179(t2,C_SCHEME_FALSE,C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}

/* k27816 in k27813 in k27810 in k27807 in k27804 in rm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27818,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27821,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[4]))){
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[3]))){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27835,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li382),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_27835(t6,t2,((C_word*)t0)[3]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27884,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li383),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_27884(t6,t2,((C_word*)t0)[4]);}}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[3]))){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27916,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li384),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_27916(t6,t2,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 83   sums-and-diffs");
f_27774(t2,t1,((C_word*)t0)[4],((C_word*)t0)[3]);}}}

/* do4340 in k27816 in k27813 in k27810 in k27807 in k27804 in rm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_27916(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27916,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27926,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 83   sums-and-diffs");
f_27774(t3,((C_word*)t0)[3],((C_word*)t0)[2],t4);}}

/* k27924 in do4340 in k27816 in k27813 in k27810 in k27807 in k27804 in rm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27916(t3,((C_word*)t0)[2],t2);}

/* do4335 in k27816 in k27813 in k27810 in k27807 in k27804 in rm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_27884(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27884,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27894,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 83   sums-and-diffs");
f_27774(t3,((C_word*)t0)[3],t4,((C_word*)t0)[2]);}}

/* k27892 in do4335 in k27816 in k27813 in k27810 in k27807 in k27804 in rm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27884(t3,((C_word*)t0)[2],t2);}

/* do4325 in k27816 in k27813 in k27810 in k27807 in k27804 in rm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_27835(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27835,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27845,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27854,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t5,a[6]=((C_word)li381),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_27854(t7,t3,((C_word*)t0)[2]);}}

/* do4328 in do4325 in k27816 in k27813 in k27810 in k27807 in k27804 in rm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_27854(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27854,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27864,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 83   sums-and-diffs");
f_27774(t3,((C_word*)t0)[2],t4,t5);}}

/* k27862 in do4328 in do4325 in k27816 in k27813 in k27810 in k27807 in k27804 in rm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27854(t3,((C_word*)t0)[2],t2);}

/* k27843 in do4325 in k27816 in k27813 in k27810 in k27807 in k27804 in rm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_27835(t3,((C_word*)t0)[2],t2);}

/* k27819 in k27816 in k27813 in k27810 in k27807 in k27804 in rm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* sums-and-diffs in rm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_27774(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27774,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t3,t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27784,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_a_i_plus(&a,2,t3,t4);
C_trace("ChickenBridge.scm: 83   spectrum-add!");
t7=C_retrieve(lf[599]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,t2,t6,lf[604]);}}

/* k27782 in sums-and-diffs in rm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27784,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_abs(&a,1,t2);
C_trace("ChickenBridge.scm: 83   spectrum-add!");
t4=C_retrieve(lf[599]);
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3,lf[603]);}

/* getamps in rm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_27757(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27757,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27764,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   spectrum?");
f_25185(t3,t2);}

/* k27762 in getamps in rm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 83   spectrum-amps");
t2=C_retrieve(lf[577]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_pairp(((C_word*)t0)[2]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?lf[601]:lf[602]));}}

/* getfreqs in rm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_27740(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27740,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27747,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   spectrum?");
f_25185(t3,t2);}

/* k27745 in getfreqs in rm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 83   spectrum-freqs");
t2=C_retrieve(lf[575]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_pairp(((C_word*)t0)[2]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)t0)[2]:((C_word*)t0)[2]));}}

/* spectrum-add! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27559(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27559,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27567,a[2]=t1,a[3]=t3,a[4]=t4,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-freqs");
t6=C_retrieve(lf[575]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k27565 in spectrum-add! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27567,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27571,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-amps");
t3=C_retrieve(lf[577]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[5]);}

/* k27569 in k27565 in spectrum-add! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27571,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27573,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word)li376),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_27573(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}

/* do4285 in k27569 in k27565 in spectrum-add! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_27573(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27573,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27583,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t5,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t4,a[8]=t2,a[9]=((C_word*)t0)[5],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t6)){
t8=t7;
f_27583(t8,t6);}
else{
t8=(C_word)C_i_car(t2);
t9=t7;
f_27583(t9,(C_word)C_i_greater_or_equalp(t8,((C_word*)t0)[3]));}}

/* k27581 in do4285 in k27569 in k27565 in spectrum-add! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_27583(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27583,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27586,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[8]))){
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[7]))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27598,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 83   spectrum-freqs-set!");
f_25227(t3,((C_word*)t0)[9],t4);}
else{
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t6=(C_word)C_i_set_cdr(((C_word*)t0)[4],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27629,a[2]=((C_word*)t0)[9],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-size");
t8=C_retrieve(lf[573]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[9]);}}
else{
t3=(C_word)C_i_car(((C_word*)t0)[8]);
if(C_truep((C_word)C_i_nequalp(t3,((C_word*)t0)[5]))){
t4=(C_word)C_i_car(((C_word*)t0)[3]);
t5=(C_word)C_a_i_plus(&a,2,t4,((C_word*)t0)[6]);
t6=t2;
f_27586(2,t6,(C_word)C_i_set_car(((C_word*)t0)[3],t5));}
else{
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[7]))){
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27663,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 83   spectrum-freqs-set!");
f_25227(t4,((C_word*)t0)[9],t5);}
else{
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t6=(C_word)C_i_set_cdr(t4,((C_word*)t0)[8]);
t7=(C_word)C_i_set_cdr(((C_word*)t0)[7],t4);
t8=(C_word)C_i_set_cdr(t5,((C_word*)t0)[3]);
t9=(C_word)C_i_set_cdr(((C_word*)t0)[4],t5);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27714,a[2]=((C_word*)t0)[9],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-size");
t11=C_retrieve(lf[573]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)t0)[9]);}}}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
t4=((C_word*)((C_word*)t0)[2])[1];
f_27573(t4,((C_word*)t0)[10],t2,t3,((C_word*)t0)[8],((C_word*)t0)[3]);}}

/* k27712 in k27581 in do4285 in k27569 in k27565 in spectrum-add! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27714,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 83   spectrum-size-set!");
f_25209(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k27661 in k27581 in do4285 in k27569 in k27565 in spectrum-add! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27663,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27666,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 83   spectrum-amps-set!");
f_25245(t2,((C_word*)t0)[4],t3);}

/* k27664 in k27661 in k27581 in do4285 in k27569 in k27565 in spectrum-add! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27666,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27677,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-size");
t3=C_retrieve(lf[573]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k27675 in k27664 in k27661 in k27581 in do4285 in k27569 in k27565 in spectrum-add! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27677,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 83   spectrum-size-set!");
f_25209(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k27627 in k27581 in do4285 in k27569 in k27565 in spectrum-add! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27629,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 83   spectrum-size-set!");
f_25209(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k27596 in k27581 in do4285 in k27569 in k27565 in spectrum-add! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27598,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27601,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 83   spectrum-amps-set!");
f_25245(t2,((C_word*)t0)[3],t3);}

/* k27599 in k27596 in k27581 in do4285 in k27569 in k27565 in spectrum-add! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   spectrum-size-set!");
f_25209(((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}

/* k27584 in k27581 in do4285 in k27569 in k27565 in spectrum-add! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* fm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27153(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27153,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_times(&a,2,t2,t3);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27467,a[2]=t4,a[3]=t2,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   round");
t7=*((C_word*)lf[470]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t4);}

/* k27465 in fm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27467,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27166,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27396,a[2]=t9,a[3]=t8,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t5,a[8]=t6,a[9]=t3,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 83   -");
C_minus(3,0,t10,t3);}

/* k27394 in k27465 in fm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27396,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27398,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word)li374),tmp=(C_word)a,a+=11,tmp));
t5=((C_word*)t3)[1];
f_27398(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do4207 in k27394 in k27465 in fm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_27398(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27398,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)t0)[9]))){
t7=(C_word)C_i_cdr(((C_word*)t0)[8]);
t8=C_mutate(((C_word *)((C_word*)t0)[7])+1,t7);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,t8);}
else{
t7=(C_word)C_a_i_times(&a,2,((C_word*)t0)[6],t2);
t8=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],t7);
t9=C_set_block_item(t5,0,t8);
t10=t2;
t11=((C_word*)t0)[4];
t12=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t13=(C_word)C_i_foreign_fixnum_argumentp(t10);
t14=(C_word)C_i_foreign_flonum_argumentp(t11);
t15=(C_word)stub252(t12,t13,t14);
t16=C_set_block_item(t6,0,t15);
t17=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27420,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t18=(C_word)C_i_nequalp(((C_word*)t6)[1],lf[597]);
t19=(C_truep(t18)?t18:(C_word)C_i_nequalp(((C_word*)t5)[1],lf[598]));
if(C_truep(t19)){
t20=t17;
f_27420(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_a_i_list(&a,2,((C_word*)t5)[1],((C_word*)t6)[1]);
t21=(C_word)C_a_i_list(&a,1,t20);
t22=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t21);
t23=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t24=C_mutate(((C_word *)((C_word*)t0)[2])+1,t23);
t25=t17;
f_27420(t25,t24);}}}

/* k27418 in do4207 in k27394 in k27465 in fm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_27420(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27420,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_27398(t3,((C_word*)t0)[4],t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k27164 in k27465 in fm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27166,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27169,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27239,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li373),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_27239(t6,t2,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do4219 in k27164 in k27465 in fm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_27239(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27239,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27392,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t4,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   caar");
t7=*((C_word*)lf[596]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k27390 in do4219 in k27164 in k27465 in fm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27392,2,t0,t1);}
if(C_truep((C_word)C_i_negativep(t1))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_abs(&a,1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_i_set_car(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27376,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=t10,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
C_trace("ChickenBridge.scm: 83   -");
C_minus(3,0,t11,t12);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k27374 in k27390 in do4219 in k27164 in k27465 in fm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27376,2,t0,t1);}
t2=(C_word)C_i_set_car(((C_word*)t0)[7],t1);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_i_assoc(t3,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27270,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t4)){
t6=(C_word)C_i_cdr(t4);
t7=(C_word)C_i_cadr(t4);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t9=(C_word)C_a_i_plus(&a,2,t7,t8);
t10=t5;
f_27270(t10,(C_word)C_i_set_car(t6,t9));}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27295,a[2]=t5,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_a_i_minus(&a,2,t7,C_fix(1));
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27328,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=((C_word*)t0)[5],a[5]=((C_word)li372),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_27328(t12,t6,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}}

/* do4225 in k27374 in k27390 in do4219 in k27164 in k27465 in fm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_27328(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27328,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=((C_word*)t5)[1];
t8=(C_truep(t7)?t7:(C_word)C_i_lessp(t2,C_fix(0)));
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,((C_word*)t5)[1]);}
else{
t9=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[4])[1],t2);
t10=(C_word)C_i_car(t9);
t11=C_set_block_item(t6,0,t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27342,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],((C_word*)((C_word*)t0)[2])[1]))){
t13=C_set_block_item(t5,0,t2);
t14=t12;
f_27342(t14,t13);}
else{
t13=t12;
f_27342(t13,C_SCHEME_UNDEFINED);}}}

/* k27340 in do4225 in k27374 in k27390 in do4219 in k27164 in k27465 in fm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_27342(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27342,NULL,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_27328(t3,((C_word*)t0)[4],t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k27293 in k27374 in k27390 in do4219 in k27164 in k27465 in fm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27295,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_list_tail(((C_word*)((C_word*)t0)[4])[1],t1);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=(C_word)C_i_cdr(t3);
t7=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t6);
t8=((C_word*)t0)[2];
f_27270(t8,(C_word)C_i_set_cdr(t3,((C_word*)((C_word*)t0)[3])[1]));}
else{
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_27270(t5,t4);}}

/* k27268 in k27374 in k27390 in do4219 in k27164 in k27465 in fm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_27270(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_27239(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k27167 in k27164 in k27465 in fm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27169,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27177,a[2]=t5,a[3]=t2,a[4]=t3,a[5]=((C_word)li371),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_27177(t7,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1],C_fix(0),t3);}

/* do4247 in k27167 in k27164 in k27465 in fm-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_27177(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a;
loop:
a=C_alloc(8);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_27177,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 83   make-spectrum");
f_25179(t1,C_SCHEME_FALSE,t3,((C_word*)t0)[3],t5);}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_car(t5);
t7=(C_word)C_i_cdr(t5);
t8=(C_word)C_i_cadr(t5);
t9=(C_word)C_a_i_abs(&a,1,t8);
t10=(C_word)C_i_set_car(t7,t9);
t11=(C_word)C_i_cdr(t5);
t12=(C_word)C_i_set_cdr(t4,t11);
t13=(C_word)C_i_cdr(t4);
t14=t4=t13;
t15=(C_word)C_i_set_car(t2,t6);
t16=(C_word)C_i_cdr(t2);
t17=(C_word)C_a_i_plus(&a,2,t3,C_fix(1));
t20=t1;
t21=t16;
t22=t17;
t23=t4;
t1=t20;
t2=t21;
t3=t22;
t4=t23;
goto loop;}}

/* spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25680(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+101)){
C_save_and_reclaim((void*)tr3r,(void*)f_25680r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_25680r(t0,t1,t2,t3);}}

static void C_ccall f_25680r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word *a=C_alloc(101);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=t3;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_25684,a[2]=t27,a[3]=t25,a[4]=t23,a[5]=t21,a[6]=t19,a[7]=t31,a[8]=t17,a[9]=t3,a[10]=t29,a[11]=t15,a[12]=t13,a[13]=t11,a[14]=t9,a[15]=t7,a[16]=t5,a[17]=t2,a[18]=t1,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t29)[1]))){
t33=t32;
f_25684(t33,C_SCHEME_UNDEFINED);}
else{
t33=(C_word)C_i_car(((C_word*)t29)[1]);
t34=(C_word)C_eqp(t33,lf[452]);
if(C_truep(t34)){
t35=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26926,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t17,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("error");
t36=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t36))(4,t36,t35,lf[116],lf[452]);}
else{
t36=t35;
f_26926(2,t36,C_SCHEME_UNDEFINED);}}
else{
t35=(C_word)C_eqp(t33,lf[592]);
if(C_truep(t35)){
t36=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26961,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t19,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t19)[1])){
C_trace("error");
t37=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t37))(4,t37,t36,lf[116],lf[592]);}
else{
t37=t36;
f_26961(2,t37,C_SCHEME_UNDEFINED);}}
else{
t36=(C_word)C_eqp(t33,lf[593]);
if(C_truep(t36)){
t37=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26996,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t21,a[7]=t9,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t21)[1])){
C_trace("error");
t38=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t38))(4,t38,t37,lf[116],lf[593]);}
else{
t38=t37;
f_26996(2,t38,C_SCHEME_UNDEFINED);}}
else{
t37=(C_word)C_eqp(t33,lf[594]);
if(C_truep(t37)){
t38=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27031,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t11,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t23)[1])){
C_trace("error");
t39=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t39))(4,t39,t38,lf[116],lf[594]);}
else{
t39=t38;
f_27031(2,t39,C_SCHEME_UNDEFINED);}}
else{
t38=(C_word)C_eqp(t33,lf[405]);
if(C_truep(t38)){
t39=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27066,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t25,a[7]=t13,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t25)[1])){
C_trace("error");
t40=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t40))(4,t40,t39,lf[116],lf[405]);}
else{
t40=t39;
f_27066(2,t40,C_SCHEME_UNDEFINED);}}
else{
t39=(C_word)C_eqp(t33,lf[406]);
if(C_truep(t39)){
t40=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27101,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t27,a[7]=t15,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t27)[1])){
C_trace("error");
t41=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t41))(4,t41,t40,lf[116],lf[406]);}
else{
t41=t40;
f_27101(2,t41,C_SCHEME_UNDEFINED);}}
else{
t40=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27130,a[2]=t32,a[3]=t17,a[4]=t5,a[5]=t29,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t31)[1])){
C_trace("error");
t41=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t41))(4,t41,t40,lf[107],t3);}
else{
t41=t40;
f_27130(2,t41,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k27128 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27130,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27137,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27145,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27143 in k27128 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27137(2,t2,C_SCHEME_UNDEFINED);}}

/* k27135 in k27128 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25684(t5,t4);}

/* k27099 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27101,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27105,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_27105(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27103 in k27099 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25684(t7,t6);}

/* k27064 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27066,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27070,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_27070(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27068 in k27064 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25684(t7,t6);}

/* k27029 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27031,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27035,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_27035(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27033 in k27029 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25684(t7,t6);}

/* k26994 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26996,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27000,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_27000(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26998 in k26994 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_27000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25684(t7,t6);}

/* k26959 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26961,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26965,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_26965(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26963 in k26959 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25684(t7,t6);}

/* k26924 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26926,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26930,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_26930(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26928 in k26924 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25684(t7,t6);}

/* k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_25684(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25684,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_25687,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_25687(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[452]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26686,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[452]);}
else{
t6=t5;
f_26686(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[592]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26721,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[592]);}
else{
t7=t6;
f_26721(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[593]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26756,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[593]);}
else{
t8=t7;
f_26756(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[594]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26791,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[116],lf[594]);}
else{
t9=t8;
f_26791(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[405]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26826,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[116],lf[405]);}
else{
t10=t9;
f_26826(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[406]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26861,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[116],lf[406]);}
else{
t11=t10;
f_26861(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26890,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[15],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[107],((C_word*)t0)[9]);}
else{
t11=t10;
f_26890(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k26888 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26890,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26897,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26905,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26903 in k26888 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26897(2,t2,C_SCHEME_UNDEFINED);}}

/* k26895 in k26888 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25687(t5,t4);}

/* k26859 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26861,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26865,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_26865(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26863 in k26859 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25687(t7,t6);}

/* k26824 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26826,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26830,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_26830(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26828 in k26824 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25687(t7,t6);}

/* k26789 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26791,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26795,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_26795(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26793 in k26789 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25687(t7,t6);}

/* k26754 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26756,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26760,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_26760(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26758 in k26754 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25687(t7,t6);}

/* k26719 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26721,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26725,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_26725(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26723 in k26719 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25687(t7,t6);}

/* k26684 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26686,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26690,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_26690(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26688 in k26684 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25687(t7,t6);}

/* k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_25687(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25687,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_25690,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_25690(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[452]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26446,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[452]);}
else{
t6=t5;
f_26446(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[592]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26481,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[592]);}
else{
t7=t6;
f_26481(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[593]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26516,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[593]);}
else{
t8=t7;
f_26516(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[594]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26551,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[116],lf[594]);}
else{
t9=t8;
f_26551(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[405]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26586,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[116],lf[405]);}
else{
t10=t9;
f_26586(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[406]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26621,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[116],lf[406]);}
else{
t11=t10;
f_26621(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26650,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[14],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[107],((C_word*)t0)[9]);}
else{
t11=t10;
f_26650(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k26648 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26650,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26657,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26665,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26663 in k26648 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26657(2,t2,C_SCHEME_UNDEFINED);}}

/* k26655 in k26648 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25690(t5,t4);}

/* k26619 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26621,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26625,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_26625(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26623 in k26619 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25690(t7,t6);}

/* k26584 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26586,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26590,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_26590(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26588 in k26584 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25690(t7,t6);}

/* k26549 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26551,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26555,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_26555(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26553 in k26549 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25690(t7,t6);}

/* k26514 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26516,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26520,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_26520(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26518 in k26514 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25690(t7,t6);}

/* k26479 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26481,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26485,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_26485(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26483 in k26479 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25690(t7,t6);}

/* k26444 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26446,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26450,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_26450(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26448 in k26444 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25690(t7,t6);}

/* k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_25690(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25690,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_25693,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_25693(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[452]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26206,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[452]);}
else{
t6=t5;
f_26206(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[592]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26241,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[592]);}
else{
t7=t6;
f_26241(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[593]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26276,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[593]);}
else{
t8=t7;
f_26276(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[594]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26311,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[116],lf[594]);}
else{
t9=t8;
f_26311(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[405]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26346,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[116],lf[405]);}
else{
t10=t9;
f_26346(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[406]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26381,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[116],lf[406]);}
else{
t11=t10;
f_26381(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26410,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[107],((C_word*)t0)[9]);}
else{
t11=t10;
f_26410(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k26408 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26410,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26417,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26425,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26423 in k26408 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26417(2,t2,C_SCHEME_UNDEFINED);}}

/* k26415 in k26408 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25693(t5,t4);}

/* k26379 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26381,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26385,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_26385(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26383 in k26379 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25693(t7,t6);}

/* k26344 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26346,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26350,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_26350(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26348 in k26344 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25693(t7,t6);}

/* k26309 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26311,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26315,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_26315(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26313 in k26309 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25693(t7,t6);}

/* k26274 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26276,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26280,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_26280(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26278 in k26274 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25693(t7,t6);}

/* k26239 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26241,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26245,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_26245(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26243 in k26239 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25693(t7,t6);}

/* k26204 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26206,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26210,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_26210(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26208 in k26204 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25693(t7,t6);}

/* k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_25693(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25693,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_25696,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_25696(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[452]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25966,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[452]);}
else{
t6=t5;
f_25966(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[592]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26001,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[592]);}
else{
t7=t6;
f_26001(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[593]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26036,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[593]);}
else{
t8=t7;
f_26036(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[594]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26071,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[116],lf[594]);}
else{
t9=t8;
f_26071(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[405]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26106,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[116],lf[405]);}
else{
t10=t9;
f_26106(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[406]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26141,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[116],lf[406]);}
else{
t11=t10;
f_26141(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26170,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[12],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[107],((C_word*)t0)[9]);}
else{
t11=t10;
f_26170(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k26168 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26170,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26177,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26185,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26183 in k26168 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26177(2,t2,C_SCHEME_UNDEFINED);}}

/* k26175 in k26168 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25696(t5,t4);}

/* k26139 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26141,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26145,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_26145(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26143 in k26139 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25696(t7,t6);}

/* k26104 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26106,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26110,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_26110(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26108 in k26104 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25696(t7,t6);}

/* k26069 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26071,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26075,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_26075(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26073 in k26069 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25696(t7,t6);}

/* k26034 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26036,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26040,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_26040(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26038 in k26034 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25696(t7,t6);}

/* k25999 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26001,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26005,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_26005(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26003 in k25999 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_26005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25696(t7,t6);}

/* k25964 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25966,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25970,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_25970(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25968 in k25964 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25696(t7,t6);}

/* k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_25696(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25696,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25699,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],a[11]=((C_word*)t0)[18],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_25699(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[452]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25726,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[452]);}
else{
t6=t5;
f_25726(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[592]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25761,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[592]);}
else{
t7=t6;
f_25761(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[593]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25796,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[593]);}
else{
t8=t7;
f_25796(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[594]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25831,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[116],lf[594]);}
else{
t9=t8;
f_25831(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[405]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25866,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[116],lf[405]);}
else{
t10=t9;
f_25866(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[406]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25901,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[116],lf[406]);}
else{
t11=t10;
f_25901(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25930,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[107],((C_word*)t0)[9]);}
else{
t11=t10;
f_25930(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k25928 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25930,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25937,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25945,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25943 in k25928 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25937(2,t2,C_SCHEME_UNDEFINED);}}

/* k25935 in k25928 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25699(t5,t4);}

/* k25899 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25901,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25905,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_25905(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25903 in k25899 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25699(t7,t6);}

/* k25864 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25866,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25870,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_25870(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25868 in k25864 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25699(t7,t6);}

/* k25829 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25831,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25835,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_25835(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25833 in k25829 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25699(t7,t6);}

/* k25794 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25796,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25800,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_25800(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25798 in k25794 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25699(t7,t6);}

/* k25759 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25761,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25765,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_25765(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25763 in k25759 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25699(t7,t6);}

/* k25724 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25726,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25730,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_25730(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25728 in k25724 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25699(t7,t6);}

/* k25697 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_25699(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25699,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25702,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_25702(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[103],((C_word*)t0)[2]);}}

/* k25700 in k25697 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25702,2,t0,t1);}
t2=((C_word*)t0)[9];
t3=((C_word*)t0)[8];
t4=((C_word*)((C_word*)t0)[7])[1];
t5=((C_word*)((C_word*)t0)[6])[1];
t6=((C_word*)((C_word*)t0)[5])[1];
t7=((C_word*)((C_word*)t0)[4])[1];
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=((C_word*)((C_word*)t0)[3])[1];
t10=((C_word*)((C_word*)t0)[2])[1];
t11=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25448,a[2]=t3,a[3]=t8,a[4]=t5,a[5]=t2,a[6]=t4,a[7]=t6,a[8]=t10,a[9]=t9,tmp=(C_word)a,a+=10,tmp);
t12=(C_word)C_eqp(((C_word*)t8)[1],C_SCHEME_TRUE);
if(C_truep(t12)){
t13=C_set_block_item(t8,0,C_fix(1));
t14=t11;
f_25448(t14,t13);}
else{
t13=t11;
f_25448(t13,C_SCHEME_UNDEFINED);}}

/* k25446 in k25700 in k25697 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_25448(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25448,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_25454,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t2,a[8]=t4,a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=t6,a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-freqs");
t8=C_retrieve(lf[575]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[2]);}

/* k25452 in k25446 in k25700 in k25697 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25454,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_25457,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-amps");
t3=C_retrieve(lf[577]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k25455 in k25452 in k25446 in k25700 in k25697 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25457,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25459,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word)li363),tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25533,a[2]=((C_word*)t0)[8],a[3]=((C_word)li364),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25547,a[2]=t2,a[3]=t3,a[4]=((C_word)li365),tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25557,a[2]=t2,a[3]=t3,a[4]=((C_word*)t0)[7],a[5]=((C_word)li366),tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25581,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_not(((C_word*)t0)[4]);
t8=(C_truep(t7)?t7:(C_word)C_i_not(t1));
if(C_truep(t8)){
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("for-each");
t9=*((C_word*)lf[373]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t6,t5,((C_word*)t0)[2]);}
else{
C_trace("for-each");
t9=*((C_word*)lf[373]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t6,t4,((C_word*)t0)[2]);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25646,a[2]=t5,a[3]=((C_word*)t0)[4],a[4]=((C_word)li368),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   for-each");
t10=*((C_word*)lf[591]+1);
((C_proc5)C_retrieve_proc(t10))(5,t10,t6,t9,((C_word*)t0)[2],t1);}
else{
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25661,a[2]=t4,a[3]=((C_word*)t0)[4],a[4]=((C_word)li369),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   for-each");
t10=*((C_word*)lf[591]+1);
((C_proc5)C_retrieve_proc(t10))(5,t10,t6,t9,((C_word*)t0)[2],t1);}}}

/* a25660 in k25455 in k25452 in k25446 in k25700 in k25697 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25661(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25661,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 83   addkey");
t4=((C_word*)t0)[2];
f_25547(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* a25645 in k25455 in k25452 in k25446 in k25700 in k25697 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25646(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25646,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 83   adduniquekey");
t4=((C_word*)t0)[2];
f_25557(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* k25579 in k25455 in k25452 in k25446 in k25700 in k25697 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25581,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
switch(((C_word*)t0)[4]){
case C_fix(0):
C_trace("ChickenBridge.scm: 83   shuffle!");
t3=C_retrieve(lf[503]);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[3],t2);
case C_fix(-1):
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 83   sort!");
t3=C_retrieve(lf[588]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],t2,*((C_word*)lf[180]+1));}
else{
t3=(C_word)C_i_length(t2);
t4=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8436,a[2]=t2,a[3]=t6,a[4]=((C_word)li367),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_8436(t8,((C_word*)t0)[3],C_fix(0),t4,t2);}
default:
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 83   sort!");
t3=C_retrieve(lf[588]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],t2,*((C_word*)lf[176]+1));}
else{
t3=(C_word)C_eqp(((C_word*)t0)[4],C_fix(1));
if(C_truep(t3)){
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 83   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[3],lf[589],C_retrieve(lf[590]));}}}}

/* do675 in k25579 in k25455 in k25452 in k25446 in k25700 in k25697 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_8436(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a;
loop:
a=C_alloc(12);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_8436,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_lessp(t2,t3))){
t5=(C_word)C_i_car(t4);
t6=(C_word)C_a_i_minus(&a,2,t3,t2);
t7=(C_word)C_i_list_tail(t4,t6);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_i_set_car(t4,t8);
t10=(C_word)C_i_set_car(t7,t5);
t11=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t12=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t13=(C_word)C_i_cdr(t4);
t15=t1;
t16=t11;
t17=t12;
t18=t13;
t1=t15;
t2=t16;
t3=t17;
t4=t18;
goto loop;}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,((C_word*)t0)[2]);}}

/* adduniquekey in k25455 in k25452 in k25446 in k25700 in k25697 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25557(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25557,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25561,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   getkey");
t4=((C_word*)t0)[2];
f_25459(t4,t3,t2);}

/* k25559 in adduniquekey in k25455 in k25452 in k25446 in k25700 in k25697 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_member(t1,t2))){
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 83   add");
t3=((C_word*)t0)[2];
f_25533(t3,((C_word*)t0)[3],t1);}}

/* addkey in k25455 in k25452 in k25446 in k25700 in k25697 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25547(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25547,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25555,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   getkey");
t4=((C_word*)t0)[2];
f_25459(t4,t3,t2);}

/* k25553 in addkey in k25455 in k25452 in k25446 in k25700 in k25697 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   add");
t2=((C_word*)t0)[3];
f_25533(t2,((C_word*)t0)[2],t1);}

/* add in k25455 in k25452 in k25446 in k25700 in k25697 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_25533(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25533,NULL,3,t0,t1,t2);}
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}

/* getkey in k25455 in k25452 in k25446 in k25700 in k25697 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_25459(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25459,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25463,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t0)[2])){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25528,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   key");
t5=C_retrieve(lf[95]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
C_trace("ChickenBridge.scm: 83   key");
t4=C_retrieve(lf[95]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}

/* k25526 in getkey in k25455 in k25452 in k25446 in k25700 in k25697 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   quantize");
t2=C_retrieve(lf[469]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k25461 in getkey in k25455 in k25452 in k25446 in k25700 in k25697 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25463,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_truep(((C_word*)t0)[5])?(C_word)C_i_lessp(((C_word*)t3)[1],((C_word*)t0)[5]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25474,a[2]=t6,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word)li361),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_25474(t8,((C_word*)t0)[3]);}
else{
t5=(C_truep(((C_word*)t0)[2])?(C_word)C_i_greaterp(((C_word*)t3)[1],((C_word*)t0)[2]):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25500,a[2]=t7,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=((C_word)li362),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_25500(t9,((C_word*)t0)[3]);}
else{
t6=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}}}

/* do3965 in k25461 in getkey in k25455 in k25452 in k25446 in k25700 in k25697 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_25500(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_25500,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]))){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(12));
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=t1;
t1=t6;
goto loop;}}

/* do3960 in k25461 in getkey in k25455 in k25452 in k25446 in k25700 in k25697 in k25694 in k25691 in k25688 in k25685 in k25682 in spectrum-keys in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_25474(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_25474,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_greater_or_equalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]))){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(12));
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=t1;
t1=t6;
goto loop;}}

/* spectrum-maxamp in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25419(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25419,3,t0,t1,t2);}
t3=lf[586];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25423,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-amps");
t6=C_retrieve(lf[577]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k25421 in spectrum-maxamp in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25423,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25432,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25434,a[2]=((C_word*)t0)[2],a[3]=((C_word)li359),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[373]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a25433 in k25421 in spectrum-maxamp in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25434(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25434,3,t0,t1,t2);}
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)((C_word*)t0)[2])[1]))){
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}}

/* k25430 in k25421 in spectrum-maxamp in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-minamp in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25388(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25388,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25392,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-amps");
t6=C_retrieve(lf[577]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k25390 in spectrum-minamp in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25392,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25401,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25403,a[2]=((C_word*)t0)[2],a[3]=((C_word)li357),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[373]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[584]);}}

/* a25402 in k25390 in spectrum-minamp in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25403(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25403,3,t0,t1,t2);}
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_lessp(t2,((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_UNDEFINED);}}

/* k25399 in k25390 in spectrum-minamp in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-maxfreq in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25370(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25370,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25378,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-freqs");
t4=C_retrieve(lf[575]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k25376 in spectrum-maxfreq in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25378,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25386,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-size");
t3=C_retrieve(lf[573]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k25384 in k25376 in spectrum-maxfreq in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25386,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_list_ref(((C_word*)t0)[2],t2));}

/* spectrum-minfreq in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25360(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25360,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25368,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-freqs");
t4=C_retrieve(lf[575]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k25366 in spectrum-minfreq in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* spectrum-pairs in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25301(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25301,3,t0,t1,t2);}
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25308,a[2]=t2,a[3]=t1,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-freqs");
t7=C_retrieve(lf[575]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}

/* k25306 in spectrum-pairs in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25308,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25311,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-amps");
t3=C_retrieve(lf[577]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k25309 in k25306 in spectrum-pairs in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25311,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25314,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-size");
t3=C_retrieve(lf[573]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k25312 in k25309 in k25306 in spectrum-pairs in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25314,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25319,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word)li353),tmp=(C_word)a,a+=9,tmp));
t5=((C_word*)t3)[1];
f_25319(t5,((C_word*)t0)[2],C_fix(0));}

/* do3922 in k25312 in k25309 in k25306 in spectrum-pairs in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_25319(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(10);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_25319,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[6]));}
else{
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_truep(((C_word*)t0)[4])?(C_word)C_i_list_ref(((C_word*)t0)[4],t2):lf[580]);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t5);
t7=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t11=t1;
t12=t9;
t1=t11;
t2=t12;
goto loop;}}

/* spectrum-copy in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25263(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25263,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25271,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-time");
t4=C_retrieve(lf[571]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k25269 in spectrum-copy in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25271,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25275,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-size");
t3=C_retrieve(lf[573]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k25273 in k25269 in spectrum-copy in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25275,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25279,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25295,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-freqs");
t4=C_retrieve(lf[575]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k25293 in k25273 in k25269 in spectrum-copy in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   append");
t2=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k25277 in k25273 in k25269 in spectrum-copy in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25279,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25283,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25287,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 83   spectrum-amps");
t4=C_retrieve(lf[577]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k25285 in k25277 in k25273 in k25269 in spectrum-copy in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   append");
t2=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k25281 in k25277 in k25273 in k25269 in spectrum-copy in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 83   make-spectrum");
f_25179(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* spectrum-amps in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25254(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25254,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[569]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* spectrum-amps-set! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_25245(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25245,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[569]);
C_trace("ChickenBridge.scm: 83   ##sys#block-set!");
t5=*((C_word*)lf[333]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* spectrum-freqs in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25236(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25236,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[569]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* spectrum-freqs-set! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_25227(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25227,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[569]);
C_trace("ChickenBridge.scm: 83   ##sys#block-set!");
t5=*((C_word*)lf[333]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* spectrum-size in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25218(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25218,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[569]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* spectrum-size-set! in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_25209(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25209,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[569]);
C_trace("ChickenBridge.scm: 83   ##sys#block-set!");
t5=*((C_word*)lf[333]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* spectrum-time in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25200(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25200,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[569]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* spectrum? in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_25185(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25185,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[569]));}

/* make-spectrum in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_25179(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25179,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_record(&a,5,lf[569],t2,t3,t4,t5));}

/* full-pathname in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_25134(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25134,NULL,2,t1,t2);}
if(C_truep((C_word)C_i_stringp(t2))){
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7640,a[2]=t3,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t4)){
t7=(C_word)C_i_foreign_string_argumentp(t4);
C_trace("##sys#make-c-string");
t8=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}
else{
t7=t6;
f_7640(2,t7,C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 82   error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[567],t2);}}

/* k7638 in full-pathname in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)stub336(((C_word*)t0)[3],t1);
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[54]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,C_fix(0));}

/* pathname-type in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_25092(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25092,NULL,2,t1,t2);}
if(C_truep((C_word)C_i_stringp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25102,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 82   ffi_pathname_type");
f_7613(t3,t2);}
else{
C_trace("ChickenBridge.scm: 82   error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[565],t2);}}

/* k25100 in pathname-type in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_25102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_string_equal_p(t1,lf[564]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?C_SCHEME_FALSE:t1));}

/* chdir in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_24244(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24244,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7568,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_7568(2,t4,C_SCHEME_FALSE);}}

/* k7566 in chdir in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub309(C_SCHEME_UNDEFINED,t1));}

/* cwd in k24222 in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_24238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24238,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[54]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,(C_word)stub305(t2),C_fix(0));}

/* in-tempo in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_24213(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_24213,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_divide(&a,2,C_fix(60),t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_times(&a,2,t2,t4));}

/* rhythm in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23897(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_23897r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_23897r(t0,t1,t2,t3);}}

static void C_ccall f_23897r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a=C_alloc(10);
t4=C_retrieve(lf[545]);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_retrieve(lf[547]);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23901,a[2]=t1,a[3]=t5,a[4]=t7,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_pairp(t3))){
t9=(C_word)C_i_car(t3);
t10=C_set_block_item(t5,0,t9);
t11=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_pairp(t11))){
t12=(C_word)C_i_cadr(t3);
t13=C_set_block_item(t7,0,t12);
t14=t8;
f_23901(t14,t13);}
else{
t12=t8;
f_23901(t12,C_SCHEME_UNDEFINED);}}
else{
t9=t8;
f_23901(t9,C_SCHEME_UNDEFINED);}}

/* k23899 in rhythm in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_23901(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23901,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_numberp(((C_word*)t0)[5]))){
t2=(C_word)C_a_i_divide(&a,2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_divide(&a,2,C_fix(60),((C_word*)((C_word*)t0)[3])[1]);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_times(&a,2,t2,t3));}
else{
t2=(C_word)C_i_symbolp(((C_word*)t0)[5]);
t3=(C_truep(t2)?t2:(C_word)C_i_stringp(((C_word*)t0)[5]));
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23930,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 82   hash-ref");
t5=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,C_retrieve2(lf[549],"*rhythms*"),((C_word*)t0)[5]);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23958,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word)li336),tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t5=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,((C_word*)t0)[2],t4,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 82   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[2],lf[559],((C_word*)t0)[5]);}}}}

/* a23957 in k23899 in rhythm in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23958(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23958,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 82   rhythm");
t3=C_retrieve(lf[551]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k23928 in k23899 in rhythm in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23930,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_divide(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_divide(&a,2,C_fix(60),((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_times(&a,2,t2,t3));}
else{
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
t4=((C_word*)((C_word*)t0)[4])[1];
t5=((C_word*)((C_word*)t0)[5])[1];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23995,a[2]=t2,a[3]=t3,a[4]=t4,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_symbolp(t3))){
C_trace("ChickenBridge.scm: 82   symbol->string");
t7=*((C_word*)lf[121]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t3);}
else{
t7=t6;
f_23995(2,t7,t3);}}}

/* k23993 in k23928 in k23899 in rhythm in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23995,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23996,a[2]=((C_word)li334),tmp=(C_word)a,a+=3,tmp);
t3=(C_word)C_i_string_length(t1);
t4=C_fix(0);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24032,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t5,a[8]=t1,a[9]=t3,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 82   next-token-start");
f_23996(t6,t1,((C_word*)t5)[1],t3);}

/* k24030 in k23993 in k23928 in k23899 in rhythm in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_24032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24032,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24035,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)((C_word*)t0)[7])[1],((C_word*)t3)[1]))){
t5=t4;
f_24035(2,t5,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 82   error");
t5=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[558],((C_word*)t0)[8]);}}

/* k24033 in k24030 in k23993 in k23928 in k23899 in rhythm in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_24035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24035,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24042,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24195,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 82   substring");
t4=*((C_word*)lf[436]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[10])[1]);}

/* k24193 in k24033 in k24030 in k23993 in k23928 in k23899 in rhythm in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_24195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 82   hash-ref");
t2=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[549],"*rhythms*"),t1);}

/* k24040 in k24033 in k24030 in k23993 in k23928 in k23899 in rhythm in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_24042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24042,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24045,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t1)){
t3=t2;
f_24045(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 82   error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[557],((C_word*)t0)[3]);}}

/* k24043 in k24040 in k24033 in k24030 in k23993 in k23928 in k23899 in rhythm in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_24045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24045,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24047,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word)li335),tmp=(C_word)a,a+=12,tmp));
t5=((C_word*)t3)[1];
f_24047(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_fix(0));}

/* do3641 in k24043 in k24040 in k24033 in k24030 in k23993 in k23928 in k23899 in rhythm in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_24047(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24047,NULL,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9]))){
t11=(C_word)C_i_string_ref(((C_word*)t0)[8],((C_word*)((C_word*)t0)[10])[1]);
t12=C_set_block_item(t10,0,t11);
t13=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[10])[1],C_fix(1));
t14=C_mutate(((C_word *)((C_word*)t0)[7])+1,t13);
t15=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24093,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=t10,a[5]=t9,a[6]=t8,a[7]=t7,a[8]=t1,a[9]=((C_word*)t0)[6],a[10]=t6,a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 82   next-token-start");
f_23996(t15,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[9]);}
else{
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24057,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=t7,a[5]=t1,a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 82   hash-set!");
t12=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t12))(5,t12,t11,C_retrieve2(lf[549],"*rhythms*"),((C_word*)t0)[8],((C_word*)t7)[1]);}}

/* k24055 in do3641 in k24043 in k24040 in k24033 in k24030 in k23993 in k23928 in k23899 in rhythm in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_24057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24057,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24060,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_eqvp(((C_word*)t0)[3],((C_word*)t0)[2]))){
t3=t2;
f_24060(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 82   hash-set!");
t3=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve2(lf[549],"*rhythms*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);}}

/* k24058 in k24055 in do3641 in k24043 in k24040 in k24033 in k24030 in k23993 in k23928 in k23899 in rhythm in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_24060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24060,2,t0,t1);}
t2=(C_word)C_a_i_divide(&a,2,C_fix(1),((C_word*)t0)[5]);
t3=(C_word)C_a_i_divide(&a,2,C_fix(60),((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 82   *");
C_times(5,0,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2,t3);}

/* k24091 in do3641 in k24043 in k24040 in k24033 in k24030 in k23993 in k23928 in k23899 in rhythm in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_24093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24093,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24096,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[11])[1]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24181,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 82   substring");
t5=*((C_word*)lf[436]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[11])[1]);}
else{
C_trace("ChickenBridge.scm: 82   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[556],((C_word*)t0)[3]);}}

/* k24179 in k24091 in do3641 in k24043 in k24040 in k24033 in k24030 in k23993 in k23928 in k23899 in rhythm in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_24181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24096(2,t3,t2);}

/* k24094 in k24091 in do3641 in k24043 in k24040 in k24033 in k24030 in k23993 in k23928 in k23899 in rhythm in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_24096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24096,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24099,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
switch(((C_word*)((C_word*)t0)[3])[1]){
case C_make_character(43):
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24113,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 82   hash-ref");
t4=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,C_retrieve2(lf[549],"*rhythms*"),((C_word*)((C_word*)t0)[4])[1]);
case C_make_character(45):
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24133,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 82   hash-ref");
t4=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,C_retrieve2(lf[549],"*rhythms*"),((C_word*)((C_word*)t0)[4])[1]);
case C_make_character(42):
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24153,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 82   string->number");
C_string_to_number(3,0,t3,((C_word*)((C_word*)t0)[4])[1]);
case C_make_character(47):
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24167,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 82   string->number");
C_string_to_number(3,0,t3,((C_word*)((C_word*)t0)[4])[1]);
default:
C_trace("ChickenBridge.scm: 82   error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[555],((C_word*)t0)[2]);}}

/* k24165 in k24094 in k24091 in do3641 in k24043 in k24040 in k24033 in k24030 in k23993 in k23928 in k23899 in rhythm in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_24167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24167,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_divide(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24099(2,t5,t4);}

/* k24151 in k24094 in k24091 in do3641 in k24043 in k24040 in k24033 in k24030 in k23993 in k23928 in k23899 in rhythm in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_24153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24153,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_times(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24099(2,t5,t4);}

/* k24131 in k24094 in k24091 in do3641 in k24043 in k24040 in k24033 in k24030 in k23993 in k23928 in k23899 in rhythm in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_24133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24133,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24136,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_24136(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 82   error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[554],((C_word*)t0)[2]);}}

/* k24134 in k24131 in k24094 in k24091 in do3641 in k24043 in k24040 in k24033 in k24030 in k23993 in k23928 in k23899 in rhythm in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_24136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24136,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24099(2,t5,t4);}

/* k24111 in k24094 in k24091 in do3641 in k24043 in k24040 in k24033 in k24030 in k23993 in k23928 in k23899 in rhythm in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_24113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24113,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24116,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_24116(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 82   error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[553],((C_word*)t0)[2]);}}

/* k24114 in k24111 in k24094 in k24091 in do3641 in k24043 in k24040 in k24033 in k24030 in k23993 in k23928 in k23899 in rhythm in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_24116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24116,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24099(2,t5,t4);}

/* k24097 in k24094 in k24091 in do3641 in k24043 in k24040 in k24033 in k24030 in k23993 in k23928 in k23899 in rhythm in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_24099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24099,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],C_fix(1));
t3=((C_word*)((C_word*)t0)[7])[1];
f_24047(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],t2);}

/* next-token-start in k23993 in k23928 in k23899 in rhythm in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_23996(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23996,NULL,4,t1,t2,t3,t4);}
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24002,a[2]=t2,a[3]=t6,a[4]=t4,a[5]=((C_word)li333),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_24002(t8,t1,lf[552],t3);}

/* do3631 in next-token-start in k23993 in k23928 in k23899 in rhythm in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_24002(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24002,NULL,4,t0,t1,t2,t3);}
t4=(C_word)C_i_nequalp(t3,((C_word*)t0)[4]);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24012,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep(t4)){
t6=t5;
f_24012(t6,t4);}
else{
t6=(C_word)C_i_string_ref(((C_word*)t0)[2],t3);
t7=t5;
f_24012(t7,(C_word)C_i_member(t6,t2));}}

/* k24010 in do3631 in next-token-start in k23993 in k23928 in k23899 in rhythm in k23893 in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_24012(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24012,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_24002(t3,((C_word*)t0)[5],((C_word*)t0)[2],t2);}}

/* addryth in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_23881(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23881,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23885,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 82   hash-set!");
t5=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_retrieve2(lf[549],"*rhythms*"),t2,t3);}

/* k23883 in addryth in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23885,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23892,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 82   string->symbol");
t3=*((C_word*)lf[550]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k23890 in k23883 in addryth in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 82   hash-set!");
t2=C_retrieve(lf[20]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],C_retrieve2(lf[549],"*rhythms*"),t1,((C_word*)t0)[2]);}

/* rsym in k23873 in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_23876(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23876,NULL,4,t1,t2,t3,t4);}
C_trace("ChickenBridge.scm: 82   string-append");
t5=*((C_word*)lf[439]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t1,t2,t3,t4);}

/* scale-order in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23729(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_23729r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_23729r(t0,t1,t2,t3);}}

static void C_ccall f_23729r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(7);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23733,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t4)[1]))){
t6=C_set_block_item(t4,0,C_fix(1));
t7=t5;
f_23733(t7,t6);}
else{
t6=(C_word)C_i_car(((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_23733(t8,t7);}}

/* k23731 in scale-order in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_23733(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23733,NULL,2,t0,t1);}
switch(((C_word*)((C_word*)t0)[4])[1]){
case C_fix(1):
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23744,a[2]=((C_word)li328),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 82   sort");
t3=C_retrieve(lf[444]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);
case C_fix(-1):
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23802,a[2]=((C_word)li329),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 82   sort");
t3=C_retrieve(lf[444]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);
case C_fix(0):
C_trace("ChickenBridge.scm: 82   shuffle");
t2=C_retrieve(lf[504]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);
default:
C_trace("ChickenBridge.scm: 82   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[544],((C_word*)((C_word*)t0)[4])[1]);}}

/* a23801 in k23731 in scale-order in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23802(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23802,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_greaterp(t2,t3));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23825,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 82   key");
t5=C_retrieve(lf[95]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23838,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 82   key");
t5=C_retrieve(lf[95]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23845,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 82   key");
t5=C_retrieve(lf[95]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}}

/* k23843 in a23801 in k23731 in scale-order in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23845,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23849,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 82   key");
t3=C_retrieve(lf[95]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k23847 in k23843 in a23801 in k23731 in scale-order in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(((C_word*)t0)[2],t1));}

/* k23836 in a23801 in k23731 in scale-order in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(t1,((C_word*)t0)[2]));}

/* k23823 in a23801 in k23731 in scale-order in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(((C_word*)t0)[2],t1));}

/* a23743 in k23731 in scale-order in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23744(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23744,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_lessp(t2,t3));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23767,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 82   key");
t5=C_retrieve(lf[95]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23780,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 82   key");
t5=C_retrieve(lf[95]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23787,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 82   key");
t5=C_retrieve(lf[95]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}}

/* k23785 in a23743 in k23731 in scale-order in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23787,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23791,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 82   key");
t3=C_retrieve(lf[95]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k23789 in k23785 in a23743 in k23731 in scale-order in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k23778 in a23743 in k23731 in scale-order in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(t1,((C_word*)t0)[2]));}

/* k23765 in a23743 in k23731 in scale-order in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* transpose in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23563(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23563,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=(C_word)C_i_lessp(t2,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t3,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(C_word)C_a_i_plus(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 82   modulo");
t7=*((C_word*)lf[450]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t6,C_fix(12));}
else{
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_plus(&a,2,t2,t3));}}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23609,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 82   key");
t5=C_retrieve(lf[95]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23616,a[2]=((C_word)li325),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23664,a[2]=t4,a[3]=t1,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_numberp(t3))){
t6=t5;
f_23664(2,t6,t3);}
else{
C_trace("ChickenBridge.scm: 82   key");
t6=C_retrieve(lf[95]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t3);}}
else{
C_trace("ChickenBridge.scm: 82   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,lf[541],t2);}}}

/* k23662 in transpose in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23664,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_numberp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_lessp(t3,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t1,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23681,a[2]=t1,a[3]=((C_word)li326),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t7=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],t6,((C_word*)t0)[4]);}
else{
C_trace("ChickenBridge.scm: 82   transpkeys");
f_23616(((C_word*)t0)[3],((C_word*)t0)[4],t1);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23709,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23713,a[2]=t1,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 82   key");
t5=C_retrieve(lf[95]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[4]);}}

/* k23711 in k23662 in transpose in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 82   transpkeys");
f_23616(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k23707 in k23662 in transpose in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 82   note");
t2=C_retrieve(lf[531]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a23680 in k23662 in transpose in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23681(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23681,3,t0,t1,t2);}
t3=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 82   modulo");
t4=*((C_word*)lf[450]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* transpkeys in transpose in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_23616(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23616,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23625,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word)li324),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_23625(t8,t1,t2,t4);}

/* do3570 in transpkeys in transpose in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_23625(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
loop:
a=C_alloc(7);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_23625,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
t7=(C_word)C_i_set_cdr(t3,t6);
t8=(C_word)C_i_cdr(t3);
t9=t3=t8;
t10=(C_word)C_i_cdr(t2);
t12=t1;
t13=t10;
t14=t3;
t1=t12;
t2=t13;
t3=t14;
goto loop;}}

/* k23607 in transpose in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23609,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 82   note");
t3=C_retrieve(lf[531]);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* invert in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23428(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23428,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_lessp(t2,C_fix(12)))){
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 82   modulo");
t4=*((C_word*)lf[450]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}
else{
C_trace("ChickenBridge.scm: 82   error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[538],t2);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23458,a[2]=((C_word)li321),tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_lessp(t5,C_fix(12)))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23528,a[2]=((C_word)li322),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t6,t2);}
else{
C_trace("ChickenBridge.scm: 82   invkeys");
f_23458(t1,t2);}}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23550,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23554,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 82   key");
t7=C_retrieve(lf[95]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}}
else{
C_trace("ChickenBridge.scm: 82   error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[539],t2);}}}

/* k23552 in invert in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 82   invkeys");
f_23458(((C_word*)t0)[2],t1);}

/* k23548 in invert in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 82   note");
t2=C_retrieve(lf[531]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a23527 in invert in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23528(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23528,3,t0,t1,t2);}
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 82   modulo");
t4=*((C_word*)lf[450]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* invkeys in invert in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_23458(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23458,NULL,2,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_cdr(t2);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23474,a[2]=t7,a[3]=t3,a[4]=t4,a[5]=((C_word)li320),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_23474(t9,t1,t5,t4);}

/* do3555 in invkeys in invert in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_23474(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_23474,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t0)[4]);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_minus(&a,2,t4,((C_word*)t0)[3]);
t6=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t5);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(t3,t7);
t9=(C_word)C_i_cdr(t3);
t10=t3=t9;
t11=(C_word)C_i_cdr(t2);
t13=t1;
t14=t11;
t15=t3;
t1=t13;
t2=t14;
t3=t15;
goto loop;}}

/* pc in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23383(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23383,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 82   modulo");
t3=*((C_word*)lf[450]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,t2,C_fix(12));}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t3))){
C_trace("map");
t4=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,C_retrieve(lf[536]),t2);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23415,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 82   key");
t5=C_retrieve(lf[95]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23426,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 82   key");
t4=C_retrieve(lf[95]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}}

/* k23424 in pc in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 82   modulo");
t2=*((C_word*)lf[450]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(12));}

/* k23413 in pc in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[2],C_retrieve(lf[536]),t1);}

/* hz in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23267(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23267,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23282,a[2]=t5,a[3]=t3,a[4]=((C_word)li317),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_23282(t7,t1,t2,lf[535],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 82   ffi_keynum_to_hertz");
f_7353(t1,t2);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23381,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 82   note-aux");
f_22995(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k23379 in hz in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_caddr(t1));}

/* do3535 in hz in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_23282(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23282,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23295,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_numberp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23312,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_23312(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_23312(t14,(C_word)C_i_listp(t13));}}}

/* k23310 in do3535 in hz in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_23312(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23312,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23316,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 82   hz");
t4=C_retrieve(lf[534]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23331,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 82   note-aux");
f_22995(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k23329 in k23310 in do3535 in hz in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23331,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_23295(t9,t8);}

/* k23314 in k23310 in do3535 in hz in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23316,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_23295(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k23293 in do3535 in hz in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_23295(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_23282(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* key in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23145(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23145,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23160,a[2]=t5,a[3]=t3,a[4]=((C_word)li315),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_23160(t7,t1,t2,lf[533],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_greaterp(t2,C_fix(0)))){
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t4);
t7=t3;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub174(t5,t6));}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(-1));}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23265,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 82   note-aux");
f_22995(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k23263 in key in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_cadr(t1));}

/* do3519 in key in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_23160(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23160,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23173,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_listp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23190,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_23190(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_23190(t14,(C_word)C_i_numberp(t13));}}}

/* k23188 in do3519 in key in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_23190(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23190,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23194,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 82   key");
t4=C_retrieve(lf[95]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23209,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 82   note-aux");
f_22995(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k23207 in k23188 in do3519 in key in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23209,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_23173(t9,t8);}

/* k23192 in k23188 in do3519 in key in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23194,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_23173(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k23171 in do3519 in key in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_23173(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_23160(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23048(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23048,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23063,a[2]=t5,a[3]=t3,a[4]=((C_word)li313),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_23063(t7,t1,t2,lf[532],C_SCHEME_FALSE,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23143,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 82   note-aux");
f_22995(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}

/* k23141 in note in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* do3505 in note in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_23063(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23063,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23076,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t10))){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23094,a[2]=t8,a[3]=t9,a[4]=t7,tmp=(C_word)a,a+=5,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 82   note");
t13=C_retrieve(lf[531]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t11,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23109,a[2]=t8,a[3]=t9,a[4]=t6,a[5]=t7,tmp=(C_word)a,a+=6,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 82   note-aux");
f_22995(t11,t12,((C_word*)t6)[1],C_SCHEME_TRUE);}}}

/* k23107 in do3505 in note in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23109,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_i_car(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=((C_word*)t0)[3];
f_23076(t8,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7));}

/* k23092 in do3505 in note in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23094,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_23076(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k23074 in do3505 in note in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_23076(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_23063(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note-aux in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_22995(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22995,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_numberp(t2))){
t5=t1;
t6=t2;
t7=t4;
if(C_truep((C_word)C_i_exactp(t6))){
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22943,a[2]=t6,a[3]=t7,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 82   hash-ref");
t9=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,C_retrieve2(lf[519],"*notes*"),t6);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22993,a[2]=t7,a[3]=t5,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 82   floor");
t9=*((C_word*)lf[528]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,t6);}}
else{
if(C_truep((C_word)C_i_symbolp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23018,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 82   symbol->string");
t6=*((C_word*)lf[121]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 82   string->note-entry");
f_22896(t1,t2,t3,t4);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23033,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 82   keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}}}

/* k23031 in note-aux in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23033,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23040,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 82   keyword->string");
t3=C_retrieve(lf[529]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 82   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[530],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* k23038 in k23031 in note-aux in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 82   string->note-entry");
f_22896(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23016 in note-aux in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_23018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 82   string->note-entry");
f_22896(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22991 in note-aux in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22993,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22961,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22974,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_lessp(t3,lf[526]))){
t6=t5;
f_22974(t6,t2);}
else{
t6=(C_word)C_i_lessp(t3,lf[527]);
t7=t5;
f_22974(t7,(C_truep(t6)?(C_word)C_a_i_plus(&a,2,t2,C_fix(1000)):(C_word)C_a_i_plus(&a,2,t2,C_fix(1))));}}

/* k22972 in k22991 in note-aux in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_22974(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 82   hash-ref");
t2=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[519],"*notes*"),t1);}

/* k22959 in k22991 in note-aux in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 82   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[525],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* k22941 in note-aux in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 82   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[524],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* string->note-entry in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_22896(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22896,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22900,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 82   hash-ref");
t6=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,C_retrieve2(lf[519],"*notes*"),t2);}

/* k22898 in string->note-entry in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22900,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t1);}
else{
if(C_truep(((C_word*)t0)[4])){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22912,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22925,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 82   string-append");
t5=*((C_word*)lf[439]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 82   error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[5],lf[522],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}}}

/* k22923 in k22898 in string->note-entry in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 82   hash-ref");
t2=C_retrieve(lf[22]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[519],"*notes*"),t1);}

/* k22910 in k22898 in string->note-entry in k22892 in k22889 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 82   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[521],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* rangamma in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22868(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_22868r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_22868r(t0,t1,t2);}}

static void C_ccall f_22868r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 82   ffi_rangamma");
f_7451(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 82   ffi_rangamma");
f_7451(t1,t3);}}

/* ranpoisson in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22849(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_22849r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_22849r(t0,t1,t2);}}

static void C_ccall f_22849r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 82   ffi_ranpoisson");
f_7461(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 82   ffi_ranpoisson");
f_7461(t1,t3);}}

/* rangauss in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22808(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_22808r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_22808r(t0,t1,t2);}}

static void C_ccall f_22808r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 82   ffi_rangauss");
f_7422(t1,C_fix(1),C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 82   ffi_rangauss");
f_7422(t1,t4,C_fix(0));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 82   ffi_rangauss");
f_7422(t1,t4,t5);}}}

/* ranexp in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22789(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_22789r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_22789r(t0,t1,t2);}}

static void C_ccall f_22789r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 82   ffi_ranexp");
f_7433(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 82   ffi_ranexp");
f_7433(t1,t3);}}

/* ranbeta in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22561(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_22561r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_22561r(t0,t1,t2);}}

static void C_ccall f_22561r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=lf[509];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22565,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t6,a[8]=t4,a[9]=t1,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_22565(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[510]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22702,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[116],lf[510]);}
else{
t19=t18;
f_22702(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[511]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22737,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[116],lf[511]);}
else{
t20=t19;
f_22737(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22766,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[107],t2);}
else{
t20=t19;
f_22766(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k22764 in ranbeta in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22766,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22773,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22781,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22779 in k22764 in ranbeta in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22773(2,t2,C_SCHEME_UNDEFINED);}}

/* k22771 in k22764 in ranbeta in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22565(t5,t4);}

/* k22735 in ranbeta in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22737,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22741,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_22741(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22739 in k22735 in ranbeta in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22565(t7,t6);}

/* k22700 in ranbeta in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22702,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22706,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_22706(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22704 in k22700 in ranbeta in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22565(t7,t6);}

/* k22563 in ranbeta in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_22565(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22565,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22568,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_22568(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[510]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22602,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[510]);}
else{
t6=t5;
f_22602(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[511]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22637,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[511]);}
else{
t7=t6;
f_22637(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22666,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[107],((C_word*)t0)[5]);}
else{
t7=t6;
f_22666(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k22664 in k22563 in ranbeta in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22666,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22673,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22681,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22679 in k22664 in k22563 in ranbeta in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22673(2,t2,C_SCHEME_UNDEFINED);}}

/* k22671 in k22664 in k22563 in ranbeta in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22568(t5,t4);}

/* k22635 in k22563 in ranbeta in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22637,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22641,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_22641(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22639 in k22635 in k22563 in ranbeta in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22568(t7,t6);}

/* k22600 in k22563 in ranbeta in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22602,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22606,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_22606(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22604 in k22600 in k22563 in ranbeta in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22568(t7,t6);}

/* k22566 in k22563 in ranbeta in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_22568(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22568,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22571,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_22571(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[103],((C_word*)t0)[2]);}}

/* k22569 in k22566 in k22563 in ranbeta in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22571,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22574,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
if(C_truep(t3)){
t4=t2;
f_22574(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[3])[1]);
t5=t2;
f_22574(t5,t4);}}

/* k22572 in k22569 in k22566 in k22563 in ranbeta in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_22574(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22574,NULL,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=((C_word*)((C_word*)t0)[3])[1];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=(C_word)C_i_foreign_flonum_argumentp(t4);
t8=t2;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub227(t5,t6,t7));}

/* shuffle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22519(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_22519r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_22519r(t0,t1,t2);}}

static void C_ccall f_22519r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(6);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22533,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 82   append");
t6=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22548,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 82   append");
t5=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t2,C_SCHEME_END_OF_LIST);}}

/* k22546 in shuffle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 82   shuffle!");
t2=C_retrieve(lf[503]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k22531 in shuffle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 82   shuffle!");
t2=C_retrieve(lf[503]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* shuffle! in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22464(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22464,3,t0,t1,t2);}
t3=(C_word)C_i_length(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22475,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 82   ffi_ranint");
f_7377(t4,t3);}

/* k22473 in shuffle! in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22475,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22477,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word)li303),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_22477(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do3388 in k22473 in shuffle! in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_22477(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22477,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[4]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t0)[3]);}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(C_word)C_i_list_tail(((C_word*)t0)[3],t2);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
t10=(C_word)C_i_set_car(t8,t9);
t11=(C_word)C_i_list_tail(((C_word*)t0)[3],t3);
t12=(C_word)C_i_set_car(t11,((C_word*)t5)[1]);
t13=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t14=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22505,a[2]=t5,a[3]=t13,a[4]=t1,a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 82   ffi_ranint");
f_7377(t14,((C_word*)t0)[4]);}}

/* k22503 in do3388 in k22473 in shuffle! in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_22477(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* vary in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22365(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr4r,(void*)f_22365r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_22365r(t0,t1,t2,t3,t4);}}

static void C_ccall f_22365r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22369,a[2]=t1,a[3]=t5,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
t7=C_set_block_item(t5,0,C_fix(0));
t8=t6;
f_22369(t8,t7);}
else{
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=t6;
f_22369(t9,t8);}}

/* k22367 in vary in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_22369(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22369,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22372,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t3,C_fix(0)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(-1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(1)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t4=t2;
f_22372(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 82   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[502],((C_word*)((C_word*)t0)[3])[1]);}}

/* k22370 in k22367 in vary in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22372,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22374,a[2]=((C_word)li300),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22437,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word)li301),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 82   vary1");
f_22374(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);}}

/* a22436 in k22370 in k22367 in vary in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22437(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22437,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 82   vary1");
f_22374(t1,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* vary1 in k22370 in k22367 in vary in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_22374(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22374,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_less_or_equalp(t3,C_fix(0));
t6=(C_truep(t5)?t5:(C_word)C_i_nequalp(t2,C_fix(0)));
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t7=(C_word)C_a_i_times(&a,2,t2,t3);
t8=(C_word)C_a_i_abs(&a,1,t7);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22390,a[2]=t1,a[3]=t2,a[4]=t8,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 82   ffi_ranfloat");
f_7384(t9,t8);}}

/* k22388 in vary1 in k22370 in k22367 in vary in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22390,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[5],C_fix(0));
if(C_truep(t2)){
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[4],lf[501]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_plus(&a,2,t4,t1));}
else{
t3=(C_word)C_eqp(((C_word*)t0)[5],C_fix(1));
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1):(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t1)));}}

/* pick in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22094(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr2r,(void*)f_22094r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_22094r(t0,t1,t2);}}

static void C_ccall f_22094r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22112,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_length(t6);
C_trace("ChickenBridge.scm: 82   ffi_ranint");
f_7377(t5,t7);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22127,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_length(t2);
C_trace("ChickenBridge.scm: 82   ffi_ranint");
f_7377(t4,t5);}}

/* k22125 in pick in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* k22110 in pick in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* between in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22073(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22073,4,t0,t1,t2,t3);}
t4=(C_word)C_fixnump(t2);
t5=(C_truep(t4)?(C_word)C_fixnump(t3):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_i_foreign_fixnum_argumentp(t7);
t10=(C_word)C_i_foreign_fixnum_argumentp(t8);
t11=t6;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub193(C_SCHEME_UNDEFINED,t9,t10));}
else{
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t10=(C_word)C_i_foreign_flonum_argumentp(t7);
t11=(C_word)C_i_foreign_flonum_argumentp(t8);
t12=t6;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub199(t9,t10,t11));}}

/* ran in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_22038(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_22038r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_22038r(t0,t1,t2);}}

static void C_ccall f_22038r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(6);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22042,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=C_set_block_item(t3,0,C_fix(1));
t6=t4;
f_22042(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)t3)[1]);
t6=C_set_block_item(t3,0,t5);
t7=t4;
f_22042(t7,t6);}}

/* k22040 in ran in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_22042(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
if(C_truep((C_word)C_fixnump(((C_word*)((C_word*)t0)[3])[1]))){
C_trace("ChickenBridge.scm: 82   ffi_ranint");
f_7377(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 82   ffi_ranfloat");
f_7384(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}
else{
C_trace("ChickenBridge.scm: 82   ffi_ranfloat");
f_7384(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}

/* segs in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21830(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr4r,(void*)f_21830r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_21830r(t0,t1,t2,t3,t4);}}

static void C_ccall f_21830r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(11);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(1)))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_END_OF_LIST);}
else{
t6=C_fix(1);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21843,a[2]=t1,a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t5)[1]))){
t9=(C_word)C_i_car(((C_word*)t5)[1]);
t10=C_set_block_item(t7,0,t9);
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
t12=C_set_block_item(t5,0,t11);
t13=t8;
f_21843(t13,t12);}
else{
t9=t8;
f_21843(t9,C_SCHEME_UNDEFINED);}}}

/* k21841 in segs in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_21843(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21843,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(2)));
if(C_truep(t3)){
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t5=(C_truep(t4)?C_retrieve2(lf[35],"ffi_explseg"):C_retrieve2(lf[36],"ffi_geoseg"));
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_truep(t6)?C_fix(2):(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]));
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=t8;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21864,a[2]=((C_word*)t0)[2],a[3]=t7,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t10,a[7]=t8,a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_lessp(t7,C_fix(0)))){
C_trace("ChickenBridge.scm: 82   error");
t12=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t12))(4,t12,t11,lf[495],t7);}
else{
t12=t11;
f_21864(2,t12,C_SCHEME_UNDEFINED);}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(3));
if(C_truep(t4)){
t5=C_retrieve(lf[488]);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21925,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t8=t7;
f_21925(t8,C_SCHEME_UNDEFINED);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t7;
f_21925(t12,t11);}}
else{
C_trace("ChickenBridge.scm: 82   error");
t5=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],lf[496],((C_word*)((C_word*)t0)[6])[1]);}}}

/* k21923 in k21841 in segs in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_21925(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21925,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21928,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_apply(4,0,t2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}

/* k21926 in k21923 in k21841 in segs in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21928,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t3)[1]);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21936,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t8,a[7]=t3,a[8]=t6,a[9]=((C_word*)t0)[6],a[10]=((C_word)li295),tmp=(C_word)a,a+=11,tmp));
t10=((C_word*)t8)[1];
f_21936(t10,((C_word*)t0)[2],C_fix(1),C_SCHEME_FALSE);}

/* do3307 in k21926 in k21923 in k21841 in segs in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_21936(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21936,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[9]))){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21977,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_apply(4,0,t5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21948,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=((C_word)li294),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_21948(t8,t1,((C_word*)t0)[3]);}}

/* do3311 in do3307 in k21926 in k21923 in k21841 in segs in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_21948(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21948,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21969,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 82   ffi_rescale");
f_7207(t3,t4,C_fix(0),((C_word*)((C_word*)t0)[3])[1],C_fix(0),((C_word*)t0)[2],C_fix(1));}}

/* k21967 in do3311 in do3307 in k21926 in k21923 in k21841 in segs in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_21948(t4,((C_word*)t0)[2],t3);}

/* k21975 in do3307 in k21926 in k21923 in k21841 in segs in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21977,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[7])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t10=((C_word*)((C_word*)t0)[3])[1];
f_21936(t10,((C_word*)t0)[2],t9,((C_word*)((C_word*)t0)[7])[1]);}

/* k21862 in k21841 in segs in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21864,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21869,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word)li293),tmp=(C_word)a,a+=10,tmp));
t5=((C_word*)t3)[1];
f_21869(t5,((C_word*)t0)[2],C_fix(0));}

/* do3295 in k21862 in k21841 in segs in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_21869(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21869,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[8]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[7]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21901,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 82   func");
t4=((C_word*)t0)[4];
((C_proc6)C_retrieve_proc(t4))(6,t4,t3,t2,((C_word*)t0)[8],((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k21899 in do3295 in k21862 in k21841 in segs in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21901,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t7=((C_word*)((C_word*)t0)[3])[1];
f_21869(t7,((C_word*)t0)[2],t6);}

/* scale in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21723(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+19)){
C_save_and_reclaim((void*)tr4r,(void*)f_21723r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_21723r(t0,t1,t2,t3,t4);}}

static void C_ccall f_21723r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(19);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21730,a[2]=t1,a[3]=t6,a[4]=t3,a[5]=t8,a[6]=t2,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_pairp(t10))){
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t11))){
t12=(C_word)C_i_car(((C_word*)t5)[1]);
t13=C_set_block_item(t5,0,t12);
t14=t9;
f_21730(t14,t13);}
else{
t12=(C_word)C_i_cadr(((C_word*)t5)[1]);
t13=C_set_block_item(t8,0,t12);
t14=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21810,a[2]=t9,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)t8)[1],t3))){
C_trace("ChickenBridge.scm: 82   error");
t15=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t14,lf[493],((C_word*)t8)[1]);}
else{
t15=t14;
f_21810(2,t15,C_SCHEME_UNDEFINED);}}}
else{
t11=t9;
f_21730(t11,C_SCHEME_UNDEFINED);}}

/* k21808 in scale in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_21730(t4,t3);}

/* k21728 in scale in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_21730(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21730,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[7])[1]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21739,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word)li291),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_21739(t6,((C_word*)t0)[2],C_fix(0),((C_word*)t0)[4],t2,((C_word*)t0)[3]);}

/* do3272 in k21728 in scale in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_21739(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21739,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[7]))){
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21752,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t6,tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21786,a[2]=t8,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 82   fit");
t10=C_retrieve(lf[489]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,((C_word*)t6)[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[4])[1],C_fix(1));}
else{
t9=t8;
f_21752(t9,C_SCHEME_UNDEFINED);}}
else{
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_cdr(((C_word*)t0)[2]));}}

/* k21784 in do3272 in k21728 in scale in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21752(t3,t2);}

/* k21750 in do3272 in k21728 in scale in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_21752(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21752,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[7])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21778,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 82   modulo");
t7=*((C_word*)lf[450]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t0)[5],((C_word*)t0)[2]);}

/* k21776 in k21750 in do3272 in k21728 in scale in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21778,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[8])[1],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[7])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t6=((C_word*)((C_word*)t0)[5])[1];
f_21739(t6,((C_word*)t0)[4],t5,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* fit in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21590(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr5r,(void*)f_21590r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_21590r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_21590r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(13);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21594,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t6,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t10=C_set_block_item(t8,0,C_fix(1));
t11=t9;
f_21594(t11,t10);}
else{
t10=(C_word)C_i_car(((C_word*)t8)[1]);
t11=C_set_block_item(t8,0,t10);
t12=t9;
f_21594(t12,t11);}}

/* k21592 in fit in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_21594(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21594,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21597,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]))){
t3=((C_word*)((C_word*)t0)[5])[1];
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t6=t2;
f_21597(t6,t5);}
else{
t3=t2;
f_21597(t3,C_SCHEME_UNDEFINED);}}

/* k21595 in k21592 in fit in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_21597(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21597,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21599,a[2]=((C_word)li288),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21701,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word)li289),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t4=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[6]);}
else{
C_trace("ChickenBridge.scm: 82   fit1");
f_21599(((C_word*)t0)[2],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a21700 in k21595 in k21592 in fit in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21701(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21701,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 82   fit1");
f_21599(t1,t2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* fit1 in k21595 in k21592 in fit in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_21599(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21599,NULL,5,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21606,a[2]=t5,a[3]=t3,a[4]=t4,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 82   <=");
C_less_or_equal_p(5,0,t6,t3,t2,t4);}

/* k21604 in fit1 in k21595 in k21592 in fit in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21606,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[5]);}
else{
t2=(C_word)C_i_greaterp(((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_truep(t2)?((C_word*)t0)[4]:((C_word*)t0)[3]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
switch(((C_word*)t0)[2]){
case C_fix(1):
t5=(C_word)C_i_nequalp(t3,((C_word*)t0)[4]);
t6=(C_truep(t5)?((C_word*)t0)[3]:((C_word*)t0)[4]);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21629,a[2]=t6,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 82   remainder");
t9=*((C_word*)lf[490]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,t4);
case C_fix(2):
t5=(C_word)C_a_i_times(&a,2,C_fix(2),t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21648,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 82   remainder");
t8=*((C_word*)lf[490]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t6,t7,t5);
case C_fix(3):
t5=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t3);
default:
C_trace("ChickenBridge.scm: 82   error");
t5=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[6],lf[491],((C_word*)t0)[2]);}}}

/* k21646 in k21604 in fit1 in k21595 in k21592 in fit in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21648,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21655,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_abs(&a,1,t1);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)t0)[3]))){
t4=(C_word)C_i_greater_or_equalp(t1,C_fix(0));
t5=(C_truep(t4)?*((C_word*)lf[173]+1):*((C_word*)lf[177]+1));
t6=t5;
((C_proc4)C_retrieve_proc(t6))(4,t6,t2,t1,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 82   -");
C_minus(3,0,t2,t1);}}

/* k21653 in k21646 in k21604 in fit1 in k21595 in k21592 in fit in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21655,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,t1,((C_word*)t0)[2]));}

/* k21627 in k21604 in fit1 in k21595 in k21592 in fit in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21629,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)t0)[2],t1));}

/* tendency in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21523(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr5r,(void*)f_21523r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_21523r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_21523r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word *a=C_alloc(16);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=C_retrieve(lf[488]);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21527,a[2]=t2,a[3]=t8,a[4]=t10,a[5]=t1,a[6]=t7,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t12=t11;
f_21527(t12,C_SCHEME_UNDEFINED);}
else{
t12=(C_word)C_i_car(((C_word*)t8)[1]);
t13=C_set_block_item(t10,0,t12);
t14=(C_word)C_i_cdr(((C_word*)t8)[1]);
t15=C_set_block_item(t8,0,t14);
t16=t11;
f_21527(t16,t15);}}

/* k21525 in tendency in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_21527(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21527,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21530,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[7])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21573,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 82   interp1");
f_21391(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[7])[1],C_fix(1));}
else{
t3=t2;
f_21530(t3,C_SCHEME_UNDEFINED);}}

/* k21571 in k21525 in tendency in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21530(t3,t2);}

/* k21528 in k21525 in tendency in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_21530(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21530,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21533,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[6])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21566,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 82   interp1");
f_21391(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1],C_fix(1));}
else{
t3=t2;
f_21533(t3,C_SCHEME_UNDEFINED);}}

/* k21564 in k21528 in k21525 in tendency in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21533(t3,t2);}

/* k21531 in k21528 in k21525 in tendency in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_21533(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21533,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21546,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_truep(t3)?(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]));
C_apply(5,0,t2,((C_word*)((C_word*)t0)[3])[1],t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k21544 in k21531 in k21528 in k21525 in tendency in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21546,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[2])[1],t1));}

/* interp in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21477(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_21477r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_21477r(t0,t1,t2,t3);}}

static void C_ccall f_21477r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21481,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 82   error");
t5=*((C_word*)lf[82]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[486]);}
else{
t5=t4;
f_21481(2,t5,C_SCHEME_UNDEFINED);}}

/* k21479 in interp in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=(C_word)C_i_nullp(t4);
t6=(C_truep(t5)?C_fix(1):(C_word)C_i_cadr(((C_word*)t0)[4]));
C_trace("ChickenBridge.scm: 82   interp1");
f_21391(((C_word*)t0)[3],((C_word*)t0)[2],t3,t6);}
else{
C_trace("ChickenBridge.scm: 82   interp1");
f_21391(((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4],C_fix(1));}}

/* interp1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_21391(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21391,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21395,a[2]=t1,a[3]=t2,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 82   error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[484],t3);}
else{
t6=t5;
f_21395(2,t6,(C_word)C_i_car(t3));}}

/* k21393 in interp1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21395,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21398,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 82   err");
t6=C_retrieve(lf[482]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[483],((C_word*)t0)[4]);}
else{
t6=t4;
f_21398(2,t6,(C_word)C_i_cadr(((C_word*)t0)[4]));}}

/* k21396 in k21393 in interp1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21398,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)((C_word*)t0)[6])[1];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t3)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=((C_word*)t0)[5];
t9=(C_word)C_i_cddr(((C_word*)t0)[4]);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_set_block_item(t11,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21407,a[2]=((C_word*)t0)[4],a[3]=t11,a[4]=t8,a[5]=t7,a[6]=t3,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[3],a[9]=t5,a[10]=((C_word)li284),tmp=(C_word)a,a+=11,tmp));
t13=((C_word*)t11)[1];
f_21407(t13,((C_word*)t0)[2],t9);}

/* do3223 in k21396 in k21393 in interp1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_21407(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21407,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nullp(t2);
t4=(C_truep(t3)?t3:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]));
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 82   ffi_rescale");
f_7207(t1,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);}
else{
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[9])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t2);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t7);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21429,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 82   error");
t11=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t9,lf[481],((C_word*)t0)[2]);}
else{
t11=(C_word)C_i_cadr(t2);
t12=C_mutate(((C_word *)((C_word*)t0)[5])+1,t11);
t13=t9;
f_21429(2,t13,t12);}}}

/* k21427 in do3223 in k21396 in k21393 in interp1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_21407(t3,((C_word*)t0)[2],t2);}

/* cents->ratio in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21376(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21376,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[33],"ffi_cents_to_scaler"),t2);}
else{
C_trace("ChickenBridge.scm: 82   ffi_cents_to_scaler");
t3=C_retrieve2(lf[33],"ffi_cents_to_scaler");
f_7294(3,t3,t1,t2);}}

/* ratio->cents in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21346(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21346,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[34],"ffi_scaler_to_cents"),t2);}
else{
C_trace("ChickenBridge.scm: 82   ffi_scaler_to_cents");
t3=C_retrieve2(lf[34],"ffi_scaler_to_cents");
f_7301(3,t3,t1,t2);}}

/* rhythm->seconds in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21110(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_21110r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_21110r(t0,t1,t2,t3);}}

static void C_ccall f_21110r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=lf[474];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=lf[475];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21114,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t1,a[8]=t7,a[9]=t5,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_21114(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[476]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21259,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[116],lf[476]);}
else{
t20=t19;
f_21259(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[477]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21294,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[116],lf[477]);}
else{
t21=t20;
f_21294(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21323,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[107],t3);}
else{
t21=t20;
f_21323(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k21321 in rhythm->seconds in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21323,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21330,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21338,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21336 in k21321 in rhythm->seconds in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21330(2,t2,C_SCHEME_UNDEFINED);}}

/* k21328 in k21321 in rhythm->seconds in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21114(t5,t4);}

/* k21292 in rhythm->seconds in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21294,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21298,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_21298(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21296 in k21292 in rhythm->seconds in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21114(t7,t6);}

/* k21257 in rhythm->seconds in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21259,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21263,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_21263(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21261 in k21257 in rhythm->seconds in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21114(t7,t6);}

/* k21112 in rhythm->seconds in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_21114(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21114,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21117,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_21117(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[476]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21159,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[476]);}
else{
t6=t5;
f_21159(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[477]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21194,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[477]);}
else{
t7=t6;
f_21194(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21223,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[107],((C_word*)t0)[5]);}
else{
t7=t6;
f_21223(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k21221 in k21112 in rhythm->seconds in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21223,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21230,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21238,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21236 in k21221 in k21112 in rhythm->seconds in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21230(2,t2,C_SCHEME_UNDEFINED);}}

/* k21228 in k21221 in k21112 in rhythm->seconds in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21117(t5,t4);}

/* k21192 in k21112 in rhythm->seconds in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21194,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21198,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_21198(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21196 in k21192 in k21112 in rhythm->seconds in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21117(t7,t6);}

/* k21157 in k21112 in rhythm->seconds in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21159,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21163,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_21163(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21161 in k21157 in k21112 in rhythm->seconds in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21117(t7,t6);}

/* k21115 in k21112 in rhythm->seconds in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_21117(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21117,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21120,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_21120(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[103],((C_word*)t0)[2]);}}

/* k21118 in k21115 in k21112 in rhythm->seconds in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21120,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21131,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li280),tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t3=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 82   ffi_rhythm_to_seconds");
f_7279(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a21130 in k21118 in k21115 in k21112 in rhythm->seconds in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21131(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21131,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 82   ffi_rhythm_to_seconds");
f_7279(t1,t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* decimals in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21070(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21070,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21074,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 82   expt");
t5=*((C_word*)lf[471]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[472],t3);}

/* k21072 in decimals in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21074,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[3]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21085,a[2]=t1,a[3]=((C_word)li278),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t3=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21104,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 82   round");
t4=*((C_word*)lf[470]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}}

/* k21102 in k21072 in decimals in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21104,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* a21084 in k21072 in decimals in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21085(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21085,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21093,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 82   round");
t5=*((C_word*)lf[470]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k21091 in a21084 in k21072 in decimals in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21093,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* quantize in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21049(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21049,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21061,a[2]=t3,a[3]=((C_word)li276),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_trace("ChickenBridge.scm: 82   ffi_quantize");
f_7268(t1,t2,t3);}}

/* a21060 in quantize in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21061(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21061,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 82   ffi_quantize");
f_7268(t1,t2,((C_word*)t0)[2]);}

/* divide in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21006(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr3r,(void*)f_21006r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_21006r(t0,t1,t2,t3);}}

static void C_ccall f_21006r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t3))){
if(C_truep((C_word)C_i_listp(t2))){
C_apply(4,0,t1,*((C_word*)lf[468]+1),t2);}
else{
C_trace("ChickenBridge.scm: 82   /");
C_divide(3,0,t1,t2);}}
else{
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21036,a[2]=t3,a[3]=((C_word)li274),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_apply(5,0,t1,*((C_word*)lf[468]+1),t2,t3);}}}

/* a21035 in divide in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_21036(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21036,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_divide(&a,2,t2,t3));}

/* minus in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20963(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr3r,(void*)f_20963r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_20963r(t0,t1,t2,t3);}}

static void C_ccall f_20963r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t3))){
if(C_truep((C_word)C_i_listp(t2))){
C_apply(4,0,t1,*((C_word*)lf[173]+1),t2);}
else{
C_trace("ChickenBridge.scm: 82   -");
C_minus(3,0,t1,t2);}}
else{
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20993,a[2]=t3,a[3]=((C_word)li272),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_apply(5,0,t1,*((C_word*)lf[173]+1),t2,t3);}}}

/* a20992 in minus in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20993(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20993,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_minus(&a,2,t2,t3));}

/* times in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20894(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_20894r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_20894r(t0,t1,t2);}}

static void C_ccall f_20894r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(1));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t4))){
t5=(C_word)C_i_car(t2);
C_apply(4,0,t1,*((C_word*)lf[409]+1),t5);}
else{
C_apply(4,0,t1,*((C_word*)lf[409]+1),t2);}}
else{
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20938,a[2]=t2,a[3]=((C_word)li270),tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("map");
t7=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t5,t6);}
else{
C_apply(4,0,t1,*((C_word*)lf[409]+1),t2);}}}}

/* a20937 in times in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20938(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20938,3,t0,t1,t2);}
t3=(C_word)C_i_cadr(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_times(&a,2,t2,t3));}

/* plus in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20825(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_20825r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_20825r(t0,t1,t2);}}

static void C_ccall f_20825r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t4))){
t5=(C_word)C_i_car(t2);
C_apply(4,0,t1,*((C_word*)lf[177]+1),t5);}
else{
C_apply(4,0,t1,*((C_word*)lf[177]+1),t2);}}
else{
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20869,a[2]=t2,a[3]=((C_word)li268),tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("map");
t7=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t5,t6);}
else{
C_apply(4,0,t1,*((C_word*)lf[177]+1),t2);}}}}

/* a20868 in plus in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20869(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20869,3,t0,t1,t2);}
t3=(C_word)C_i_cadr(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_plus(&a,2,t2,t3));}

/* log2 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20819(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20819,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub263(t3,t4));}

/* log10 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20813(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20813,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub258(t3,t4));}

/* float in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20792(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20792,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20804,a[2]=((C_word)li264),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t4=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,t3,t2);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_times(&a,2,t2,lf[461]));}}

/* a20803 in float in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20804(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20804,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_times(&a,2,t2,lf[460]));}

/* int in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20777(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20777,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[30],"ffi_float_to_fixnum"),t2);}
else{
C_trace("ChickenBridge.scm: 82   ffi_float_to_fixnum");
t3=C_retrieve2(lf[30],"ffi_float_to_fixnum");
f_7261(3,t3,t1,t2);}}

/* discrete in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20666(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...){
C_word tmp;
C_word t6;
va_list v;
C_word *a,c2=c;
C_save_rest(t5,c2,6);
if(c<6) C_bad_min_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+21)){
C_save_and_reclaim((void*)tr6r,(void*)f_20666r,6,t0,t1,t2,t3,t4,t5);}
else{
a=C_alloc((c-6)*3);
t6=C_restore_rest(a,C_rest_count(0));
f_20666r(t0,t1,t2,t3,t4,t5,t6);}}

static void C_ccall f_20666r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word *a=C_alloc(21);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_fix(1);
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20670,a[2]=t5,a[3]=t1,a[4]=t12,a[5]=t8,a[6]=t4,a[7]=t3,a[8]=t2,a[9]=t10,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(t5))){
t14=C_set_block_item(t10,0,t5);
if(C_truep((C_word)C_i_nullp(t6))){
t15=(C_word)C_i_length(((C_word*)t10)[1]);
t16=C_set_block_item(t8,0,t15);
t17=t13;
f_20670(t17,t16);}
else{
t15=(C_word)C_i_car(t6);
t16=C_set_block_item(t8,0,t15);
t17=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20741,a[2]=t13,a[3]=t12,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t18=(C_word)C_i_cdr(t6);
t19=(C_word)C_i_nullp(t18);
C_trace("ChickenBridge.scm: 82   not?");
t20=C_retrieve(lf[457]);
((C_proc3)C_retrieve_proc(t20))(3,t20,t17,t19);}}
else{
t14=(C_word)C_i_car(t6);
t15=C_set_block_item(t8,0,t14);
t16=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t16))){
t17=t13;
f_20670(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_cadr(t6);
t18=C_set_block_item(t12,0,t17);
t19=t13;
f_20670(t19,t18);}}}

/* k20739 in discrete in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_20670(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_20670(t2,C_SCHEME_UNDEFINED);}}

/* k20668 in discrete in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_20670(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20670,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20684,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[9],a[7]=((C_word)li260),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20699,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 82   ffi_discrete");
t3=C_retrieve(lf[456]);
((C_proc8)C_retrieve_proc(t3))(8,t3,t2,((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],C_fix(0),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20710,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word)li261),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
C_trace("ChickenBridge.scm: 82   ffi_discrete");
t2=C_retrieve(lf[456]);
((C_proc8)C_retrieve_proc(t2))(8,t2,((C_word*)t0)[3],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}}

/* a20709 in k20668 in discrete in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20710(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20710,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 82   ffi_discrete");
t3=C_retrieve(lf[456]);
((C_proc8)C_retrieve_proc(t3))(8,t3,t1,t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k20697 in k20668 in discrete in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* a20683 in k20668 in discrete in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20684(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20684,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20692,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 82   ffi_discrete");
t4=C_retrieve(lf[456]);
((C_proc8)C_retrieve_proc(t4))(8,t4,t3,t2,((C_word*)t0)[5],((C_word*)t0)[4],C_fix(0),((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k20690 in a20683 in k20668 in discrete in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* rescale in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20632(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...){
C_word tmp;
C_word t7;
va_list v;
C_word *a,c2=c;
C_save_rest(t6,c2,7);
if(c<7) C_bad_min_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr7r,(void*)f_20632r,7,t0,t1,t2,t3,t4,t5,t6);}
else{
a=C_alloc((c-7)*3);
t7=C_restore_rest(a,C_rest_count(0));
f_20632r(t0,t1,t2,t3,t4,t5,t6,t7);}}

static void C_ccall f_20632r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
if(C_truep((C_word)C_i_listp(t2))){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20644,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t4,a[6]=t3,a[7]=((C_word)li258),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t9=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t1,t8,t2);}
else{
if(C_truep((C_word)C_i_nullp(t7))){
C_trace("ChickenBridge.scm: 82   ffi_rescale");
f_7207(t1,t2,t3,t4,t5,t6,C_fix(1));}
else{
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 82   ffi_rescale");
f_7207(t1,t2,t3,t4,t5,t6,t8);}}}

/* a20643 in rescale in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20644(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20644,3,t0,t1,t2);}
C_apply(9,0,t1,C_retrieve(lf[454]),t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19585(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+61)){
C_save_and_reclaim((void*)tr3r,(void*)f_19585r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_19585r(t0,t1,t2,t3);}}

static void C_ccall f_19585r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(61);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_length(t2);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_fix(8);
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_fix(1);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_fix(1);
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=t3;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_19595,a[2]=t22,a[3]=t26,a[4]=t20,a[5]=t3,a[6]=t24,a[7]=t2,a[8]=t8,a[9]=t14,a[10]=t10,a[11]=t1,a[12]=t12,a[13]=t18,a[14]=t7,a[15]=t16,a[16]=t5,tmp=(C_word)a,a+=17,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t24)[1]))){
t28=t27;
f_19595(t28,C_SCHEME_UNDEFINED);}
else{
t28=(C_word)C_i_car(((C_word*)t24)[1]);
t29=(C_word)C_eqp(t28,lf[452]);
if(C_truep(t29)){
t30=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20545,a[2]=t3,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t20,a[7]=t16,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t20)[1])){
C_trace("error");
t31=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t31))(4,t31,t30,lf[116],lf[452]);}
else{
t31=t30;
f_20545(2,t31,C_SCHEME_UNDEFINED);}}
else{
t30=(C_word)C_eqp(t28,lf[453]);
if(C_truep(t30)){
t31=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20580,a[2]=t3,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t22,a[7]=t18,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t32=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[116],lf[453]);}
else{
t32=t31;
f_20580(2,t32,C_SCHEME_UNDEFINED);}}
else{
t31=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20609,a[2]=t27,a[3]=t20,a[4]=t16,a[5]=t24,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t26)[1])){
C_trace("error");
t32=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[107],t3);}
else{
t32=t31;
f_20609(2,t32,C_SCHEME_UNDEFINED);}}}}}

/* k20607 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20609,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20616,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20624,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20622 in k20607 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20616(2,t2,C_SCHEME_UNDEFINED);}}

/* k20614 in k20607 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19595(t5,t4);}

/* k20578 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20580,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20584,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_20584(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20582 in k20578 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19595(t7,t6);}

/* k20543 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20545,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20549,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_20549(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20547 in k20543 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19595(t7,t6);}

/* k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_19595(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19595,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_19598,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],a[13]=((C_word*)t0)[16],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_19598(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[452]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20445,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[452]);}
else{
t6=t5;
f_20445(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[453]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20480,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[453]);}
else{
t7=t6;
f_20480(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20509,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[107],((C_word*)t0)[5]);}
else{
t7=t6;
f_20509(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k20507 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20509,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20516,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20524,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20522 in k20507 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20516(2,t2,C_SCHEME_UNDEFINED);}}

/* k20514 in k20507 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19598(t5,t4);}

/* k20478 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20480,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20484,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_20484(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20482 in k20478 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19598(t7,t6);}

/* k20443 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20445,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20449,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_20449(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20447 in k20443 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19598(t7,t6);}

/* k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_19598(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19598,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19601,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_19601(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[103],((C_word*)t0)[2]);}}

/* k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19601,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,((C_word*)((C_word*)t0)[10])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19606,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
t5=((C_word*)((C_word*)t0)[9])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t5,C_fix(1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,C_fix(2)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,C_fix(3)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t6=t4;
f_19606(2,t6,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 81   error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[451],((C_word*)((C_word*)t0)[9])[1]);}}

/* k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19606,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19608,a[2]=((C_word*)t0)[9],a[3]=((C_word)li236),tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19690,a[2]=t4,a[3]=((C_word)li239),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19800,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20338,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=t8,a[7]=((C_word*)t0)[4],a[8]=((C_word)li256),tmp=(C_word)a,a+=9,tmp));
t10=((C_word*)t8)[1];
f_20338(t10,t6,C_fix(0));}

/* do2963 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_20338(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20338,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20348,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20361,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=t5,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=((C_word)li255),tmp=(C_word)a,a+=10,tmp));
t7=((C_word*)t5)[1];
f_20361(t7,t3,C_SCHEME_END_OF_LIST,C_fix(0),C_SCHEME_FALSE);}}

/* do2966 in do2963 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_20361(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20361,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)((C_word*)t0)[8])[1]))){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20371,a[2]=t1,a[3]=((C_word*)t0)[7],a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20389,a[2]=t6,a[3]=t7,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 81   reverse");
t9=*((C_word*)lf[159]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t5)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20414,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t6,a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t8=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 81   modulo");
t9=*((C_word*)lf[450]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,((C_word*)t0)[2]);}}

/* k20412 in do2966 in do2963 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20414,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)t0)[8],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20396,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[2])[1]))){
t5=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t4;
f_20396(t7,t6);}
else{
t5=t4;
f_20396(t5,C_SCHEME_UNDEFINED);}}

/* k20394 in k20412 in do2966 in do2963 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_20396(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20396,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_20361(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k20387 in do2966 in do2963 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 81   add-outcome");
t2=((C_word*)t0)[4];
f_19608(t2,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k20369 in do2966 in do2963 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20371,2,t0,t1);}
if(C_truep((C_word)C_i_member(((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]))){
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}}

/* k20346 in do2963 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20348,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_20338(t3,((C_word*)t0)[2],t2);}

/* k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19800,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19803,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20294,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   sort");
t5=C_retrieve(lf[444]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[4])[1],*((C_word*)lf[176]+1));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20300,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=t4;
f_20300(t6,(C_word)C_i_symbolp(t5));}
else{
t5=t4;
f_20300(t5,C_SCHEME_FALSE);}}}

/* k20298 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_20300(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20300,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20304,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20306,a[2]=((C_word)li254),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 81   sort");
t4=C_retrieve(lf[444]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[3])[1],t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20322,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   reverse");
t3=*((C_word*)lf[159]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k20320 in k20298 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19803(t3,t2);}

/* a20305 in k20298 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20306(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_20306,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20314,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   format");
t5=C_retrieve(lf[429]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_SCHEME_FALSE,lf[449],t2);}

/* k20312 in a20305 in k20298 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20314,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20318,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   format");
t3=C_retrieve(lf[429]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_SCHEME_FALSE,lf[448],((C_word*)t0)[2]);}

/* k20316 in k20312 in a20305 in k20298 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 81   string-ci<?");
t2=*((C_word*)lf[447]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k20302 in k20298 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19803(t3,t2);}

/* k20292 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19803(t3,t2);}

/* k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_19803(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19803,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19806,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20171,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li253),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_20171(t6,t2,((C_word*)((C_word*)t0)[7])[1],C_fix(0));}

/* do2979 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_20171(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20171,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20182,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   max");
t6=*((C_word*)lf[371]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=(C_word)C_i_cddr(t5);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20195,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t9=(C_word)C_i_string_length(t6);
C_trace("ChickenBridge.scm: 81   max");
t10=*((C_word*)lf[371]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t8,((C_word*)t4)[1],t9);}}

/* k20193 in do2979 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20195,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20198,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20257,a[2]=t5,a[3]=((C_word)li252),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_20257(t7,t3,((C_word*)t0)[2],C_fix(0));}

/* do2987 in k20193 in do2979 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_20257(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_20257,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t4);
t6=(C_word)C_a_i_plus(&a,2,t3,t5);
t7=t3=t6;
t8=(C_word)C_i_cdr(t2);
t10=t1;
t11=t8;
t12=t3;
t1=t10;
t2=t11;
t3=t12;
goto loop;}}

/* k20196 in k20193 in do2979 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20198,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_times(&a,2,((C_word*)t3)[1],lf[445]);
t5=C_set_block_item(t3,0,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20205,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20214,a[2]=t3,a[3]=t8,a[4]=((C_word)li251),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_20214(t10,t6,((C_word*)t0)[2]);}

/* do2993 in k20196 in k20193 in do2979 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_20214(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20214,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cdr(t3);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20239,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t6);
t8=(C_word)C_a_i_divide(&a,2,t7,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 81   decimals");
t9=C_retrieve(lf[446]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,t8,C_fix(3));}}

/* k20237 in do2993 in k20196 in k20193 in do2979 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[5],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_20214(t4,((C_word*)t0)[2],t3);}

/* k20203 in k20196 in k20193 in do2979 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_20171(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k20180 in do2979 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19806,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19810,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20157,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word)li250),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 81   sort");
t4=C_retrieve(lf[444]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[7])[1],t3);}

/* a20156 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20157(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_20157,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 81   before?");
t6=((C_word*)((C_word*)t0)[3])[1];
f_19690(t6,t1,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19810,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19813,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],C_fix(1));
if(C_truep(t4)){
t5=lf[433];
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19854,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 81   make-string");
t7=*((C_word*)lf[443]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,C_fix(5),C_make_character(45));}
else{
t5=t3;
f_19813(2,t5,C_SCHEME_UNDEFINED);}}

/* k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19854,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19857,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 81   newline");
t3=*((C_word*)lf[151]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19857,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19860,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20138,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li249),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_20138(t6,t2,C_fix(0));}

/* do3006 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_20138(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20138,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)((C_word*)t0)[3])[1]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20148,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("write-char/port");
t4=C_retrieve(lf[434]);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t3,C_make_character(42),*((C_word*)lf[435]+1));}}

/* k20146 in do3006 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20148,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_20138(t3,((C_word*)t0)[2],t2);}

/* k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19860,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19863,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20076,a[2]=((C_word*)t0)[6],a[3]=t4,a[4]=((C_word)li248),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_20076(t6,t2,((C_word*)((C_word*)t0)[4])[1]);}

/* do3011 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_20076(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20076,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20086,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 81   display");
t4=*((C_word*)lf[152]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k20084 in do3011 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20086,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20089,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 81   format");
t4=C_retrieve(lf[429]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_SCHEME_FALSE,lf[442],t3);}

/* k20087 in k20084 in do3011 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20089,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20095,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20109,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,C_fix(5),t2);
C_trace("ChickenBridge.scm: 81   max");
t6=*((C_word*)lf[371]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k20107 in k20087 in k20084 in do3011 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20109,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20111,a[2]=t3,a[3]=((C_word)li247),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_20111(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do3016 in k20107 in k20087 in k20084 in do3011 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_20111(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20111,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20121,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[434]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[435]+1));}}

/* k20119 in do3016 in k20107 in k20087 in k20084 in do3011 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20121,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_20111(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k20093 in k20087 in k20084 in do3011 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20095,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20098,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 81   display");
t3=*((C_word*)lf[152]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k20096 in k20093 in k20087 in k20084 in do3011 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_20076(t3,((C_word*)t0)[2],t2);}

/* k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19863,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19866,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19871,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t4,a[7]=((C_word)li246),tmp=(C_word)a,a+=8,tmp));
t6=((C_word*)t4)[1];
f_19871(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_19871(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19871,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19884,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,a[7]=t1,a[8]=((C_word*)t0)[6],a[9]=t2,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 81   newline");
t5=*((C_word*)lf[151]+1);
((C_proc2)C_retrieve_proc(t5))(2,t5,t4);}}

/* k19882 in do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19884,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19887,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_19887(2,t4,lf[438]);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19758,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 81   format");
t6=C_retrieve(lf[429]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[441],t5);}}

/* k19756 in k19882 in do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19758,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19767,a[2]=t6,a[3]=t3,a[4]=((C_word)li245),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_19767(t8,((C_word*)t0)[2],t4);}

/* do2958 in k19756 in k19882 in do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_19767(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19767,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19778,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19789,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 81   format");
t6=C_retrieve(lf[429]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[440],t5);}}

/* k19787 in do2958 in k19756 in k19882 in do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 81   string-append");
t2=*((C_word*)lf[439]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k19776 in do2958 in k19756 in k19882 in do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_19767(t4,((C_word*)t0)[2],t3);}

/* k19885 in k19882 in do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19887,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19893,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20047,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[2])[1],t2);
C_trace("ChickenBridge.scm: 81   max");
t6=*((C_word*)lf[371]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k20045 in k19885 in k19882 in do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20047,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20049,a[2]=t3,a[3]=((C_word)li244),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_20049(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do3032 in k20045 in k19885 in k19882 in do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_20049(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20049,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20059,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[434]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[435]+1));}}

/* k20057 in do3032 in k20045 in k19885 in k19882 in do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20059,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_20049(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k19891 in k19885 in k19882 in do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19893,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19896,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20020,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   min");
t4=*((C_word*)lf[437]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k20018 in k19891 in k19885 in k19882 in do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20020,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20022,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li243),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_20022(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do3038 in k20018 in k19891 in k19885 in k19882 in do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_20022(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20022,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20032,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_string_ref(((C_word*)t0)[2],t2);
C_trace("write-char/port");
t6=C_retrieve(lf[434]);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,*((C_word*)lf[435]+1));}}

/* k20030 in do3038 in k20018 in k19891 in k19885 in k19882 in do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20032,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_20022(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k19894 in k19891 in k19885 in k19882 in do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19896,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19899,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19908,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word*)t0)[5],a[6]=((C_word)li242),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_19908(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do3045 in k19894 in k19891 in k19885 in k19882 in do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_19908(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19908,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[5]);
t5=(C_word)C_i_assoc(t3,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19921,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19940,a[2]=((C_word*)t0)[3],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(t5);
C_trace("ChickenBridge.scm: 81   number->string");
C_number_to_string(3,0,t7,t8);}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19934,a[2]=((C_word*)t0)[2],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   display");
t8=*((C_word*)lf[152]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[3]);}}}

/* k19932 in do3045 in k19894 in k19891 in k19885 in k19882 in do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 81   display");
t2=*((C_word*)lf[152]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k19938 in do3045 in k19894 in k19891 in k19885 in k19882 in do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19940,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_string_length(((C_word*)t3)[1]);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19946,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 81   display");
t8=*((C_word*)lf[152]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[2]);}

/* k19944 in k19938 in do3045 in k19894 in k19891 in k19885 in k19882 in do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19946,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19949,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_greater_or_equalp(((C_word*)((C_word*)t0)[2])[1],C_fix(5)))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19988,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 81   position");
t4=C_retrieve(lf[98]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,C_make_character(46),((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=t2;
f_19949(t3,C_SCHEME_UNDEFINED);}}

/* k19986 in k19944 in k19938 in do3045 in k19894 in k19891 in k19885 in k19882 in do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19988,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19992,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20000,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_plus(&a,2,t1,C_fix(4));
C_trace("ChickenBridge.scm: 81   min");
t5=*((C_word*)lf[437]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k19998 in k19986 in k19944 in k19938 in do3045 in k19894 in k19891 in k19885 in k19882 in do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_20000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 81   substring");
t2=*((C_word*)lf[436]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t1);}

/* k19990 in k19986 in k19944 in k19938 in do3045 in k19894 in k19891 in k19885 in k19882 in do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_i_string_length(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19949(t5,t4);}

/* k19947 in k19944 in k19938 in do3045 in k19894 in k19891 in k19885 in k19882 in do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_19949(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19949,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19952,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19959,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,C_fix(5),((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 81   max");
t5=*((C_word*)lf[371]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_fix(0));}

/* k19957 in k19947 in k19944 in k19938 in do3045 in k19894 in k19891 in k19885 in k19882 in do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19959,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19961,a[2]=t3,a[3]=((C_word)li241),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_19961(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do3054 in k19957 in k19947 in k19944 in k19938 in do3045 in k19894 in k19891 in k19885 in k19882 in do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_19961(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19961,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19971,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[434]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[435]+1));}}

/* k19969 in do3054 in k19957 in k19947 in k19944 in k19938 in do3045 in k19894 in k19891 in k19885 in k19882 in do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19971,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_19961(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k19950 in k19947 in k19944 in k19938 in do3045 in k19894 in k19891 in k19885 in k19882 in do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 81   display");
t2=*((C_word*)lf[152]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k19919 in do3045 in k19894 in k19891 in k19885 in k19882 in do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19908(t3,((C_word*)t0)[2],t2);}

/* k19897 in k19894 in k19891 in k19885 in k19882 in do3026 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19871(t3,((C_word*)t0)[2],t2);}

/* k19864 in k19861 in k19858 in k19855 in k19852 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 81   newline");
t2=*((C_word*)lf[151]+1);
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[2]);}

/* k19811 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19813,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(1)))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_retrieve(lf[431]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19825,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19836,a[2]=((C_word)li240),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t4=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a19835 in k19811 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19836(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19836,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(t2);
C_trace("ChickenBridge.scm: 81   append");
t5=*((C_word*)lf[115]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t1,t3,lf[432],t4);}

/* k19823 in k19811 in k19808 in k19804 in k19801 in k19798 in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],C_fix(2)))){
C_trace("ChickenBridge.scm: 81   make-markov");
t2=C_retrieve(lf[408]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}}

/* before? in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_19690(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19690,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_TRUE);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19700,a[2]=t4,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19738,a[2]=t2,a[3]=((C_word)li238),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   list-index");
f_8583(t5,t6,t4);}}

/* a19737 in before? in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19738(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19738,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k19698 in before? in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19700,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19703,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19728,a[2]=((C_word*)t0)[4],a[3]=((C_word)li237),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   list-index");
f_8583(t2,t3,((C_word*)t0)[2]);}

/* a19727 in k19698 in before? in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19728(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19728,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k19701 in k19698 in before? in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[7],t1))){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}
else{
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[7],t1))){
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 81   before?");
t4=((C_word*)((C_word*)t0)[3])[1];
f_19690(t4,((C_word*)t0)[6],t2,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* add-outcome in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_19608(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19608,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19612,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19680,a[2]=t2,a[3]=((C_word)li234),tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8629,a[2]=t5,a[3]=t8,a[4]=((C_word)li235),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_8629(t10,t4,t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do709 in add-outcome in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_8629(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8629,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_truep(t6)?t6:(C_word)C_i_nullp(t2));
if(C_truep(t7)){
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,((C_word*)t5)[1]);}
else{
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8639,a[2]=t5,a[3]=t3,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8649,a[2]=t8,a[3]=t5,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 79   p");
t11=((C_word*)t0)[2];
f_19680(t11,t9,t10);}}

/* k8647 in do709 in add-outcome in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8639(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_8639(t2,C_SCHEME_UNDEFINED);}}

/* k8637 in do709 in add-outcome in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_8639(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_8629(t3,((C_word*)t0)[4],t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* a19679 in add-outcome in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_19680(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19680,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(((C_word*)t0)[2],t3));}

/* k19610 in add-outcome in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19612,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_cddr(t1);
t4=(C_word)C_i_assoc(((C_word*)t0)[5],t3);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t4);
t6=(C_word)C_i_cadr(t4);
t7=(C_word)C_a_i_plus(&a,2,C_fix(1),t6);
t8=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_set_car(t5,t7));}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19662,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 81   tail");
t7=C_retrieve(lf[79]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19630,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 81   format");
t4=C_retrieve(lf[429]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,C_SCHEME_FALSE,lf[430],((C_word*)t0)[3]);}}

/* k19628 in k19610 in add-outcome in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19630,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],C_fix(1));
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* k19660 in k19610 in add-outcome in k19604 in k19599 in k19596 in k19593 in markov-analyze in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19662,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_fix(1));
t3=(C_word)C_a_i_list(&a,1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_set_cdr(t1,t3));}

/* next-in-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19491(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19491,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19495,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 81   pattern-data");
f_13103(t3,t2);}

/* k19493 in next-in-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19495,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
t3=(C_word)C_i_car(t1);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19524,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_check_structure(t3,lf[420]);
t6=(C_word)C_i_block_ref(t3,C_fix(2));
C_trace("ChickenBridge.scm: 81   next-1");
f_13729(t4,t6);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_set_car(t1,t4);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 81   graph-node-datum");
f_18910(((C_word*)t0)[2],t6);}}

/* k19522 in k19493 in next-in-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19524,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19529,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=t3,a[6]=((C_word)li232),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_19529(t7,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2881 in k19522 in k19493 in next-in-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_19529(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19529,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[5])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nullp(t2));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19539,a[2]=((C_word*)t0)[5],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t6)){
t7=t5;
f_19539(2,t7,(C_word)C_i_set_car(((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]));}
else{
C_trace("ChickenBridge.scm: 81   error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[427],((C_word*)t0)[3]);}}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19554,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_check_structure(t6,lf[420]);
t8=(C_word)C_i_block_ref(t6,C_fix(3));
if(C_truep((C_word)C_i_eqvp(((C_word*)t0)[3],t8))){
t9=(C_word)C_i_car(t2);
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t5;
f_19554(t11,t10);}
else{
t9=t5;
f_19554(t9,C_SCHEME_UNDEFINED);}}}

/* k19552 in do2881 in k19522 in k19493 in next-in-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_19554(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19529(t3,((C_word*)t0)[2],t2);}

/* k19537 in do2881 in k19522 in k19493 in next-in-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 81   graph-node-datum");
f_18910(((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18973(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr3r,(void*)f_18973r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18973r(t0,t1,t2,t3);}}

static void C_ccall f_18973r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(17);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18977,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19235,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=C_fix(1);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19244,a[2]=t9,a[3]=((C_word)li230),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t11=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t6,t10,t7);}
else{
C_trace("ChickenBridge.scm: 81   error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[426],((C_word*)t4)[1]);}}

/* parse-graph-item in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19244(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19244,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19248,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=t3;
f_19248(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[425],t2);}}

/* k19246 in parse-graph-item in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19248,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19253,a[2]=((C_word*)t0)[4],a[3]=((C_word)li229),tmp=(C_word)a,a+=4,tmp);
C_apply(4,0,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* a19252 in k19246 in parse-graph-item in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19253(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+46)){
C_save_and_reclaim((void*)tr3r,(void*)f_19253r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_19253r(t0,t1,t2,t3);}}

static void C_ccall f_19253r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(46);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19257,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t2,a[10]=t1,a[11]=((C_word*)t0)[2],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_19257(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[423]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19395,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[116],lf[423]);}
else{
t20=t19;
f_19395(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[424]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19430,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[116],lf[424]);}
else{
t21=t20;
f_19430(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19459,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[107],t3);}
else{
t21=t20;
f_19459(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k19457 in a19252 in k19246 in parse-graph-item in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19459,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19466,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19474,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19472 in k19457 in a19252 in k19246 in parse-graph-item in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19466(2,t2,C_SCHEME_UNDEFINED);}}

/* k19464 in k19457 in a19252 in k19246 in parse-graph-item in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19257(t5,t4);}

/* k19428 in a19252 in k19246 in parse-graph-item in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19430,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19434,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_19434(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19432 in k19428 in a19252 in k19246 in parse-graph-item in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19257(t7,t6);}

/* k19393 in a19252 in k19246 in parse-graph-item in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19395,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19399,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_19399(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19397 in k19393 in a19252 in k19246 in parse-graph-item in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19257(t7,t6);}

/* k19255 in a19252 in k19246 in parse-graph-item in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_19257(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19257,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19260,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_19260(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[423]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19295,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[423]);}
else{
t6=t5;
f_19295(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[424]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19330,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[424]);}
else{
t7=t6;
f_19330(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19359,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[107],((C_word*)t0)[5]);}
else{
t7=t6;
f_19359(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k19357 in k19255 in a19252 in k19246 in parse-graph-item in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19359,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19366,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19374,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19372 in k19357 in k19255 in a19252 in k19246 in parse-graph-item in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19366(2,t2,C_SCHEME_UNDEFINED);}}

/* k19364 in k19357 in k19255 in a19252 in k19246 in parse-graph-item in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19260(t5,t4);}

/* k19328 in k19255 in a19252 in k19246 in parse-graph-item in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19330,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19334,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_19334(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19332 in k19328 in k19255 in a19252 in k19246 in parse-graph-item in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19260(t7,t6);}

/* k19293 in k19255 in a19252 in k19246 in parse-graph-item in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19295,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19299,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_19299(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19297 in k19293 in k19255 in a19252 in k19246 in parse-graph-item in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19260(t7,t6);}

/* k19258 in k19255 in a19252 in k19246 in parse-graph-item in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_19260(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19260,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19263,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_19263(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[103],((C_word*)t0)[2]);}}

/* k19261 in k19258 in k19255 in a19252 in k19246 in parse-graph-item in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19263,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19266,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=t2;
f_19266(t3,C_SCHEME_UNDEFINED);}
else{
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[6])[1]);
t4=t2;
f_19266(t4,t3);}}

/* k19264 in k19261 in k19258 in k19255 in a19252 in k19246 in parse-graph-item in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_19266(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19266,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=((C_word*)t0)[5];
t5=((C_word*)t0)[4];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=t4;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,4,lf[420],t5,t6,t7));}

/* k19233 in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18977(2,t3,t2);}

/* k18975 in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18977,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18980,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_18980(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[375]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19140,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 81   error");
t18=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[116],lf[375]);}
else{
t18=t17;
f_19140(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[376]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19175,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 81   error");
t19=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[116],lf[376]);}
else{
t19=t18;
f_19175(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19204,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 81   error");
t19=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[107],((C_word*)t0)[4]);}
else{
t19=t18;
f_19204(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k19202 in k18975 in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19204,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19211,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19219,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19217 in k19202 in k18975 in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 81   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19211(2,t2,C_SCHEME_UNDEFINED);}}

/* k19209 in k19202 in k18975 in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18980(t5,t4);}

/* k19173 in k18975 in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19175,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19179,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_19179(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19177 in k19173 in k18975 in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18980(t7,t6);}

/* k19138 in k18975 in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19140,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19144,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_19144(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19142 in k19138 in k18975 in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18980(t7,t6);}

/* k18978 in k18975 in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_18980(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18980,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18983,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_18983(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[375]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19040,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 81   error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[375]);}
else{
t6=t5;
f_19040(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[376]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19075,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 81   error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[376]);}
else{
t7=t6;
f_19075(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19104,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 81   error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[107],((C_word*)t0)[5]);}
else{
t7=t6;
f_19104(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k19102 in k18978 in k18975 in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19104,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19111,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19119,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19117 in k19102 in k18978 in k18975 in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 81   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19111(2,t2,C_SCHEME_UNDEFINED);}}

/* k19109 in k19102 in k18978 in k18975 in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18983(t5,t4);}

/* k19073 in k18978 in k18975 in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19075,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19079,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_19079(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19077 in k19073 in k18978 in k18975 in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18983(t7,t6);}

/* k19038 in k18978 in k18975 in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19040,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19044,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_19044(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19042 in k19038 in k18978 in k18975 in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18983(t7,t6);}

/* k18981 in k18978 in k18975 in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_18983(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18983,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18986,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18986(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 81   error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[103],((C_word*)t0)[2]);}}

/* k18984 in k18981 in k18978 in k18975 in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18986,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18989,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 81   %alloc-pattern");
f_13378(t2);}

/* k18987 in k18984 in k18981 in k18978 in k18975 in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18989,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18995,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19001,a[2]=((C_word)li228),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 81   initialize-pattern");
f_13388(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[422],"next-in-graph"),t5);}

/* a19000 in k18987 in k18984 in k18981 in k18978 in k18975 in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19001(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_19001,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19007,a[2]=((C_word)li227),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19019,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern-data");
f_13103(t5,t3);}

/* k19017 in a19000 in k18987 in k18984 in k18981 in k18978 in k18975 in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(t1);
C_trace("for-each");
t3=*((C_word*)lf[373]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a19006 in a19000 in k18987 in k18984 in k18981 in k18978 in k18975 in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_19007(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19007,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 81   graph-node-datum");
f_18910(t1,t2);}

/* k18993 in k18987 in k18984 in k18981 in k18978 in k18975 in make-graph in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* graph-node-datum in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_18910(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18910,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[420]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18570(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18570,3,t0,t1,t2);}
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18573,a[2]=t4,a[3]=((C_word)li221),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18752,a[2]=t1,a[3]=t4,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 81   pattern-data");
f_13103(t6,t2);}

/* k18750 in next-in-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18752,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18756,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 81   pattern-cache");
f_13319(t2,((C_word*)t0)[4]);}

/* k18754 in k18750 in next-in-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18756,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18758,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word)li224),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_18758(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do2722 in k18754 in k18750 in next-in-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_18758(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18758,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18768,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t1,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
t8=t7;
f_18768(2,t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
if(C_truep(t8)){
t9=t7;
f_18768(2,t9,t8);}
else{
t9=(C_word)C_i_car(t2);
t10=(C_word)C_i_car(t9);
t11=t3;
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18683,a[2]=t13,a[3]=((C_word)li223),tmp=(C_word)a,a+=4,tmp));
t15=((C_word*)t13)[1];
f_18683(t15,t7,t10,t11,C_SCHEME_TRUE);}}}

/* do2707 in do2722 in k18754 in k18750 in next-in-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_18683(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18683,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18693,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t6)){
t8=t7;
f_18693(t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
t9=t7;
f_18693(t9,(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t5)[1])));}}

/* k18691 in do2707 in do2722 in k18754 in k18750 in next-in-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_18693(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18693,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(C_word)C_eqp(t2,lf[409]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18700,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t3)){
t5=t4;
f_18700(t5,t3);}
else{
t5=(C_word)C_i_car(((C_word*)t0)[4]);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
t7=(C_word)C_i_equalp(t5,t6);
if(C_truep(t7)){
t8=t4;
f_18700(t8,t7);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[3]);
t9=t4;
f_18700(t9,(C_word)C_eqp(t8,lf[409]));}}}}

/* k18698 in k18691 in do2707 in do2722 in k18754 in k18750 in next-in-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_18700(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_18683(t5,((C_word*)t0)[2],t3,t4,((C_word*)((C_word*)t0)[6])[1]);}

/* k18766 in do2722 in k18754 in k18750 in next-in-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18768,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18771,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 81   error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[418],((C_word*)t0)[6]);}
else{
t3=t2;
f_18771(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_18758(t3,((C_word*)t0)[7],t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[8])[1]);}}

/* k18769 in k18766 in do2722 in k18754 in k18750 in next-in-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18771,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18775,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_i_cadr(t3);
t5=(C_word)C_i_car(((C_word*)t0)[3]);
t6=(C_word)C_i_cddr(t5);
C_trace("ChickenBridge.scm: 81   select-output");
t7=((C_word*)((C_word*)t0)[2])[1];
f_18573(t7,t2,t4,t6);}

/* k18773 in k18769 in k18766 in do2722 in k18754 in k18750 in next-in-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18775,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18778,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[3]))){
t4=t3;
f_18778(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_18778(2,t5,(C_word)C_i_set_car(((C_word*)t0)[3],((C_word*)((C_word*)t0)[5])[1]));}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18795,a[2]=t6,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word)li222),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_18795(t8,t3,((C_word*)t0)[3]);}}}

/* do2731 in k18773 in k18769 in k18766 in do2722 in k18754 in k18750 in next-in-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_18795(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_18795,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_set_car(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_set_cdr(t2,((C_word*)t0)[5]);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18811,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 81   pattern-cache-set!");
f_13310(t6,((C_word*)t0)[3],t7);}
else{
t4=(C_word)C_i_cdr(t2);
t10=t1;
t11=t4;
t1=t10;
t2=t11;
goto loop;}}

/* k18809 in do2731 in k18773 in k18769 in k18766 in do2722 in k18754 in k18750 in next-in-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_set_cdr(t2,C_SCHEME_END_OF_LIST));}

/* k18776 in k18773 in k18769 in k18766 in do2722 in k18754 in k18750 in next-in-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* select-output in next-in-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_18573(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18573,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18641,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   ffi_ranfloat");
f_7384(t5,t2);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18585,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word)li220),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_18585(t8,t1,t3,C_SCHEME_FALSE,C_fix(0));}}

/* do2691 in select-output in next-in-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_18585(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18585,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 81   select-output");
t7=((C_word*)((C_word*)t0)[4])[1];
f_18573(t7,t1,((C_word*)t6)[1],((C_word*)t0)[3]);}
else{
t7=(C_word)C_i_car(t2);
t8=C_set_block_item(t5,0,t7);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18621,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t5,a[6]=t6,tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_caddr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_numberp(t10))){
t11=t9;
f_18621(2,t11,(C_word)C_i_caddr(((C_word*)t5)[1]));}
else{
t11=(C_word)C_i_caddr(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 81   next-1");
f_13729(t9,t11);}}}

/* k18619 in do2691 in select-output in next-in-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18621,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_i_set_car(t4,((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_18585(t7,((C_word*)t0)[2],t6,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* k18639 in select-output in next-in-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18641,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18646,a[2]=t3,a[3]=t1,a[4]=((C_word)li219),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_18646(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2701 in k18639 in select-output in next-in-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_18646(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18646,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cadr(t3);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[3],t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_car(t5));}
else{
t5=(C_word)C_i_cdr(t2);
t8=t1;
t9=t5;
t1=t8;
t2=t9;
goto loop;}}

/* make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18083(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr3r,(void*)f_18083r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18083r(t0,t1,t2,t3);}}

static void C_ccall f_18083r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a=C_alloc(22);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18087,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18564,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18010,a[2]=t7,a[3]=t10,a[4]=t8,a[5]=((C_word)li217),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_18010(t12,t6,t7,C_SCHEME_FALSE,t8,C_SCHEME_FALSE);}
else{
C_trace("ChickenBridge.scm: 81   error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[417],((C_word*)t4)[1]);}}

/* do2592 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_18010(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18010,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_i_car(t2);
t10=t9;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17855,a[2]=((C_word*)t0)[2],a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t7,a[8]=t8,a[9]=t11,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t11)[1]))){
t13=t12;
f_17855(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 81   error");
t13=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[416],((C_word*)t11)[1]);}}}

/* k17853 in do2592 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17855,2,t0,t1);}
t2=(C_word)C_i_member(lf[412],((C_word*)((C_word*)t0)[9])[1]);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17861,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
if(C_truep(t2)){
t4=t3;
f_17861(2,t4,t2);}
else{
t4=(C_word)C_i_member(lf[414],((C_word*)((C_word*)t0)[9])[1]);
if(C_truep(t4)){
t5=t3;
f_17861(2,t5,t4);}
else{
C_trace("ChickenBridge.scm: 81   error");
t5=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[415],((C_word*)((C_word*)t0)[9])[1]);}}}

/* k17859 in k17853 in do2592 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17861,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t11=t10;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17873,a[2]=t3,a[3]=t9,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=t7,tmp=(C_word)a,a+=13,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17946,a[2]=t15,a[3]=t12,a[4]=t5,a[5]=t10,a[6]=t3,a[7]=((C_word*)t0)[2],a[8]=((C_word)li216),tmp=(C_word)a,a+=9,tmp));
t17=((C_word*)t15)[1];
f_17946(t17,t13);}

/* do2570 in k17859 in k17853 in do2592 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_17946(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_17946,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]))){
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[7])+1,t7);
t14=t1;
t1=t14;
goto loop;}}

/* k17871 in k17859 in k17853 in do2592 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17873,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_17876,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17889,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[12],a[4]=((C_word)li215),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t4=*((C_word*)lf[373]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* a17888 in k17871 in k17859 in k17853 in do2592 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17889(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17889,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17893,a[2]=t8,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t6,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t10=(C_word)C_i_car(t2);
t11=C_set_block_item(t4,0,t10);
t12=(C_word)C_i_cdr(t2);
t13=(C_word)C_i_nullp(t12);
t14=(C_truep(t13)?C_fix(1):(C_word)C_i_cadr(t2));
t15=C_set_block_item(t8,0,t14);
t16=C_set_block_item(t6,0,((C_word*)t8)[1]);
if(C_truep((C_word)C_i_numberp(((C_word*)t8)[1]))){
t17=t9;
f_17893(t17,C_SCHEME_UNDEFINED);}
else{
t17=C_set_block_item(t8,0,C_SCHEME_FALSE);
t18=t9;
f_17893(t18,t17);}}
else{
t10=C_set_block_item(t4,0,t2);
t11=C_set_block_item(t8,0,C_fix(1));
t12=C_set_block_item(t6,0,C_fix(1));
t13=t9;
f_17893(t13,t12);}}

/* k17891 in a17888 in k17871 in k17859 in k17853 in do2592 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_17893(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17893,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17896,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_truep(((C_word*)((C_word*)t0)[2])[1])?((C_word*)((C_word*)t0)[6])[1]:C_SCHEME_FALSE);
if(C_truep(t3)){
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=t2;
f_17896(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t5=t2;
f_17896(t5,t4);}}

/* k17894 in k17891 in a17888 in k17871 in k17859 in k17853 in do2592 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_17896(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17896,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k17874 in k17871 in k17859 in k17853 in do2592 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17876,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17887,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 81   reverse");
t3=*((C_word*)lf[159]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k17885 in k17874 in k17871 in k17859 in k17853 in do2592 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17887,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[10])[1],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[9])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18027,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t6=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t6)){
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],t8))){
t9=t5;
f_18027(2,t9,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 81   error");
t9=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,lf[413],((C_word*)t0)[2]);}}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_18027(2,t10,t9);}}

/* k18025 in k17885 in k17874 in k17871 in k17859 in k17853 in do2592 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18027,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=((C_word*)((C_word*)t0)[4])[1];
f_18010(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k18562 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18087(2,t3,t2);}

/* k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18087,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18090,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_18090(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[375]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18434,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 81   error");
t22=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[116],lf[375]);}
else{
t22=t21;
f_18434(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[376]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18469,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 81   error");
t23=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[116],lf[376]);}
else{
t23=t22;
f_18469(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[411]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18504,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 81   error");
t24=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[116],lf[411]);}
else{
t24=t23;
f_18504(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18533,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 81   error");
t24=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[107],((C_word*)t0)[4]);}
else{
t24=t23;
f_18533(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k18531 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18533,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18540,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18548,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18546 in k18531 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 81   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18540(2,t2,C_SCHEME_UNDEFINED);}}

/* k18538 in k18531 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18090(t5,t4);}

/* k18502 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18504,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18508,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_18508(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18506 in k18502 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18090(t7,t6);}

/* k18467 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18469,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18473,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_18473(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18471 in k18467 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18090(t7,t6);}

/* k18432 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18434,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18438,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_18438(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18436 in k18432 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18090(t7,t6);}

/* k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_18090(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18090,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18093,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_18093(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[375]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18299,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 81   error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[375]);}
else{
t6=t5;
f_18299(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[376]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18334,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 81   error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[376]);}
else{
t7=t6;
f_18334(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[411]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18369,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 81   error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[411]);}
else{
t8=t7;
f_18369(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18398,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 81   error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[107],((C_word*)t0)[6]);}
else{
t8=t7;
f_18398(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k18396 in k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18398,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18405,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18413,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18411 in k18396 in k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 81   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18405(2,t2,C_SCHEME_UNDEFINED);}}

/* k18403 in k18396 in k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18093(t5,t4);}

/* k18367 in k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18369,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18373,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_18373(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18371 in k18367 in k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18093(t7,t6);}

/* k18332 in k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18334,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18338,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_18338(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18336 in k18332 in k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18093(t7,t6);}

/* k18297 in k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18299,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18303,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_18303(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18301 in k18297 in k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18093(t7,t6);}

/* k18091 in k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_18093(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18093,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18096,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_18096(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[375]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18164,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 81   error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[375]);}
else{
t6=t5;
f_18164(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[376]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18199,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 81   error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[376]);}
else{
t7=t6;
f_18199(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[411]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18234,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 81   error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[411]);}
else{
t8=t7;
f_18234(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18263,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 81   error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[107],((C_word*)t0)[6]);}
else{
t8=t7;
f_18263(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k18261 in k18091 in k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18263,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18270,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18278,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18276 in k18261 in k18091 in k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 81   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18270(2,t2,C_SCHEME_UNDEFINED);}}

/* k18268 in k18261 in k18091 in k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18096(t5,t4);}

/* k18232 in k18091 in k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18234,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18238,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_18238(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18236 in k18232 in k18091 in k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18096(t7,t6);}

/* k18197 in k18091 in k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18199,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18203,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_18203(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18201 in k18197 in k18091 in k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18096(t7,t6);}

/* k18162 in k18091 in k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18164,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18168,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_18168(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18166 in k18162 in k18091 in k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18096(t7,t6);}

/* k18094 in k18091 in k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_18096(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18096,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18099,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18099(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 81   error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[103],((C_word*)t0)[2]);}}

/* k18097 in k18094 in k18091 in k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18099,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18102,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 81   %alloc-pattern");
f_13378(t2);}

/* k18100 in k18097 in k18094 in k18091 in k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18102,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18108,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18135,a[2]=((C_word)li214),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 81   initialize-pattern");
f_13388(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[410],"next-in-markov"),t4);}

/* a18134 in k18100 in k18097 in k18094 in k18091 in k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18135(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_18135,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18143,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern-data");
f_13103(t4,t3);}

/* k18141 in a18134 in k18100 in k18097 in k18094 in k18091 in k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[373]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k18106 in k18100 in k18097 in k18094 in k18091 in k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18108,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18111,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18111(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18121,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_i_car(t4);
t6=(C_word)C_i_length(t5);
C_trace("ChickenBridge.scm: 81   make-list");
t7=C_retrieve(lf[81]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t3,t6,lf[409]);}}

/* k18119 in k18106 in k18100 in k18097 in k18094 in k18091 in k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18111(t3,t2);}

/* k18109 in k18106 in k18100 in k18097 in k18094 in k18091 in k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_18111(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18111,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18114,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern-cache-set!");
f_13310(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k18112 in k18109 in k18106 in k18100 in k18097 in k18094 in k18091 in k18088 in k18085 in make-markov in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_18114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17650(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17650,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17654,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern-data");
f_13103(t3,t2);}

/* k17652 in next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17654,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17657,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 81   pattern-period");
f_13157(t2,((C_word*)t0)[2]);}

/* k17655 in k17652 in next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17657,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17660,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 81   pattern-flags");
f_13085(t2,((C_word*)t0)[2]);}

/* k17658 in k17655 in k17652 in next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17660,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17666,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17829,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 81   logtest");
t5=*((C_word*)lf[9]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t1,C_fix(4));}

/* k17827 in k17658 in k17655 in k17652 in next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17829,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_17666(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17842,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 81   period-count");
f_12935(t2,((C_word*)t0)[2]);}}

/* k17840 in k17827 in k17658 in k17655 in k17652 in next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17842,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17846,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 81   period-length");
f_12953(t2,((C_word*)t0)[2]);}

/* k17844 in k17840 in k17827 in k17658 in k17655 in k17652 in next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[4],t1))){
C_trace("ChickenBridge.scm: 81   recalc-weightings");
f_17550(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t2=((C_word*)t0)[3];
f_17666(2,t2,C_SCHEME_UNDEFINED);}}

/* k17664 in k17658 in k17655 in k17652 in next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17666,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17672,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
t3=t2;
f_17672(t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17803,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17822,a[2]=((C_word*)t0)[4],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   random-item-count");
f_16700(t4,((C_word*)t0)[4]);}}

/* k17820 in k17664 in k17658 in k17655 in k17652 in next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17822,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
C_trace("ChickenBridge.scm: 81   random-item-count-set!");
f_16691(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k17801 in k17664 in k17658 in k17655 in k17652 in next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17803,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17810,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   random-item-count");
f_16700(t2,((C_word*)t0)[2]);}

/* k17808 in k17801 in k17664 in k17658 in k17655 in k17652 in next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17810,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17814,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   random-item-min");
f_16664(t2,((C_word*)t0)[2]);}

/* k17812 in k17808 in k17801 in k17664 in k17658 in k17655 in k17652 in next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_17672(t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k17670 in k17664 in k17658 in k17655 in k17652 in next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_17672(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17672,NULL,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 81   random-item-datum");
f_16610(((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17678,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 81   pattern-cache");
f_13319(t2,((C_word*)t0)[2]);}}

/* k17676 in k17670 in k17664 in k17658 in k17655 in k17652 in next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17678,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17682,a[2]=((C_word)li210),tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17720,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17762,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=t2,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 81   pick");
f_17682(t7,t2,t1);}

/* k17760 in k17676 in k17670 in k17664 in k17658 in k17655 in k17652 in next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17762,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17764,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word)li212),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_17764(t5,((C_word*)t0)[2],t1);}

/* do2544 in k17760 in k17676 in k17670 in k17664 in k17658 in k17655 in k17652 in next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_17764(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17764,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17783,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17786,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   random-item-max");
f_16682(t4,t2);}

/* k17784 in do2544 in k17760 in k17676 in k17670 in k17664 in k17658 in k17655 in k17652 in next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17786,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17793,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   random-item-count");
f_16700(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_17783(t2,C_SCHEME_FALSE);}}

/* k17791 in k17784 in do2544 in k17760 in k17676 in k17670 in k17664 in k17658 in k17655 in k17652 in next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17793,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17797,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   random-item-max");
f_16682(t2,((C_word*)t0)[2]);}

/* k17795 in k17791 in k17784 in do2544 in k17760 in k17676 in k17670 in k17664 in k17658 in k17655 in k17652 in next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_17783(t2,(C_word)C_i_nequalp(((C_word*)t0)[2],t1));}

/* k17781 in do2544 in k17760 in k17676 in k17670 in k17664 in k17658 in k17655 in k17652 in next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_17783(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17783,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17779,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pick");
f_17682(t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)t0)[2]);
t3=((C_word*)t0)[7];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k17777 in k17781 in do2544 in k17760 in k17676 in k17670 in k17664 in k17658 in k17655 in k17652 in next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_17764(t2,((C_word*)t0)[2],t1);}

/* k17718 in k17676 in k17670 in k17664 in k17658 in k17655 in k17652 in next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17720,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17723,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[3]))){
t3=t2;
f_17723(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17737,a[2]=t4,a[3]=((C_word)li211),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_17737(t6,t2,((C_word*)t0)[2]);}}

/* do2548 in k17718 in k17676 in k17670 in k17664 in k17658 in k17655 in k17652 in next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_17737(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17737,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17747,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 81   random-item-count-set!");
f_16691(t3,t4,C_fix(0));}}

/* k17745 in do2548 in k17718 in k17676 in k17670 in k17664 in k17658 in k17655 in k17652 in next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_17737(t3,((C_word*)t0)[2],t2);}

/* k17721 in k17718 in k17676 in k17670 in k17664 in k17658 in k17655 in k17652 in next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17723(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 81   random-item-datum");
f_16610(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* pick in k17676 in k17670 in k17664 in k17658 in k17655 in k17652 in next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_17682(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17682,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17690,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   ffi_ranfloat");
f_7384(t4,t3);}

/* k17688 in pick in k17676 in k17670 in k17664 in k17658 in k17655 in k17652 in next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17690,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17692,a[2]=t3,a[3]=((C_word)li209),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_17692(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do2539 in k17688 in pick in k17676 in k17670 in k17664 in k17658 in k17655 in k17652 in next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_17692(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17692,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17713,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 81   random-item-index");
f_16628(t4,t5);}

/* k17711 in do2539 in k17688 in pick in k17676 in k17670 in k17664 in k17658 in k17655 in k17652 in next-in-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[5],t1))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_17692(t3,((C_word*)t0)[4],t2,((C_word*)t0)[5]);}}

/* recalc-weightings in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_17550(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17550,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17648,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 81   pattern-data");
f_13103(t4,t2);}

/* k17646 in recalc-weightings in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17648,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=lf[407];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17557,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17607,a[2]=t7,a[3]=t4,a[4]=((C_word)li207),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_17607(t9,t5,t2);}

/* do2511 in k17646 in recalc-weightings in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_17607(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17607,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17636,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17640,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 81   random-item-weight");
f_16646(t4,t5);}}

/* k17638 in do2511 in k17646 in recalc-weightings in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 81   next-1");
f_13729(((C_word*)t0)[2],t1);}

/* k17634 in do2511 in k17646 in recalc-weightings in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17636,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17621,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 81   random-item-index-set!");
f_16619(t4,t5,((C_word*)((C_word*)t0)[5])[1]);}

/* k17619 in k17634 in do2511 in k17646 in recalc-weightings in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_17607(t3,((C_word*)t0)[2],t2);}

/* k17555 in k17646 in recalc-weightings in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17557,2,t0,t1);}
if(C_truep(((C_word*)t0)[6])){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17565,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word)li206),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_17565(t5,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 81   pattern-cache-set!");
f_13310(((C_word*)t0)[3],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);}}

/* do2517 in k17555 in k17646 in recalc-weightings in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_17565(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17565,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 81   pattern-cache-set!");
f_13310(t1,((C_word*)t0)[4],((C_word*)t6)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17598,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t6,a[6]=t5,a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
t8=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 81   random-item-index");
f_16628(t7,t8);}}

/* k17596 in do2517 in k17555 in k17646 in recalc-weightings in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17598,2,t0,t1);}
t2=(C_word)C_a_i_divide(&a,2,t1,((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17582,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 81   random-item-index-set!");
f_16619(t4,t5,((C_word*)((C_word*)t0)[6])[1]);}

/* k17580 in k17596 in do2517 in k17555 in k17646 in recalc-weightings in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_17565(t4,((C_word*)t0)[2],t3,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16783(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_16783r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_16783r(t0,t1,t2,t3);}}

static void C_ccall f_16783r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(7);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16787,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17100,a[2]=((C_word)li204),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t6=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,t2);}

/* %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17100(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17100,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17107,a[2]=t4,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t8=(C_word)C_i_car(t2);
t9=C_set_block_item(t4,0,t8);
t10=(C_word)C_i_cdr(t2);
t11=C_set_block_item(t6,0,t10);
t12=t7;
f_17107(t12,t11);}
else{
t8=C_set_block_item(t4,0,t2);
t9=t7;
f_17107(t9,t8);}}

/* k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_17107(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17107,NULL,2,t0,t1);}
t2=C_fix(1);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)((C_word*)t0)[4])[1];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17110,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t7,a[9]=t5,a[10]=t3,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_17110(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[404]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17413,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 81   error");
t22=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[116],lf[404]);}
else{
t22=t21;
f_17413(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[405]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17448,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 81   error");
t23=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[116],lf[405]);}
else{
t23=t22;
f_17448(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[406]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17483,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 81   error");
t24=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[116],lf[406]);}
else{
t24=t23;
f_17483(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17512,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 81   error");
t24=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[107],((C_word*)((C_word*)t0)[4])[1]);}
else{
t24=t23;
f_17512(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k17510 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17512,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17519,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17527,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17525 in k17510 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 81   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17519(2,t2,C_SCHEME_UNDEFINED);}}

/* k17517 in k17510 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17110(t5,t4);}

/* k17481 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17483,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17487,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_17487(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17485 in k17481 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17110(t7,t6);}

/* k17446 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17448,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17452,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_17452(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17450 in k17446 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17110(t7,t6);}

/* k17411 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17413,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17417,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_17417(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17415 in k17411 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17110(t7,t6);}

/* k17108 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_17110(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17110,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17113,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_17113(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[404]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17278,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 81   error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[404]);}
else{
t6=t5;
f_17278(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[405]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17313,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 81   error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[405]);}
else{
t7=t6;
f_17313(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[406]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17348,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 81   error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[406]);}
else{
t8=t7;
f_17348(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17377,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 81   error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[107],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_17377(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k17375 in k17108 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17377,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17384,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17392,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17390 in k17375 in k17108 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 81   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17384(2,t2,C_SCHEME_UNDEFINED);}}

/* k17382 in k17375 in k17108 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17113(t5,t4);}

/* k17346 in k17108 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17348,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17352,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_17352(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17350 in k17346 in k17108 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17113(t7,t6);}

/* k17311 in k17108 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17313,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17317,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_17317(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17315 in k17311 in k17108 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17113(t7,t6);}

/* k17276 in k17108 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17278,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17282,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_17282(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17280 in k17276 in k17108 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17113(t7,t6);}

/* k17111 in k17108 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_17113(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17113,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17116,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_17116(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[404]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17143,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 81   error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[404]);}
else{
t6=t5;
f_17143(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[405]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17178,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 81   error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[405]);}
else{
t7=t6;
f_17178(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[406]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17213,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 81   error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[406]);}
else{
t8=t7;
f_17213(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17242,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 81   error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[107],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_17242(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k17240 in k17111 in k17108 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17242,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17249,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17257,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17255 in k17240 in k17111 in k17108 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 81   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17249(2,t2,C_SCHEME_UNDEFINED);}}

/* k17247 in k17240 in k17111 in k17108 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17116(t5,t4);}

/* k17211 in k17111 in k17108 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17213,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17217,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_17217(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17215 in k17211 in k17111 in k17108 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17116(t7,t6);}

/* k17176 in k17111 in k17108 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17178,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17182,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_17182(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17180 in k17176 in k17111 in k17108 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17116(t7,t6);}

/* k17141 in k17111 in k17108 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17143,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17147,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_17147(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17145 in k17141 in k17111 in k17108 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17116(t7,t6);}

/* k17114 in k17111 in k17108 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_17116(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17116,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17119,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_17119(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 81   error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[103],((C_word*)((C_word*)t0)[2])[1]);}}

/* k17117 in k17114 in k17111 in k17108 in k17105 in %make-random-item in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17119,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=((C_word*)((C_word*)t0)[5])[1];
t4=((C_word*)((C_word*)t0)[4])[1];
t5=((C_word*)((C_word*)t0)[3])[1];
t6=((C_word*)((C_word*)t0)[2])[1];
t7=t2;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,9,lf[393],t3,C_SCHEME_FALSE,t4,t5,t6,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16787,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16790,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 81   %alloc-pattern");
f_13378(t2);}

/* k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16790,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)t0)[4]);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_TRUE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16796,a[2]=t10,a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t4,a[9]=t2,a[10]=t8,tmp=(C_word)a,a+=11,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17064,a[2]=t8,a[3]=t6,a[4]=((C_word)li203),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t13=*((C_word*)lf[373]+1);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t11,t12,((C_word*)t0)[4]);}

/* a17063 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17064(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17064,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17068,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 81   random-item-min");
f_16664(t3,t2);}

/* k17066 in a17063 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17068,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17071,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 81   random-item-max");
f_16682(t2,((C_word*)t0)[2]);}

/* k17069 in k17066 in a17063 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17071,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17074,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 81   random-item-weight");
f_16646(t2,((C_word*)t0)[2]);}

/* k17072 in k17069 in k17066 in a17063 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17074,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17077,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 81   random-item-datum");
f_16610(t2,((C_word*)t0)[2]);}

/* k17075 in k17072 in k17069 in k17066 in a17063 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17077,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17080,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17090,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern?");
f_13070(t3,t1);}

/* k17088 in k17075 in k17072 in k17069 in k17066 in a17063 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17090,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_17080(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_17080(t2,C_SCHEME_UNDEFINED);}}

/* k17078 in k17075 in k17072 in k17069 in k17066 in a17063 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_17080(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_numberp(((C_word*)t0)[4]))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k16794 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16796,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9]);
t3=(C_truep(t2)?C_fix(1):((C_word*)t0)[9]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_16803,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17059,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   logior");
t7=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)((C_word*)t0)[2])[1],C_fix(4));}
else{
t6=t5;
f_16803(t6,C_SCHEME_UNDEFINED);}}

/* k17057 in k16794 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16803(t3,t2);}

/* k16801 in k16794 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_16803(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[50],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16803,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[9];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_16806,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[9],a[6]=t11,a[7]=((C_word*)t0)[2],a[8]=((C_word*)t0)[3],a[9]=((C_word*)t0)[4],a[10]=t5,a[11]=t3,a[12]=((C_word*)t0)[5],a[13]=((C_word*)t0)[6],a[14]=((C_word*)t0)[7],a[15]=((C_word*)t0)[8],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_16806(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[375]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16970,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 81   error");
t18=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[116],lf[375]);}
else{
t18=t17;
f_16970(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[376]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17005,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 81   error");
t19=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[116],lf[376]);}
else{
t19=t18;
f_17005(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17034,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 81   error");
t19=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[107],((C_word*)t0)[9]);}
else{
t19=t18;
f_17034(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k17032 in k16801 in k16794 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17034,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17041,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17049,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17047 in k17032 in k16801 in k16794 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 81   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17041(2,t2,C_SCHEME_UNDEFINED);}}

/* k17039 in k17032 in k16801 in k16794 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16806(t5,t4);}

/* k17003 in k16801 in k16794 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17005,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17009,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_17009(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17007 in k17003 in k16801 in k16794 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_17009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16806(t7,t6);}

/* k16968 in k16801 in k16794 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16970,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16974,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_16974(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16972 in k16968 in k16801 in k16794 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16806(t7,t6);}

/* k16804 in k16801 in k16794 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_16806(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16806,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16809,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_16809(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[375]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16870,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 81   error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[375]);}
else{
t6=t5;
f_16870(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[376]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16905,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 81   error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[376]);}
else{
t7=t6;
f_16905(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16934,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 81   error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[107],((C_word*)t0)[5]);}
else{
t7=t6;
f_16934(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k16932 in k16804 in k16801 in k16794 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16934,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16941,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16949,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16947 in k16932 in k16804 in k16801 in k16794 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 81   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16941(2,t2,C_SCHEME_UNDEFINED);}}

/* k16939 in k16932 in k16804 in k16801 in k16794 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16809(t5,t4);}

/* k16903 in k16804 in k16801 in k16794 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16905,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16909,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_16909(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16907 in k16903 in k16804 in k16801 in k16794 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16809(t7,t6);}

/* k16868 in k16804 in k16801 in k16794 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16870,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16874,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_16874(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16872 in k16868 in k16804 in k16801 in k16794 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16809(t7,t6);}

/* k16807 in k16804 in k16801 in k16794 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_16809(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16809,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16812,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_16812(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 81   error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[103],((C_word*)t0)[2]);}}

/* k16810 in k16807 in k16804 in k16801 in k16794 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16812,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16815,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16827,a[2]=((C_word)li202),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 81   initialize-pattern");
f_13388(t2,((C_word*)t0)[9],t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_retrieve2(lf[403],"next-in-weighting"),t4);}

/* a16826 in k16810 in k16807 in k16804 in k16801 in k16794 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16827(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16827,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16833,a[2]=t2,a[3]=((C_word)li201),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16849,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern-data");
f_13103(t5,t3);}

/* k16847 in a16826 in k16810 in k16807 in k16804 in k16801 in k16794 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[373]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a16832 in a16826 in k16810 in k16807 in k16804 in k16801 in k16794 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16833(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16833,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16841,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   random-item-datum");
f_16610(t3,t2);}

/* k16839 in a16832 in a16826 in k16810 in k16807 in k16804 in k16801 in k16794 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 81   fn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k16813 in k16810 in k16807 in k16804 in k16801 in k16794 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16815,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16818,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 81   recalc-weightings");
f_17550(t2,((C_word*)t0)[3],C_SCHEME_TRUE);}
else{
t3=t2;
f_16818(2,t3,C_SCHEME_UNDEFINED);}}

/* k16816 in k16813 in k16810 in k16807 in k16804 in k16801 in k16794 in k16788 in k16785 in make-weighting in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* random-item-count in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_16700(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16700,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[393]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* random-item-count-set! in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_16691(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16691,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[393]);
C_trace("ChickenBridge.scm: 81   ##sys#block-set!");
t5=*((C_word*)lf[333]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* random-item-max in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_16682(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16682,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[393]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* random-item-min in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_16664(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16664,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[393]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* random-item-weight in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_16646(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16646,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[393]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* random-item-index in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_16628(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16628,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[393]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* random-item-index-set! in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_16619(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16619,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[393]);
C_trace("ChickenBridge.scm: 81   ##sys#block-set!");
t5=*((C_word*)lf[333]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* random-item-datum in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_16610(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16610,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[393]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16388(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16388,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16391,a[2]=((C_word)li191),tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16438,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 81   pattern-data");
f_13103(t4,t2);}

/* k16436 in next-in-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16438,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16441,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16464,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16583,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 81   pattern-cache");
f_13319(t6,((C_word*)t0)[2]);}
else{
t4=t2;
f_16441(t4,C_SCHEME_UNDEFINED);}}

/* k16581 in k16436 in next-in-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16583(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 81   next-1");
f_13729(((C_word*)t0)[2],t1);}

/* k16462 in k16436 in next-in-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16464,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16471,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t1))){
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_pairp(t3))){
t4=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_cdddr(t1);
if(C_truep((C_word)C_i_pairp(t5))){
C_apply(5,0,t2,((C_word*)t0)[4],((C_word*)t0)[3],t1);}
else{
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_cadr(t1);
t8=(C_word)C_i_caddr(t1);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16518,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=((C_word*)t0)[4],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 81   pattern-length");
f_13121(t9,((C_word*)t0)[2]);}}
else{
t5=(C_word)C_i_car(t1);
t6=(C_word)C_i_cadr(t1);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16545,a[2]=t6,a[3]=t5,a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 81   pattern-length");
f_13121(t7,((C_word*)t0)[2]);}}
else{
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16564,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 81   pattern-length");
f_13121(t5,((C_word*)t0)[2]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16579,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 81   pattern-length");
f_13121(t3,((C_word*)t0)[2]);}}

/* k16577 in k16462 in k16436 in next-in-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16579,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 81   rotate-items");
t3=((C_word*)t0)[5];
f_16391(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k16562 in k16462 in k16436 in next-in-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16564,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 81   rotate-items");
t3=((C_word*)t0)[5];
f_16391(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k16543 in k16462 in k16436 in next-in-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16545,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 81   rotate-items");
t3=((C_word*)t0)[6];
f_16391(7,t3,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),t2);}

/* k16516 in k16462 in k16436 in next-in-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16518,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[8]);
t3=(C_word)C_a_i_minus(&a,2,t1,t2);
C_trace("ChickenBridge.scm: 81   rotate-items");
t4=((C_word*)t0)[7];
f_16391(7,t4,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k16469 in k16462 in k16436 in next-in-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_16441(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k16439 in k16436 in next-in-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_16441(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[3]);
t5=(C_word)C_i_set_cdr(((C_word*)t0)[3],t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t3);}

/* rotate-items in next-in-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16391(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[10],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_16391,7,t0,t1,t2,t3,t4,t5,t6);}
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16397,a[2]=t8,a[3]=t4,a[4]=t5,a[5]=t2,a[6]=t6,a[7]=((C_word)li190),tmp=(C_word)a,a+=8,tmp));
t10=((C_word*)t8)[1];
f_16397(t10,t1,t3);}

/* do2280 in rotate-items in next-in-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_16397(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16397,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[6]))){
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[4]);
t5=(C_word)C_i_list_ref(((C_word*)t0)[5],t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16413,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 81   list-set!");
t7=C_retrieve(lf[14]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t6,((C_word*)t0)[5],t2,t5);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}}

/* k16411 in do2280 in rotate-items in next-in-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16413,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16416,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 81   list-set!");
t4=C_retrieve(lf[14]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,((C_word*)t0)[3],t3,((C_word*)t0)[2]);}

/* k16414 in k16411 in do2280 in rotate-items in next-in-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16416,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_16397(t3,((C_word*)t0)[2],t2);}

/* make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15914(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_15914r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15914r(t0,t1,t2,t3);}}

static void C_ccall f_15914r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15918,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16378,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   append");
t7=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_15918(t8,t7);}}

/* k16376 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15918(t3,t2);}

/* k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_15918(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15918,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_15921,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_15921(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[375]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16251,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 81   error");
t22=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[116],lf[375]);}
else{
t22=t21;
f_16251(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[376]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16286,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 81   error");
t23=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[116],lf[376]);}
else{
t23=t22;
f_16286(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[391]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16321,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 81   error");
t24=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[116],lf[391]);}
else{
t24=t23;
f_16321(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16350,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 81   error");
t24=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[107],((C_word*)t0)[4]);}
else{
t24=t23;
f_16350(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k16348 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16350,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16357,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16365,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16363 in k16348 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 81   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16357(2,t2,C_SCHEME_UNDEFINED);}}

/* k16355 in k16348 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15921(t5,t4);}

/* k16319 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16321,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16325,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_16325(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16323 in k16319 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15921(t7,t6);}

/* k16284 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16286,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16290,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_16290(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16288 in k16284 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15921(t7,t6);}

/* k16249 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16251,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16255,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_16255(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16253 in k16249 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15921(t7,t6);}

/* k15919 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_15921(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15921,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_15924,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_15924(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[375]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16116,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 81   error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[375]);}
else{
t6=t5;
f_16116(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[376]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16151,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 81   error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[376]);}
else{
t7=t6;
f_16151(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[391]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16186,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 81   error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[391]);}
else{
t8=t7;
f_16186(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16215,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 81   error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[107],((C_word*)t0)[6]);}
else{
t8=t7;
f_16215(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k16213 in k15919 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16215,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16222,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16230,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16228 in k16213 in k15919 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 81   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16222(2,t2,C_SCHEME_UNDEFINED);}}

/* k16220 in k16213 in k15919 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16222(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15924(t5,t4);}

/* k16184 in k15919 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16186,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16190,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_16190(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16188 in k16184 in k15919 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15924(t7,t6);}

/* k16149 in k15919 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16151,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16155,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_16155(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16153 in k16149 in k15919 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16155(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15924(t7,t6);}

/* k16114 in k15919 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16116,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16120,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_16120(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16118 in k16114 in k15919 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15924(t7,t6);}

/* k15922 in k15919 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_15924(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15924,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15927,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_15927(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[375]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15981,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 81   error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[375]);}
else{
t6=t5;
f_15981(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[376]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16016,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 81   error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[376]);}
else{
t7=t6;
f_16016(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[391]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16051,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 81   error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[391]);}
else{
t8=t7;
f_16051(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16080,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 81   error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[107],((C_word*)t0)[6]);}
else{
t8=t7;
f_16080(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k16078 in k15922 in k15919 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16080,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16087,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16095,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16093 in k16078 in k15922 in k15919 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 81   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16087(2,t2,C_SCHEME_UNDEFINED);}}

/* k16085 in k16078 in k15922 in k15919 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15927(t5,t4);}

/* k16049 in k15922 in k15919 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16051,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16055,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_16055(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16053 in k16049 in k15922 in k15919 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15927(t7,t6);}

/* k16014 in k15922 in k15919 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16016,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16020,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_16020(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16018 in k16014 in k15922 in k15919 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_16020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15927(t7,t6);}

/* k15979 in k15922 in k15919 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15981,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15985,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_15985(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15983 in k15979 in k15922 in k15919 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15927(t7,t6);}

/* k15925 in k15922 in k15919 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_15927(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15927,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15930,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15930(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 81   error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[103],((C_word*)t0)[2]);}}

/* k15928 in k15925 in k15922 in k15919 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15930,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15933,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 81   %alloc-pattern");
f_13378(t2);}

/* k15931 in k15928 in k15925 in k15922 in k15919 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15933,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15939,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15948,a[2]=((C_word)li188),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 81   initialize-pattern");
f_13388(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[390],"next-in-rotation"),t5);}

/* a15947 in k15931 in k15928 in k15925 in k15922 in k15919 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15948(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15948,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15960,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern-data");
f_13103(t4,t3);}

/* k15958 in a15947 in k15931 in k15928 in k15925 in k15922 in k15919 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[373]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15937 in k15931 in k15928 in k15925 in k15922 in k15919 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15939,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15942,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern-cache-set!");
f_13310(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k15940 in k15937 in k15931 in k15928 in k15925 in k15922 in k15919 in k15916 in make-rotation in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15838(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15838,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15842,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern-data");
f_13103(t3,t2);}

/* k15840 in next-in-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15842,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15845,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15861,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern-length");
f_13121(t4,((C_word*)t0)[2]);}
else{
t4=t2;
f_15845(2,t4,C_SCHEME_UNDEFINED);}}

/* k15859 in k15840 in next-in-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15861,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15871,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 81   ffi_ranint");
f_7377(t3,t1);}

/* k15869 in k15859 in k15840 in next-in-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15871,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15873,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word)li186),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_15873(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do2180 in k15869 in k15859 in k15840 in next-in-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_15873(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15873,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[5]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)t0)[3]));}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15890,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t5,a[6]=t1,a[7]=((C_word*)t0)[2],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 81   list-set!");
t10=C_retrieve(lf[14]);
((C_proc5)C_retrieve_proc(t10))(5,t10,t8,((C_word*)t0)[3],t2,t9);}}

/* k15888 in do2180 in k15869 in k15859 in k15840 in next-in-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15890,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15893,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 81   list-set!");
t3=C_retrieve(lf[14]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k15891 in k15888 in do2180 in k15869 in k15859 in k15840 in next-in-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15893,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15904,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 81   ffi_ranint");
f_7377(t3,((C_word*)t0)[2]);}

/* k15902 in k15891 in k15888 in do2180 in k15869 in k15859 in k15840 in next-in-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_15873(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k15843 in k15840 in next-in-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15575(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_15575r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15575r(t0,t1,t2,t3);}}

static void C_ccall f_15575r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15579,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15828,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   append");
t7=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_15579(t8,t7);}}

/* k15826 in make-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15579(t3,t2);}

/* k15577 in make-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_15579(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15579,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_15582,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_15582(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[375]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15736,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 81   error");
t18=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[116],lf[375]);}
else{
t18=t17;
f_15736(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[376]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15771,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 81   error");
t19=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[116],lf[376]);}
else{
t19=t18;
f_15771(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15800,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 81   error");
t19=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[107],((C_word*)t0)[4]);}
else{
t19=t18;
f_15800(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k15798 in k15577 in make-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15800,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15807,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15815,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15813 in k15798 in k15577 in make-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 81   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15807(2,t2,C_SCHEME_UNDEFINED);}}

/* k15805 in k15798 in k15577 in make-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15582(t5,t4);}

/* k15769 in k15577 in make-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15771,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15775,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_15775(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15773 in k15769 in k15577 in make-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15582(t7,t6);}

/* k15734 in k15577 in make-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15736,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15740,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_15740(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15738 in k15734 in k15577 in make-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15582(t7,t6);}

/* k15580 in k15577 in make-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_15582(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15582,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15585,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_15585(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[375]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15636,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 81   error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[375]);}
else{
t6=t5;
f_15636(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[376]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15671,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 81   error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[376]);}
else{
t7=t6;
f_15671(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15700,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 81   error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[107],((C_word*)t0)[5]);}
else{
t7=t6;
f_15700(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k15698 in k15580 in k15577 in make-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15700,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15707,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15715,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15713 in k15698 in k15580 in k15577 in make-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 81   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15707(2,t2,C_SCHEME_UNDEFINED);}}

/* k15705 in k15698 in k15580 in k15577 in make-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15585(t5,t4);}

/* k15669 in k15580 in k15577 in make-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15671,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15675,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_15675(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15673 in k15669 in k15580 in k15577 in make-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15585(t7,t6);}

/* k15634 in k15580 in k15577 in make-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15636,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15640,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_15640(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15638 in k15634 in k15580 in k15577 in make-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15585(t7,t6);}

/* k15583 in k15580 in k15577 in make-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_15585(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15585,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15588,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15588(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 81   error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[103],((C_word*)t0)[2]);}}

/* k15586 in k15583 in k15580 in k15577 in make-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15588,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15591,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 81   %alloc-pattern");
f_13378(t2);}

/* k15589 in k15586 in k15583 in k15580 in k15577 in make-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15591,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15597,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15603,a[2]=((C_word)li184),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 81   initialize-pattern");
f_13388(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[388],"next-in-heap"),t5);}

/* a15602 in k15589 in k15586 in k15583 in k15580 in k15577 in make-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15603(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15603,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15615,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern-data");
f_13103(t4,t3);}

/* k15613 in a15602 in k15589 in k15586 in k15583 in k15580 in k15577 in make-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[373]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15595 in k15589 in k15586 in k15583 in k15580 in k15577 in make-heap in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-line in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15539(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15539,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15543,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern-data");
f_13103(t3,t2);}

/* k15541 in next-in-line in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15543,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15552,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15559,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 81   pattern-period");
f_13157(t4,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(t1);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15565,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 81   pattern-data-set!");
f_13094(t4,((C_word*)t0)[2],t5);}}

/* k15563 in k15541 in next-in-line in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k15557 in k15541 in next-in-line in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 81   period-count-set!");
f_12926(((C_word*)t0)[2],t1,C_fix(1));}

/* k15550 in k15541 in next-in-line in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}

/* make-line in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15292(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_15292r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15292r(t0,t1,t2,t3);}}

static void C_ccall f_15292r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15296,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_15296(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_15296(t8,t7);}}

/* k15294 in make-line in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_15296(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15296,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_15299,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_15299(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[375]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15445,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 81   error");
t18=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[116],lf[375]);}
else{
t18=t17;
f_15445(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[376]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15480,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 81   error");
t19=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[116],lf[376]);}
else{
t19=t18;
f_15480(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15509,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 81   error");
t19=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[107],((C_word*)t0)[4]);}
else{
t19=t18;
f_15509(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k15507 in k15294 in make-line in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15509,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15516,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15524,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15522 in k15507 in k15294 in make-line in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 81   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15516(2,t2,C_SCHEME_UNDEFINED);}}

/* k15514 in k15507 in k15294 in make-line in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15299(t5,t4);}

/* k15478 in k15294 in make-line in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15480,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15484,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_15484(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15482 in k15478 in k15294 in make-line in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15299(t7,t6);}

/* k15443 in k15294 in make-line in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15445,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15449,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_15449(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15447 in k15443 in k15294 in make-line in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15299(t7,t6);}

/* k15297 in k15294 in make-line in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_15299(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15299,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15302,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_15302(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[375]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15345,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 81   error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[375]);}
else{
t6=t5;
f_15345(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[376]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15380,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 81   error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[376]);}
else{
t7=t6;
f_15380(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15409,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 81   error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[107],((C_word*)t0)[5]);}
else{
t7=t6;
f_15409(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k15407 in k15297 in k15294 in make-line in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15409,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15416,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15424,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15422 in k15407 in k15297 in k15294 in make-line in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 81   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15416(2,t2,C_SCHEME_UNDEFINED);}}

/* k15414 in k15407 in k15297 in k15294 in make-line in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15302(t5,t4);}

/* k15378 in k15297 in k15294 in make-line in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15380,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15384,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_15384(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15382 in k15378 in k15297 in k15294 in make-line in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15302(t7,t6);}

/* k15343 in k15297 in k15294 in make-line in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15345,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15349,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_15349(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15347 in k15343 in k15297 in k15294 in make-line in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15302(t7,t6);}

/* k15300 in k15297 in k15294 in make-line in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_15302(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15302,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15305,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15305(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 81   error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[103],((C_word*)t0)[2]);}}

/* k15303 in k15300 in k15297 in k15294 in make-line in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15305,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15308,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 81   %alloc-pattern");
f_13378(t2);}

/* k15306 in k15303 in k15300 in k15297 in k15294 in make-line in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15308,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15314,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15316,a[2]=((C_word)li181),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 81   initialize-pattern");
f_13388(t3,t1,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[386],"next-in-line"),t4);}

/* a15315 in k15306 in k15303 in k15300 in k15297 in k15294 in make-line in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15316(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15316,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15324,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern-data");
f_13103(t4,t3);}

/* k15322 in a15315 in k15306 in k15303 in k15300 in k15297 in k15294 in make-line in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[373]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k15312 in k15306 in k15303 in k15300 in k15297 in k15294 in make-line in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15077(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15077,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15081,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern-cache");
f_13319(t3,t2);}

/* k15079 in next-in-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15081,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[378]);
t4=(C_word)C_i_block_ref(t2,C_fix(1));
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15087,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t6,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],C_fix(0)))){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15111,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t9=t1;
t10=(C_word)C_i_check_structure(t9,lf[378]);
t11=(C_word)C_i_block_ref(t9,C_fix(5));
C_trace("ChickenBridge.scm: 81   next-1");
f_13729(t8,t11);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15290,a[2]=t7,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 81   palin-len");
f_14518(t8,t1);}}

/* k15288 in k15079 in next-in-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15290,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],t1))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15243,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 81   palin-inc-set!");
f_14527(t2,((C_word*)t0)[3],C_fix(-1));}
else{
t2=((C_word*)t0)[2];
f_15087(2,t2,C_SCHEME_UNDEFINED);}}

/* k15241 in k15288 in k15079 in next-in-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15243,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[378]);
t4=(C_word)C_i_block_ref(t2,C_fix(4));
t5=(C_word)C_eqp(t4,C_SCHEME_TRUE);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15255,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t5)){
t7=t6;
f_15255(t7,t5);}
else{
if(C_truep((C_word)C_i_pairp(t4))){
t7=(C_word)C_i_cdr(t4);
if(C_truep((C_word)C_i_pairp(t7))){
t8=(C_word)C_i_cadr(t4);
t9=t6;
f_15255(t9,(C_word)C_eqp(t8,C_SCHEME_TRUE));}
else{
t8=t6;
f_15255(t8,C_SCHEME_FALSE);}}
else{
t7=t6;
f_15255(t7,C_SCHEME_FALSE);}}}

/* k15253 in k15241 in k15288 in k15079 in next-in-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_15255(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15255,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(2));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_15087(2,t4,t3);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_15087(2,t4,t3);}}

/* k15109 in k15079 in next-in-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15111,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15114,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 81   palin-len");
f_14518(t2,((C_word*)t0)[2]);}

/* k15112 in k15109 in k15079 in next-in-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15114,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],C_fix(-2));
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15120,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t4=((C_word*)t0)[2];
t5=((C_word*)t0)[5];
t6=(C_word)C_i_check_structure(t4,lf[378]);
C_trace("ChickenBridge.scm: 81   ##sys#block-set!");
t7=*((C_word*)lf[333]+1);
((C_proc5)(void*)(*((C_word*)t7+1)))(5,t7,t3,t4,C_fix(4),t5);}

/* k15118 in k15112 in k15109 in k15079 in next-in-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15120,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15123,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 81   palin-inc-set!");
f_14527(t2,((C_word*)t0)[2],C_fix(1));}

/* k15121 in k15118 in k15112 in k15109 in k15079 in next-in-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15123,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15126,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[6],C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15211,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t3)){
t5=t4;
f_15211(t5,t3);}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t5=(C_word)C_i_car(((C_word*)t0)[6]);
t6=t4;
f_15211(t6,(C_word)C_eqp(t5,C_SCHEME_TRUE));}
else{
t5=t4;
f_15211(t5,C_SCHEME_FALSE);}}}

/* k15209 in k15121 in k15118 in k15112 in k15109 in k15079 in next-in-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_15211(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
if(C_truep(((C_word*)t0)[4])){
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_15126(t3,t2);}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(1));
t3=((C_word*)t0)[2];
f_15126(t3,t2);}}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_15126(t3,t2);}}

/* k15124 in k15121 in k15118 in k15112 in k15109 in k15079 in next-in-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_15126(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15126,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15132,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15205,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 81   pattern-flags");
f_13085(t3,((C_word*)t0)[2]);}

/* k15203 in k15124 in k15121 in k15118 in k15112 in k15109 in k15079 in next-in-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 81   logtest");
t2=*((C_word*)lf[9]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(2));}

/* k15130 in k15124 in k15121 in k15118 in k15112 in k15109 in k15079 in next-in-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15132,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15135,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 81   pattern-period");
f_13157(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_15087(2,t2,C_SCHEME_UNDEFINED);}}

/* k15133 in k15130 in k15124 in k15121 in k15118 in k15112 in k15109 in k15079 in next-in-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15135,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],C_fix(2));
switch(((C_word*)t0)[4]){
case C_SCHEME_FALSE:
C_trace("ChickenBridge.scm: 81   period-count-set!");
f_12926(((C_word*)t0)[3],t1,t2);
case C_SCHEME_TRUE:
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(2)):(C_word)C_a_i_minus(&a,2,t2,C_fix(3)));
C_trace("ChickenBridge.scm: 81   period-count-set!");
f_12926(((C_word*)t0)[3],t1,t3);
default:
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[383]))){
t3=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 81   period-count-set!");
f_12926(((C_word*)t0)[3],t1,t3);}
else{
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[384]))){
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(1)):(C_word)C_a_i_minus(&a,2,t2,C_fix(2)));
C_trace("ChickenBridge.scm: 81   period-count-set!");
f_12926(((C_word*)t0)[3],t1,t3);}
else{
C_trace("ChickenBridge.scm: 81   period-count-set!");
f_12926(((C_word*)t0)[3],t1,t2);}}}}

/* k15085 in k15079 in next-in-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15087,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15090,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)t0)[2];
t4=(C_word)C_i_check_structure(t3,lf[378]);
t5=(C_word)C_i_block_ref(t3,C_fix(3));
t6=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],t5);
t7=((C_word*)t0)[2];
t8=(C_word)C_i_check_structure(t7,lf[378]);
C_trace("ChickenBridge.scm: 81   ##sys#block-set!");
t9=*((C_word*)lf[333]+1);
((C_proc5)(void*)(*((C_word*)t9+1)))(5,t9,t2,t7,C_fix(1),t6);}

/* k15088 in k15085 in k15079 in next-in-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15090,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15097,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern-data");
f_13103(t2,((C_word*)t0)[2]);}

/* k15095 in k15088 in k15085 in k15079 in next-in-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)((C_word*)t0)[2])[1]));}

/* make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14607(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_14607r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_14607r(t0,t1,t2,t3);}}

static void C_ccall f_14607r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14611,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_14611(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_14611(t8,t7);}}

/* k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_14611(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14611,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_14614,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_14614(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[375]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14948,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 81   error");
t22=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[116],lf[375]);}
else{
t22=t21;
f_14948(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[376]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14983,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 81   error");
t23=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[116],lf[376]);}
else{
t23=t22;
f_14983(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[382]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15018,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 81   error");
t24=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[116],lf[382]);}
else{
t24=t23;
f_15018(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15047,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 81   error");
t24=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[107],((C_word*)t0)[4]);}
else{
t24=t23;
f_15047(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k15045 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15047,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15054,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15062,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15060 in k15045 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 81   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15054(2,t2,C_SCHEME_UNDEFINED);}}

/* k15052 in k15045 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14614(t5,t4);}

/* k15016 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15018,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15022,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_15022(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15020 in k15016 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_15022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14614(t7,t6);}

/* k14981 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14983,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14987,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_14987(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14985 in k14981 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14614(t7,t6);}

/* k14946 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14948,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14952,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_14952(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14950 in k14946 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14614(t7,t6);}

/* k14612 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_14614(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14614,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_14617,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_14617(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[375]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14813,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 81   error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[375]);}
else{
t6=t5;
f_14813(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[376]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14848,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 81   error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[376]);}
else{
t7=t6;
f_14848(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[382]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14883,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 81   error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[382]);}
else{
t8=t7;
f_14883(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14912,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 81   error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[107],((C_word*)t0)[6]);}
else{
t8=t7;
f_14912(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k14910 in k14612 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14912,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14919,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14927,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14925 in k14910 in k14612 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 81   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14919(2,t2,C_SCHEME_UNDEFINED);}}

/* k14917 in k14910 in k14612 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14617(t5,t4);}

/* k14881 in k14612 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14883,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14887,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_14887(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14885 in k14881 in k14612 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14617(t7,t6);}

/* k14846 in k14612 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14848,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14852,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_14852(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14850 in k14846 in k14612 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14617(t7,t6);}

/* k14811 in k14612 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14813,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14817,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_14817(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14815 in k14811 in k14612 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14617(t7,t6);}

/* k14615 in k14612 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_14617(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14617,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14620,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_14620(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[375]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14678,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 81   error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[375]);}
else{
t6=t5;
f_14678(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[376]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14713,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 81   error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[376]);}
else{
t7=t6;
f_14713(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[382]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14748,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 81   error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[116],lf[382]);}
else{
t8=t7;
f_14748(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14777,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 81   error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[107],((C_word*)t0)[6]);}
else{
t8=t7;
f_14777(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k14775 in k14615 in k14612 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14777,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14784,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14792,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14790 in k14775 in k14615 in k14612 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 81   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14784(2,t2,C_SCHEME_UNDEFINED);}}

/* k14782 in k14775 in k14615 in k14612 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14620(t5,t4);}

/* k14746 in k14615 in k14612 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14748,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14752,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_14752(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14750 in k14746 in k14615 in k14612 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14620(t7,t6);}

/* k14711 in k14615 in k14612 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14713,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14717,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_14717(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14715 in k14711 in k14615 in k14612 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14620(t7,t6);}

/* k14676 in k14615 in k14612 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14678,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14682,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_14682(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14680 in k14676 in k14615 in k14612 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14620(t7,t6);}

/* k14618 in k14615 in k14612 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_14620(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14620,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14623,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_14623(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 81   error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[103],((C_word*)t0)[2]);}}

/* k14621 in k14618 in k14615 in k14612 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14623,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14626,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 81   %alloc-pattern");
f_13378(t2);}

/* k14624 in k14621 in k14618 in k14615 in k14612 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14626,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14632,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,C_fix(2));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14649,a[2]=((C_word)li178),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 81   initialize-pattern");
f_13388(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t4,C_retrieve2(lf[381],"next-in-palindrome"),t5);}

/* a14648 in k14624 in k14621 in k14618 in k14615 in k14612 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14649(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14649,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14657,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern-data");
f_13103(t4,t3);}

/* k14655 in a14648 in k14624 in k14621 in k14618 in k14615 in k14612 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[373]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k14630 in k14624 in k14621 in k14618 in k14615 in k14612 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14632,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14635,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_record(&a,6,lf[378],C_fix(-2),t3,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);
C_trace("ChickenBridge.scm: 81   pattern-cache-set!");
f_13310(t2,((C_word*)t0)[4],t5);}

/* k14633 in k14630 in k14624 in k14621 in k14618 in k14615 in k14612 in k14609 in make-palindrome in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* palin-inc-set! in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_14527(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14527,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[378]);
C_trace("ChickenBridge.scm: 81   ##sys#block-set!");
t5=*((C_word*)lf[333]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* palin-len in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_14518(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14518,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[378]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* next-in-cycle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14446(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14446,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14450,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 81   pattern-data");
f_13103(t3,t2);}

/* k14448 in next-in-cycle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14450,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14453,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=t2;
f_14453(t5,(C_word)C_i_set_cdr(t1,t4));}
else{
t4=t2;
f_14453(t4,C_SCHEME_UNDEFINED);}}

/* k14451 in k14448 in next-in-cycle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_14453(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-cycle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14191(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_14191r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_14191r(t0,t1,t2,t3);}}

static void C_ccall f_14191r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14195,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_14195(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_14195(t8,t7);}}

/* k14193 in make-cycle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_14195(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14195,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14198,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_14198(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[375]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14352,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 81   error");
t18=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[116],lf[375]);}
else{
t18=t17;
f_14352(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[376]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14387,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 81   error");
t19=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[116],lf[376]);}
else{
t19=t18;
f_14387(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14416,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 81   error");
t19=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[107],((C_word*)t0)[4]);}
else{
t19=t18;
f_14416(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k14414 in k14193 in make-cycle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14416,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14423,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14431,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14429 in k14414 in k14193 in make-cycle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 81   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14423(2,t2,C_SCHEME_UNDEFINED);}}

/* k14421 in k14414 in k14193 in make-cycle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14198(t5,t4);}

/* k14385 in k14193 in make-cycle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14387,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14391,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_14391(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14389 in k14385 in k14193 in make-cycle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14198(t7,t6);}

/* k14350 in k14193 in make-cycle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14352,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14356,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_14356(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14354 in k14350 in k14193 in make-cycle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14198(t7,t6);}

/* k14196 in k14193 in make-cycle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_14198(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14198,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14201,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_14201(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[375]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14252,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 81   error");
t6=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[116],lf[375]);}
else{
t6=t5;
f_14252(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[376]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14287,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 81   error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[116],lf[376]);}
else{
t7=t6;
f_14287(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14316,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 81   error");
t7=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[107],((C_word*)t0)[5]);}
else{
t7=t6;
f_14316(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k14314 in k14196 in k14193 in make-cycle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14316,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14323,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14331,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   keyword?");
t6=C_retrieve(lf[110]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14329 in k14314 in k14196 in k14193 in make-cycle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 81   error");
t2=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[111],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14323(2,t2,C_SCHEME_UNDEFINED);}}

/* k14321 in k14314 in k14196 in k14193 in make-cycle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14201(t5,t4);}

/* k14285 in k14196 in k14193 in make-cycle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14287,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14291,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_14291(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14289 in k14285 in k14196 in k14193 in make-cycle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14201(t7,t6);}

/* k14250 in k14196 in k14193 in make-cycle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14252,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14256,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 81   error");
t4=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[118],((C_word*)t0)[2]);}
else{
t4=t2;
f_14256(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14254 in k14250 in k14196 in k14193 in make-cycle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14201(t7,t6);}

/* k14199 in k14196 in k14193 in make-cycle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_14201(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14201,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14204,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_14204(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 81   error");
t3=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[103],((C_word*)t0)[2]);}}

/* k14202 in k14199 in k14196 in k14193 in make-cycle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14204,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14207,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 81   %alloc-pattern");
f_13378(t2);}

/* k14205 in k14202 in k14199 in k14196 in k14193 in make-cycle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14207,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14213,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14219,a[2]=((C_word)li173),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 81   initialize-pattern");
f_13388(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[374],"next-in-cycle"),t5);}

/* a14218 in k14205 in k14202 in k14199 in k14196 in k14193 in make-cycle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14219(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14219,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14231,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern-data");
f_13103(t4,t3);}

/* k14229 in a14218 in k14205 in k14202 in k14199 in k14196 in k14193 in make-cycle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[373]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k14211 in k14205 in k14202 in k14199 in k14196 in k14193 in make-cycle in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* reset-period in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_14076(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14076,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14189,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern?");
f_13070(t3,t2);}

/* k14187 in reset-period in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14189,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14086,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern-period");
f_13157(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(1));}}

/* k14084 in k14187 in reset-period in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14086,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14089,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14174,a[2]=t6,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   period-stream");
f_12971(t7,t1);}

/* k14172 in k14084 in k14187 in reset-period in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14174,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14181,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14185,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 81   period-stream");
f_12971(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
f_14089(2,t2,C_SCHEME_UNDEFINED);}}

/* k14183 in k14172 in k14084 in k14187 in reset-period in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 81   next-1");
f_13729(((C_word*)t0)[2],t1);}

/* k14179 in k14172 in k14084 in k14187 in reset-period in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[331]);
C_trace("ChickenBridge.scm: 81   ##sys#block-set!");
t4=*((C_word*)lf[333]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(2),t1);}

/* k14087 in k14084 in k14187 in reset-period in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14089,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14171,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 81   period-length");
f_12953(t2,((C_word*)t0)[3]);}

/* k14169 in k14087 in k14084 in k14187 in reset-period in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14171,2,t0,t1);}
t2=(C_word)C_eqp(t1,C_SCHEME_TRUE);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14097,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=((C_word*)t0)[3];
t6=(C_word)C_i_check_structure(t5,lf[331]);
t7=t4;
f_14097(2,t7,(C_word)C_i_block_ref(t5,C_fix(4)));}
else{
C_trace("ChickenBridge.scm: 81   period-length");
f_12953(t4,((C_word*)t0)[3]);}}

/* k14095 in k14169 in k14087 in k14084 in k14187 in reset-period in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14097,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14100,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14106,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14161,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 81   pattern-flags");
f_13085(t5,((C_word*)t0)[3]);}
else{
t5=t4;
f_14106(2,t5,C_SCHEME_FALSE);}}

/* k14159 in k14095 in k14169 in k14087 in k14084 in k14187 in reset-period in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 81   logtest");
t2=*((C_word*)lf[9]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(8));}

/* k14104 in k14095 in k14169 in k14087 in k14084 in k14187 in reset-period in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14106,2,t0,t1);}
if(C_truep(t1)){
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14109,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14125,a[2]=t3,a[3]=((C_word)li171),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   map-pattern-data");
f_14030(t4,t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_14100(t2,C_SCHEME_UNDEFINED);}}

/* a14124 in k14104 in k14095 in k14169 in k14087 in k14084 in k14187 in reset-period in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14125(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14125,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14154,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 81   reset-period");
f_14076(t3,t2);}

/* k14152 in a14124 in k14104 in k14095 in k14169 in k14087 in k14084 in k14187 in reset-period in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14154,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14135,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern-period");
f_13157(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k14133 in k14152 in a14124 in k14104 in k14095 in k14169 in k14087 in k14084 in k14187 in reset-period in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14135,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14138,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14150,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   period-omit");
f_13007(t3,t1);}

/* k14148 in k14133 in k14152 in a14124 in k14104 in k14095 in k14169 in k14087 in k14084 in k14187 in reset-period in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14150,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 81   period-omit-set!");
f_12998(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k14136 in k14133 in k14152 in a14124 in k14104 in k14095 in k14169 in k14087 in k14084 in k14187 in reset-period in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14138,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k14107 in k14104 in k14095 in k14169 in k14087 in k14084 in k14187 in reset-period in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14109,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14119,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 81   max");
t4=*((C_word*)lf[371]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(0));}
else{
t2=((C_word*)t0)[2];
f_14100(t2,C_SCHEME_UNDEFINED);}}

/* k14117 in k14107 in k14104 in k14095 in k14169 in k14087 in k14084 in k14187 in reset-period in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14100(t3,t2);}

/* k14098 in k14095 in k14169 in k14087 in k14084 in k14187 in reset-period in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_14100(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14100,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14103,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   period-count-set!");
f_12926(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k14101 in k14098 in k14095 in k14169 in k14087 in k14084 in k14187 in reset-period in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* map-pattern-data in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_14030(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14030,NULL,3,t1,t2,t3);}
t4=t3;
t5=(C_word)C_i_check_structure(t4,lf[341]);
t6=(C_word)C_i_block_ref(t4,C_fix(13));
t7=t6;
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t2,t3);}

/* next-in-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_14021(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14021,NULL,2,t1,t2);}
t3=t2;
t4=(C_word)C_i_check_structure(t3,lf[341]);
t5=(C_word)C_i_block_ref(t3,C_fix(12));
t6=t5;
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}

/* next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13729(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13729,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13736,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern?");
f_13070(t3,t2);}

/* k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13736,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13739,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern-period");
f_13157(t2,((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_closurep(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 81   obj");
t2=((C_word*)t0)[2];
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}}

/* k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13739,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13742,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14010,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 81   period-count");
f_12935(t5,t1);}

/* k14008 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14010,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13965,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14002,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 81   period-reps");
f_13025(t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_13742(2,t2,C_SCHEME_UNDEFINED);}}

/* k14000 in k14008 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14002,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[341]);
t4=(C_word)C_i_block_ref(t2,C_fix(8));
if(C_truep((C_word)C_i_greater_or_equalp(t1,t4))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13994,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 81   pattern-value-set!");
f_13166(t5,((C_word*)t0)[4],lf[367]);}
else{
t5=((C_word*)t0)[2];
f_13965(t5,C_SCHEME_UNDEFINED);}}

/* k13992 in k14000 in k14008 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13994,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13997,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern-state-set!");
f_13184(t2,((C_word*)t0)[2],lf[366]);}

/* k13995 in k13992 in k14000 in k14008 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[367]);
t3=((C_word*)t0)[2];
f_13965(t3,t2);}

/* k13963 in k14008 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13965(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13965,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13971,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[4])[1];
if(C_truep(t3)){
t4=t2;
f_13971(t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13988,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 81   reset-period");
f_14076(t4,((C_word*)t0)[2]);}}

/* k13986 in k13963 in k14008 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_13971(t2,(C_word)C_i_nequalp(t1,C_fix(0)));}

/* k13969 in k13963 in k14008 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13971(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13971,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[356]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13975,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern-value-set!");
f_13166(t3,((C_word*)t0)[2],lf[356]);}
else{
t2=((C_word*)t0)[3];
f_13742(2,t2,C_SCHEME_UNDEFINED);}}

/* k13973 in k13969 in k13963 in k14008 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 81   pattern-state-set!");
f_13184(((C_word*)t0)[3],((C_word*)t0)[2],lf[366]);}

/* k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13742,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13748,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 81   pattern-flags");
f_13085(t2,((C_word*)t0)[3]);}}

/* k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13748,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[341]);
t4=(C_word)C_i_block_ref(t2,C_fix(9));
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13754,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t8,a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=((C_word*)t0)[3],tmp=(C_word)a,a+=9,tmp);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13840,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=t9,a[6]=t8,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 81   logtest");
t11=*((C_word*)lf[9]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,t1,C_fix(1));}

/* k13838 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13840,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13843,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13856,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   next-in-pattern");
f_14021(t3,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13863,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13952,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   logtest");
t4=*((C_word*)lf[9]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)t0)[2],C_fix(8));}}

/* k13950 in k13838 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13952,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13959,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 81   period-length");
f_12953(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_13863(t2,C_SCHEME_FALSE);}}

/* k13957 in k13950 in k13838 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_13863(t2,(C_word)C_eqp(t1,C_SCHEME_TRUE));}

/* k13861 in k13838 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13863(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13863,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13865,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li167),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_13865(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1828 in k13861 in k13838 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13865(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13865,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep(((C_word*)t4)[1])){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13872,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13914,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=t7,a[5]=((C_word)li166),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_13914(t9,t5);}}

/* do1832 in do1828 in k13861 in k13838 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13914(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13914,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13949,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 81   pattern-datum");
f_13139(t2,((C_word*)t0)[3]);}

/* k13947 in do1832 in do1828 in k13861 in k13838 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13949,2,t0,t1);}
if(C_truep((C_word)C_i_eqvp(t1,lf[356]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13924,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13931,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)t0)[2])){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13938,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 81   next-in-pattern");
f_14021(t4,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 81   next-in-pattern");
f_14021(t3,((C_word*)t0)[3]);}}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k13936 in k13947 in do1832 in do1828 in k13861 in k13838 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13938,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14074,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern?");
f_13070(t2,t1);}

/* k14072 in k13936 in k13947 in do1832 in do1828 in k13861 in k13838 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14074,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14049,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern-period");
f_13157(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_13931(2,t2,((C_word*)t0)[2]);}}

/* k14047 in k14072 in k13936 in k13947 in do1832 in do1828 in k13861 in k13838 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14049,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14070,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 81   period-omit");
f_13007(t2,t1);}

/* k14068 in k14047 in k14072 in k13936 in k13947 in do1832 in do1828 in k13861 in k13838 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14070,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14058,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14066,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   period-omit");
f_13007(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[4];
f_13931(2,t2,((C_word*)t0)[2]);}}

/* k14064 in k14068 in k14047 in k14072 in k13936 in k13947 in do1832 in do1828 in k13861 in k13838 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14066,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 81   period-omit-set!");
f_12998(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k14056 in k14068 in k14047 in k14072 in k13936 in k13947 in do1832 in do1828 in k13861 in k13838 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_14058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_13931(2,t2,lf[356]);}

/* k13929 in k13947 in do1832 in do1828 in k13861 in k13838 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 81   pattern-datum-set!");
f_13130(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k13922 in k13947 in do1832 in do1828 in k13861 in k13838 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_13914(t2,((C_word*)t0)[2]);}

/* k13870 in do1828 in k13861 in k13838 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13872,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13876,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13912,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 81   pattern-datum");
f_13139(t3,((C_word*)t0)[3]);}

/* k13910 in k13870 in do1828 in k13861 in k13838 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 81   next-1");
f_13729(((C_word*)t0)[2],t1);}

/* k13874 in k13870 in do1828 in k13861 in k13838 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13876,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13879,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13895,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13908,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 81   pattern-datum");
f_13139(t5,((C_word*)t0)[3]);}

/* k13906 in k13874 in k13870 in do1828 in k13861 in k13838 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 81   pattern?");
f_13070(((C_word*)t0)[2],t1);}

/* k13893 in k13874 in k13870 in do1828 in k13861 in k13838 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13895,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13899,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13903,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 81   pattern-datum");
f_13139(t3,((C_word*)t0)[2]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[366]);
t3=((C_word*)t0)[3];
f_13879(t3,t2);}}

/* k13901 in k13893 in k13874 in k13870 in do1828 in k13861 in k13838 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 81   pattern-state");
f_13193(((C_word*)t0)[2],t1);}

/* k13897 in k13893 in k13874 in k13870 in do1828 in k13861 in k13838 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13879(t3,t2);}

/* k13877 in k13874 in k13870 in do1828 in k13861 in k13838 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13879(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13879,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13882,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[3])[1],lf[356]))){
C_trace("ChickenBridge.scm: 81   pattern-datum-set!");
f_13130(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=t2;
f_13882(2,t4,t3);}}

/* k13880 in k13877 in k13874 in k13870 in do1828 in k13861 in k13838 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_13865(t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k13854 in k13838 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 81   pattern-datum-set!");
f_13130(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k13841 in k13838 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13843,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13847,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13852,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 81   pattern-datum");
f_13139(t3,((C_word*)t0)[2]);}

/* k13850 in k13841 in k13838 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 81   next-1");
f_13729(((C_word*)t0)[2],t1);}

/* k13845 in k13841 in k13838 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[366]);
t4=((C_word*)t0)[2];
f_13754(2,t4,t3);}

/* k13752 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13754,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13757,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_eqvp(((C_word*)((C_word*)t0)[5])[1],lf[366]))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13799,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13811,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   period-count");
f_12935(t4,((C_word*)t0)[3]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13814,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13834,a[2]=((C_word*)t0)[6],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   logtest");
t5=*((C_word*)lf[9]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)t0)[2],C_fix(64));}}

/* k13832 in k13752 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 81   pattern-datum-set!");
f_13130(((C_word*)t0)[3],((C_word*)t0)[2],lf[356]);}
else{
t2=((C_word*)t0)[3];
f_13814(2,t2,C_SCHEME_UNDEFINED);}}

/* k13812 in k13752 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13814,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13820,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   logtest");
t3=*((C_word*)lf[9]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],C_fix(16));}

/* k13818 in k13812 in k13752 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13820,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13831,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   period-count");
f_12935(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_13757(2,t2,C_SCHEME_UNDEFINED);}}

/* k13829 in k13818 in k13812 in k13752 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13831,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 81   period-count-set!");
f_12926(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13809 in k13752 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13811,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 81   period-count-set!");
f_12926(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13797 in k13752 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13799,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13802,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern-datum-set!");
f_13130(t2,((C_word*)t0)[2],lf[356]);}

/* k13800 in k13797 in k13752 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
f_13757(2,t3,t2);}

/* k13755 in k13752 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13757,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13760,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13793,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 81   period-count");
f_12935(t3,((C_word*)t0)[2]);}

/* k13791 in k13755 in k13752 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13793,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[366]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13788,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   period-reps");
f_13025(t3,((C_word*)t0)[3]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[2];
f_13760(2,t3,t2);}}

/* k13786 in k13791 in k13755 in k13752 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13788,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
t3=((C_word*)t0)[3];
t4=(C_word)C_i_check_structure(t3,lf[331]);
C_trace("ChickenBridge.scm: 81   ##sys#block-set!");
t5=*((C_word*)lf[333]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,((C_word*)t0)[2],t3,C_fix(6),t2);}

/* k13758 in k13755 in k13752 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13760,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13763,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t0)[2])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13773,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   retfn");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=t2;
f_13763(t3,C_SCHEME_UNDEFINED);}}

/* k13771 in k13758 in k13755 in k13752 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13763(t3,t2);}

/* k13761 in k13758 in k13755 in k13752 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13763(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13763,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13766,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 81   pattern-state-set!");
f_13184(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k13764 in k13761 in k13758 in k13755 in k13752 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13766,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13769,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern-value-set!");
f_13166(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k13767 in k13764 in k13761 in k13758 in k13755 in k13752 in k13746 in k13740 in k13737 in k13734 in next-1 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* next in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13606(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr3rv,(void*)f_13606r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_13606r(t0,t1,t2,t3);}}

static void C_ccall f_13606r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(16);
t4=(C_word)C_vemptyp(t3);
t5=(C_truep(t4)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t3,C_fix(0)));
if(C_truep(t5)){
if(C_truep((C_word)C_i_numberp(t5))){
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13627,a[2]=t2,a[3]=t8,a[4]=t6,a[5]=t5,a[6]=((C_word)li163),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_13627(t10,t1,C_fix(0),t6);}
else{
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13665,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern?");
f_13070(t6,t2);}}
else{
C_trace("ChickenBridge.scm: 81   next-1");
f_13729(t1,t2);}}

/* k13663 in next in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13665,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13675,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 81   next-1");
f_13729(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k13673 in k13663 in next in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13675,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13677,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li164),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_13677(t5,((C_word*)t0)[2],t1,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* do1804 in k13673 in k13663 in next in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13677(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13677,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_eqvp(((C_word*)t5)[1],lf[367]);
t8=(C_truep(t7)?t7:((C_word*)t6)[1]);
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_a_i_list(&a,1,((C_word*)t5)[1]);
t10=(C_word)C_i_set_cdr(t3,t9);
t11=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13696,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13706,a[2]=((C_word*)t0)[2],a[3]=t5,a[4]=t11,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 81   eop?");
t13=C_retrieve(lf[365]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t12,((C_word*)t0)[2]);}}

/* k13704 in do1804 in k13673 in k13663 in next in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13706,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[4];
f_13696(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13711,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   next-1");
f_13729(t2,((C_word*)t0)[2]);}}

/* k13709 in k13704 in do1804 in k13673 in k13663 in next in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13696(t3,t2);}

/* k13694 in do1804 in k13673 in k13663 in next in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13696(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_13677(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do1797 in next in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13627(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13627,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t2,((C_word*)t0)[5]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13659,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 81   next-1");
f_13729(t4,((C_word*)t0)[2]);}}

/* k13657 in do1797 in next in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13659,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,C_fix(1),((C_word*)t0)[4]);
t5=(C_word)C_i_cdr(((C_word*)t0)[5]);
t6=((C_word*)((C_word*)t0)[3])[1];
f_13627(t6,((C_word*)t0)[2],t4,t5);}

/* eod? in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13587(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13587,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13594,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern?");
f_13070(t3,t2);}

/* k13592 in eod? in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13594,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13601,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 81   pattern-value");
t3=C_retrieve2(lf[350],"pattern-value");
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_eqvp(((C_word*)t0)[2],lf[367]));}}

/* k13599 in k13592 in eod? in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 81   eod?");
t2=C_retrieve(lf[213]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* eop? in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13568(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13568,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13575,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern?");
f_13070(t3,t2);}

/* k13573 in eop? in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13575,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13582,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 81   pattern-state");
f_13193(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_eqvp(((C_word*)t0)[2],lf[366]));}}

/* k13580 in k13573 in eop? in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 81   eop?");
t2=C_retrieve(lf[365]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13388(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10){
C_word tmp;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13388,NULL,10,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10);}
t11=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13392,a[2]=t7,a[3]=t10,a[4]=t9,a[5]=t5,a[6]=t11,a[7]=t1,a[8]=t8,a[9]=t4,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 81   pattern-data-set!");
f_13094(t12,t2,t3);}

/* k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13392,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_13395,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=((C_word*)t0)[10];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[341]);
C_trace("ChickenBridge.scm: 81   ##sys#block-set!");
t6=*((C_word*)lf[333]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(3),t4);}

/* k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13395,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13398,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[9];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[341]);
C_trace("ChickenBridge.scm: 81   ##sys#block-set!");
t6=*((C_word*)lf[333]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(13),t4);}

/* k13396 in k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13398,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13401,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[8];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[341]);
C_trace("ChickenBridge.scm: 81   ##sys#block-set!");
t6=*((C_word*)lf[333]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(12),t4);}

/* k13399 in k13396 in k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13401,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13404,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13558,a[2]=t3,a[3]=((C_word)li159),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   map-pattern-data");
f_14030(t4,t5,((C_word*)t0)[7]);}

/* a13557 in k13399 in k13396 in k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13558(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13558,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13565,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   pattern?");
f_13070(t3,t2);}

/* k13563 in a13557 in k13399 in k13396 in k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k13402 in k13399 in k13396 in k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13404,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13407,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13556,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   logior");
t4=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[4])[1],C_fix(1));}
else{
t3=t2;
f_13407(t3,C_SCHEME_UNDEFINED);}}

/* k13554 in k13402 in k13399 in k13396 in k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13407(t3,t2);}

/* k13405 in k13402 in k13399 in k13396 in k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13407(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13407,NULL,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[341]);
t4=(C_word)C_i_block_ref(t2,C_fix(10));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13413,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[357]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13539,a[2]=t5,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   logior");
t8=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,((C_word*)((C_word*)t0)[3])[1],C_fix(8));}
else{
t7=(C_word)C_eqp(t4,lf[362]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13549,a[2]=t5,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   logior");
t9=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,((C_word*)((C_word*)t0)[3])[1],C_fix(16));}
else{
C_trace("ChickenBridge.scm: 81   error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[363],t4);}}}

/* k13547 in k13405 in k13402 in k13399 in k13396 in k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13413(2,t3,t2);}

/* k13537 in k13405 in k13402 in k13399 in k13396 in k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13413(2,t3,t2);}

/* k13411 in k13405 in k13402 in k13399 in k13396 in k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13413,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[341]);
t4=(C_word)C_i_block_ref(t2,C_fix(11));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13419,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[358]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13519,a[2]=t5,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   logior");
t8=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,((C_word*)((C_word*)t0)[3])[1],C_fix(32));}
else{
t7=(C_word)C_eqp(t4,lf[360]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13529,a[2]=t5,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   logior");
t9=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,((C_word*)((C_word*)t0)[3])[1],C_fix(64));}
else{
C_trace("ChickenBridge.scm: 81   error");
t8=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[361],t4);}}}

/* k13527 in k13411 in k13405 in k13402 in k13399 in k13396 in k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13419(2,t3,t2);}

/* k13517 in k13411 in k13405 in k13402 in k13399 in k13396 in k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13419(2,t3,t2);}

/* k13417 in k13411 in k13405 in k13402 in k13399 in k13396 in k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13419,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13422,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13482,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   logtest");
t4=*((C_word*)lf[9]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[3])[1],C_fix(16));}

/* k13480 in k13417 in k13411 in k13405 in k13402 in k13399 in k13396 in k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13482,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13486,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13490,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   lognot");
t4=*((C_word*)lf[3]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_fix(8));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13496,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   logtest");
t3=*((C_word*)lf[9]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));}}

/* k13494 in k13480 in k13417 in k13411 in k13405 in k13402 in k13399 in k13396 in k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13496,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13500,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13504,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13508,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   lognot");
t5=*((C_word*)lf[3]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_fix(8));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13512,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   logior");
t3=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));}}

/* k13510 in k13494 in k13480 in k13417 in k13411 in k13405 in k13402 in k13399 in k13396 in k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13422(t3,t2);}

/* k13506 in k13494 in k13480 in k13417 in k13411 in k13405 in k13402 in k13399 in k13396 in k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 81   logand");
t2=*((C_word*)lf[1]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k13502 in k13494 in k13480 in k13417 in k13411 in k13405 in k13402 in k13399 in k13396 in k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 81   logior");
t2=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(16));}

/* k13498 in k13494 in k13480 in k13417 in k13411 in k13405 in k13402 in k13399 in k13396 in k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13422(t3,t2);}

/* k13488 in k13480 in k13417 in k13411 in k13405 in k13402 in k13399 in k13396 in k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 81   logand");
t2=*((C_word*)lf[1]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k13484 in k13480 in k13417 in k13411 in k13405 in k13402 in k13399 in k13396 in k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13422(t3,t2);}

/* k13420 in k13417 in k13411 in k13405 in k13402 in k13399 in k13396 in k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13422(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13422,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13425,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_numberp(((C_word*)t0)[2]);
t4=(C_truep(t3)?(C_word)C_i_greaterp(((C_word*)t0)[2],C_fix(0)):C_SCHEME_FALSE);
t5=(C_truep(t4)?((C_word*)t0)[2]:*((C_word*)lf[10]+1));
t6=((C_word*)t0)[4];
t7=(C_word)C_i_check_structure(t6,lf[341]);
C_trace("ChickenBridge.scm: 81   ##sys#block-set!");
t8=*((C_word*)lf[333]+1);
((C_proc5)(void*)(*((C_word*)t8+1)))(5,t8,t2,t6,C_fix(8),t5);}

/* k13423 in k13420 in k13417 in k13411 in k13405 in k13402 in k13399 in k13396 in k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13425,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=(C_truep(t2)?t2:((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13431,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t5=((C_word*)t0)[6];
if(C_truep(t5)){
t6=t4;
f_13431(t6,C_SCHEME_UNDEFINED);}
else{
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13466,a[2]=t4,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 81   logior");
t7=*((C_word*)lf[7]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)((C_word*)t0)[2])[1],C_fix(2));}}

/* k13464 in k13423 in k13420 in k13417 in k13411 in k13405 in k13402 in k13399 in k13396 in k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13431(t3,t2);}

/* k13429 in k13423 in k13420 in k13417 in k13411 in k13405 in k13402 in k13399 in k13396 in k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13431(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13431,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13434,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13444,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_numberp(((C_word*)t0)[3]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(((C_word*)t0)[3],C_SCHEME_TRUE));
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 81   make-period");
f_12914(t3,C_fix(0),((C_word*)t0)[3],C_SCHEME_FALSE,((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 81   make-period");
f_12914(t3,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}}

/* k13442 in k13429 in k13423 in k13420 in k13417 in k13411 in k13405 in k13402 in k13399 in k13396 in k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[341]);
C_trace("ChickenBridge.scm: 81   ##sys#block-set!");
t4=*((C_word*)lf[333]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(5),t1);}

/* k13432 in k13429 in k13423 in k13420 in k13417 in k13411 in k13405 in k13402 in k13399 in k13396 in k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13434,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13437,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)t0)[3];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_i_check_structure(t3,lf[341]);
C_trace("ChickenBridge.scm: 81   ##sys#block-set!");
t6=*((C_word*)lf[333]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(1),t4);}

/* k13435 in k13432 in k13429 in k13423 in k13420 in k13417 in k13411 in k13405 in k13402 in k13399 in k13396 in k13393 in k13390 in initialize-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 81   values");
C_values(2,0,((C_word*)t0)[2]);}

/* %alloc-pattern in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13378(C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13378,NULL,1,t1);}
t2=lf[356];
t3=lf[356];
t4=lf[356];
t5=*((C_word*)lf[10]+1);
t6=lf[357];
t7=lf[358];
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,15,lf[341],C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_FALSE,t2,C_SCHEME_FALSE,t3,t4,t5,C_SCHEME_FALSE,t6,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* pattern-cache in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13319(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13319,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[341]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(14)));}

/* pattern-cache-set! in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13310(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13310,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[341]);
C_trace("ChickenBridge.scm: 81   ##sys#block-set!");
t5=*((C_word*)lf[333]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(14),t3);}

/* pattern-state in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13193(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13193,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[341]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(7)));}

/* pattern-state-set! in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13184(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13184,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[341]);
C_trace("ChickenBridge.scm: 81   ##sys#block-set!");
t5=*((C_word*)lf[333]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(7),t3);}

/* f_13175 in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_13175(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13175,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[341]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* pattern-value-set! in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13166(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13166,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[341]);
C_trace("ChickenBridge.scm: 81   ##sys#block-set!");
t5=*((C_word*)lf[333]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* pattern-period in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13157(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13157,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[341]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* pattern-datum in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13139(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13139,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[341]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* pattern-datum-set! in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13130(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13130,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[341]);
C_trace("ChickenBridge.scm: 81   ##sys#block-set!");
t5=*((C_word*)lf[333]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* pattern-length in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13121(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13121,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[341]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* pattern-data in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13103(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13103,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[341]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* pattern-data-set! in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13094(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13094,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[341]);
C_trace("ChickenBridge.scm: 81   ##sys#block-set!");
t5=*((C_word*)lf[333]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* pattern-flags in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13085(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13085,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[341]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* pattern? in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13070(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13070,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[341]));}

/* period-reps in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13025(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13025,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[331]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* period-omit in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_13007(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13007,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[331]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* period-omit-set! in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_12998(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12998,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[331]);
C_trace("ChickenBridge.scm: 81   ##sys#block-set!");
t5=*((C_word*)lf[333]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(5),t3);}

/* period-stream in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_12971(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12971,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[331]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* period-length in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_12953(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12953,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[331]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* period-count in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_12935(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12935,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[331]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* period-count-set! in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_12926(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12926,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[331]);
C_trace("ChickenBridge.scm: 81   ##sys#block-set!");
t5=*((C_word*)lf[333]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(1),t3);}

/* make-period in k12768 in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_12914(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12914,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,7,lf[331],t2,t3,t4,t5,t6,t7));}

/* parse-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_12576(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12576,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12584,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12416,a[2]=t4,a[3]=t7,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t8)){
t10=t9;
f_12416(t10,t8);}
else{
t10=(C_word)C_i_car(((C_word*)t7)[1]);
t11=(C_word)C_i_symbolp(t10);
t12=t9;
f_12416(t12,(C_word)C_i_not(t11));}}

/* k12414 in parse-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_12416(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12416,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12423,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 80   make-loop-clause");
f_9360(t2,(C_word)C_a_i_list(&a,4,lf[136],lf[320],lf[141],((C_word*)((C_word*)t0)[3])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12424,a[2]=((C_word)li131),tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12449,a[2]=t6,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12451,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t9,a[5]=t6,a[6]=t4,a[7]=((C_word*)t0)[3],a[8]=((C_word)li134),tmp=(C_word)a,a+=9,tmp));
t11=((C_word*)t9)[1];
f_12451(t11,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}}

/* do1498 in k12414 in parse-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_12451(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12451,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12461,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t9,a[5]=t7,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t8,a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[6],a[12]=t6,tmp=(C_word)a,a+=13,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t12=(C_word)C_eqp(t11,lf[243]);
if(C_truep(t12)){
t13=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t14=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[7])+1,t14);
t16=t10;
f_12461(t16,t13);}
else{
t13=t10;
f_12461(t13,C_SCHEME_UNDEFINED);}}}

/* k12459 in do1498 in k12414 in parse-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_12461(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12461,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12465,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 80   loop-op?");
f_9582(t2,t3,((C_word*)t0)[3]);}

/* k12463 in k12459 in do1498 in k12414 in parse-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12465,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12468,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t4=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t4)){
t5=t3;
f_12468(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,3,lf[325],t5,lf[326]));}}

/* k12466 in k12463 in k12459 in do1498 in k12414 in parse-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12468,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12471,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12520,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[6],a[6]=((C_word)li132),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12529,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[5],a[4]=((C_word)li133),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 80   call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a12528 in k12466 in k12463 in k12459 in do1498 in k12414 in parse-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12529(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12529,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a12519 in k12466 in k12463 in k12459 in do1498 in k12414 in parse-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12520,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k12469 in k12466 in k12463 in k12459 in do1498 in k12414 in parse-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12471,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12474,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12490,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 80   op-type?");
f_12424(t3,((C_word*)((C_word*)t0)[6])[1],lf[311]);}

/* k12488 in k12469 in k12466 in k12463 in k12459 in do1498 in k12414 in parse-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12490,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=((C_word*)t0)[5];
f_12474(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12497,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 80   op-type?");
f_12424(t2,((C_word*)((C_word*)t0)[6])[1],lf[324]);}}

/* k12495 in k12488 in k12469 in k12466 in k12463 in k12459 in do1498 in k12414 in parse-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12497,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t2=((C_word*)t0)[5];
f_12474(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],(C_word)C_a_i_list(&a,5,lf[321],t2,lf[322],t3,lf[323]));}}
else{
t2=((C_word*)t0)[5];
f_12474(2,t2,C_SCHEME_UNDEFINED);}}

/* k12472 in k12469 in k12466 in k12463 in k12459 in do1498 in k12414 in parse-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12474,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12480,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 80   append");
t6=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)((C_word*)t0)[7])[1],t5);}

/* k12478 in k12472 in k12469 in k12466 in k12463 in k12459 in do1498 in k12414 in parse-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=((C_word*)((C_word*)t0)[7])[1];
f_12451(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k12447 in k12414 in parse-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_12584(t2,((C_word*)((C_word*)t0)[2])[1]);}

/* op-type? in k12414 in parse-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_12424(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12424,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(C_word)C_i_caddr(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_eqp(t5,t3));}}

/* k12421 in k12414 in parse-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12423,2,t0,t1);}
t2=((C_word*)t0)[2];
f_12584(t2,(C_word)C_a_i_list(&a,1,t1));}

/* k12582 in parse-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_12584(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 80   gather-clauses");
f_9511(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* parse-conditional in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12162(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[34],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_12162,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_cons(&a,2,lf[314],t4);
t7=((C_word*)t5)[1];
t8=(C_word)C_i_car(((C_word*)t5)[1]);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_END_OF_LIST;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_12184,a[2]=t8,a[3]=t7,a[4]=t3,a[5]=t6,a[6]=t16,a[7]=t14,a[8]=t1,a[9]=t10,a[10]=t12,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
t18=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t18))){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t17,t6,t7,(C_word)C_a_i_list(&a,3,lf[317],t8,lf[318]));}
else{
t19=t17;
f_12184(2,t19,C_SCHEME_UNDEFINED);}}

/* k12182 in parse-conditional in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12184,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[11])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[10])+1,t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_12199,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t8,((C_word*)t0)[5],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,1,lf[316]));}
else{
t9=t8;
f_12199(2,t9,C_SCHEME_UNDEFINED);}}

/* k12197 in k12182 in parse-conditional in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12199,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12202,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[104]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[209],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_12202(t6,t5);}
else{
t4=t2;
f_12202(t4,C_SCHEME_UNDEFINED);}}

/* k12200 in k12197 in k12182 in parse-conditional in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_12202(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12202,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12205,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12372,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word)li128),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12378,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word)li129),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 80   call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a12377 in k12200 in k12197 in k12182 in parse-conditional in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12378(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12378,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a12371 in k12200 in k12197 in k12182 in parse-conditional in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12372,2,t0,t1);}
C_trace("ChickenBridge.scm: 80   parse-then-else-dependents");
f_12031(t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k12203 in k12200 in k12197 in k12182 in parse-conditional in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12205,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12208,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=t2;
f_12208(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12354,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 80   gather-clauses");
f_9511(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[7])[1]);}}

/* k12352 in k12203 in k12200 in k12197 in k12182 in parse-conditional in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12208(t3,t2);}

/* k12206 in k12203 in k12200 in k12197 in k12182 in parse-conditional in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_12208(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12208,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12211,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 80   loop-operator-set!");
f_9258(t2,((C_word*)((C_word*)t0)[7])[1],lf[117]);}

/* k12209 in k12206 in k12203 in k12200 in k12197 in k12182 in parse-conditional in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12211,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12335,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12347,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 80   loop-looping");
t4=C_retrieve2(lf[130],"loop-looping");
f_9312(3,t4,t3,((C_word*)((C_word*)t0)[7])[1]);}

/* k12345 in k12209 in k12206 in k12203 in k12200 in k12197 in k12182 in parse-conditional in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12347,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[214],t1);
C_trace("ChickenBridge.scm: 80   append");
t3=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],t2,C_SCHEME_END_OF_LIST);}

/* k12333 in k12209 in k12206 in k12203 in k12200 in k12197 in k12182 in parse-conditional in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12335,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,lf[117],((C_word*)((C_word*)t0)[10])[1],t1,C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12218,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_12231,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t6=t5;
f_12231(t6,C_SCHEME_FALSE);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t7=t5;
f_12231(t7,(C_word)C_eqp(t6,lf[113]));}}

/* k12229 in k12333 in k12209 in k12206 in k12203 in k12200 in k12197 in k12182 in parse-conditional in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_12231(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12231,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12238,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t4,((C_word*)t0)[4],((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,lf[315]));}
else{
t5=t4;
f_12238(2,t5,C_SCHEME_UNDEFINED);}}
else{
t2=((C_word*)t0)[6];
f_12218(t2,C_SCHEME_UNDEFINED);}}

/* k12236 in k12229 in k12333 in k12209 in k12206 in k12203 in k12200 in k12197 in k12182 in parse-conditional in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12238,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12241,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12294,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word)li126),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12308,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word)li127),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 80   call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a12307 in k12236 in k12229 in k12333 in k12209 in k12206 in k12203 in k12200 in k12197 in k12182 in parse-conditional in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12308(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12308,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a12293 in k12236 in k12229 in k12333 in k12209 in k12206 in k12203 in k12200 in k12197 in k12182 in parse-conditional in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12294,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12302,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 80   append");
t4=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)t0)[2],t3);}

/* k12300 in a12293 in k12236 in k12229 in k12333 in k12209 in k12206 in k12203 in k12200 in k12197 in k12182 in parse-conditional in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 80   parse-then-else-dependents");
f_12031(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k12239 in k12236 in k12229 in k12333 in k12209 in k12206 in k12203 in k12200 in k12197 in k12182 in parse-conditional in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12241,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12244,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=t2;
f_12244(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12280,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 80   gather-clauses");
f_9511(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k12278 in k12239 in k12236 in k12229 in k12333 in k12209 in k12206 in k12203 in k12200 in k12197 in k12182 in parse-conditional in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12244(t3,t2);}

/* k12242 in k12239 in k12236 in k12229 in k12333 in k12209 in k12206 in k12203 in k12200 in k12197 in k12182 in parse-conditional in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_12244(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12244,NULL,2,t0,t1);}
t2=(C_word)C_i_cdddr(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12273,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 80   loop-looping");
t4=C_retrieve2(lf[130],"loop-looping");
f_9312(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k12271 in k12242 in k12239 in k12236 in k12229 in k12333 in k12209 in k12206 in k12203 in k12200 in k12197 in k12182 in parse-conditional in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12273,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[214],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[5],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12250,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 80   loop-looping-set!");
f_9318(t4,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_END_OF_LIST);}

/* k12248 in k12271 in k12242 in k12239 in k12236 in k12229 in k12333 in k12209 in k12206 in k12203 in k12200 in k12197 in k12182 in parse-conditional in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12250,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12253,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 80   loop-looping-set!");
f_9318(t2,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_END_OF_LIST);}

/* k12251 in k12248 in k12271 in k12242 in k12239 in k12236 in k12229 in k12333 in k12209 in k12206 in k12203 in k12200 in k12197 in k12182 in parse-conditional in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12253,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12257,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 80   gather-clauses");
f_9511(t2,lf[117],t3);}

/* k12255 in k12251 in k12248 in k12271 in k12242 in k12239 in k12236 in k12229 in k12333 in k12209 in k12206 in k12203 in k12200 in k12197 in k12182 in parse-conditional in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12218(t3,t2);}

/* k12216 in k12333 in k12209 in k12206 in k12203 in k12200 in k12197 in k12182 in parse-conditional in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_12218(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12218,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12221,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 80   loop-looping-set!");
f_9318(t2,((C_word*)((C_word*)t0)[4])[1],t3);}

/* k12219 in k12216 in k12333 in k12209 in k12206 in k12203 in k12200 in k12197 in k12182 in parse-conditional in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 80   values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-then-else-dependents in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_12031(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12031,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12035,a[2]=t5,a[3]=t11,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_12040,a[2]=t3,a[3]=t14,a[4]=t7,a[5]=t11,a[6]=t4,a[7]=t9,a[8]=t5,a[9]=((C_word)li124),tmp=(C_word)a,a+=10,tmp));
t16=((C_word*)t14)[1];
f_12040(t16,t12,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do1431 in parse-then-else-dependents in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_12040(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12040,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t9=(C_truep(t8)?t8:((C_word*)((C_word*)t0)[7])[1]);
if(C_truep(t9)){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t11=((C_word*)t0)[6];
t12=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11988,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t7,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[4],a[11]=((C_word*)t0)[5],a[12]=t5,tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 80   loop-op?");
f_9582(t12,t10,t11);}}

/* k11986 in do1431 in parse-then-else-dependents in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11988,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_11994,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_11994(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_caddr(t1);
t5=(C_word)C_eqp(t4,lf[311]);
if(C_truep(t5)){
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_member(t6,lf[312]);
t8=t2;
f_11994(t8,(C_word)C_i_not(t7));}
else{
t6=t2;
f_11994(t6,C_SCHEME_FALSE);}}}
else{
t3=t2;
f_11994(t3,C_SCHEME_FALSE);}}

/* k11992 in k11986 in do1431 in parse-then-else-dependents in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_11994(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11994,NULL,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)t0)[13]:C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12057,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t5=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t5)){
t6=t4;
f_12057(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t4,((C_word*)t0)[4],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,3,lf[309],t6,lf[310]));}}

/* k12055 in k11992 in k11986 in do1431 in parse-then-else-dependents in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12057,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_12060,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12130,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[6],a[7]=((C_word)li122),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12143,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[5],a[4]=((C_word)li123),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 80   call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a12142 in k12055 in k11992 in k11986 in do1431 in parse-then-else-dependents in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12143(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12143,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a12129 in k12055 in k11992 in k11986 in do1431 in parse-then-else-dependents in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12130,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12138,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 80   append");
t3=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k12136 in a12129 in k12055 in k11992 in k11986 in do1431 in parse-then-else-dependents in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k12058 in k12055 in k11992 in k11986 in do1431 in parse-then-else-dependents in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12060,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_12064,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 80   append");
t4=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[11])[1],t3);}

/* k12062 in k12058 in k12055 in k11992 in k11986 in do1431 in parse-then-else-dependents in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12064,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12069,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t6=t5;
f_12069(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t7=(C_word)C_eqp(t6,lf[243]);
if(C_truep(t7)){
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[9])+1,t8);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,1,lf[308]));}
else{
t10=t5;
f_12069(2,t10,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t9=(C_word)C_eqp(t8,lf[113]);
if(C_truep(t9)){
t10=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t11=t5;
f_12069(2,t11,t10);}
else{
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12107,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 80   loop-op?");
f_9582(t10,t11,((C_word*)t0)[3]);}}}}

/* k12105 in k12062 in k12058 in k12055 in k11992 in k11986 in do1431 in parse-then-else-dependents in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[2];
f_12069(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
f_12069(2,t2,C_SCHEME_UNDEFINED);}}

/* k12067 in k12062 in k12058 in k12055 in k11992 in k11986 in do1431 in parse-then-else-dependents in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_12040(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k12033 in parse-then-else-dependents in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_12035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 80   values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-return in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11930(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[23],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11930,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11937,a[2]=t4,a[3]=t6,a[4]=t1,a[5]=t10,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[305],t13,lf[306]));}
else{
t13=t11;
f_11937(2,t13,C_SCHEME_UNDEFINED);}}

/* k11935 in parse-return in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11937,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11968,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 80   loop-op?");
f_9582(t6,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k11966 in k11935 in parse-return in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11968,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11956,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11964,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 80   func");
t6=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k11962 in k11966 in k11935 in parse-return in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11964,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 80   make-loop-clause");
f_9360(((C_word*)t0)[2],(C_word)C_a_i_list(&a,4,lf[136],lf[291],lf[141],t2));}

/* k11954 in k11966 in k11935 in parse-return in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 80   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-thereis in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11839(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[26],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11839,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11846,a[2]=t4,a[3]=t6,a[4]=t10,a[5]=t1,a[6]=t12,a[7]=t8,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t14))){
t15=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t13,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[302],t15,lf[303]));}
else{
t15=t13;
f_11846(2,t15,C_SCHEME_UNDEFINED);}}

/* k11844 in parse-thereis in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11846,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11914,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 80   loop-op?");
f_9582(t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k11912 in k11844 in parse-thereis in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11914,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11857,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[2],lf[299]);
if(C_truep(t5)){
t6=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t7=t4;
f_11857(t7,t6);}
else{
t6=(C_word)C_eqp(((C_word*)t0)[2],lf[300]);
if(C_truep(t6)){
t7=(C_word)C_a_i_list(&a,2,lf[209],((C_word*)((C_word*)t0)[4])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t10=t4;
f_11857(t10,t9);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[2],lf[301]);
if(C_truep(t7)){
t8=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t9=t4;
f_11857(t9,t8);}
else{
t8=t4;
f_11857(t8,C_SCHEME_UNDEFINED);}}}}

/* k11855 in k11912 in k11844 in parse-thereis in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_11857(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11857,NULL,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11868,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11884,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_not(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 80   func");
t7=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}

/* k11882 in k11855 in k11912 in k11844 in parse-thereis in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11884,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[117],((C_word*)((C_word*)t0)[4])[1],t1);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 80   make-loop-clause");
f_9360(((C_word*)t0)[2],(C_word)C_a_i_list(&a,6,lf[136],lf[299],lf[141],t3,lf[144],t4));}

/* k11866 in k11855 in k11912 in k11844 in parse-thereis in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 80   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-while-until in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11773(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11773,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11784,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[296],t7,lf[297]));}
else{
t13=t12;
f_11784(2,t13,C_SCHEME_UNDEFINED);}}

/* k11782 in parse-while-until in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11784,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11787,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[294]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_11787(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[295]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[209],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_11787(t10,t9);}
else{
t5=t2;
f_11787(t5,C_SCHEME_UNDEFINED);}}}

/* k11785 in k11782 in parse-while-until in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_11787(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11787,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11794,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[117],((C_word*)((C_word*)t0)[3])[1],lf[293]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 80   make-loop-clause");
f_9360(t2,(C_word)C_a_i_list(&a,4,lf[136],((C_word*)t0)[2],lf[141],t4));}

/* k11792 in k11785 in k11782 in parse-while-until in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 80   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* loop-return in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11767(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11767,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,2,lf[291],t2));}

/* parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11221(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word ab[55],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11221,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11230,a[2]=((C_word)li112),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11235,a[2]=((C_word)li113),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11240,a[2]=((C_word)li114),tmp=(C_word)a,a+=3,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_END_OF_LIST;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_END_OF_LIST;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_END_OF_LIST;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_SCHEME_END_OF_LIST;
t28=(*a=C_VECTOR_TYPE|1,a[1]=t27,tmp=(C_word)a,a+=2,tmp);
t29=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11252,a[2]=t3,a[3]=t11,a[4]=t6,a[5]=t4,a[6]=t12,a[7]=t10,a[8]=t20,a[9]=t24,a[10]=t26,a[11]=t22,a[12]=t28,a[13]=t7,a[14]=t18,a[15]=t1,a[16]=t16,a[17]=t14,a[18]=t5,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t29,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[288],t7,lf[289]));}
else{
t30=t29;
f_11252(2,t30,C_SCHEME_UNDEFINED);}}

/* k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11252,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[18])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[17])+1,t2);
t6=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11263,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[17],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[15],a[18]=((C_word*)t0)[16],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[18])[1]))){
t7=t6;
f_11263(2,t7,C_SCHEME_UNDEFINED);}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t8=(C_word)C_eqp(t7,lf[284]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11716,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t9,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[287]));}
else{
t11=t9;
f_11716(2,t11,C_SCHEME_UNDEFINED);}}
else{
t9=t6;
f_11263(2,t9,C_SCHEME_UNDEFINED);}}}

/* k11714 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11716,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11722,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 80   loop-variable?");
f_9588(t2,t3);}

/* k11720 in k11714 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11722,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=((C_word*)t0)[4];
f_11263(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[285],t2,lf[286]));}}

/* k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11263,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_11267,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[16],a[16]=((C_word*)t0)[17],a[17]=((C_word*)t0)[18],tmp=(C_word)a,a+=18,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
t4=((C_word*)t0)[2];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11148,a[2]=t3,a[3]=t7,a[4]=t5,a[5]=((C_word)li116),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_11148(t9,t2,C_SCHEME_FALSE);}

/* do1253 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_11148(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11148,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11162,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11173,a[2]=t6,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 80   loop-collectors");
t9=C_retrieve2(lf[127],"loop-collectors");
f_9276(3,t9,t7,t8);}}

/* k11171 in do1253 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11173,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11108,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t3,a[5]=((C_word)li115),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_11108(t7,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do1245 in k11171 in do1253 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_11108(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11108,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11121,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_eqp(((C_word*)t0)[2],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t11=C_set_block_item(t3,0,t10);
t12=t6;
f_11121(t12,t11);}
else{
t10=t6;
f_11121(t10,C_SCHEME_UNDEFINED);}}}

/* k11119 in do1245 in k11171 in do1253 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_11121(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=((C_word*)((C_word*)t0)[4])[1];
f_11108(t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k11160 in do1253 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_11148(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11267,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_11270,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[17],a[12]=((C_word*)t0)[14],a[13]=((C_word*)t0)[15],a[14]=((C_word*)t0)[16],tmp=(C_word)a,a+=15,tmp);
t4=((C_word*)((C_word*)t0)[17])[1];
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11700,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11704,a[2]=t5,a[3]=((C_word*)t0)[13],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 80   collector-type");
f_11235(t6,((C_word*)((C_word*)t0)[17])[1]);}
else{
t5=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t6=t3;
f_11270(2,t6,t5);}}

/* k11702 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
t2=lf[281];
t3=lf[282];
t4=lf[283];
t5=(C_word)C_eqp(((C_word*)t0)[3],t1);
if(C_truep(t5)){
t6=((C_word*)t0)[2];
f_11700(t6,t5);}
else{
t6=(C_word)C_i_member(((C_word*)t0)[3],t2);
t7=(C_truep(t6)?(C_word)C_i_member(t1,t2):C_SCHEME_FALSE);
if(C_truep(t7)){
t8=((C_word*)t0)[2];
f_11700(t8,t7);}
else{
t8=(C_word)C_i_member(((C_word*)t0)[3],t3);
t9=(C_truep(t8)?(C_word)C_i_member(t1,t3):C_SCHEME_FALSE);
if(C_truep(t9)){
t10=((C_word*)t0)[2];
f_11700(t10,t9);}
else{
t10=(C_word)C_i_member(((C_word*)t0)[3],t4);
t11=((C_word*)t0)[2];
f_11700(t11,(C_truep(t10)?(C_word)C_i_member(t1,t4):C_SCHEME_FALSE));}}}}

/* k11698 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_11700(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11700,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[7];
f_11270(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11696,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 80   collector-type");
f_11235(t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* k11694 in k11698 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11696,2,t0,t1);}
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,5,lf[278],t1,lf[279],((C_word*)t0)[2],lf[280]));}

/* k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[61],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11270,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11273,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[14],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[10],lf[261]);
t4=(C_truep(t3)?t3:(C_word)C_eqp(((C_word*)t0)[10],lf[262]));
if(C_truep(t4)){
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11316,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
t8=((C_word*)((C_word*)t0)[4])[1];
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11354,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[6],a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t8)){
t10=t9;
f_11354(2,t10,t8);}
else{
C_trace("ChickenBridge.scm: 80   gensym");
t10=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[263]);}}
else{
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11383,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 80   collector-acc");
f_11240(t8,((C_word*)((C_word*)t0)[11])[1]);}}
else{
t5=(C_word)C_eqp(((C_word*)t0)[10],lf[264]);
t6=(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)t0)[10],lf[265]));
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11395,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],a[8]=t2,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[5],a[11]=((C_word*)t0)[6],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 80   gensym");
t8=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[268]);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[10],lf[115]);
t8=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_11490,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[5],a[10]=((C_word*)t0)[10],a[11]=t2,a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[4],tmp=(C_word)a,a+=14,tmp);
if(C_truep(t7)){
t9=t8;
f_11490(t9,t7);}
else{
t9=(C_word)C_eqp(((C_word*)t0)[10],lf[272]);
t10=t8;
f_11490(t10,(C_truep(t9)?t9:(C_word)C_eqp(((C_word*)t0)[10],lf[277])));}}}}

/* k11488 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_11490(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11490,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11493,a[2]=t5,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=t3,a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
t7=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11606,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
if(C_truep(((C_word*)((C_word*)t0)[13])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11664,a[2]=t8,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 80   make-binding");
f_9594(t9,((C_word*)((C_word*)t0)[13])[1],lf[276]);}
else{
t9=t8;
f_11606(t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11599,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=t5,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 80   collector-acc");
f_11240(t8,((C_word*)((C_word*)t0)[5])[1]);}}
else{
t2=((C_word*)t0)[11];
f_11273(t2,C_SCHEME_UNDEFINED);}}

/* k11597 in k11488 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_cadddr(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_11493(t6,t5);}

/* k11662 in k11488 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11664,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_11606(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k11604 in k11488 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_11606(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11606,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11610,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 80   gensym");
t3=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[275]);}

/* k11608 in k11604 in k11488 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11610,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11614,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 80   gensym");
t4=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[274]);}

/* k11612 in k11608 in k11604 in k11488 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11614,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11656,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 80   make-binding");
f_9594(t3,((C_word*)((C_word*)t0)[11])[1],lf[273]);}

/* k11654 in k11612 in k11608 in k11604 in k11488 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11656,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11652,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 80   make-binding");
f_9594(t4,((C_word*)((C_word*)t0)[10])[1],C_SCHEME_FALSE);}

/* k11650 in k11654 in k11612 in k11608 in k11604 in k11488 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11652,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11630,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 80   make-collector");
f_11230(t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k11628 in k11650 in k11654 in k11612 in k11608 in k11604 in k11488 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11630,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_11493(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,2,lf[112],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_11493(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k11491 in k11488 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_11493(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[114],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11493,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11496,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[4],lf[115]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,lf[269]);
t5=(C_word)C_a_i_list(&a,3,lf[115],((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[270],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[271],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_11496(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[4],lf[272]);
if(C_truep(t4)){
t5=(C_word)C_a_i_list(&a,2,lf[269],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_list(&a,3,lf[270],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[112],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_11496(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t5=(C_word)C_a_i_list(&a,3,lf[270],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[6])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[6])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[271],((C_word*)((C_word*)t0)[2])[1]);
t9=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t2;
f_11496(t12,((C_word*)((C_word*)t0)[6])[1]);}}}

/* k11494 in k11491 in k11488 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_11496(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11496,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=(C_word)C_a_i_list(&a,2,lf[112],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_11273(t6,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
f_11273(t2,C_SCHEME_UNDEFINED);}}

/* k11393 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11395,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[12],lf[264]);
t3=(C_truep(t2)?lf[176]:lf[180]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11401,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t3,a[5]=t5,a[6]=((C_word*)t0)[10],a[7]=t1,a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t7=((C_word*)((C_word*)t0)[6])[1];
t8=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11445,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=t5,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t7)){
t9=t8;
f_11445(2,t9,t7);}
else{
C_trace("ChickenBridge.scm: 80   gensym");
t9=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[267]);}}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11478,a[2]=t6,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 80   collector-acc");
f_11240(t7,((C_word*)((C_word*)t0)[5])[1]);}}

/* k11476 in k11393 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_11401(t3,t2);}

/* k11443 in k11393 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11445,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11471,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 80   make-binding");
f_9594(t3,((C_word*)((C_word*)t0)[9])[1],C_SCHEME_FALSE);}

/* k11469 in k11443 in k11393 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11471,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11453,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 80   make-collector");
f_11230(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k11451 in k11469 in k11443 in k11393 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11453,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_11401(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[266],((C_word*)((C_word*)t0)[3])[1],C_fix(0));
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_11401(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k11399 in k11393 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_11401(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11401,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11441,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 80   make-binding");
f_9594(t2,((C_word*)t0)[7],C_SCHEME_FALSE);}

/* k11439 in k11399 in k11393 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11441,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[209],((C_word*)((C_word*)t0)[5])[1]);
t6=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],((C_word*)t0)[7],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,3,lf[266],t5,t6);
t8=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[117],t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[214],t4,t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[3])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[3])+1,t11);
t13=((C_word*)t0)[2];
f_11273(t13,((C_word*)((C_word*)t0)[3])[1]);}

/* k11381 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_11316(t3,t2);}

/* k11352 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11354,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11376,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 80   make-binding");
f_9594(t3,((C_word*)((C_word*)t0)[9])[1],C_fix(0));}

/* k11374 in k11352 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11376,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11362,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 80   make-collector");
f_11230(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k11360 in k11374 in k11352 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11362,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_11316(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[4];
f_11316(t6,((C_word*)((C_word*)t0)[2])[1]);}}

/* k11314 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_11316(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11316,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],lf[261]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,3,lf[177],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11273(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(C_word)C_a_i_list(&a,3,lf[177],((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t4=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[117],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=((C_word*)t0)[2];
f_11273(t8,((C_word*)((C_word*)t0)[3])[1]);}}

/* k11271 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_11273(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11273,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11280,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11284,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 80   reverse");
t4=*((C_word*)lf[159]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k11282 in k11271 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11284,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11288,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 80   reverse");
t3=*((C_word*)lf[159]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k11286 in k11282 in k11271 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11288,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11292,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 80   reverse");
t3=*((C_word*)lf[159]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k11290 in k11286 in k11282 in k11271 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11292,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11296,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 80   reverse");
t3=*((C_word*)lf[159]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k11294 in k11290 in k11286 in k11282 in k11271 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11296,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 80   make-loop-clause");
f_9360(((C_word*)t0)[6],(C_word)C_a_i_list(&a,14,lf[136],((C_word*)t0)[5],lf[137],((C_word*)t0)[4],lf[139],((C_word*)t0)[3],lf[141],((C_word*)t0)[2],lf[144],t1,lf[138],t2,lf[140],C_SCHEME_END_OF_LIST));}

/* k11278 in k11271 in k11268 in k11265 in k11261 in k11250 in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 80   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* collector-acc in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_11240(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11240,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_caddr(t2));}

/* collector-type in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_11235(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11235,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cadr(t2));}

/* make-collector in parse-accumulation in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_11230(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11230,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,4,t2,t3,t4,t5));}

/* parse-initially in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11062(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11062,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11073,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[258],t6,lf[259]));}
else{
t12=t11;
f_11073(2,t12,C_SCHEME_UNDEFINED);}}

/* k11071 in parse-initially in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11073,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11088,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 80   make-loop-clause");
f_9360(t6,(C_word)C_a_i_list(&a,4,lf[136],((C_word*)t0)[2],lf[139],t7));}

/* k11086 in k11071 in parse-initially in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 80   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-finally in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11024(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11024,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11035,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[255],t6,lf[256]));}
else{
t12=t11;
f_11035(2,t12,C_SCHEME_UNDEFINED);}}

/* k11033 in parse-finally in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11035,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11050,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 80   make-loop-clause");
f_9360(t6,(C_word)C_a_i_list(&a,4,lf[136],((C_word*)t0)[2],lf[143],t7));}

/* k11048 in k11033 in parse-finally in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 80   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-do in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10957(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10957,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10968,a[2]=t11,a[3]=t7,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10977,a[2]=t14,a[3]=t7,a[4]=t6,a[5]=t4,a[6]=t11,a[7]=t5,a[8]=((C_word)li108),tmp=(C_word)a,a+=9,tmp));
t16=((C_word*)t14)[1];
f_10977(t16,t12);}

/* do1202 in parse-do in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_10977(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10977,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10987,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t2)){
t4=t3;
f_10987(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 80   loop-op?");
f_9582(t3,t4,((C_word*)t0)[5]);}}

/* k10985 in do1202 in parse-do in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10987,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[252],((C_word*)t0)[4],lf[253]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11000,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 80   reverse");
t3=*((C_word*)lf[159]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[8])[1]);}}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)((C_word*)t0)[2])[1];
f_10977(t7,((C_word*)t0)[7]);}}

/* k10998 in k10985 in do1202 in parse-do in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_11000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k10966 in parse-do in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10968,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10975,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 80   make-loop-clause");
f_9360(t2,(C_word)C_a_i_list(&a,4,lf[136],((C_word*)t0)[3],lf[141],((C_word*)((C_word*)t0)[2])[1]));}

/* k10973 in k10966 in parse-do in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 80   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-with in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10764(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[37],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10764,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cdr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10771,a[2]=t12,a[3]=t10,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t16,a[8]=t18,a[9]=t8,a[10]=t1,tmp=(C_word)a,a+=11,tmp);
t20=C_SCHEME_UNDEFINED;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_set_block_item(t21,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10824,a[2]=t18,a[3]=t16,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t12,a[8]=t10,a[9]=t21,a[10]=t8,a[11]=((C_word)li106),tmp=(C_word)a,a+=12,tmp));
t23=((C_word*)t21)[1];
f_10824(t23,t19,C_SCHEME_TRUE,C_SCHEME_FALSE);}

/* do1158 in parse-with in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_10824(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10824,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t7=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_10834,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t4,a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=((C_word*)t0)[10],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t6)){
t8=t7;
f_10834(2,t8,t6);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 80   loop-op?");
f_9582(t7,t8,((C_word*)t0)[5]);}}

/* k10832 in do1158 in parse-with in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10834,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[12])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10845,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10948,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t6,a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 80   loop-variable?");
f_9588(t7,((C_word*)((C_word*)t0)[11])[1]);}}

/* k10946 in k10832 in do1158 in parse-with in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[64],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10948,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)((C_word*)t0)[12])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10854,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[241],((C_word*)((C_word*)t0)[10])[1],lf[242]));}
else{
t4=t3;
f_10854(2,t4,C_SCHEME_UNDEFINED);}}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[243]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10876,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[11],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[244]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10905,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 80   make-binding");
f_9594(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10913,a[2]=t4,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 80   make-binding");
f_9594(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[245]));}}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[229]);
if(C_truep(t4)){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[246]));}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t9=((C_word*)t0)[7];
f_10845(2,t9,t8);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[247],((C_word*)((C_word*)t0)[10])[1],lf[248]));}
else{
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[249],((C_word*)((C_word*)t0)[10])[1],lf[250]));}}}}}

/* k10911 in k10946 in k10832 in do1158 in parse-with in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10913,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_10876(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k10903 in k10946 in k10832 in do1158 in parse-with in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10905,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10876(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k10874 in k10946 in k10832 in do1158 in parse-with in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t6=((C_word*)t0)[2];
f_10845(2,t6,t5);}

/* k10852 in k10946 in k10832 in do1158 in parse-with in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10854,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10857,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t2,((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[239],((C_word*)((C_word*)t0)[8])[1],lf[240]));}
else{
t3=t2;
f_10857(2,t3,C_SCHEME_UNDEFINED);}}

/* k10855 in k10852 in k10946 in k10832 in do1158 in parse-with in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t6=((C_word*)t0)[2];
f_10845(2,t6,t5);}

/* k10843 in k10832 in do1158 in parse-with in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_10824(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k10769 in parse-with in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10771,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10774,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[238]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10814,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 80   make-binding");
f_9594(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10822,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 80   make-binding");
f_9594(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}}
else{
t3=t2;
f_10774(2,t3,C_SCHEME_UNDEFINED);}}}

/* k10820 in k10769 in parse-with in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10822,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_10774(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k10812 in k10769 in parse-with in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10814,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10774(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k10772 in k10769 in parse-with in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10774,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10781,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10785,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 80   reverse");
t4=*((C_word*)lf[159]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k10783 in k10772 in k10769 in parse-with in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10785,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10789,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 80   reverse");
t3=*((C_word*)lf[159]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k10787 in k10783 in k10772 in k10769 in parse-with in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10789,2,t0,t1);}
C_trace("ChickenBridge.scm: 80   make-loop-clause");
f_9360(((C_word*)t0)[3],(C_word)C_a_i_list(&a,6,lf[136],lf[237],lf[137],((C_word*)t0)[2],lf[139],t1));}

/* k10779 in k10772 in k10769 in parse-with in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 80   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-general-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10622(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word ab[32],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10622,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_cddr(t2);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10632,a[2]=t6,a[3]=t17,a[4]=t15,a[5]=t11,a[6]=t9,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t19=C_SCHEME_UNDEFINED;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_set_block_item(t20,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10670,a[2]=t17,a[3]=t11,a[4]=t5,a[5]=t4,a[6]=t13,a[7]=t15,a[8]=t6,a[9]=t20,a[10]=t9,a[11]=((C_word)li104),tmp=(C_word)a,a+=12,tmp));
t22=((C_word*)t20)[1];
f_10670(t22,t18,C_SCHEME_FALSE);}

/* do1120 in parse-general-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_10670(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10670,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10680,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_10680(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 80   loop-op?");
f_9582(t5,t6,((C_word*)t0)[5]);}}

/* k10678 in do1120 in parse-general-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10680,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10691,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[235]));}
else{
t7=t6;
f_10691(2,t7,C_SCHEME_UNDEFINED);}}}

/* k10689 in k10678 in do1120 in parse-general-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10691,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10694,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[229]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10703,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t5,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[230]));}
else{
t6=t5;
f_10703(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t2,lf[231]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10728,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[3],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[232]));}
else{
t7=t6;
f_10728(2,t7,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t3,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[233],((C_word*)((C_word*)t0)[12])[1],lf[234]));}}}

/* k10726 in k10689 in k10678 in do1120 in parse-general-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10728,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[7])+1,t5);
t7=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)t0)[6],t4);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t10=((C_word*)t0)[2];
f_10694(2,t10,t9);}

/* k10701 in k10689 in k10678 in do1120 in parse-general-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10703,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)t0)[6],t2);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t8=((C_word*)t0)[2];
f_10694(2,t8,t7);}

/* k10692 in k10689 in k10678 in do1120 in parse-general-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_10670(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k10630 in parse-general-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10632,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10639,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10668,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 80   make-binding");
f_9594(t3,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* k10666 in k10630 in parse-general-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10668,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[5])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]):C_SCHEME_END_OF_LIST);
t4=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
t5=(C_truep(((C_word*)((C_word*)t0)[3])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 80   make-loop-clause");
f_9360(((C_word*)t0)[2],(C_word)C_a_i_list(&a,10,lf[136],lf[169],lf[137],t2,lf[139],t3,lf[141],t4,lf[142],t5));}

/* k10637 in k10630 in parse-general-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 80   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-sequence-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10271(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10271,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10278,a[2]=t5,a[3]=t4,a[4]=t6,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 80   gensym");
t8=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[227]);}

/* k10276 in parse-sequence-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[44],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10278,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_10284,a[2]=t8,a[3]=t14,a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t20,a[7]=t18,a[8]=t12,a[9]=t10,a[10]=t16,a[11]=t4,a[12]=((C_word*)t0)[5],a[13]=t6,tmp=(C_word)a,a+=14,tmp);
t22=C_SCHEME_UNDEFINED;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_set_block_item(t23,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10512,a[2]=t14,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t20,a[7]=t23,a[8]=t4,a[9]=((C_word)li102),tmp=(C_word)a,a+=10,tmp));
t25=((C_word*)t23)[1];
f_10512(t25,t21,C_SCHEME_FALSE);}

/* do1053 in k10276 in parse-sequence-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_10512(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10512,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10522,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t3,a[9]=((C_word*)t0)[8],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_10522(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
C_trace("ChickenBridge.scm: 80   loop-op?");
f_9582(t5,t6,((C_word*)t0)[4]);}}

/* k10520 in do1053 in k10276 in parse-sequence-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10522,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[10];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t6=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10533,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t6,((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,1,lf[226]));}
else{
t7=t6;
f_10533(2,t7,C_SCHEME_UNDEFINED);}}}

/* k10531 in k10520 in do1053 in k10276 in parse-sequence-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10533,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10536,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[216]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10545,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_10545(t6,t4);}
else{
t6=(C_word)C_eqp(t2,lf[225]);
if(C_truep(t6)){
t7=t5;
f_10545(t7,t6);}
else{
t7=(C_word)C_eqp(t2,lf[208]);
t8=t5;
f_10545(t8,(C_truep(t7)?t7:(C_word)C_eqp(t2,lf[212])));}}}

/* k10543 in k10531 in k10520 in do1053 in k10276 in parse-sequence-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_10545(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10545,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10548,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[10])[1])){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,5,lf[218],((C_word*)((C_word*)t0)[9])[1],lf[219],((C_word*)((C_word*)t0)[10])[1],lf[220]));}
else{
t3=t2;
f_10548(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],lf[199]);
if(C_truep(t2)){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[221]));}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[208]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[222]));}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=((C_word*)t0)[6];
f_10536(2,t8,t7);}}}
else{
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[223],((C_word*)((C_word*)t0)[9])[1],lf[224]));}}}

/* k10546 in k10543 in k10531 in k10520 in do1053 in k10276 in parse-sequence-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_10536(2,t7,t6);}

/* k10534 in k10531 in k10520 in do1053 in k10276 in parse-sequence-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_10512(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k10282 in k10276 in parse-sequence-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10284,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_10510,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 80   make-binding");
f_9594(t2,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* k10508 in k10282 in k10276 in parse-sequence-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10510,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10506,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 80   make-binding");
f_9594(t4,((C_word*)t0)[5],((C_word*)((C_word*)t0)[2])[1]);}

/* k10504 in k10508 in k10282 in k10276 in parse-sequence-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[92],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10506,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[12])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10295,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[208]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10312,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[4],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 80   gensym");
t7=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[211]);}
else{
t6=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[212]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10388,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(C_word)C_a_i_list(&a,3,lf[215],((C_word*)t0)[4],((C_word*)((C_word*)t0)[2])[1]);
t9=t7;
f_10388(t9,(C_word)C_a_i_list(&a,3,lf[109],((C_word*)t0)[3],t8));}
else{
t8=(C_word)C_a_i_list(&a,2,lf[215],((C_word*)t0)[4]);
t9=t7;
f_10388(t9,(C_word)C_a_i_list(&a,3,lf[109],((C_word*)t0)[3],t8));}}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10417,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t4,a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10452,a[2]=t7,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)((C_word*)t0)[2])[1]))){
t9=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t10=t8;
f_10452(t10,(C_word)C_eqp(t9,lf[217]));}
else{
t9=t8;
f_10452(t9,C_SCHEME_FALSE);}}
else{
t8=(C_word)C_a_i_list(&a,2,lf[112],((C_word*)t0)[4]);
t9=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)t0)[4],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t7;
f_10417(t12,((C_word*)((C_word*)t0)[6])[1]);}}}}

/* k10450 in k10504 in k10508 in k10282 in k10276 in parse-sequence-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_10452(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10452,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_list(&a,2,t2,((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)t0)[4],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10417(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_10417(t6,((C_word*)((C_word*)t0)[3])[1]);}}

/* k10415 in k10504 in k10508 in k10282 in k10276 in parse-sequence-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_10417(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10417,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10433,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[216]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[61],((C_word*)t0)[6]);
t5=t2;
f_10433(t5,(C_word)C_a_i_list(&a,3,lf[109],((C_word*)t0)[2],t4));}
else{
t4=t2;
f_10433(t4,(C_word)C_a_i_list(&a,3,lf[109],((C_word*)t0)[2],((C_word*)t0)[6]));}}

/* k10431 in k10415 in k10504 in k10508 in k10282 in k10276 in parse-sequence-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_10433(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10433,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[102],((C_word*)t0)[4]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10295(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k10386 in k10504 in k10508 in k10282 in k10276 in parse-sequence-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_10388(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10388,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[213],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[214],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_10295(t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k10310 in k10504 in k10508 in k10282 in k10276 in parse-sequence-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10312,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10315,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 80   gensym");
t3=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[210]);}

/* k10313 in k10310 in k10504 in k10508 in k10282 in k10276 in parse-sequence-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10315,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10379,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t1,a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 80   make-binding");
f_9594(t2,((C_word*)t0)[7],C_fix(0));}

/* k10377 in k10313 in k10310 in k10504 in k10508 in k10282 in k10276 in parse-sequence-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10379,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10375,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 80   make-binding");
f_9594(t4,((C_word*)t0)[9],C_SCHEME_FALSE);}

/* k10373 in k10377 in k10313 in k10310 in k10504 in k10508 in k10282 in k10276 in parse-sequence-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10375,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[91],((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)t0)[9],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[8])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[8])+1,t6);
t8=(C_word)C_a_i_list(&a,3,lf[177],C_fix(1),((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)t0)[7],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=(C_word)C_a_i_list(&a,3,lf[90],((C_word*)t0)[10],((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)t0)[5],t12);
t14=(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[4])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(C_word)C_a_i_list(&a,3,lf[176],((C_word*)t0)[7],((C_word*)t0)[9]);
t17=(C_word)C_a_i_list(&a,2,lf[209],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,((C_word*)((C_word*)t0)[3])[1]);
t19=C_mutate(((C_word *)((C_word*)t0)[3])+1,t18);
t20=((C_word*)t0)[2];
f_10295(t20,((C_word*)((C_word*)t0)[3])[1]);}

/* k10293 in k10504 in k10508 in k10282 in k10276 in parse-sequence-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_10295(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10295,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10302,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10306,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 80   reverse");
t4=*((C_word*)lf[159]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k10304 in k10293 in k10504 in k10508 in k10282 in k10276 in parse-sequence-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10306,2,t0,t1);}
C_trace("ChickenBridge.scm: 80   make-loop-clause");
f_9360(((C_word*)t0)[6],(C_word)C_a_i_list(&a,12,lf[136],lf[169],lf[137],t1,lf[140],((C_word*)((C_word*)t0)[5])[1],lf[139],((C_word*)((C_word*)t0)[4])[1],lf[141],((C_word*)((C_word*)t0)[3])[1],lf[142],((C_word*)((C_word*)t0)[2])[1]));}

/* k10300 in k10293 in k10504 in k10508 in k10282 in k10276 in parse-sequence-iteration in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 80   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-repeat in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10224(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10224,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t1,t4,t2,(C_word)C_a_i_list(&a,1,lf[205]));}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10239,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=((C_word)li99),tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10257,a[2]=t2,a[3]=((C_word)li100),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 80   call-with-values");
C_call_with_values(4,0,t1,t6,t7);}}

/* a10256 in parse-repeat in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10257(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10257,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 80   values");
C_values(4,0,t1,t2,t4);}

/* a10238 in parse-repeat in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10239,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10251,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 80   gensym");
t3=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[206]);}

/* k10249 in a10238 in parse-repeat in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10251,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,4,lf[169],t1,lf[178],t2);
C_trace("ChickenBridge.scm: 80   parse-numerical-for");
t4=C_retrieve2(lf[168],"parse-numerical-for");
f_9842(5,t4,((C_word*)t0)[4],t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9842(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word ab[48],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_9842,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_i_cddr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_FALSE;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_9852,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t24,a[6]=t10,a[7]=t12,a[8]=t20,a[9]=t8,a[10]=t1,a[11]=t22,a[12]=t5,a[13]=t26,tmp=(C_word)a,a+=14,tmp);
t28=C_SCHEME_UNDEFINED;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_set_block_item(t29,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10051,a[2]=t22,a[3]=t18,a[4]=t20,a[5]=t2,a[6]=t4,a[7]=t14,a[8]=t16,a[9]=t29,a[10]=t8,a[11]=((C_word)li97),tmp=(C_word)a,a+=12,tmp));
t31=((C_word*)t29)[1];
f_10051(t31,t27,C_SCHEME_FALSE);}

/* do954 in parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_10051(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10051,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10061,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_10061(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 80   loop-op?");
f_9582(t5,t6,((C_word*)t0)[6]);}}

/* k10059 in do954 in parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10061,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10072,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[203]));}
else{
t7=t6;
f_10072(2,t7,C_SCHEME_UNDEFINED);}}}

/* k10070 in k10059 in do954 in parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[132],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10072,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10075,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[182]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(t2,lf[172]));
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10087,a[2]=t3,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[183],((C_word*)((C_word*)t0)[12])[1],lf[184],((C_word*)((C_word*)t0)[9])[1],lf[185]));}
else{
t7=t6;
f_10087(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t2,lf[178]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10108,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t7,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[186],((C_word*)((C_word*)t0)[12])[1],lf[187],((C_word*)((C_word*)t0)[3])[1],lf[188]));}
else{
t8=t7;
f_10108(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t2,lf[189]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10129,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t8,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[190],((C_word*)((C_word*)t0)[12])[1],lf[191],((C_word*)((C_word*)t0)[3])[1],lf[192]));}
else{
t9=t8;
f_10129(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t2,lf[174]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10150,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t9,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[193],((C_word*)((C_word*)t0)[12])[1],lf[194],((C_word*)((C_word*)t0)[3])[1],lf[195]));}
else{
t10=t9;
f_10150(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t2,lf[181]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10171,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t10,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[196],((C_word*)((C_word*)t0)[12])[1],lf[197],((C_word*)((C_word*)t0)[3])[1],lf[198]));}
else{
t11=t10;
f_10171(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(C_word)C_eqp(t2,lf[199]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10192,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t11,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[200]));}
else{
t12=t11;
f_10192(2,t12,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[201],((C_word*)((C_word*)t0)[12])[1],lf[202]));}}}}}}}

/* k10190 in k10070 in k10059 in do954 in parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t6=((C_word*)t0)[2];
f_10075(2,t6,t5);}

/* k10169 in k10070 in k10059 in do954 in parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_10075(2,t7,t6);}

/* k10148 in k10070 in k10059 in do954 in parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_10075(2,t7,t6);}

/* k10127 in k10070 in k10059 in do954 in parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_10075(2,t7,t6);}

/* k10106 in k10070 in k10059 in do954 in parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_10075(2,t7,t6);}

/* k10085 in k10070 in k10059 in do954 in parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_10075(2,t7,t6);}

/* k10073 in k10070 in k10059 in do954 in parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_10051(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k9850 in parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9852,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_9855,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_9855(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[182]);
t5=t2;
f_9855(t5,t4);}}

/* k9853 in k9850 in parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_9855(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9855,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_9858,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[172]);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10018,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[13],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t3)){
t5=t4;
f_10018(t5,t3);}
else{
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[181]);
t6=t4;
f_10018(t6,(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[174])));}}

/* k10016 in k9853 in k9850 in parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_10018(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[173]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[174]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[175]);
t5=((C_word*)t0)[2];
f_9858(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[176]);
t5=((C_word*)t0)[2];
f_9858(t5,t4);}}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[177]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[178]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[179]);
t5=((C_word*)t0)[2];
f_9858(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[180]);
t5=((C_word*)t0)[2];
f_9858(t5,t4);}}}

/* k9856 in k9853 in k9850 in parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_9858(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9858,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9861,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9989,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=(C_truep(t6)?t6:C_fix(0));
C_trace("ChickenBridge.scm: 80   make-binding");
f_9594(t5,((C_word*)t0)[10],t7);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10009,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 80   make-binding");
f_9594(t5,((C_word*)t0)[10],C_SCHEME_FALSE);}}

/* k10007 in k9856 in k9853 in k9850 in parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_10009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10009,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9861(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k9987 in k9856 in k9853 in k9850 in parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9989,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9861(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k9859 in k9856 in k9853 in k9850 in parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_9861(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9861,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9864,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t3)){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t2;
f_9864(t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9954,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 80   gensym");
t5=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[171]);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_fix(1));
t5=t2;
f_9864(t5,t4);}}

/* k9952 in k9859 in k9856 in k9853 in k9850 in parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9954,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9971,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 80   make-binding");
f_9594(t2,t1,C_SCHEME_FALSE);}

/* k9969 in k9952 in k9859 in k9856 in k9853 in k9850 in parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9971,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[5]);
t8=((C_word*)t0)[2];
f_9864(t8,t7);}

/* k9862 in k9859 in k9856 in k9853 in k9850 in parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_9864(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9864,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)t0)[9],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9871,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9903,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[2],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 80   gensym");
t7=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[170]);}
else{
t6=t5;
f_9871(t6,C_SCHEME_UNDEFINED);}}

/* k9901 in k9862 in k9859 in k9856 in k9853 in k9850 in parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9903,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9906,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9921,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 80   make-binding");
f_9594(t3,t1,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9937,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 80   make-binding");
f_9594(t3,t1,C_SCHEME_FALSE);}}

/* k9935 in k9901 in k9862 in k9859 in k9856 in k9853 in k9850 in parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9937,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9906(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k9919 in k9901 in k9862 in k9859 in k9856 in k9853 in k9850 in parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9921,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9906(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k9904 in k9901 in k9862 in k9859 in k9856 in k9853 in k9850 in parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_9906(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9906,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9871(t4,t3);}

/* k9869 in k9862 in k9859 in k9856 in k9853 in k9850 in parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_9871(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9871,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9878,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9882,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 80   reverse");
t4=*((C_word*)lf[159]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k9880 in k9869 in k9862 in k9859 in k9856 in k9853 in k9850 in parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9882,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9886,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 80   reverse");
t3=*((C_word*)lf[159]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k9884 in k9880 in k9869 in k9862 in k9859 in k9856 in k9853 in k9850 in parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9886,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_truep(t3)?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 80   make-loop-clause");
f_9360(((C_word*)t0)[3],(C_word)C_a_i_list(&a,10,lf[136],lf[169],lf[137],((C_word*)t0)[2],lf[139],t1,lf[142],t2,lf[140],t4));}

/* k9876 in k9869 in k9862 in k9859 in k9856 in k9853 in k9850 in parse-numerical-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 80   values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9760(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_9760,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9764,a[2]=t3,a[3]=t4,a[4]=t1,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 80   loop-op?");
f_9582(t5,t6,t4);}

/* k9762 in parse-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9764,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[161]));}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9782,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 80   loop-variable?");
f_9588(t4,t3);}}

/* k9780 in k9762 in parse-for in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9782,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,1,lf[162]));}
else{
t3=(C_word)C_i_caddr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdddr(((C_word*)t0)[3]);
t5=(C_word)C_i_assoc(t3,t4);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t5);
t7=t6;
((C_proc5)C_retrieve_proc(t7))(5,t7,((C_word*)t0)[5],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t6=(C_word)C_i_caddr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,4,lf[163],t6,lf[164],lf[165]));}}}
else{
t2=(C_word)C_i_cadr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 80   loop-error");
f_9600(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,3,lf[166],t2,lf[167]));}}

/* loop-error in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_9600(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9600,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9656,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9608,a[2]=t2,a[3]=t9,a[4]=t7,a[5]=((C_word)li94),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_9608(t11,t5,((C_word*)t7)[1],C_SCHEME_END_OF_LIST);}

/* do905 in loop-error in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_9608(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9608,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9618,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t4,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t5)){
t7=t6;
f_9618(2,t7,t5);}
else{
t7=(C_word)C_eqp(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t7)){
t8=t6;
f_9618(2,t8,C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 80   loop-op?");
f_9582(t6,t8,((C_word*)t0)[2]);}}}

/* k9616 in do905 in loop-error in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9618,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 80   reverse");
t2=*((C_word*)lf[159]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)((C_word*)t0)[3])[1];
f_9608(t7,((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}}

/* k9654 in loop-error in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9656,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9659,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 80   newline");
t3=*((C_word*)lf[151]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k9657 in k9654 in loop-error in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9659,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9662,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 80   display");
t3=*((C_word*)lf[152]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[158]);}

/* k9660 in k9657 in k9654 in loop-error in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9662,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9665,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9737,a[2]=t4,a[3]=((C_word)li93),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_9737(t6,t2,((C_word*)t0)[2]);}

/* do915 in k9660 in k9657 in k9654 in loop-error in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_9737(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9737,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9747,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 80   display");
t5=*((C_word*)lf[152]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k9745 in do915 in k9660 in k9657 in k9654 in loop-error in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_9737(t3,((C_word*)t0)[2],t2);}

/* k9663 in k9660 in k9657 in k9654 in loop-error in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9665,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9668,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 80   newline");
t3=*((C_word*)lf[151]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k9666 in k9663 in k9660 in k9657 in k9654 in loop-error in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9668,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9671,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 80   display");
t3=*((C_word*)lf[152]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[157]);}

/* k9669 in k9666 in k9663 in k9660 in k9657 in k9654 in loop-error in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9671,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9674,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 80   display");
t3=*((C_word*)lf[152]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[153]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9691,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word)li92),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_9691(t6,t2,((C_word*)t0)[2]);}}

/* do920 in k9669 in k9666 in k9663 in k9660 in k9657 in k9654 in loop-error in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_9691(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9691,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9701,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,((C_word*)t0)[2]);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 80   display");
t5=*((C_word*)lf[152]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,lf[156]);}
else{
t5=t3;
f_9701(2,t5,C_SCHEME_UNDEFINED);}}}

/* k9699 in do920 in k9669 in k9666 in k9663 in k9660 in k9657 in k9654 in loop-error in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9701,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9704,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 80   display");
t4=*((C_word*)lf[152]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k9702 in k9699 in do920 in k9669 in k9666 in k9663 in k9660 in k9657 in k9654 in loop-error in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9704,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9707,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?lf[154]:lf[155]);
C_trace("ChickenBridge.scm: 80   display");
t6=*((C_word*)lf[152]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t2,t5);}

/* k9705 in k9702 in k9699 in do920 in k9669 in k9666 in k9663 in k9660 in k9657 in k9654 in loop-error in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_9691(t3,((C_word*)t0)[2],t2);}

/* k9672 in k9669 in k9666 in k9663 in k9660 in k9657 in k9654 in loop-error in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9674,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9677,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 80   newline");
t3=*((C_word*)lf[151]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k9675 in k9672 in k9669 in k9666 in k9663 in k9660 in k9657 in k9654 in loop-error in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 80   error");
t2=*((C_word*)lf[82]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[150]);}

/* make-binding in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_9594(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9594,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* loop-variable? in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_9588(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9588,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_symbolp(t2));}

/* loop-op? in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_9582(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9582,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_assoc(t2,t3));}

/* gather-clauses in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_9511(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9511,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9513,a[2]=((C_word)li87),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9552,a[2]=t3,a[3]=t4,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 80   gather-clause");
f_9513(t5,t3,C_retrieve2(lf[126],"loop-bindings"));}

/* k9550 in gather-clauses in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9552,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9556,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 80   gather-clause");
f_9513(t2,((C_word*)t0)[2],C_retrieve2(lf[127],"loop-collectors"));}

/* k9554 in k9550 in gather-clauses in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9556,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9560,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 80   gather-clause");
f_9513(t2,((C_word*)t0)[2],C_retrieve2(lf[128],"loop-initially"));}

/* k9558 in k9554 in k9550 in gather-clauses in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9560,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9564,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 80   gather-clause");
f_9513(t2,((C_word*)t0)[2],C_retrieve2(lf[129],"loop-end-tests"));}

/* k9562 in k9558 in k9554 in k9550 in gather-clauses in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9564,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9568,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 80   gather-clause");
f_9513(t2,((C_word*)t0)[2],C_retrieve2(lf[130],"loop-looping"));}

/* k9566 in k9562 in k9558 in k9554 in k9550 in gather-clauses in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9568,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9572,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 80   gather-clause");
f_9513(t2,((C_word*)t0)[2],C_retrieve2(lf[132],"loop-stepping"));}

/* k9570 in k9566 in k9562 in k9558 in k9554 in k9550 in gather-clauses in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9572,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_9576,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 80   gather-clause");
f_9513(t2,((C_word*)t0)[2],C_retrieve2(lf[133],"loop-finally"));}

/* k9574 in k9570 in k9566 in k9562 in k9558 in k9554 in k9550 in gather-clauses in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9576,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9580,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 80   gather-clause");
f_9513(t2,((C_word*)t0)[2],C_retrieve2(lf[134],"loop-returning"));}

/* k9578 in k9574 in k9570 in k9566 in k9562 in k9558 in k9554 in k9550 in gather-clauses in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9580,2,t0,t1);}
C_trace("ChickenBridge.scm: 80   make-loop-clause");
f_9360(((C_word*)t0)[10],(C_word)C_a_i_list(&a,18,lf[136],((C_word*)t0)[9],lf[137],((C_word*)t0)[8],lf[138],((C_word*)t0)[7],lf[139],((C_word*)t0)[6],lf[140],((C_word*)t0)[5],lf[141],((C_word*)t0)[4],lf[142],((C_word*)t0)[3],lf[143],((C_word*)t0)[2],lf[144],t1));}

/* gather-clause in gather-clauses in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_9513(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9513,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9519,a[2]=t3,a[3]=t6,a[4]=t4,a[5]=((C_word)li86),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_9519(t8,t1,C_SCHEME_END_OF_LIST);}

/* do888 in gather-clause in gather-clauses in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_9519(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9519,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9530,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9541,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 80   accessor");
t7=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k9539 in do888 in gather-clause in gather-clauses in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 80   append");
t2=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k9528 in do888 in gather-clause in gather-clauses in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_9519(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* make-loop-clause in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_9360(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9360,NULL,2,t1,t2);}
t3=(C_word)C_a_i_vector(&a,9,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9375,a[2]=t5,a[3]=t3,a[4]=((C_word)li84),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_9375(t7,t1,t2);}}

/* do876 in make-loop-clause in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_9375(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9375,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[3]);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9388,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_eqp(t3,lf[136]);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 80   loop-operator-set!");
f_9258(t4,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_eqp(t3,lf[137]);
if(C_truep(t6)){
t7=(C_word)C_i_cadr(t2);
t8=t4;
f_9388(2,t8,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(1),t7));}
else{
t7=(C_word)C_eqp(t3,lf[138]);
if(C_truep(t7)){
t8=(C_word)C_i_cadr(t2);
t9=t4;
f_9388(2,t9,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(2),t8));}
else{
t8=(C_word)C_eqp(t3,lf[139]);
if(C_truep(t8)){
t9=(C_word)C_i_cadr(t2);
t10=t4;
f_9388(2,t10,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(3),t9));}
else{
t9=(C_word)C_eqp(t3,lf[140]);
if(C_truep(t9)){
t10=(C_word)C_i_cadr(t2);
t11=t4;
f_9388(2,t11,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(4),t10));}
else{
t10=(C_word)C_eqp(t3,lf[141]);
if(C_truep(t10)){
t11=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 80   loop-looping-set!");
f_9318(t4,((C_word*)t0)[3],t11);}
else{
t11=(C_word)C_eqp(t3,lf[142]);
if(C_truep(t11)){
t12=(C_word)C_i_cadr(t2);
t13=t4;
f_9388(2,t13,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(6),t12));}
else{
t12=(C_word)C_eqp(t3,lf[143]);
if(C_truep(t12)){
t13=(C_word)C_i_cadr(t2);
t14=t4;
f_9388(2,t14,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(7),t13));}
else{
t13=(C_word)C_eqp(t3,lf[144]);
if(C_truep(t13)){
t14=(C_word)C_i_cadr(t2);
t15=t4;
f_9388(2,t15,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(8),t14));}
else{
t14=t4;
f_9388(2,t14,C_SCHEME_UNDEFINED);}}}}}}}}}}}

/* k9386 in do876 in make-loop-clause in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_9375(t3,((C_word*)t0)[2],t2);}

/* loop-returning in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9348(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9348,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(8)));}

/* loop-finally in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9336(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9336,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(7)));}

/* loop-stepping in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9324(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9324,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(6)));}

/* loop-looping-set! in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_9318(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9318,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(5),t3));}

/* loop-looping in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9312(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9312,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(5)));}

/* loop-end-tests in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9300(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9300,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(4)));}

/* loop-initially in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9288(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9288,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(3)));}

/* loop-collectors in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9276(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9276,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(2)));}

/* loop-bindings in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9264(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9264,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(1)));}

/* loop-operator-set! in k9248 in k9245 in k9242 in k9239 in k9236 in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_9258(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9258,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(0),t3));}

/* expand-optkeys in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8949(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_8949,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9110,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9202,a[2]=((C_word)li72),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t5,t6,t3);}

/* a9201 in expand-optkeys in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9202(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9202,3,t0,t1,t2);}
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9216,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9220,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 79   symbol->string");
t6=*((C_word*)lf[121]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9231,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9235,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 79   symbol->string");
t5=*((C_word*)lf[121]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}

/* k9233 in a9201 in expand-optkeys in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 79   gensym");
t2=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k9229 in a9201 in expand-optkeys in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9231,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,t1,((C_word*)t0)[2],C_SCHEME_FALSE));}

/* k9218 in a9201 in expand-optkeys in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 79   gensym");
t2=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k9214 in a9201 in expand-optkeys in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9216,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* k9108 in expand-optkeys in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9110,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9113,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 79   gensym");
t3=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[124]);}

/* k9111 in k9108 in expand-optkeys in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9113,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9116,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 79   gensym");
t3=C_retrieve(lf[122]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[123]);}

/* k9114 in k9111 in k9108 in expand-optkeys in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9116,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9119,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9196,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word)li71),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a9195 in k9114 in k9111 in k9108 in expand-optkeys in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9196(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9196,3,t0,t1,t2);}
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t2);
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8962,a[2]=t1,a[3]=t3,a[4]=t7,a[5]=t5,a[6]=t4,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9021,a[2]=t8,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 79   symbol->string");
t10=*((C_word*)lf[121]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,t7);}

/* k9019 in a9195 in k9114 in k9111 in k9108 in expand-optkeys in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 79   string->keyword");
t2=C_retrieve(lf[120]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k8960 in a9195 in k9114 in k9111 in k9108 in expand-optkeys in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8962,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[82],lf[116],t1);
t4=(C_word)C_a_i_list(&a,3,lf[117],((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,2,lf[112],((C_word*)t0)[6]);
t6=(C_word)C_a_i_list(&a,2,lf[102],t5);
t7=(C_word)C_a_i_list(&a,3,lf[82],lf[118],((C_word*)t0)[5]);
t8=(C_word)C_a_i_list(&a,2,lf[63],((C_word*)t0)[6]);
t9=(C_word)C_a_i_list(&a,4,lf[117],t6,t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)t0)[4],t9);
t11=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)t0)[7],C_SCHEME_TRUE);
t12=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)t0)[3],C_SCHEME_TRUE);
t13=(C_word)C_a_i_list(&a,2,lf[119],((C_word*)t0)[6]);
t14=(C_word)C_a_i_list(&a,3,lf[109],((C_word*)t0)[6],t13);
t15=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)C_a_i_list(&a,6,t2,t4,t10,t11,t12,t14));}

/* k9117 in k9114 in k9111 in k9108 in expand-optkeys in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9119,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9126,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("map");
t3=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t2,*((C_word*)lf[112]+1),((C_word*)t0)[2]);}

/* k9124 in k9117 in k9114 in k9111 in k9108 in expand-optkeys in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9126,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9138,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9172,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9186,a[2]=((C_word)li70),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t5=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a9185 in k9124 in k9117 in k9114 in k9111 in k9108 in expand-optkeys in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9186(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9186,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t3,C_SCHEME_FALSE));}

/* k9170 in k9124 in k9117 in k9114 in k9111 in k9108 in expand-optkeys in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9172,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 79   append");
t5=*((C_word*)lf[115]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],t1,t4);}

/* k9136 in k9124 in k9117 in k9114 in k9111 in k9108 in expand-optkeys in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9138,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9142,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9146,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9164,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word)li69),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t5=*((C_word*)lf[114]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a9163 in k9136 in k9124 in k9117 in k9114 in k9111 in k9108 in expand-optkeys in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9164(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[119],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9164,3,t0,t1,t2);}
t3=((C_word*)t0)[5];
t4=((C_word*)t0)[4];
t5=((C_word*)t0)[3];
t6=((C_word*)t0)[2];
t7=(C_word)C_a_i_list(&a,2,lf[102],t4);
t8=(C_word)C_a_i_list(&a,2,lf[61],t4);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9099,a[2]=t7,a[3]=t1,a[4]=t8,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_cadr(t2);
t12=(C_word)C_a_i_list(&a,3,lf[82],lf[107],t5);
t13=(C_word)C_a_i_list(&a,3,lf[108],t3,t12);
t14=(C_word)C_a_i_list(&a,2,lf[61],t4);
t15=(C_word)C_a_i_list(&a,3,lf[109],t11,t14);
t16=(C_word)C_a_i_list(&a,2,lf[110],t11);
t17=(C_word)C_a_i_list(&a,3,lf[82],lf[111],t11);
t18=(C_word)C_a_i_list(&a,3,lf[108],t16,t17);
t19=(C_word)C_a_i_list(&a,3,lf[109],t10,C_SCHEME_TRUE);
t20=(C_word)C_a_i_list(&a,2,lf[112],t4);
t21=(C_word)C_a_i_list(&a,3,lf[109],t4,t20);
t22=(C_word)C_a_i_list(&a,6,lf[113],t13,t15,t18,t19,t21);
t23=(C_word)C_a_i_list(&a,1,t22);
C_trace("##sys#append");
t24=*((C_word*)lf[105]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t9,t6,t23);}

/* k9097 in a9163 in k9136 in k9124 in k9117 in k9114 in k9111 in k9108 in expand-optkeys in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9099,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[106],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[104],((C_word*)t0)[2],t3));}

/* k9144 in k9136 in k9124 in k9117 in k9114 in k9111 in k9108 in expand-optkeys in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9146,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[102],((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,3,lf[82],lf[103],((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[104],t2,t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)t0)[3]);
C_trace("##sys#append");
t6=*((C_word*)lf[105]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[2],t1,t5);}

/* k9140 in k9136 in k9124 in k9117 in k9114 in k9111 in k9108 in expand-optkeys in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_9142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9142,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[100],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[101],((C_word*)t0)[2],t3));}

/* position in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8905(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr4r,(void*)f_8905r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_8905r(t0,t1,t2,t3,t4);}}

static void C_ccall f_8905r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8913,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8939,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 79   key");
t7=C_retrieve(lf[95]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,C_SCHEME_FALSE);}

/* k8937 in position in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8939,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8943,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 79   start");
t3=C_retrieve(lf[96]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_fix(0));}

/* k8941 in k8937 in position in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8943,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8947,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 79   end");
t3=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k8945 in k8941 in k8937 in position in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 79   args");
t2=((C_word*)t0)[5];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k8911 in position in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8913,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8917,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_truep(C_retrieve(lf[95]))?(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8922,a[2]=((C_word*)t0)[3],a[3]=((C_word)li66),tmp=(C_word)a,a+=4,tmp):(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8931,a[2]=((C_word*)t0)[3],a[3]=((C_word)li67),tmp=(C_word)a,a+=4,tmp));
C_trace("ChickenBridge.scm: 79   %mapseq");
f_8787(t2,t3,((C_word*)t0)[2],C_SCHEME_FALSE,C_retrieve(lf[96]),C_retrieve(lf[97]));}

/* f_8931 in k8911 in position in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8931(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8931,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_equalp(t2,((C_word*)t0)[2]));}

/* f_8922 in k8911 in position in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8922(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8922,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8930,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 79   key");
t4=C_retrieve(lf[95]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k8928 */
static void C_ccall f_8930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_equalp(t1,((C_word*)t0)[2]));}

/* k8915 in k8911 in position in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 79   with-optkeys");
t2=C_retrieve(lf[94]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* find in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8861(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr4r,(void*)f_8861r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_8861r(t0,t1,t2,t3,t4);}}

static void C_ccall f_8861r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8869,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8895,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 79   key");
t7=C_retrieve(lf[95]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,C_SCHEME_FALSE);}

/* k8893 in find in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8895,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8899,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 79   start");
t3=C_retrieve(lf[96]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_fix(0));}

/* k8897 in k8893 in find in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8899,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8903,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 79   end");
t3=C_retrieve(lf[97]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k8901 in k8897 in k8893 in find in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 79   args");
t2=((C_word*)t0)[5];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k8867 in find in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8869,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8873,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_truep(C_retrieve(lf[95]))?(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8878,a[2]=((C_word*)t0)[3],a[3]=((C_word)li63),tmp=(C_word)a,a+=4,tmp):(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8887,a[2]=((C_word*)t0)[3],a[3]=((C_word)li64),tmp=(C_word)a,a+=4,tmp));
C_trace("ChickenBridge.scm: 79   %mapseq");
f_8787(t2,t3,((C_word*)t0)[2],C_SCHEME_TRUE,C_retrieve(lf[96]),C_retrieve(lf[97]));}

/* f_8887 in k8867 in find in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8887(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8887,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_equalp(t2,((C_word*)t0)[2]));}

/* f_8878 in k8867 in find in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8878(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8878,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8886,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 79   key");
t4=C_retrieve(lf[95]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k8884 */
static void C_ccall f_8886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_equalp(t1,((C_word*)t0)[2]));}

/* k8871 in k8867 in find in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 79   with-optkeys");
t2=C_retrieve(lf[94]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* %mapseq in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_8787(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8787,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_8791,a[2]=t8,a[3]=t5,a[4]=t1,a[5]=t3,a[6]=t10,a[7]=t2,a[8]=t4,a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_listp(t3))){
t12=C_set_block_item(t10,0,*((C_word*)lf[75]+1));
t13=C_set_block_item(t8,0,*((C_word*)lf[87]+1));
t14=t11;
f_8791(2,t14,t13);}
else{
if(C_truep((C_word)C_i_stringp(t3))){
t12=C_set_block_item(t10,0,*((C_word*)lf[88]+1));
t13=C_set_block_item(t8,0,*((C_word*)lf[89]+1));
t14=t11;
f_8791(2,t14,t13);}
else{
if(C_truep((C_word)C_i_vectorp(t3))){
t12=C_set_block_item(t10,0,*((C_word*)lf[90]+1));
t13=C_set_block_item(t8,0,*((C_word*)lf[91]+1));
t14=t11;
f_8791(2,t14,t13);}
else{
C_trace("ChickenBridge.scm: 79   error");
t12=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t12))(4,t12,t11,lf[92],t3);}}}}

/* k8789 in %mapseq in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8791,2,t0,t1);}
t2=((C_word*)t0)[9];
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8798,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t2)){
t4=t3;
f_8798(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 79   seqlen");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[5]);}}

/* k8796 in k8789 in %mapseq in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8798,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8800,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=t3,a[7]=((C_word)li61),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_8800(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do744 in k8796 in k8789 in %mapseq in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_8800(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8800,NULL,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t10=(C_word)C_i_greater_or_equalp(t2,t3);
t11=(C_truep(t10)?t10:((C_word*)t8)[1]);
if(C_truep(t11)){
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t9)[1]);}
else{
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8814,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t9,a[5]=t8,a[6]=t3,a[7]=t1,a[8]=((C_word*)t0)[6],a[9]=t2,a[10]=t7,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 79   getter");
t13=((C_word*)((C_word*)t0)[3])[1];
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,((C_word*)t0)[2],t2);}}

/* k8812 in do744 in k8796 in k8789 in %mapseq in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8814,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8817,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8827,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 79   func");
t5=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[10])[1]);}

/* k8825 in k8812 in do744 in k8796 in k8789 in %mapseq in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
t2=(C_truep(((C_word*)t0)[7])?((C_word*)((C_word*)t0)[6])[1]:((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t5=((C_word*)t0)[2];
f_8817(t5,t4);}
else{
t2=((C_word*)t0)[2];
f_8817(t2,C_SCHEME_UNDEFINED);}}

/* k8815 in k8812 in do744 in k8796 in k8789 in %mapseq in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_8817(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8817,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],C_fix(1));
t3=((C_word*)((C_word*)t0)[7])[1];
f_8800(t3,((C_word*)t0)[6],t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* list-prop in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8701(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr4r,(void*)f_8701r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_8701r(t0,t1,t2,t3,t4);}}

static void C_ccall f_8701r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
if(C_truep((C_word)C_i_nullp(t2))){
t5=(C_word)C_i_nullp(t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_truep(t5)?C_SCHEME_FALSE:(C_word)C_i_car(t4)));}
else{
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_eqvp(t5,t3))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_cadr(t2));}
else{
t6=(C_word)C_i_cddr(t2);
C_apply(6,0,t1,C_retrieve2(lf[85],"list-prop"),t6,t3,t4);}}}

/* list-index in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_8583(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8583,NULL,3,t1,t2,t3);}
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8589,a[2]=t2,a[3]=t5,a[4]=((C_word)li58),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_8589(t7,t1,t3,C_fix(0),C_SCHEME_FALSE);}

/* do698 in list-index in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_8589(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8589,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_truep(t6)?t6:(C_word)C_i_nullp(t2));
if(C_truep(t7)){
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,((C_word*)t5)[1]);}
else{
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8599,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8613,a[2]=t8,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 79   p");
t11=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t11))(3,t11,t9,t10);}}

/* k8611 in do698 in list-index in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_8599(t3,t2);}
else{
t2=((C_word*)t0)[2];
f_8599(t2,C_SCHEME_UNDEFINED);}}

/* k8597 in do698 in list-index in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_8599(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8599,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t4=((C_word*)((C_word*)t0)[4])[1];
f_8589(t4,((C_word*)t0)[3],t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* make-list in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8484(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_8484r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8484r(t0,t1,t2,t3);}}

static void C_ccall f_8484r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8488,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(0)))){
C_trace("ChickenBridge.scm: 79   error");
t5=*((C_word*)lf[82]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[83],t2);}
else{
t5=t4;
f_8488(2,t5,C_SCHEME_UNDEFINED);}}

/* k8486 in make-list in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8488,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8490,a[2]=t3,a[3]=((C_word)li55),tmp=(C_word)a,a+=4,tmp));
t7=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8513,a[2]=t5,a[3]=((C_word)li56),tmp=(C_word)a,a+=4,tmp));
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 79   l1");
t8=((C_word*)t3)[1];
f_8490(t8,((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_closurep(t8))){
C_trace("ChickenBridge.scm: 79   l2");
t9=((C_word*)t5)[1];
f_8513(t9,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t9=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 79   l1");
t10=((C_word*)t3)[1];
f_8490(t10,((C_word*)t0)[3],((C_word*)t0)[2],t9);}}}

/* l2 in k8486 in make-list in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_8513(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8513,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8530,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cdr(t3);
C_apply(4,0,t4,t5,t6);}}

/* k8528 in l2 in k8486 in make-list in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8530,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8534,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],C_fix(1));
C_trace("ChickenBridge.scm: 79   l2");
t4=((C_word*)((C_word*)t0)[3])[1];
f_8513(t4,t2,t3,((C_word*)t0)[2]);}

/* k8532 in k8528 in l2 in k8486 in make-list in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8534,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* l1 in k8486 in make-list in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_8490(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(8);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_8490,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8507,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 79   l1");
t7=t4;
t8=t5;
t9=t3;
t1=t7;
t2=t8;
t3=t9;
goto loop;}}

/* k8505 in l1 in k8486 in make-list in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8507,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* concat in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8322(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_8322r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8322r(t0,t1,t2);}}

static void C_ccall f_8322r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8331,a[2]=t5,a[3]=t7,a[4]=t3,a[5]=((C_word)li53),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_8331(t9,t1,t2);}

/* do659 in concat in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_8331(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8331,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_nullp(t3);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8347,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t4)){
t6=t5;
f_8347(2,t6,t4);}
else{
t6=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_car(t2);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8369,a[2]=t9,a[3]=((C_word*)t0)[2],a[4]=((C_word)li52),tmp=(C_word)a,a+=5,tmp));
t11=((C_word*)t9)[1];
f_8369(t11,t5,t7);}
else{
t7=(C_word)C_i_car(t2);
t8=(C_word)C_a_i_list(&a,1,t7);
t9=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[2])+1,t10);
t12=t5;
f_8347(2,t12,t11);}}}}

/* do664 in do659 in concat in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_8369(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_8369,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=(C_word)C_i_cdr(t2);
t10=t1;
t11=t8;
t1=t10;
t2=t11;
goto loop;}}

/* k8345 in do659 in concat in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_8331(t3,((C_word*)t0)[2],t2);}

/* tail in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8232(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8232,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 79   tail");
t5=C_retrieve(lf[79]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* butlast in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8184(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8184,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,1,t5));}
else{
t5=(C_word)C_i_car(t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8218,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 79   butlast");
t8=C_retrieve(lf[78]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}}

/* k8216 in butlast in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8218,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* last in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8161(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8161,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 79   last");
t5=C_retrieve(lf[77]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* rest in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8155(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8155,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* tenth in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8140(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8140,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cadr(t4));}

/* ninth in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8126(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8126,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_car(t4));}

/* eighth in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8116(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8116,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadddr(t3));}

/* seventh in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8106(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8106,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_caddr(t3));}

/* sixth in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8096(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8096,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t3));}

/* fifth in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8086(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8086,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t3));}

/* shell in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8076(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8076,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7184,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_7184(2,t4,C_SCHEME_FALSE);}}

/* k7182 in shell in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub68(C_SCHEME_UNDEFINED,t1));}

/* print-output in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8045(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr3rv,(void*)f_8045r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_8045r(t0,t1,t2,t3);}}

static void C_ccall f_8045r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(4);
t4=(C_word)C_vemptyp(t3);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8055,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t4)){
t6=t5;
f_8055(t6,t4);}
else{
t6=(C_word)C_i_vector_ref(t3,C_fix(0));
t7=t5;
f_8055(t7,(C_word)C_i_not(t6));}}

/* k8053 in print-output in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_8055(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 79   ffi_print_output");
f_7151(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
C_trace("ChickenBridge.scm: 79   ffi_print_output");
f_7151(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_TRUE);}}

/* print-error in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8039(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8039,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7142,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_7142(2,t4,C_SCHEME_FALSE);}}

/* k7140 in print-error in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub48(C_SCHEME_UNDEFINED,t1));}

/* quit in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_8033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8033,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub45(C_SCHEME_UNDEFINED));}

/* ffi_mp_send_data in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_7780(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7780,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub409(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* ffi_pathname_type in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_7613(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7613,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7622,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t2)){
t5=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t6=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t5=t4;
f_7622(2,t5,C_SCHEME_FALSE);}}

/* k7620 in ffi_pathname_type in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)stub329(((C_word*)t0)[3],t1);
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[54]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,C_fix(0));}

/* ffi_sched_stop in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_7522(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7522,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub285(C_SCHEME_UNDEFINED,t3));}

/* ffi_sched_sprout in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_7502(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7502,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=(C_word)C_i_foreign_fixnum_argumentp(t4);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub273(C_SCHEME_UNDEFINED,t2,t5,t6));}

/* ffi_ranbrown in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7471,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub247(t2));}

/* ffi_ranpink in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7468,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub244(t2));}

/* ffi_ranpoisson in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_7461(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7461,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub241(C_SCHEME_UNDEFINED,t3));}

/* ffi_rancauchy in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7458,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub237(t2));}

/* ffi_rangamma in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_7451(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7451,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub233(t3,t4));}

/* ffi_ranexp in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_7433(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7433,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub221(t3,t4));}

/* ffi_rangauss in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_7422(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7422,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub215(t4,t5,t6));}

/* ffi_ranmiddle in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7419,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub210(t2));}

/* ffi_ranhigh in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7416,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub207(t2));}

/* ffi_ranlow in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7413,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub204(t2));}

/* ffi_ranfloat in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_7384(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7384,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub187(t3,t4));}

/* ffi_ranint in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_7377(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7377,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub183(C_SCHEME_UNDEFINED,t3));}

/* ffi_ranseed in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7374(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7374,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub179(C_SCHEME_UNDEFINED,t2));}

/* ffi_keynum_to_hertz in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_7353(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7353,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub165(t3,t4));}

/* ffi_geoseg in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7334(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_7334,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub157(t6,t7,t8,t9,t10));}

/* ffi_explseg in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7315(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_7315,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub146(t6,t7,t8,t9,t10));}

/* ffi_scaler_to_cents in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7301(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7301,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub134(C_SCHEME_UNDEFINED,t3));}

/* ffi_cents_to_scaler in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7294(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7294,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_fixnum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub129(t3,t4));}

/* ffi_rhythm_to_seconds in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_7279(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7279,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t2);
t7=(C_word)C_i_foreign_flonum_argumentp(t3);
t8=(C_word)C_i_foreign_flonum_argumentp(t4);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)stub122(t5,t6,t7,t8));}

/* ffi_quantize in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_7268(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7268,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub114(t4,t5,t6));}

/* ffi_float_to_fixnum in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7261(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7261,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub109(C_SCHEME_UNDEFINED,t3));}

/* ffi_rescale in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_7207(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7207,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t9=(C_word)C_i_foreign_flonum_argumentp(t2);
t10=(C_word)C_i_foreign_flonum_argumentp(t3);
t11=(C_word)C_i_foreign_flonum_argumentp(t4);
t12=(C_word)C_i_foreign_flonum_argumentp(t5);
t13=(C_word)C_i_foreign_flonum_argumentp(t6);
t14=(C_word)C_i_foreign_flonum_argumentp(t7);
t15=t1;
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)stub85(t8,t9,t10,t11,t12,t13,t14));}

/* ffi_print_output in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_7151(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7151,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7156,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t2)){
t5=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t6=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t5=t4;
f_7156(2,t5,C_SCHEME_FALSE);}}

/* k7154 in ffi_print_output in k7130 in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub55(C_SCHEME_UNDEFINED,t1,((C_word*)t0)[2]));}

/* read-from-string in k6947 in k6944 in k6941 in k6938 */
static void C_fcall f_7030(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7030,NULL,2,t1,t2);}
C_trace("ChickenBridge.scm: 77   call-with-input-string");
t3=C_retrieve(lf[25]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,t2,*((C_word*)lf[26]+1));}

/* hash-ref in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7024(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7024,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 77   hash-table-ref/default");
t4=C_retrieve(lf[23]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t1,t2,t3,C_SCHEME_FALSE);}

/* make-eq-hash-table in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7017,2,t0,t1);}
C_trace("ChickenBridge.scm: 77   make-hash-table");
t2=C_retrieve(lf[16]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,*((C_word*)lf[19]+1));}

/* make-equal-hash-table in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7011,2,t0,t1);}
C_trace("ChickenBridge.scm: 77   make-hash-table");
t2=C_retrieve(lf[16]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,*((C_word*)lf[17]+1));}

/* list-set! in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_7001(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_7001,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_list_tail(t2,t3);
t6=(C_word)C_i_set_car(t5,t4);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t4);}

/* logtest in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_6981(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_6981,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6993,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 77   logand");
t5=*((C_word*)lf[1]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t2,t3);}

/* k6991 in logtest in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_6993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_zerop(t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_not(t2));}

/* logior in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_6975(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_6975r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_6975r(t0,t1,t2);}}

static void C_ccall f_6975r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_apply(4,0,t1,*((C_word*)lf[8]+1),t2);}

/* logxor in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_6969(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_6969r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_6969r(t0,t1,t2);}}

static void C_ccall f_6969r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_apply(4,0,t1,*((C_word*)lf[6]+1),t2);}

/* lognot in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_6963(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_6963r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_6963r(t0,t1,t2);}}

static void C_ccall f_6963r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_apply(4,0,t1,*((C_word*)lf[4]+1),t2);}

/* logand in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_6957(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_6957r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_6957r(t0,t1,t2);}}

static void C_ccall f_6957r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_apply(4,0,t1,*((C_word*)lf[2]+1),t2);}

/* ash in k6947 in k6944 in k6941 in k6938 */
static void C_ccall f_6951(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_6951,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_arithmetic_shift(&a,2,t2,t3));}

#ifdef C_ENABLE_PTABLES
static C_PTABLE_ENTRY ptable[2984] = {
{"toplevelChickenBridge.scm",(void*)C_cm_toplevel},
{"f_6940ChickenBridge.scm",(void*)f_6940},
{"f_6943ChickenBridge.scm",(void*)f_6943},
{"f_6946ChickenBridge.scm",(void*)f_6946},
{"f_6949ChickenBridge.scm",(void*)f_6949},
{"f_7132ChickenBridge.scm",(void*)f_7132},
{"f_45880ChickenBridge.scm",(void*)f_45880},
{"f_9238ChickenBridge.scm",(void*)f_9238},
{"f_45874ChickenBridge.scm",(void*)f_45874},
{"f_12594ChickenBridge.scm",(void*)f_12594},
{"f_12597ChickenBridge.scm",(void*)f_12597},
{"f_12763ChickenBridge.scm",(void*)f_12763},
{"f_12759ChickenBridge.scm",(void*)f_12759},
{"f_12749ChickenBridge.scm",(void*)f_12749},
{"f_12604ChickenBridge.scm",(void*)f_12604},
{"f_12608ChickenBridge.scm",(void*)f_12608},
{"f_12611ChickenBridge.scm",(void*)f_12611},
{"f_12622ChickenBridge.scm",(void*)f_12622},
{"f_12630ChickenBridge.scm",(void*)f_12630},
{"f_12702ChickenBridge.scm",(void*)f_12702},
{"f_12710ChickenBridge.scm",(void*)f_12710},
{"f_12706ChickenBridge.scm",(void*)f_12706},
{"f_12698ChickenBridge.scm",(void*)f_12698},
{"f_12694ChickenBridge.scm",(void*)f_12694},
{"f_12666ChickenBridge.scm",(void*)f_12666},
{"f_12662ChickenBridge.scm",(void*)f_12662},
{"f_12626ChickenBridge.scm",(void*)f_12626},
{"f_9241ChickenBridge.scm",(void*)f_9241},
{"f_45860ChickenBridge.scm",(void*)f_45860},
{"f_9244ChickenBridge.scm",(void*)f_9244},
{"f_45831ChickenBridge.scm",(void*)f_45831},
{"f_45835ChickenBridge.scm",(void*)f_45835},
{"f_9247ChickenBridge.scm",(void*)f_9247},
{"f_45828ChickenBridge.scm",(void*)f_45828},
{"f_9250ChickenBridge.scm",(void*)f_9250},
{"f_45686ChickenBridge.scm",(void*)f_45686},
{"f_12776ChickenBridge.scm",(void*)f_12776},
{"f_12908ChickenBridge.scm",(void*)f_12908},
{"f_12779ChickenBridge.scm",(void*)f_12779},
{"f_12790ChickenBridge.scm",(void*)f_12790},
{"f_12798ChickenBridge.scm",(void*)f_12798},
{"f_12822ChickenBridge.scm",(void*)f_12822},
{"f_12825ChickenBridge.scm",(void*)f_12825},
{"f_12833ChickenBridge.scm",(void*)f_12833},
{"f_12841ChickenBridge.scm",(void*)f_12841},
{"f_12861ChickenBridge.scm",(void*)f_12861},
{"f_12857ChickenBridge.scm",(void*)f_12857},
{"f_12837ChickenBridge.scm",(void*)f_12837},
{"f_12829ChickenBridge.scm",(void*)f_12829},
{"f_12818ChickenBridge.scm",(void*)f_12818},
{"f_12794ChickenBridge.scm",(void*)f_12794},
{"f_12770ChickenBridge.scm",(void*)f_12770},
{"f_22891ChickenBridge.scm",(void*)f_22891},
{"f_45458ChickenBridge.scm",(void*)f_45458},
{"f_45684ChickenBridge.scm",(void*)f_45684},
{"f_45492ChickenBridge.scm",(void*)f_45492},
{"f_45504ChickenBridge.scm",(void*)f_45504},
{"f_45508ChickenBridge.scm",(void*)f_45508},
{"f_45512ChickenBridge.scm",(void*)f_45512},
{"f_45668ChickenBridge.scm",(void*)f_45668},
{"f_45518ChickenBridge.scm",(void*)f_45518},
{"f_45538ChickenBridge.scm",(void*)f_45538},
{"f_45541ChickenBridge.scm",(void*)f_45541},
{"f_45549ChickenBridge.scm",(void*)f_45549},
{"f_45556ChickenBridge.scm",(void*)f_45556},
{"f_45559ChickenBridge.scm",(void*)f_45559},
{"f_45563ChickenBridge.scm",(void*)f_45563},
{"f_45570ChickenBridge.scm",(void*)f_45570},
{"f_45573ChickenBridge.scm",(void*)f_45573},
{"f_45577ChickenBridge.scm",(void*)f_45577},
{"f_45584ChickenBridge.scm",(void*)f_45584},
{"f_45528ChickenBridge.scm",(void*)f_45528},
{"f_45481ChickenBridge.scm",(void*)f_45481},
{"f_45471ChickenBridge.scm",(void*)f_45471},
{"f_45474ChickenBridge.scm",(void*)f_45474},
{"f_22894ChickenBridge.scm",(void*)f_22894},
{"f_23875ChickenBridge.scm",(void*)f_23875},
{"f_45363ChickenBridge.scm",(void*)f_45363},
{"f_45376ChickenBridge.scm",(void*)f_45376},
{"f_45452ChickenBridge.scm",(void*)f_45452},
{"f_45379ChickenBridge.scm",(void*)f_45379},
{"f_45384ChickenBridge.scm",(void*)f_45384},
{"f_45436ChickenBridge.scm",(void*)f_45436},
{"f_45406ChickenBridge.scm",(void*)f_45406},
{"f_45420ChickenBridge.scm",(void*)f_45420},
{"f_45432ChickenBridge.scm",(void*)f_45432},
{"f_45409ChickenBridge.scm",(void*)f_45409},
{"f_23895ChickenBridge.scm",(void*)f_23895},
{"f_45357ChickenBridge.scm",(void*)f_45357},
{"f_24224ChickenBridge.scm",(void*)f_24224},
{"f_28951ChickenBridge.scm",(void*)f_28951},
{"f_45254ChickenBridge.scm",(void*)f_45254},
{"f_45317ChickenBridge.scm",(void*)f_45317},
{"f_45321ChickenBridge.scm",(void*)f_45321},
{"f_45335ChickenBridge.scm",(void*)f_45335},
{"f_45257ChickenBridge.scm",(void*)f_45257},
{"f_45277ChickenBridge.scm",(void*)f_45277},
{"f_45281ChickenBridge.scm",(void*)f_45281},
{"f_29056ChickenBridge.scm",(void*)f_29056},
{"f_45232ChickenBridge.scm",(void*)f_45232},
{"f_30611ChickenBridge.scm",(void*)f_30611},
{"f_45212ChickenBridge.scm",(void*)f_45212},
{"f_30614ChickenBridge.scm",(void*)f_30614},
{"f_45172ChickenBridge.scm",(void*)f_45172},
{"f_30617ChickenBridge.scm",(void*)f_30617},
{"f_45078ChickenBridge.scm",(void*)f_45078},
{"f_45082ChickenBridge.scm",(void*)f_45082},
{"f_45085ChickenBridge.scm",(void*)f_45085},
{"f_45103ChickenBridge.scm",(void*)f_45103},
{"f_45106ChickenBridge.scm",(void*)f_45106},
{"f_45137ChickenBridge.scm",(void*)f_45137},
{"f_45109ChickenBridge.scm",(void*)f_45109},
{"f_45115ChickenBridge.scm",(void*)f_45115},
{"f_45068ChickenBridge.scm",(void*)f_45068},
{"f_45062ChickenBridge.scm",(void*)f_45062},
{"f_30620ChickenBridge.scm",(void*)f_30620},
{"f_44966ChickenBridge.scm",(void*)f_44966},
{"f_44968ChickenBridge.scm",(void*)f_44968},
{"f_44972ChickenBridge.scm",(void*)f_44972},
{"f_44975ChickenBridge.scm",(void*)f_44975},
{"f_44978ChickenBridge.scm",(void*)f_44978},
{"f_45022ChickenBridge.scm",(void*)f_45022},
{"f_45014ChickenBridge.scm",(void*)f_45014},
{"f_44981ChickenBridge.scm",(void*)f_44981},
{"f_29390ChickenBridge.scm",(void*)f_29390},
{"f_29436ChickenBridge.scm",(void*)f_29436},
{"f_29403ChickenBridge.scm",(void*)f_29403},
{"f_45004ChickenBridge.scm",(void*)f_45004},
{"f_44984ChickenBridge.scm",(void*)f_44984},
{"f_44987ChickenBridge.scm",(void*)f_44987},
{"f_44958ChickenBridge.scm",(void*)f_44958},
{"f_30623ChickenBridge.scm",(void*)f_30623},
{"f_44930ChickenBridge.scm",(void*)f_44930},
{"f_30626ChickenBridge.scm",(void*)f_30626},
{"f_44894ChickenBridge.scm",(void*)f_44894},
{"f_44906ChickenBridge.scm",(void*)f_44906},
{"f_44902ChickenBridge.scm",(void*)f_44902},
{"f_44876ChickenBridge.scm",(void*)f_44876},
{"f_44870ChickenBridge.scm",(void*)f_44870},
{"f_30629ChickenBridge.scm",(void*)f_30629},
{"f_44784ChickenBridge.scm",(void*)f_44784},
{"f_44788ChickenBridge.scm",(void*)f_44788},
{"f_44791ChickenBridge.scm",(void*)f_44791},
{"f_44794ChickenBridge.scm",(void*)f_44794},
{"f_44807ChickenBridge.scm",(void*)f_44807},
{"f_44753ChickenBridge.scm",(void*)f_44753},
{"f_44757ChickenBridge.scm",(void*)f_44757},
{"f_44772ChickenBridge.scm",(void*)f_44772},
{"f_44747ChickenBridge.scm",(void*)f_44747},
{"f_30632ChickenBridge.scm",(void*)f_30632},
{"f_44633ChickenBridge.scm",(void*)f_44633},
{"f_44649ChickenBridge.scm",(void*)f_44649},
{"f_44660ChickenBridge.scm",(void*)f_44660},
{"f_44627ChickenBridge.scm",(void*)f_44627},
{"f_30688ChickenBridge.scm",(void*)f_30688},
{"f_44494ChickenBridge.scm",(void*)f_44494},
{"f_44517ChickenBridge.scm",(void*)f_44517},
{"f_44514ChickenBridge.scm",(void*)f_44514},
{"f_44488ChickenBridge.scm",(void*)f_44488},
{"f_30691ChickenBridge.scm",(void*)f_30691},
{"f_44342ChickenBridge.scm",(void*)f_44342},
{"f_44360ChickenBridge.scm",(void*)f_44360},
{"f_44369ChickenBridge.scm",(void*)f_44369},
{"f_44336ChickenBridge.scm",(void*)f_44336},
{"f_30694ChickenBridge.scm",(void*)f_30694},
{"f_44289ChickenBridge.scm",(void*)f_44289},
{"f_44293ChickenBridge.scm",(void*)f_44293},
{"f_44296ChickenBridge.scm",(void*)f_44296},
{"f_44312ChickenBridge.scm",(void*)f_44312},
{"f_44271ChickenBridge.scm",(void*)f_44271},
{"f_44265ChickenBridge.scm",(void*)f_44265},
{"f_30697ChickenBridge.scm",(void*)f_30697},
{"f_44189ChickenBridge.scm",(void*)f_44189},
{"f_30836ChickenBridge.scm",(void*)f_30836},
{"f_44115ChickenBridge.scm",(void*)f_44115},
{"f_44122ChickenBridge.scm",(void*)f_44122},
{"f_44109ChickenBridge.scm",(void*)f_44109},
{"f_30839ChickenBridge.scm",(void*)f_30839},
{"f_44005ChickenBridge.scm",(void*)f_44005},
{"f_44013ChickenBridge.scm",(void*)f_44013},
{"f_43979ChickenBridge.scm",(void*)f_43979},
{"f_43996ChickenBridge.scm",(void*)f_43996},
{"f_43987ChickenBridge.scm",(void*)f_43987},
{"f_43973ChickenBridge.scm",(void*)f_43973},
{"f_30842ChickenBridge.scm",(void*)f_30842},
{"f_43929ChickenBridge.scm",(void*)f_43929},
{"f_30845ChickenBridge.scm",(void*)f_30845},
{"f_43847ChickenBridge.scm",(void*)f_43847},
{"f_43858ChickenBridge.scm",(void*)f_43858},
{"f_43860ChickenBridge.scm",(void*)f_43860},
{"f_43889ChickenBridge.scm",(void*)f_43889},
{"f_43825ChickenBridge.scm",(void*)f_43825},
{"f_43841ChickenBridge.scm",(void*)f_43841},
{"f_43819ChickenBridge.scm",(void*)f_43819},
{"f_30848ChickenBridge.scm",(void*)f_30848},
{"f_43748ChickenBridge.scm",(void*)f_43748},
{"f_43752ChickenBridge.scm",(void*)f_43752},
{"f_43759ChickenBridge.scm",(void*)f_43759},
{"f_43714ChickenBridge.scm",(void*)f_43714},
{"f_43734ChickenBridge.scm",(void*)f_43734},
{"f_43738ChickenBridge.scm",(void*)f_43738},
{"f_43730ChickenBridge.scm",(void*)f_43730},
{"f_43708ChickenBridge.scm",(void*)f_43708},
{"f_30851ChickenBridge.scm",(void*)f_30851},
{"f_43580ChickenBridge.scm",(void*)f_43580},
{"f_43616ChickenBridge.scm",(void*)f_43616},
{"f_43584ChickenBridge.scm",(void*)f_43584},
{"f_43600ChickenBridge.scm",(void*)f_43600},
{"f_43612ChickenBridge.scm",(void*)f_43612},
{"f_43608ChickenBridge.scm",(void*)f_43608},
{"f_43505ChickenBridge.scm",(void*)f_43505},
{"f_43548ChickenBridge.scm",(void*)f_43548},
{"f_43552ChickenBridge.scm",(void*)f_43552},
{"f_43512ChickenBridge.scm",(void*)f_43512},
{"f_43523ChickenBridge.scm",(void*)f_43523},
{"f_43499ChickenBridge.scm",(void*)f_43499},
{"f_30854ChickenBridge.scm",(void*)f_30854},
{"f_43479ChickenBridge.scm",(void*)f_43479},
{"f_43473ChickenBridge.scm",(void*)f_43473},
{"f_30857ChickenBridge.scm",(void*)f_30857},
{"f_43453ChickenBridge.scm",(void*)f_43453},
{"f_43457ChickenBridge.scm",(void*)f_43457},
{"f_43445ChickenBridge.scm",(void*)f_43445},
{"f_30860ChickenBridge.scm",(void*)f_30860},
{"f_43425ChickenBridge.scm",(void*)f_43425},
{"f_43429ChickenBridge.scm",(void*)f_43429},
{"f_43417ChickenBridge.scm",(void*)f_43417},
{"f_30863ChickenBridge.scm",(void*)f_30863},
{"f_43397ChickenBridge.scm",(void*)f_43397},
{"f_43401ChickenBridge.scm",(void*)f_43401},
{"f_43389ChickenBridge.scm",(void*)f_43389},
{"f_30866ChickenBridge.scm",(void*)f_30866},
{"f_43369ChickenBridge.scm",(void*)f_43369},
{"f_43373ChickenBridge.scm",(void*)f_43373},
{"f_43361ChickenBridge.scm",(void*)f_43361},
{"f_30869ChickenBridge.scm",(void*)f_30869},
{"f_43260ChickenBridge.scm",(void*)f_43260},
{"f_43230ChickenBridge.scm",(void*)f_43230},
{"f_43254ChickenBridge.scm",(void*)f_43254},
{"f_43224ChickenBridge.scm",(void*)f_43224},
{"f_30872ChickenBridge.scm",(void*)f_30872},
{"f_43174ChickenBridge.scm",(void*)f_43174},
{"f_43176ChickenBridge.scm",(void*)f_43176},
{"f_43180ChickenBridge.scm",(void*)f_43180},
{"f_43208ChickenBridge.scm",(void*)f_43208},
{"f_43200ChickenBridge.scm",(void*)f_43200},
{"f_43196ChickenBridge.scm",(void*)f_43196},
{"f_43183ChickenBridge.scm",(void*)f_43183},
{"f_43166ChickenBridge.scm",(void*)f_43166},
{"f_30875ChickenBridge.scm",(void*)f_30875},
{"f_43113ChickenBridge.scm",(void*)f_43113},
{"f_43115ChickenBridge.scm",(void*)f_43115},
{"f_43119ChickenBridge.scm",(void*)f_43119},
{"f_43150ChickenBridge.scm",(void*)f_43150},
{"f_43142ChickenBridge.scm",(void*)f_43142},
{"f_43138ChickenBridge.scm",(void*)f_43138},
{"f_43122ChickenBridge.scm",(void*)f_43122},
{"f_43125ChickenBridge.scm",(void*)f_43125},
{"f_43105ChickenBridge.scm",(void*)f_43105},
{"f_30878ChickenBridge.scm",(void*)f_30878},
{"f_43055ChickenBridge.scm",(void*)f_43055},
{"f_43069ChickenBridge.scm",(void*)f_43069},
{"f_43061ChickenBridge.scm",(void*)f_43061},
{"f_43020ChickenBridge.scm",(void*)f_43020},
{"f_43053ChickenBridge.scm",(void*)f_43053},
{"f_43014ChickenBridge.scm",(void*)f_43014},
{"f_30881ChickenBridge.scm",(void*)f_30881},
{"f_42961ChickenBridge.scm",(void*)f_42961},
{"f_42965ChickenBridge.scm",(void*)f_42965},
{"f_42978ChickenBridge.scm",(void*)f_42978},
{"f_42970ChickenBridge.scm",(void*)f_42970},
{"f_42918ChickenBridge.scm",(void*)f_42918},
{"f_42951ChickenBridge.scm",(void*)f_42951},
{"f_42912ChickenBridge.scm",(void*)f_42912},
{"f_30884ChickenBridge.scm",(void*)f_30884},
{"f_42832ChickenBridge.scm",(void*)f_42832},
{"f_42826ChickenBridge.scm",(void*)f_42826},
{"f_30887ChickenBridge.scm",(void*)f_30887},
{"f_42595ChickenBridge.scm",(void*)f_42595},
{"f_42599ChickenBridge.scm",(void*)f_42599},
{"f_42607ChickenBridge.scm",(void*)f_42607},
{"f_42630ChickenBridge.scm",(void*)f_42630},
{"f_42633ChickenBridge.scm",(void*)f_42633},
{"f_42636ChickenBridge.scm",(void*)f_42636},
{"f_42639ChickenBridge.scm",(void*)f_42639},
{"f_42699ChickenBridge.scm",(void*)f_42699},
{"f_42706ChickenBridge.scm",(void*)f_42706},
{"f_42716ChickenBridge.scm",(void*)f_42716},
{"f_42726ChickenBridge.scm",(void*)f_42726},
{"f_42740ChickenBridge.scm",(void*)f_42740},
{"f_42750ChickenBridge.scm",(void*)f_42750},
{"f_42760ChickenBridge.scm",(void*)f_42760},
{"f_42770ChickenBridge.scm",(void*)f_42770},
{"f_42642ChickenBridge.scm",(void*)f_42642},
{"f_42666ChickenBridge.scm",(void*)f_42666},
{"f_42645ChickenBridge.scm",(void*)f_42645},
{"f_42552ChickenBridge.scm",(void*)f_42552},
{"f_42585ChickenBridge.scm",(void*)f_42585},
{"f_42546ChickenBridge.scm",(void*)f_42546},
{"f_30890ChickenBridge.scm",(void*)f_30890},
{"f_42464ChickenBridge.scm",(void*)f_42464},
{"f_42468ChickenBridge.scm",(void*)f_42468},
{"f_42474ChickenBridge.scm",(void*)f_42474},
{"f_42494ChickenBridge.scm",(void*)f_42494},
{"f_42438ChickenBridge.scm",(void*)f_42438},
{"f_42448ChickenBridge.scm",(void*)f_42448},
{"f_42432ChickenBridge.scm",(void*)f_42432},
{"f_30893ChickenBridge.scm",(void*)f_30893},
{"f_42247ChickenBridge.scm",(void*)f_42247},
{"f_42251ChickenBridge.scm",(void*)f_42251},
{"f_42257ChickenBridge.scm",(void*)f_42257},
{"f_42266ChickenBridge.scm",(void*)f_42266},
{"f_42304ChickenBridge.scm",(void*)f_42304},
{"f_42296ChickenBridge.scm",(void*)f_42296},
{"f_42273ChickenBridge.scm",(void*)f_42273},
{"f_42277ChickenBridge.scm",(void*)f_42277},
{"f_42179ChickenBridge.scm",(void*)f_42179},
{"f_42198ChickenBridge.scm",(void*)f_42198},
{"f_42233ChickenBridge.scm",(void*)f_42233},
{"f_42204ChickenBridge.scm",(void*)f_42204},
{"f_42208ChickenBridge.scm",(void*)f_42208},
{"f_42222ChickenBridge.scm",(void*)f_42222},
{"f_42211ChickenBridge.scm",(void*)f_42211},
{"f_42192ChickenBridge.scm",(void*)f_42192},
{"f_42173ChickenBridge.scm",(void*)f_42173},
{"f_30896ChickenBridge.scm",(void*)f_30896},
{"f_41901ChickenBridge.scm",(void*)f_41901},
{"f_31419ChickenBridge.scm",(void*)f_31419},
{"f_41853ChickenBridge.scm",(void*)f_41853},
{"f_41845ChickenBridge.scm",(void*)f_41845},
{"f_31422ChickenBridge.scm",(void*)f_31422},
{"f_41725ChickenBridge.scm",(void*)f_41725},
{"f_31428ChickenBridge.scm",(void*)f_31428},
{"f_31912ChickenBridge.scm",(void*)f_31912},
{"f_31946ChickenBridge.scm",(void*)f_31946},
{"f_31938ChickenBridge.scm",(void*)f_31938},
{"f_31934ChickenBridge.scm",(void*)f_31934},
{"f_31919ChickenBridge.scm",(void*)f_31919},
{"f_31923ChickenBridge.scm",(void*)f_31923},
{"f_31916ChickenBridge.scm",(void*)f_31916},
{"f_31452ChickenBridge.scm",(void*)f_31452},
{"f_31905ChickenBridge.scm",(void*)f_31905},
{"f_31901ChickenBridge.scm",(void*)f_31901},
{"f_31459ChickenBridge.scm",(void*)f_31459},
{"f_31776ChickenBridge.scm",(void*)f_31776},
{"f_31797ChickenBridge.scm",(void*)f_31797},
{"f_31799ChickenBridge.scm",(void*)f_31799},
{"f_31813ChickenBridge.scm",(void*)f_31813},
{"f_31866ChickenBridge.scm",(void*)f_31866},
{"f_31816ChickenBridge.scm",(void*)f_31816},
{"f_31851ChickenBridge.scm",(void*)f_31851},
{"f_31819ChickenBridge.scm",(void*)f_31819},
{"f_31832ChickenBridge.scm",(void*)f_31832},
{"f_31844ChickenBridge.scm",(void*)f_31844},
{"f_31836ChickenBridge.scm",(void*)f_31836},
{"f_31822ChickenBridge.scm",(void*)f_31822},
{"f_31786ChickenBridge.scm",(void*)f_31786},
{"f_31462ChickenBridge.scm",(void*)f_31462},
{"f_31740ChickenBridge.scm",(void*)f_31740},
{"f_31766ChickenBridge.scm",(void*)f_31766},
{"f_31751ChickenBridge.scm",(void*)f_31751},
{"f_31465ChickenBridge.scm",(void*)f_31465},
{"f_31680ChickenBridge.scm",(void*)f_31680},
{"f_31690ChickenBridge.scm",(void*)f_31690},
{"f_31693ChickenBridge.scm",(void*)f_31693},
{"f_31714ChickenBridge.scm",(void*)f_31714},
{"f_31696ChickenBridge.scm",(void*)f_31696},
{"f_31700ChickenBridge.scm",(void*)f_31700},
{"f_31648ChickenBridge.scm",(void*)f_31648},
{"f_31651ChickenBridge.scm",(void*)f_31651},
{"f_31468ChickenBridge.scm",(void*)f_31468},
{"f_31471ChickenBridge.scm",(void*)f_31471},
{"f_31605ChickenBridge.scm",(void*)f_31605},
{"f_31613ChickenBridge.scm",(void*)f_31613},
{"f_31609ChickenBridge.scm",(void*)f_31609},
{"f_31474ChickenBridge.scm",(void*)f_31474},
{"f_31568ChickenBridge.scm",(void*)f_31568},
{"f_31564ChickenBridge.scm",(void*)f_31564},
{"f_31560ChickenBridge.scm",(void*)f_31560},
{"f_31513ChickenBridge.scm",(void*)f_31513},
{"f_31509ChickenBridge.scm",(void*)f_31509},
{"f_31591ChickenBridge.scm",(void*)f_31591},
{"f_31575ChickenBridge.scm",(void*)f_31575},
{"f_41679ChickenBridge.scm",(void*)f_41679},
{"f_41695ChickenBridge.scm",(void*)f_41695},
{"f_41698ChickenBridge.scm",(void*)f_41698},
{"f_41701ChickenBridge.scm",(void*)f_41701},
{"f_41704ChickenBridge.scm",(void*)f_41704},
{"f_41715ChickenBridge.scm",(void*)f_41715},
{"f_41673ChickenBridge.scm",(void*)f_41673},
{"f_31953ChickenBridge.scm",(void*)f_31953},
{"f_41534ChickenBridge.scm",(void*)f_41534},
{"f_41573ChickenBridge.scm",(void*)f_41573},
{"f_41547ChickenBridge.scm",(void*)f_41547},
{"f_41528ChickenBridge.scm",(void*)f_41528},
{"f_31956ChickenBridge.scm",(void*)f_31956},
{"f_41116ChickenBridge.scm",(void*)f_41116},
{"f_41120ChickenBridge.scm",(void*)f_41120},
{"f_41132ChickenBridge.scm",(void*)f_41132},
{"f_41190ChickenBridge.scm",(void*)f_41190},
{"f_41193ChickenBridge.scm",(void*)f_41193},
{"f_41196ChickenBridge.scm",(void*)f_41196},
{"f_41408ChickenBridge.scm",(void*)f_41408},
{"f_41346ChickenBridge.scm",(void*)f_41346},
{"f_41380ChickenBridge.scm",(void*)f_41380},
{"f_41355ChickenBridge.scm",(void*)f_41355},
{"f_41366ChickenBridge.scm",(void*)f_41366},
{"f_41362ChickenBridge.scm",(void*)f_41362},
{"f_41205ChickenBridge.scm",(void*)f_41205},
{"f_41283ChickenBridge.scm",(void*)f_41283},
{"f_41324ChickenBridge.scm",(void*)f_41324},
{"f_41328ChickenBridge.scm",(void*)f_41328},
{"f_41332ChickenBridge.scm",(void*)f_41332},
{"f_41287ChickenBridge.scm",(void*)f_41287},
{"f_41291ChickenBridge.scm",(void*)f_41291},
{"f_41318ChickenBridge.scm",(void*)f_41318},
{"f_41294ChickenBridge.scm",(void*)f_41294},
{"f_41208ChickenBridge.scm",(void*)f_41208},
{"f_41280ChickenBridge.scm",(void*)f_41280},
{"f_41222ChickenBridge.scm",(void*)f_41222},
{"f_41224ChickenBridge.scm",(void*)f_41224},
{"f_41272ChickenBridge.scm",(void*)f_41272},
{"f_41243ChickenBridge.scm",(void*)f_41243},
{"f_41260ChickenBridge.scm",(void*)f_41260},
{"f_41246ChickenBridge.scm",(void*)f_41246},
{"f_41239ChickenBridge.scm",(void*)f_41239},
{"f_41211ChickenBridge.scm",(void*)f_41211},
{"f_41141ChickenBridge.scm",(void*)f_41141},
{"f_41151ChickenBridge.scm",(void*)f_41151},
{"f_41157ChickenBridge.scm",(void*)f_41157},
{"f_41129ChickenBridge.scm",(void*)f_41129},
{"f_41077ChickenBridge.scm",(void*)f_41077},
{"f_41094ChickenBridge.scm",(void*)f_41094},
{"f_41110ChickenBridge.scm",(void*)f_41110},
{"f_41088ChickenBridge.scm",(void*)f_41088},
{"f_41071ChickenBridge.scm",(void*)f_41071},
{"f_31959ChickenBridge.scm",(void*)f_31959},
{"f_40995ChickenBridge.scm",(void*)f_40995},
{"f_31962ChickenBridge.scm",(void*)f_31962},
{"f_40971ChickenBridge.scm",(void*)f_40971},
{"f_40983ChickenBridge.scm",(void*)f_40983},
{"f_40979ChickenBridge.scm",(void*)f_40979},
{"f_40957ChickenBridge.scm",(void*)f_40957},
{"f_40965ChickenBridge.scm",(void*)f_40965},
{"f_40951ChickenBridge.scm",(void*)f_40951},
{"f_31965ChickenBridge.scm",(void*)f_31965},
{"f_40943ChickenBridge.scm",(void*)f_40943},
{"f_39196ChickenBridge.scm",(void*)f_39196},
{"f_39200ChickenBridge.scm",(void*)f_39200},
{"f_40914ChickenBridge.scm",(void*)f_40914},
{"f_40918ChickenBridge.scm",(void*)f_40918},
{"f_39203ChickenBridge.scm",(void*)f_39203},
{"f_40912ChickenBridge.scm",(void*)f_40912},
{"f_39753ChickenBridge.scm",(void*)f_39753},
{"f_40904ChickenBridge.scm",(void*)f_40904},
{"f_39756ChickenBridge.scm",(void*)f_39756},
{"f_40896ChickenBridge.scm",(void*)f_40896},
{"f_39759ChickenBridge.scm",(void*)f_39759},
{"f_40888ChickenBridge.scm",(void*)f_40888},
{"f_39762ChickenBridge.scm",(void*)f_39762},
{"f_40880ChickenBridge.scm",(void*)f_40880},
{"f_39765ChickenBridge.scm",(void*)f_39765},
{"f_40872ChickenBridge.scm",(void*)f_40872},
{"f_39768ChickenBridge.scm",(void*)f_39768},
{"f_40864ChickenBridge.scm",(void*)f_40864},
{"f_39771ChickenBridge.scm",(void*)f_39771},
{"f_40856ChickenBridge.scm",(void*)f_40856},
{"f_39774ChickenBridge.scm",(void*)f_39774},
{"f_40848ChickenBridge.scm",(void*)f_40848},
{"f_39777ChickenBridge.scm",(void*)f_39777},
{"f_40840ChickenBridge.scm",(void*)f_40840},
{"f_39780ChickenBridge.scm",(void*)f_39780},
{"f_40832ChickenBridge.scm",(void*)f_40832},
{"f_39783ChickenBridge.scm",(void*)f_39783},
{"f_40824ChickenBridge.scm",(void*)f_40824},
{"f_39786ChickenBridge.scm",(void*)f_39786},
{"f_40816ChickenBridge.scm",(void*)f_40816},
{"f_39789ChickenBridge.scm",(void*)f_39789},
{"f_40808ChickenBridge.scm",(void*)f_40808},
{"f_39792ChickenBridge.scm",(void*)f_39792},
{"f_40800ChickenBridge.scm",(void*)f_40800},
{"f_39795ChickenBridge.scm",(void*)f_39795},
{"f_40792ChickenBridge.scm",(void*)f_40792},
{"f_39798ChickenBridge.scm",(void*)f_39798},
{"f_40784ChickenBridge.scm",(void*)f_40784},
{"f_39801ChickenBridge.scm",(void*)f_39801},
{"f_40776ChickenBridge.scm",(void*)f_40776},
{"f_39804ChickenBridge.scm",(void*)f_39804},
{"f_40768ChickenBridge.scm",(void*)f_40768},
{"f_39807ChickenBridge.scm",(void*)f_39807},
{"f_40760ChickenBridge.scm",(void*)f_40760},
{"f_39810ChickenBridge.scm",(void*)f_39810},
{"f_40752ChickenBridge.scm",(void*)f_40752},
{"f_39813ChickenBridge.scm",(void*)f_39813},
{"f_40744ChickenBridge.scm",(void*)f_40744},
{"f_39816ChickenBridge.scm",(void*)f_39816},
{"f_40675ChickenBridge.scm",(void*)f_40675},
{"f_40703ChickenBridge.scm",(void*)f_40703},
{"f_39890ChickenBridge.scm",(void*)f_39890},
{"f_40669ChickenBridge.scm",(void*)f_40669},
{"f_40168ChickenBridge.scm",(void*)f_40168},
{"f_40640ChickenBridge.scm",(void*)f_40640},
{"f_40654ChickenBridge.scm",(void*)f_40654},
{"f_40644ChickenBridge.scm",(void*)f_40644},
{"f_40171ChickenBridge.scm",(void*)f_40171},
{"f_40638ChickenBridge.scm",(void*)f_40638},
{"f_40625ChickenBridge.scm",(void*)f_40625},
{"f_40567ChickenBridge.scm",(void*)f_40567},
{"f_40585ChickenBridge.scm",(void*)f_40585},
{"f_40595ChickenBridge.scm",(void*)f_40595},
{"f_40571ChickenBridge.scm",(void*)f_40571},
{"f_40561ChickenBridge.scm",(void*)f_40561},
{"f_40555ChickenBridge.scm",(void*)f_40555},
{"f_40549ChickenBridge.scm",(void*)f_40549},
{"f_40543ChickenBridge.scm",(void*)f_40543},
{"f_40173ChickenBridge.scm",(void*)f_40173},
{"f_40510ChickenBridge.scm",(void*)f_40510},
{"f_40520ChickenBridge.scm",(void*)f_40520},
{"f_40496ChickenBridge.scm",(void*)f_40496},
{"f_40180ChickenBridge.scm",(void*)f_40180},
{"f_40434ChickenBridge.scm",(void*)f_40434},
{"f_40448ChickenBridge.scm",(void*)f_40448},
{"f_40183ChickenBridge.scm",(void*)f_40183},
{"f_40381ChickenBridge.scm",(void*)f_40381},
{"f_40404ChickenBridge.scm",(void*)f_40404},
{"f_40391ChickenBridge.scm",(void*)f_40391},
{"f_40367ChickenBridge.scm",(void*)f_40367},
{"f_40189ChickenBridge.scm",(void*)f_40189},
{"f_40329ChickenBridge.scm",(void*)f_40329},
{"f_40339ChickenBridge.scm",(void*)f_40339},
{"f_40315ChickenBridge.scm",(void*)f_40315},
{"f_40195ChickenBridge.scm",(void*)f_40195},
{"f_40312ChickenBridge.scm",(void*)f_40312},
{"f_40198ChickenBridge.scm",(void*)f_40198},
{"f_40304ChickenBridge.scm",(void*)f_40304},
{"f_40308ChickenBridge.scm",(void*)f_40308},
{"f_40268ChickenBridge.scm",(void*)f_40268},
{"f_40293ChickenBridge.scm",(void*)f_40293},
{"f_40297ChickenBridge.scm",(void*)f_40297},
{"f_40278ChickenBridge.scm",(void*)f_40278},
{"f_40257ChickenBridge.scm",(void*)f_40257},
{"f_40227ChickenBridge.scm",(void*)f_40227},
{"f_40199ChickenBridge.scm",(void*)f_40199},
{"f_39931ChickenBridge.scm",(void*)f_39931},
{"f_39935ChickenBridge.scm",(void*)f_39935},
{"f_39938ChickenBridge.scm",(void*)f_39938},
{"f_39941ChickenBridge.scm",(void*)f_39941},
{"f_39945ChickenBridge.scm",(void*)f_39945},
{"f_40159ChickenBridge.scm",(void*)f_40159},
{"f_40147ChickenBridge.scm",(void*)f_40147},
{"f_40143ChickenBridge.scm",(void*)f_40143},
{"f_39948ChickenBridge.scm",(void*)f_39948},
{"f_40092ChickenBridge.scm",(void*)f_40092},
{"f_40128ChickenBridge.scm",(void*)f_40128},
{"f_40121ChickenBridge.scm",(void*)f_40121},
{"f_39951ChickenBridge.scm",(void*)f_39951},
{"f_40022ChickenBridge.scm",(void*)f_40022},
{"f_40026ChickenBridge.scm",(void*)f_40026},
{"f_40018ChickenBridge.scm",(void*)f_40018},
{"f_7046ChickenBridge.scm",(void*)f_7046},
{"f_39998ChickenBridge.scm",(void*)f_39998},
{"f_39994ChickenBridge.scm",(void*)f_39994},
{"f_39961ChickenBridge.scm",(void*)f_39961},
{"f_39972ChickenBridge.scm",(void*)f_39972},
{"f_39980ChickenBridge.scm",(void*)f_39980},
{"f_39976ChickenBridge.scm",(void*)f_39976},
{"f_39892ChickenBridge.scm",(void*)f_39892},
{"f_39908ChickenBridge.scm",(void*)f_39908},
{"f_39819ChickenBridge.scm",(void*)f_39819},
{"f_39830ChickenBridge.scm",(void*)f_39830},
{"f_39833ChickenBridge.scm",(void*)f_39833},
{"f_39840ChickenBridge.scm",(void*)f_39840},
{"f_39279ChickenBridge.scm",(void*)f_39279},
{"f_39612ChickenBridge.scm",(void*)f_39612},
{"f_39632ChickenBridge.scm",(void*)f_39632},
{"f_39701ChickenBridge.scm",(void*)f_39701},
{"f_39697ChickenBridge.scm",(void*)f_39697},
{"f_39658ChickenBridge.scm",(void*)f_39658},
{"f_39670ChickenBridge.scm",(void*)f_39670},
{"f_39666ChickenBridge.scm",(void*)f_39666},
{"f_39622ChickenBridge.scm",(void*)f_39622},
{"f_39283ChickenBridge.scm",(void*)f_39283},
{"f_39287ChickenBridge.scm",(void*)f_39287},
{"f_39291ChickenBridge.scm",(void*)f_39291},
{"f_39295ChickenBridge.scm",(void*)f_39295},
{"f_39299ChickenBridge.scm",(void*)f_39299},
{"f_39300ChickenBridge.scm",(void*)f_39300},
{"f_39306ChickenBridge.scm",(void*)f_39306},
{"f_39310ChickenBridge.scm",(void*)f_39310},
{"f_39539ChickenBridge.scm",(void*)f_39539},
{"f_39586ChickenBridge.scm",(void*)f_39586},
{"f_39576ChickenBridge.scm",(void*)f_39576},
{"f_39583ChickenBridge.scm",(void*)f_39583},
{"f_39570ChickenBridge.scm",(void*)f_39570},
{"f_39549ChickenBridge.scm",(void*)f_39549},
{"f_39313ChickenBridge.scm",(void*)f_39313},
{"f_39494ChickenBridge.scm",(void*)f_39494},
{"f_39499ChickenBridge.scm",(void*)f_39499},
{"f_39509ChickenBridge.scm",(void*)f_39509},
{"f_39316ChickenBridge.scm",(void*)f_39316},
{"f_39448ChickenBridge.scm",(void*)f_39448},
{"f_39453ChickenBridge.scm",(void*)f_39453},
{"f_39463ChickenBridge.scm",(void*)f_39463},
{"f_39319ChickenBridge.scm",(void*)f_39319},
{"f_39345ChickenBridge.scm",(void*)f_39345},
{"f_39354ChickenBridge.scm",(void*)f_39354},
{"f_39370ChickenBridge.scm",(void*)f_39370},
{"f_39423ChickenBridge.scm",(void*)f_39423},
{"f_39404ChickenBridge.scm",(void*)f_39404},
{"f_39373ChickenBridge.scm",(void*)f_39373},
{"f_39394ChickenBridge.scm",(void*)f_39394},
{"f_39380ChickenBridge.scm",(void*)f_39380},
{"f_39364ChickenBridge.scm",(void*)f_39364},
{"f_39322ChickenBridge.scm",(void*)f_39322},
{"f_39335ChickenBridge.scm",(void*)f_39335},
{"f_39205ChickenBridge.scm",(void*)f_39205},
{"f_39209ChickenBridge.scm",(void*)f_39209},
{"f_39218ChickenBridge.scm",(void*)f_39218},
{"f_39231ChickenBridge.scm",(void*)f_39231},
{"f_39234ChickenBridge.scm",(void*)f_39234},
{"f_39250ChickenBridge.scm",(void*)f_39250},
{"f_39156ChickenBridge.scm",(void*)f_39156},
{"f_39150ChickenBridge.scm",(void*)f_39150},
{"f_38957ChickenBridge.scm",(void*)f_38957},
{"f_39130ChickenBridge.scm",(void*)f_39130},
{"f_38961ChickenBridge.scm",(void*)f_38961},
{"f_38964ChickenBridge.scm",(void*)f_38964},
{"f_38967ChickenBridge.scm",(void*)f_38967},
{"f_38972ChickenBridge.scm",(void*)f_38972},
{"f_39042ChickenBridge.scm",(void*)f_39042},
{"f_39038ChickenBridge.scm",(void*)f_39038},
{"f_39024ChickenBridge.scm",(void*)f_39024},
{"f_39010ChickenBridge.scm",(void*)f_39010},
{"f_39006ChickenBridge.scm",(void*)f_39006},
{"f_38992ChickenBridge.scm",(void*)f_38992},
{"f_7876ChickenBridge.scm",(void*)f_7876},
{"f_38785ChickenBridge.scm",(void*)f_38785},
{"f_38789ChickenBridge.scm",(void*)f_38789},
{"f_38792ChickenBridge.scm",(void*)f_38792},
{"f_38797ChickenBridge.scm",(void*)f_38797},
{"f_38918ChickenBridge.scm",(void*)f_38918},
{"f_38922ChickenBridge.scm",(void*)f_38922},
{"f_38891ChickenBridge.scm",(void*)f_38891},
{"f_38895ChickenBridge.scm",(void*)f_38895},
{"f_38864ChickenBridge.scm",(void*)f_38864},
{"f_38868ChickenBridge.scm",(void*)f_38868},
{"f_38848ChickenBridge.scm",(void*)f_38848},
{"f_38831ChickenBridge.scm",(void*)f_38831},
{"f_38817ChickenBridge.scm",(void*)f_38817},
{"f_7850ChickenBridge.scm",(void*)f_7850},
{"f_38672ChickenBridge.scm",(void*)f_38672},
{"f_38677ChickenBridge.scm",(void*)f_38677},
{"f_38681ChickenBridge.scm",(void*)f_38681},
{"f_38732ChickenBridge.scm",(void*)f_38732},
{"f_38728ChickenBridge.scm",(void*)f_38728},
{"f_38724ChickenBridge.scm",(void*)f_38724},
{"f_38684ChickenBridge.scm",(void*)f_38684},
{"f_38717ChickenBridge.scm",(void*)f_38717},
{"f_38713ChickenBridge.scm",(void*)f_38713},
{"f_38709ChickenBridge.scm",(void*)f_38709},
{"f_38687ChickenBridge.scm",(void*)f_38687},
{"f_38690ChickenBridge.scm",(void*)f_38690},
{"f_38702ChickenBridge.scm",(void*)f_38702},
{"f_38694ChickenBridge.scm",(void*)f_38694},
{"f_38496ChickenBridge.scm",(void*)f_38496},
{"f_38515ChickenBridge.scm",(void*)f_38515},
{"f_38522ChickenBridge.scm",(void*)f_38522},
{"f_38528ChickenBridge.scm",(void*)f_38528},
{"f_38548ChickenBridge.scm",(void*)f_38548},
{"f_38556ChickenBridge.scm",(void*)f_38556},
{"f_38552ChickenBridge.scm",(void*)f_38552},
{"f_38538ChickenBridge.scm",(void*)f_38538},
{"f_38500ChickenBridge.scm",(void*)f_38500},
{"f_38391ChickenBridge.scm",(void*)f_38391},
{"f_38410ChickenBridge.scm",(void*)f_38410},
{"f_38417ChickenBridge.scm",(void*)f_38417},
{"f_38423ChickenBridge.scm",(void*)f_38423},
{"f_38443ChickenBridge.scm",(void*)f_38443},
{"f_38451ChickenBridge.scm",(void*)f_38451},
{"f_38447ChickenBridge.scm",(void*)f_38447},
{"f_38433ChickenBridge.scm",(void*)f_38433},
{"f_38395ChickenBridge.scm",(void*)f_38395},
{"f_38372ChickenBridge.scm",(void*)f_38372},
{"f_7093ChickenBridge.scm",(void*)f_7093},
{"f_7099ChickenBridge.scm",(void*)f_7099},
{"f_7125ChickenBridge.scm",(void*)f_7125},
{"f_7129ChickenBridge.scm",(void*)f_7129},
{"f_7105ChickenBridge.scm",(void*)f_7105},
{"f_7123ChickenBridge.scm",(void*)f_7123},
{"f_7120ChickenBridge.scm",(void*)f_7120},
{"f_7116ChickenBridge.scm",(void*)f_7116},
{"f_7109ChickenBridge.scm",(void*)f_7109},
{"f_38357ChickenBridge.scm",(void*)f_38357},
{"f_38351ChickenBridge.scm",(void*)f_38351},
{"f_38345ChickenBridge.scm",(void*)f_38345},
{"f_38339ChickenBridge.scm",(void*)f_38339},
{"f_38333ChickenBridge.scm",(void*)f_38333},
{"f_38327ChickenBridge.scm",(void*)f_38327},
{"f_38297ChickenBridge.scm",(void*)f_38297},
{"f_38307ChickenBridge.scm",(void*)f_38307},
{"f_37868ChickenBridge.scm",(void*)f_37868},
{"f_38274ChickenBridge.scm",(void*)f_38274},
{"f_38289ChickenBridge.scm",(void*)f_38289},
{"f_38281ChickenBridge.scm",(void*)f_38281},
{"f_38245ChickenBridge.scm",(void*)f_38245},
{"f_38249ChickenBridge.scm",(void*)f_38249},
{"f_38210ChickenBridge.scm",(void*)f_38210},
{"f_38214ChickenBridge.scm",(void*)f_38214},
{"f_38175ChickenBridge.scm",(void*)f_38175},
{"f_38179ChickenBridge.scm",(void*)f_38179},
{"f_37872ChickenBridge.scm",(void*)f_37872},
{"f_38139ChickenBridge.scm",(void*)f_38139},
{"f_38154ChickenBridge.scm",(void*)f_38154},
{"f_38146ChickenBridge.scm",(void*)f_38146},
{"f_38110ChickenBridge.scm",(void*)f_38110},
{"f_38114ChickenBridge.scm",(void*)f_38114},
{"f_38075ChickenBridge.scm",(void*)f_38075},
{"f_38079ChickenBridge.scm",(void*)f_38079},
{"f_38040ChickenBridge.scm",(void*)f_38040},
{"f_38044ChickenBridge.scm",(void*)f_38044},
{"f_37875ChickenBridge.scm",(void*)f_37875},
{"f_38004ChickenBridge.scm",(void*)f_38004},
{"f_38019ChickenBridge.scm",(void*)f_38019},
{"f_38011ChickenBridge.scm",(void*)f_38011},
{"f_37975ChickenBridge.scm",(void*)f_37975},
{"f_37979ChickenBridge.scm",(void*)f_37979},
{"f_37940ChickenBridge.scm",(void*)f_37940},
{"f_37944ChickenBridge.scm",(void*)f_37944},
{"f_37905ChickenBridge.scm",(void*)f_37905},
{"f_37909ChickenBridge.scm",(void*)f_37909},
{"f_37878ChickenBridge.scm",(void*)f_37878},
{"f_37881ChickenBridge.scm",(void*)f_37881},
{"f_37439ChickenBridge.scm",(void*)f_37439},
{"f_37845ChickenBridge.scm",(void*)f_37845},
{"f_37860ChickenBridge.scm",(void*)f_37860},
{"f_37852ChickenBridge.scm",(void*)f_37852},
{"f_37816ChickenBridge.scm",(void*)f_37816},
{"f_37820ChickenBridge.scm",(void*)f_37820},
{"f_37781ChickenBridge.scm",(void*)f_37781},
{"f_37785ChickenBridge.scm",(void*)f_37785},
{"f_37746ChickenBridge.scm",(void*)f_37746},
{"f_37750ChickenBridge.scm",(void*)f_37750},
{"f_37443ChickenBridge.scm",(void*)f_37443},
{"f_37710ChickenBridge.scm",(void*)f_37710},
{"f_37725ChickenBridge.scm",(void*)f_37725},
{"f_37717ChickenBridge.scm",(void*)f_37717},
{"f_37681ChickenBridge.scm",(void*)f_37681},
{"f_37685ChickenBridge.scm",(void*)f_37685},
{"f_37646ChickenBridge.scm",(void*)f_37646},
{"f_37650ChickenBridge.scm",(void*)f_37650},
{"f_37611ChickenBridge.scm",(void*)f_37611},
{"f_37615ChickenBridge.scm",(void*)f_37615},
{"f_37446ChickenBridge.scm",(void*)f_37446},
{"f_37575ChickenBridge.scm",(void*)f_37575},
{"f_37590ChickenBridge.scm",(void*)f_37590},
{"f_37582ChickenBridge.scm",(void*)f_37582},
{"f_37546ChickenBridge.scm",(void*)f_37546},
{"f_37550ChickenBridge.scm",(void*)f_37550},
{"f_37511ChickenBridge.scm",(void*)f_37511},
{"f_37515ChickenBridge.scm",(void*)f_37515},
{"f_37476ChickenBridge.scm",(void*)f_37476},
{"f_37480ChickenBridge.scm",(void*)f_37480},
{"f_37449ChickenBridge.scm",(void*)f_37449},
{"f_37452ChickenBridge.scm",(void*)f_37452},
{"f_37010ChickenBridge.scm",(void*)f_37010},
{"f_37416ChickenBridge.scm",(void*)f_37416},
{"f_37431ChickenBridge.scm",(void*)f_37431},
{"f_37423ChickenBridge.scm",(void*)f_37423},
{"f_37387ChickenBridge.scm",(void*)f_37387},
{"f_37391ChickenBridge.scm",(void*)f_37391},
{"f_37352ChickenBridge.scm",(void*)f_37352},
{"f_37356ChickenBridge.scm",(void*)f_37356},
{"f_37317ChickenBridge.scm",(void*)f_37317},
{"f_37321ChickenBridge.scm",(void*)f_37321},
{"f_37014ChickenBridge.scm",(void*)f_37014},
{"f_37281ChickenBridge.scm",(void*)f_37281},
{"f_37296ChickenBridge.scm",(void*)f_37296},
{"f_37288ChickenBridge.scm",(void*)f_37288},
{"f_37252ChickenBridge.scm",(void*)f_37252},
{"f_37256ChickenBridge.scm",(void*)f_37256},
{"f_37217ChickenBridge.scm",(void*)f_37217},
{"f_37221ChickenBridge.scm",(void*)f_37221},
{"f_37182ChickenBridge.scm",(void*)f_37182},
{"f_37186ChickenBridge.scm",(void*)f_37186},
{"f_37017ChickenBridge.scm",(void*)f_37017},
{"f_37146ChickenBridge.scm",(void*)f_37146},
{"f_37161ChickenBridge.scm",(void*)f_37161},
{"f_37153ChickenBridge.scm",(void*)f_37153},
{"f_37117ChickenBridge.scm",(void*)f_37117},
{"f_37121ChickenBridge.scm",(void*)f_37121},
{"f_37082ChickenBridge.scm",(void*)f_37082},
{"f_37086ChickenBridge.scm",(void*)f_37086},
{"f_37047ChickenBridge.scm",(void*)f_37047},
{"f_37051ChickenBridge.scm",(void*)f_37051},
{"f_37020ChickenBridge.scm",(void*)f_37020},
{"f_37023ChickenBridge.scm",(void*)f_37023},
{"f_36303ChickenBridge.scm",(void*)f_36303},
{"f_36987ChickenBridge.scm",(void*)f_36987},
{"f_37002ChickenBridge.scm",(void*)f_37002},
{"f_36994ChickenBridge.scm",(void*)f_36994},
{"f_36958ChickenBridge.scm",(void*)f_36958},
{"f_36962ChickenBridge.scm",(void*)f_36962},
{"f_36923ChickenBridge.scm",(void*)f_36923},
{"f_36927ChickenBridge.scm",(void*)f_36927},
{"f_36888ChickenBridge.scm",(void*)f_36888},
{"f_36892ChickenBridge.scm",(void*)f_36892},
{"f_36853ChickenBridge.scm",(void*)f_36853},
{"f_36857ChickenBridge.scm",(void*)f_36857},
{"f_36307ChickenBridge.scm",(void*)f_36307},
{"f_36817ChickenBridge.scm",(void*)f_36817},
{"f_36832ChickenBridge.scm",(void*)f_36832},
{"f_36824ChickenBridge.scm",(void*)f_36824},
{"f_36788ChickenBridge.scm",(void*)f_36788},
{"f_36792ChickenBridge.scm",(void*)f_36792},
{"f_36753ChickenBridge.scm",(void*)f_36753},
{"f_36757ChickenBridge.scm",(void*)f_36757},
{"f_36718ChickenBridge.scm",(void*)f_36718},
{"f_36722ChickenBridge.scm",(void*)f_36722},
{"f_36683ChickenBridge.scm",(void*)f_36683},
{"f_36687ChickenBridge.scm",(void*)f_36687},
{"f_36310ChickenBridge.scm",(void*)f_36310},
{"f_36647ChickenBridge.scm",(void*)f_36647},
{"f_36662ChickenBridge.scm",(void*)f_36662},
{"f_36654ChickenBridge.scm",(void*)f_36654},
{"f_36618ChickenBridge.scm",(void*)f_36618},
{"f_36622ChickenBridge.scm",(void*)f_36622},
{"f_36583ChickenBridge.scm",(void*)f_36583},
{"f_36587ChickenBridge.scm",(void*)f_36587},
{"f_36548ChickenBridge.scm",(void*)f_36548},
{"f_36552ChickenBridge.scm",(void*)f_36552},
{"f_36513ChickenBridge.scm",(void*)f_36513},
{"f_36517ChickenBridge.scm",(void*)f_36517},
{"f_36313ChickenBridge.scm",(void*)f_36313},
{"f_36477ChickenBridge.scm",(void*)f_36477},
{"f_36492ChickenBridge.scm",(void*)f_36492},
{"f_36484ChickenBridge.scm",(void*)f_36484},
{"f_36448ChickenBridge.scm",(void*)f_36448},
{"f_36452ChickenBridge.scm",(void*)f_36452},
{"f_36413ChickenBridge.scm",(void*)f_36413},
{"f_36417ChickenBridge.scm",(void*)f_36417},
{"f_36378ChickenBridge.scm",(void*)f_36378},
{"f_36382ChickenBridge.scm",(void*)f_36382},
{"f_36343ChickenBridge.scm",(void*)f_36343},
{"f_36347ChickenBridge.scm",(void*)f_36347},
{"f_36316ChickenBridge.scm",(void*)f_36316},
{"f_36319ChickenBridge.scm",(void*)f_36319},
{"f_35596ChickenBridge.scm",(void*)f_35596},
{"f_36280ChickenBridge.scm",(void*)f_36280},
{"f_36295ChickenBridge.scm",(void*)f_36295},
{"f_36287ChickenBridge.scm",(void*)f_36287},
{"f_36251ChickenBridge.scm",(void*)f_36251},
{"f_36255ChickenBridge.scm",(void*)f_36255},
{"f_36216ChickenBridge.scm",(void*)f_36216},
{"f_36220ChickenBridge.scm",(void*)f_36220},
{"f_36181ChickenBridge.scm",(void*)f_36181},
{"f_36185ChickenBridge.scm",(void*)f_36185},
{"f_36146ChickenBridge.scm",(void*)f_36146},
{"f_36150ChickenBridge.scm",(void*)f_36150},
{"f_35600ChickenBridge.scm",(void*)f_35600},
{"f_36110ChickenBridge.scm",(void*)f_36110},
{"f_36125ChickenBridge.scm",(void*)f_36125},
{"f_36117ChickenBridge.scm",(void*)f_36117},
{"f_36081ChickenBridge.scm",(void*)f_36081},
{"f_36085ChickenBridge.scm",(void*)f_36085},
{"f_36046ChickenBridge.scm",(void*)f_36046},
{"f_36050ChickenBridge.scm",(void*)f_36050},
{"f_36011ChickenBridge.scm",(void*)f_36011},
{"f_36015ChickenBridge.scm",(void*)f_36015},
{"f_35976ChickenBridge.scm",(void*)f_35976},
{"f_35980ChickenBridge.scm",(void*)f_35980},
{"f_35603ChickenBridge.scm",(void*)f_35603},
{"f_35940ChickenBridge.scm",(void*)f_35940},
{"f_35955ChickenBridge.scm",(void*)f_35955},
{"f_35947ChickenBridge.scm",(void*)f_35947},
{"f_35911ChickenBridge.scm",(void*)f_35911},
{"f_35915ChickenBridge.scm",(void*)f_35915},
{"f_35876ChickenBridge.scm",(void*)f_35876},
{"f_35880ChickenBridge.scm",(void*)f_35880},
{"f_35841ChickenBridge.scm",(void*)f_35841},
{"f_35845ChickenBridge.scm",(void*)f_35845},
{"f_35806ChickenBridge.scm",(void*)f_35806},
{"f_35810ChickenBridge.scm",(void*)f_35810},
{"f_35606ChickenBridge.scm",(void*)f_35606},
{"f_35770ChickenBridge.scm",(void*)f_35770},
{"f_35785ChickenBridge.scm",(void*)f_35785},
{"f_35777ChickenBridge.scm",(void*)f_35777},
{"f_35741ChickenBridge.scm",(void*)f_35741},
{"f_35745ChickenBridge.scm",(void*)f_35745},
{"f_35706ChickenBridge.scm",(void*)f_35706},
{"f_35710ChickenBridge.scm",(void*)f_35710},
{"f_35671ChickenBridge.scm",(void*)f_35671},
{"f_35675ChickenBridge.scm",(void*)f_35675},
{"f_35636ChickenBridge.scm",(void*)f_35636},
{"f_35640ChickenBridge.scm",(void*)f_35640},
{"f_35609ChickenBridge.scm",(void*)f_35609},
{"f_35612ChickenBridge.scm",(void*)f_35612},
{"f_34889ChickenBridge.scm",(void*)f_34889},
{"f_35573ChickenBridge.scm",(void*)f_35573},
{"f_35588ChickenBridge.scm",(void*)f_35588},
{"f_35580ChickenBridge.scm",(void*)f_35580},
{"f_35544ChickenBridge.scm",(void*)f_35544},
{"f_35548ChickenBridge.scm",(void*)f_35548},
{"f_35509ChickenBridge.scm",(void*)f_35509},
{"f_35513ChickenBridge.scm",(void*)f_35513},
{"f_35474ChickenBridge.scm",(void*)f_35474},
{"f_35478ChickenBridge.scm",(void*)f_35478},
{"f_35439ChickenBridge.scm",(void*)f_35439},
{"f_35443ChickenBridge.scm",(void*)f_35443},
{"f_34893ChickenBridge.scm",(void*)f_34893},
{"f_35403ChickenBridge.scm",(void*)f_35403},
{"f_35418ChickenBridge.scm",(void*)f_35418},
{"f_35410ChickenBridge.scm",(void*)f_35410},
{"f_35374ChickenBridge.scm",(void*)f_35374},
{"f_35378ChickenBridge.scm",(void*)f_35378},
{"f_35339ChickenBridge.scm",(void*)f_35339},
{"f_35343ChickenBridge.scm",(void*)f_35343},
{"f_35304ChickenBridge.scm",(void*)f_35304},
{"f_35308ChickenBridge.scm",(void*)f_35308},
{"f_35269ChickenBridge.scm",(void*)f_35269},
{"f_35273ChickenBridge.scm",(void*)f_35273},
{"f_34896ChickenBridge.scm",(void*)f_34896},
{"f_35233ChickenBridge.scm",(void*)f_35233},
{"f_35248ChickenBridge.scm",(void*)f_35248},
{"f_35240ChickenBridge.scm",(void*)f_35240},
{"f_35204ChickenBridge.scm",(void*)f_35204},
{"f_35208ChickenBridge.scm",(void*)f_35208},
{"f_35169ChickenBridge.scm",(void*)f_35169},
{"f_35173ChickenBridge.scm",(void*)f_35173},
{"f_35134ChickenBridge.scm",(void*)f_35134},
{"f_35138ChickenBridge.scm",(void*)f_35138},
{"f_35099ChickenBridge.scm",(void*)f_35099},
{"f_35103ChickenBridge.scm",(void*)f_35103},
{"f_34899ChickenBridge.scm",(void*)f_34899},
{"f_35063ChickenBridge.scm",(void*)f_35063},
{"f_35078ChickenBridge.scm",(void*)f_35078},
{"f_35070ChickenBridge.scm",(void*)f_35070},
{"f_35034ChickenBridge.scm",(void*)f_35034},
{"f_35038ChickenBridge.scm",(void*)f_35038},
{"f_34999ChickenBridge.scm",(void*)f_34999},
{"f_35003ChickenBridge.scm",(void*)f_35003},
{"f_34964ChickenBridge.scm",(void*)f_34964},
{"f_34968ChickenBridge.scm",(void*)f_34968},
{"f_34929ChickenBridge.scm",(void*)f_34929},
{"f_34933ChickenBridge.scm",(void*)f_34933},
{"f_34902ChickenBridge.scm",(void*)f_34902},
{"f_34905ChickenBridge.scm",(void*)f_34905},
{"f_34460ChickenBridge.scm",(void*)f_34460},
{"f_34866ChickenBridge.scm",(void*)f_34866},
{"f_34881ChickenBridge.scm",(void*)f_34881},
{"f_34873ChickenBridge.scm",(void*)f_34873},
{"f_34837ChickenBridge.scm",(void*)f_34837},
{"f_34841ChickenBridge.scm",(void*)f_34841},
{"f_34802ChickenBridge.scm",(void*)f_34802},
{"f_34806ChickenBridge.scm",(void*)f_34806},
{"f_34767ChickenBridge.scm",(void*)f_34767},
{"f_34771ChickenBridge.scm",(void*)f_34771},
{"f_34464ChickenBridge.scm",(void*)f_34464},
{"f_34731ChickenBridge.scm",(void*)f_34731},
{"f_34746ChickenBridge.scm",(void*)f_34746},
{"f_34738ChickenBridge.scm",(void*)f_34738},
{"f_34702ChickenBridge.scm",(void*)f_34702},
{"f_34706ChickenBridge.scm",(void*)f_34706},
{"f_34667ChickenBridge.scm",(void*)f_34667},
{"f_34671ChickenBridge.scm",(void*)f_34671},
{"f_34632ChickenBridge.scm",(void*)f_34632},
{"f_34636ChickenBridge.scm",(void*)f_34636},
{"f_34467ChickenBridge.scm",(void*)f_34467},
{"f_34596ChickenBridge.scm",(void*)f_34596},
{"f_34611ChickenBridge.scm",(void*)f_34611},
{"f_34603ChickenBridge.scm",(void*)f_34603},
{"f_34567ChickenBridge.scm",(void*)f_34567},
{"f_34571ChickenBridge.scm",(void*)f_34571},
{"f_34532ChickenBridge.scm",(void*)f_34532},
{"f_34536ChickenBridge.scm",(void*)f_34536},
{"f_34497ChickenBridge.scm",(void*)f_34497},
{"f_34501ChickenBridge.scm",(void*)f_34501},
{"f_34470ChickenBridge.scm",(void*)f_34470},
{"f_34473ChickenBridge.scm",(void*)f_34473},
{"f_33405ChickenBridge.scm",(void*)f_33405},
{"f_34437ChickenBridge.scm",(void*)f_34437},
{"f_34452ChickenBridge.scm",(void*)f_34452},
{"f_34444ChickenBridge.scm",(void*)f_34444},
{"f_34408ChickenBridge.scm",(void*)f_34408},
{"f_34412ChickenBridge.scm",(void*)f_34412},
{"f_34373ChickenBridge.scm",(void*)f_34373},
{"f_34377ChickenBridge.scm",(void*)f_34377},
{"f_34338ChickenBridge.scm",(void*)f_34338},
{"f_34342ChickenBridge.scm",(void*)f_34342},
{"f_34303ChickenBridge.scm",(void*)f_34303},
{"f_34307ChickenBridge.scm",(void*)f_34307},
{"f_34268ChickenBridge.scm",(void*)f_34268},
{"f_34272ChickenBridge.scm",(void*)f_34272},
{"f_33409ChickenBridge.scm",(void*)f_33409},
{"f_34232ChickenBridge.scm",(void*)f_34232},
{"f_34247ChickenBridge.scm",(void*)f_34247},
{"f_34239ChickenBridge.scm",(void*)f_34239},
{"f_34203ChickenBridge.scm",(void*)f_34203},
{"f_34207ChickenBridge.scm",(void*)f_34207},
{"f_34168ChickenBridge.scm",(void*)f_34168},
{"f_34172ChickenBridge.scm",(void*)f_34172},
{"f_34133ChickenBridge.scm",(void*)f_34133},
{"f_34137ChickenBridge.scm",(void*)f_34137},
{"f_34098ChickenBridge.scm",(void*)f_34098},
{"f_34102ChickenBridge.scm",(void*)f_34102},
{"f_34063ChickenBridge.scm",(void*)f_34063},
{"f_34067ChickenBridge.scm",(void*)f_34067},
{"f_33412ChickenBridge.scm",(void*)f_33412},
{"f_34027ChickenBridge.scm",(void*)f_34027},
{"f_34042ChickenBridge.scm",(void*)f_34042},
{"f_34034ChickenBridge.scm",(void*)f_34034},
{"f_33998ChickenBridge.scm",(void*)f_33998},
{"f_34002ChickenBridge.scm",(void*)f_34002},
{"f_33963ChickenBridge.scm",(void*)f_33963},
{"f_33967ChickenBridge.scm",(void*)f_33967},
{"f_33928ChickenBridge.scm",(void*)f_33928},
{"f_33932ChickenBridge.scm",(void*)f_33932},
{"f_33893ChickenBridge.scm",(void*)f_33893},
{"f_33897ChickenBridge.scm",(void*)f_33897},
{"f_33858ChickenBridge.scm",(void*)f_33858},
{"f_33862ChickenBridge.scm",(void*)f_33862},
{"f_33415ChickenBridge.scm",(void*)f_33415},
{"f_33822ChickenBridge.scm",(void*)f_33822},
{"f_33837ChickenBridge.scm",(void*)f_33837},
{"f_33829ChickenBridge.scm",(void*)f_33829},
{"f_33793ChickenBridge.scm",(void*)f_33793},
{"f_33797ChickenBridge.scm",(void*)f_33797},
{"f_33758ChickenBridge.scm",(void*)f_33758},
{"f_33762ChickenBridge.scm",(void*)f_33762},
{"f_33723ChickenBridge.scm",(void*)f_33723},
{"f_33727ChickenBridge.scm",(void*)f_33727},
{"f_33688ChickenBridge.scm",(void*)f_33688},
{"f_33692ChickenBridge.scm",(void*)f_33692},
{"f_33653ChickenBridge.scm",(void*)f_33653},
{"f_33657ChickenBridge.scm",(void*)f_33657},
{"f_33418ChickenBridge.scm",(void*)f_33418},
{"f_33617ChickenBridge.scm",(void*)f_33617},
{"f_33632ChickenBridge.scm",(void*)f_33632},
{"f_33624ChickenBridge.scm",(void*)f_33624},
{"f_33588ChickenBridge.scm",(void*)f_33588},
{"f_33592ChickenBridge.scm",(void*)f_33592},
{"f_33553ChickenBridge.scm",(void*)f_33553},
{"f_33557ChickenBridge.scm",(void*)f_33557},
{"f_33518ChickenBridge.scm",(void*)f_33518},
{"f_33522ChickenBridge.scm",(void*)f_33522},
{"f_33483ChickenBridge.scm",(void*)f_33483},
{"f_33487ChickenBridge.scm",(void*)f_33487},
{"f_33448ChickenBridge.scm",(void*)f_33448},
{"f_33452ChickenBridge.scm",(void*)f_33452},
{"f_33421ChickenBridge.scm",(void*)f_33421},
{"f_33424ChickenBridge.scm",(void*)f_33424},
{"f_33399ChickenBridge.scm",(void*)f_33399},
{"f_7748ChickenBridge.scm",(void*)f_7748},
{"f_33246ChickenBridge.scm",(void*)f_33246},
{"f_33253ChickenBridge.scm",(void*)f_33253},
{"f_33191ChickenBridge.scm",(void*)f_33191},
{"f_33198ChickenBridge.scm",(void*)f_33198},
{"f_32944ChickenBridge.scm",(void*)f_32944},
{"f_33168ChickenBridge.scm",(void*)f_33168},
{"f_33183ChickenBridge.scm",(void*)f_33183},
{"f_33175ChickenBridge.scm",(void*)f_33175},
{"f_33139ChickenBridge.scm",(void*)f_33139},
{"f_33143ChickenBridge.scm",(void*)f_33143},
{"f_33104ChickenBridge.scm",(void*)f_33104},
{"f_33108ChickenBridge.scm",(void*)f_33108},
{"f_32948ChickenBridge.scm",(void*)f_32948},
{"f_33068ChickenBridge.scm",(void*)f_33068},
{"f_33083ChickenBridge.scm",(void*)f_33083},
{"f_33075ChickenBridge.scm",(void*)f_33075},
{"f_33039ChickenBridge.scm",(void*)f_33039},
{"f_33043ChickenBridge.scm",(void*)f_33043},
{"f_33004ChickenBridge.scm",(void*)f_33004},
{"f_33008ChickenBridge.scm",(void*)f_33008},
{"f_32951ChickenBridge.scm",(void*)f_32951},
{"f_32954ChickenBridge.scm",(void*)f_32954},
{"f_32967ChickenBridge.scm",(void*)f_32967},
{"f_32971ChickenBridge.scm",(void*)f_32971},
{"f_32873ChickenBridge.scm",(void*)f_32873},
{"f_32877ChickenBridge.scm",(void*)f_32877},
{"f_32880ChickenBridge.scm",(void*)f_32880},
{"f_7668ChickenBridge.scm",(void*)f_7668},
{"f_32883ChickenBridge.scm",(void*)f_32883},
{"f_32915ChickenBridge.scm",(void*)f_32915},
{"f_32905ChickenBridge.scm",(void*)f_32905},
{"f_32895ChickenBridge.scm",(void*)f_32895},
{"f_32886ChickenBridge.scm",(void*)f_32886},
{"f_32845ChickenBridge.scm",(void*)f_32845},
{"f_32849ChickenBridge.scm",(void*)f_32849},
{"f_32821ChickenBridge.scm",(void*)f_32821},
{"f_32772ChickenBridge.scm",(void*)f_32772},
{"f_7654ChickenBridge.scm",(void*)f_7654},
{"f_32776ChickenBridge.scm",(void*)f_32776},
{"f_32792ChickenBridge.scm",(void*)f_32792},
{"f_32819ChickenBridge.scm",(void*)f_32819},
{"f_32795ChickenBridge.scm",(void*)f_32795},
{"f_32815ChickenBridge.scm",(void*)f_32815},
{"f_32811ChickenBridge.scm",(void*)f_32811},
{"f_32779ChickenBridge.scm",(void*)f_32779},
{"f_32763ChickenBridge.scm",(void*)f_32763},
{"f_32767ChickenBridge.scm",(void*)f_32767},
{"f_32610ChickenBridge.scm",(void*)f_32610},
{"f_32737ChickenBridge.scm",(void*)f_32737},
{"f_32750ChickenBridge.scm",(void*)f_32750},
{"f_32732ChickenBridge.scm",(void*)f_32732},
{"f_32613ChickenBridge.scm",(void*)f_32613},
{"f_32729ChickenBridge.scm",(void*)f_32729},
{"f_32713ChickenBridge.scm",(void*)f_32713},
{"f_32641ChickenBridge.scm",(void*)f_32641},
{"f_32649ChickenBridge.scm",(void*)f_32649},
{"f_32659ChickenBridge.scm",(void*)f_32659},
{"f_32662ChickenBridge.scm",(void*)f_32662},
{"f_32644ChickenBridge.scm",(void*)f_32644},
{"f_32451ChickenBridge.scm",(void*)f_32451},
{"f_7700ChickenBridge.scm",(void*)f_7700},
{"f_32473ChickenBridge.scm",(void*)f_32473},
{"f_32477ChickenBridge.scm",(void*)f_32477},
{"f_32455ChickenBridge.scm",(void*)f_32455},
{"f_31967ChickenBridge.scm",(void*)f_31967},
{"f_32428ChickenBridge.scm",(void*)f_32428},
{"f_32443ChickenBridge.scm",(void*)f_32443},
{"f_32435ChickenBridge.scm",(void*)f_32435},
{"f_32399ChickenBridge.scm",(void*)f_32399},
{"f_32403ChickenBridge.scm",(void*)f_32403},
{"f_32364ChickenBridge.scm",(void*)f_32364},
{"f_32368ChickenBridge.scm",(void*)f_32368},
{"f_32329ChickenBridge.scm",(void*)f_32329},
{"f_32333ChickenBridge.scm",(void*)f_32333},
{"f_31971ChickenBridge.scm",(void*)f_31971},
{"f_32293ChickenBridge.scm",(void*)f_32293},
{"f_32308ChickenBridge.scm",(void*)f_32308},
{"f_32300ChickenBridge.scm",(void*)f_32300},
{"f_32264ChickenBridge.scm",(void*)f_32264},
{"f_32268ChickenBridge.scm",(void*)f_32268},
{"f_32229ChickenBridge.scm",(void*)f_32229},
{"f_32233ChickenBridge.scm",(void*)f_32233},
{"f_32194ChickenBridge.scm",(void*)f_32194},
{"f_32198ChickenBridge.scm",(void*)f_32198},
{"f_31974ChickenBridge.scm",(void*)f_31974},
{"f_32158ChickenBridge.scm",(void*)f_32158},
{"f_32173ChickenBridge.scm",(void*)f_32173},
{"f_32165ChickenBridge.scm",(void*)f_32165},
{"f_32129ChickenBridge.scm",(void*)f_32129},
{"f_32133ChickenBridge.scm",(void*)f_32133},
{"f_32094ChickenBridge.scm",(void*)f_32094},
{"f_32098ChickenBridge.scm",(void*)f_32098},
{"f_32059ChickenBridge.scm",(void*)f_32059},
{"f_32063ChickenBridge.scm",(void*)f_32063},
{"f_31977ChickenBridge.scm",(void*)f_31977},
{"f_31980ChickenBridge.scm",(void*)f_31980},
{"f_32035ChickenBridge.scm",(void*)f_32035},
{"f_32031ChickenBridge.scm",(void*)f_32031},
{"f_31983ChickenBridge.scm",(void*)f_31983},
{"f_29771ChickenBridge.scm",(void*)f_29771},
{"f_29784ChickenBridge.scm",(void*)f_29784},
{"f_29791ChickenBridge.scm",(void*)f_29791},
{"f_29798ChickenBridge.scm",(void*)f_29798},
{"f_29777ChickenBridge.scm",(void*)f_29777},
{"f_31995ChickenBridge.scm",(void*)f_31995},
{"f_32017ChickenBridge.scm",(void*)f_32017},
{"f_32579ChickenBridge.scm",(void*)f_32579},
{"f_32589ChickenBridge.scm",(void*)f_32589},
{"f_32492ChickenBridge.scm",(void*)f_32492},
{"f_32549ChickenBridge.scm",(void*)f_32549},
{"f_32559ChickenBridge.scm",(void*)f_32559},
{"f_32500ChickenBridge.scm",(void*)f_32500},
{"f_32518ChickenBridge.scm",(void*)f_32518},
{"f_32522ChickenBridge.scm",(void*)f_32522},
{"f_32526ChickenBridge.scm",(void*)f_32526},
{"f_32533ChickenBridge.scm",(void*)f_32533},
{"f_32510ChickenBridge.scm",(void*)f_32510},
{"f_32503ChickenBridge.scm",(void*)f_32503},
{"f_31986ChickenBridge.scm",(void*)f_31986},
{"f_30898ChickenBridge.scm",(void*)f_30898},
{"f_30911ChickenBridge.scm",(void*)f_30911},
{"f_30961ChickenBridge.scm",(void*)f_30961},
{"f_31058ChickenBridge.scm",(void*)f_31058},
{"f_31126ChickenBridge.scm",(void*)f_31126},
{"f_31383ChickenBridge.scm",(void*)f_31383},
{"f_31133ChickenBridge.scm",(void*)f_31133},
{"f_31371ChickenBridge.scm",(void*)f_31371},
{"f_31322ChickenBridge.scm",(void*)f_31322},
{"f_31328ChickenBridge.scm",(void*)f_31328},
{"f_31352ChickenBridge.scm",(void*)f_31352},
{"f_31348ChickenBridge.scm",(void*)f_31348},
{"f_31336ChickenBridge.scm",(void*)f_31336},
{"f_31136ChickenBridge.scm",(void*)f_31136},
{"f_31298ChickenBridge.scm",(void*)f_31298},
{"f_31302ChickenBridge.scm",(void*)f_31302},
{"f_31139ChickenBridge.scm",(void*)f_31139},
{"f_31275ChickenBridge.scm",(void*)f_31275},
{"f_31279ChickenBridge.scm",(void*)f_31279},
{"f_31142ChickenBridge.scm",(void*)f_31142},
{"f_31252ChickenBridge.scm",(void*)f_31252},
{"f_31256ChickenBridge.scm",(void*)f_31256},
{"f_31145ChickenBridge.scm",(void*)f_31145},
{"f_31177ChickenBridge.scm",(void*)f_31177},
{"f_31195ChickenBridge.scm",(void*)f_31195},
{"f_31213ChickenBridge.scm",(void*)f_31213},
{"f_31231ChickenBridge.scm",(void*)f_31231},
{"f_31148ChickenBridge.scm",(void*)f_31148},
{"f_31152ChickenBridge.scm",(void*)f_31152},
{"f_31062ChickenBridge.scm",(void*)f_31062},
{"f_31066ChickenBridge.scm",(void*)f_31066},
{"f_31070ChickenBridge.scm",(void*)f_31070},
{"f_30965ChickenBridge.scm",(void*)f_30965},
{"f_30969ChickenBridge.scm",(void*)f_30969},
{"f_30973ChickenBridge.scm",(void*)f_30973},
{"f_30992ChickenBridge.scm",(void*)f_30992},
{"f_30996ChickenBridge.scm",(void*)f_30996},
{"f_30976ChickenBridge.scm",(void*)f_30976},
{"f_30980ChickenBridge.scm",(void*)f_30980},
{"f_30915ChickenBridge.scm",(void*)f_30915},
{"f_30919ChickenBridge.scm",(void*)f_30919},
{"f_30923ChickenBridge.scm",(void*)f_30923},
{"f_30905ChickenBridge.scm",(void*)f_30905},
{"f_30720ChickenBridge.scm",(void*)f_30720},
{"f_30732ChickenBridge.scm",(void*)f_30732},
{"f_30751ChickenBridge.scm",(void*)f_30751},
{"f_30769ChickenBridge.scm",(void*)f_30769},
{"f_30801ChickenBridge.scm",(void*)f_30801},
{"f_30804ChickenBridge.scm",(void*)f_30804},
{"f_30797ChickenBridge.scm",(void*)f_30797},
{"f_30783ChickenBridge.scm",(void*)f_30783},
{"f_30754ChickenBridge.scm",(void*)f_30754},
{"f_30699ChickenBridge.scm",(void*)f_30699},
{"f_30706ChickenBridge.scm",(void*)f_30706},
{"f_30709ChickenBridge.scm",(void*)f_30709},
{"f_30715ChickenBridge.scm",(void*)f_30715},
{"f_30634ChickenBridge.scm",(void*)f_30634},
{"f_30643ChickenBridge.scm",(void*)f_30643},
{"f_30666ChickenBridge.scm",(void*)f_30666},
{"f_30656ChickenBridge.scm",(void*)f_30656},
{"f_30590ChickenBridge.scm",(void*)f_30590},
{"f_30598ChickenBridge.scm",(void*)f_30598},
{"f_30602ChickenBridge.scm",(void*)f_30602},
{"f_30578ChickenBridge.scm",(void*)f_30578},
{"f_30476ChickenBridge.scm",(void*)f_30476},
{"f_30428ChickenBridge.scm",(void*)f_30428},
{"f_29809ChickenBridge.scm",(void*)f_29809},
{"f_29813ChickenBridge.scm",(void*)f_29813},
{"f_29816ChickenBridge.scm",(void*)f_29816},
{"f_30242ChickenBridge.scm",(void*)f_30242},
{"f_30238ChickenBridge.scm",(void*)f_30238},
{"f_30234ChickenBridge.scm",(void*)f_30234},
{"f_29819ChickenBridge.scm",(void*)f_29819},
{"f_29942ChickenBridge.scm",(void*)f_29942},
{"f_29124ChickenBridge.scm",(void*)f_29124},
{"f_29948ChickenBridge.scm",(void*)f_29948},
{"f_29140ChickenBridge.scm",(void*)f_29140},
{"f_30036ChickenBridge.scm",(void*)f_30036},
{"f_30106ChickenBridge.scm",(void*)f_30106},
{"f_29156ChickenBridge.scm",(void*)f_29156},
{"f_30109ChickenBridge.scm",(void*)f_30109},
{"f_29188ChickenBridge.scm",(void*)f_29188},
{"f_30187ChickenBridge.scm",(void*)f_30187},
{"f_30213ChickenBridge.scm",(void*)f_30213},
{"f_30207ChickenBridge.scm",(void*)f_30207},
{"f_30196ChickenBridge.scm",(void*)f_30196},
{"f_30138ChickenBridge.scm",(void*)f_30138},
{"f_30148ChickenBridge.scm",(void*)f_30148},
{"f_30174ChickenBridge.scm",(void*)f_30174},
{"f_30168ChickenBridge.scm",(void*)f_30168},
{"f_30151ChickenBridge.scm",(void*)f_30151},
{"f_30161ChickenBridge.scm",(void*)f_30161},
{"f_30154ChickenBridge.scm",(void*)f_30154},
{"f_30115ChickenBridge.scm",(void*)f_30115},
{"f_30124ChickenBridge.scm",(void*)f_30124},
{"f_30118ChickenBridge.scm",(void*)f_30118},
{"f_30042ChickenBridge.scm",(void*)f_30042},
{"f_30060ChickenBridge.scm",(void*)f_30060},
{"f_30093ChickenBridge.scm",(void*)f_30093},
{"f_30079ChickenBridge.scm",(void*)f_30079},
{"f_30087ChickenBridge.scm",(void*)f_30087},
{"f_30070ChickenBridge.scm",(void*)f_30070},
{"f_30045ChickenBridge.scm",(void*)f_30045},
{"f_29957ChickenBridge.scm",(void*)f_29957},
{"f_29979ChickenBridge.scm",(void*)f_29979},
{"f_30026ChickenBridge.scm",(void*)f_30026},
{"f_30012ChickenBridge.scm",(void*)f_30012},
{"f_30020ChickenBridge.scm",(void*)f_30020},
{"f_29992ChickenBridge.scm",(void*)f_29992},
{"f_29995ChickenBridge.scm",(void*)f_29995},
{"f_29960ChickenBridge.scm",(void*)f_29960},
{"f_29977ChickenBridge.scm",(void*)f_29977},
{"f_29963ChickenBridge.scm",(void*)f_29963},
{"f_29828ChickenBridge.scm",(void*)f_29828},
{"f_29834ChickenBridge.scm",(void*)f_29834},
{"f_29892ChickenBridge.scm",(void*)f_29892},
{"f_29895ChickenBridge.scm",(void*)f_29895},
{"f_29916ChickenBridge.scm",(void*)f_29916},
{"f_29927ChickenBridge.scm",(void*)f_29927},
{"f_29906ChickenBridge.scm",(void*)f_29906},
{"f_29840ChickenBridge.scm",(void*)f_29840},
{"f_29850ChickenBridge.scm",(void*)f_29850},
{"f_29886ChickenBridge.scm",(void*)f_29886},
{"f_29856ChickenBridge.scm",(void*)f_29856},
{"f_29871ChickenBridge.scm",(void*)f_29871},
{"f_29879ChickenBridge.scm",(void*)f_29879},
{"f_29863ChickenBridge.scm",(void*)f_29863},
{"f_29705ChickenBridge.scm",(void*)f_29705},
{"f_29707ChickenBridge.scm",(void*)f_29707},
{"f_29755ChickenBridge.scm",(void*)f_29755},
{"f_29711ChickenBridge.scm",(void*)f_29711},
{"f_29714ChickenBridge.scm",(void*)f_29714},
{"f_29719ChickenBridge.scm",(void*)f_29719},
{"f_29740ChickenBridge.scm",(void*)f_29740},
{"f_29697ChickenBridge.scm",(void*)f_29697},
{"f_29699ChickenBridge.scm",(void*)f_29699},
{"f_29520ChickenBridge.scm",(void*)f_29520},
{"f_29528ChickenBridge.scm",(void*)f_29528},
{"f_29489ChickenBridge.scm",(void*)f_29489},
{"f_29506ChickenBridge.scm",(void*)f_29506},
{"f_29510ChickenBridge.scm",(void*)f_29510},
{"f_29456ChickenBridge.scm",(void*)f_29456},
{"f_29463ChickenBridge.scm",(void*)f_29463},
{"f_29350ChickenBridge.scm",(void*)f_29350},
{"f_29357ChickenBridge.scm",(void*)f_29357},
{"f_29472ChickenBridge.scm",(void*)f_29472},
{"f_29695ChickenBridge.scm",(void*)f_29695},
{"f_29672ChickenBridge.scm",(void*)f_29672},
{"f_29688ChickenBridge.scm",(void*)f_29688},
{"f_29534ChickenBridge.scm",(void*)f_29534},
{"f_29537ChickenBridge.scm",(void*)f_29537},
{"f_29561ChickenBridge.scm",(void*)f_29561},
{"f_29618ChickenBridge.scm",(void*)f_29618},
{"f_29624ChickenBridge.scm",(void*)f_29624},
{"f_29633ChickenBridge.scm",(void*)f_29633},
{"f_29642ChickenBridge.scm",(void*)f_29642},
{"f_29651ChickenBridge.scm",(void*)f_29651},
{"f_29660ChickenBridge.scm",(void*)f_29660},
{"f_29612ChickenBridge.scm",(void*)f_29612},
{"f_29567ChickenBridge.scm",(void*)f_29567},
{"f_29573ChickenBridge.scm",(void*)f_29573},
{"f_29579ChickenBridge.scm",(void*)f_29579},
{"f_29585ChickenBridge.scm",(void*)f_29585},
{"f_29591ChickenBridge.scm",(void*)f_29591},
{"f_29597ChickenBridge.scm",(void*)f_29597},
{"f_29438ChickenBridge.scm",(void*)f_29438},
{"f_29445ChickenBridge.scm",(void*)f_29445},
{"f_29371ChickenBridge.scm",(void*)f_29371},
{"f_29359ChickenBridge.scm",(void*)f_29359},
{"f_29327ChickenBridge.scm",(void*)f_29327},
{"f_29334ChickenBridge.scm",(void*)f_29334},
{"f_29341ChickenBridge.scm",(void*)f_29341},
{"f_29311ChickenBridge.scm",(void*)f_29311},
{"f_29318ChickenBridge.scm",(void*)f_29318},
{"f_29325ChickenBridge.scm",(void*)f_29325},
{"f_29302ChickenBridge.scm",(void*)f_29302},
{"f_29284ChickenBridge.scm",(void*)f_29284},
{"f_29266ChickenBridge.scm",(void*)f_29266},
{"f_29251ChickenBridge.scm",(void*)f_29251},
{"f_29245ChickenBridge.scm",(void*)f_29245},
{"f_29197ChickenBridge.scm",(void*)f_29197},
{"f_29165ChickenBridge.scm",(void*)f_29165},
{"f_29172ChickenBridge.scm",(void*)f_29172},
{"f_29107ChickenBridge.scm",(void*)f_29107},
{"f_29115ChickenBridge.scm",(void*)f_29115},
{"f_29097ChickenBridge.scm",(void*)f_29097},
{"f_29105ChickenBridge.scm",(void*)f_29105},
{"f_29091ChickenBridge.scm",(void*)f_29091},
{"f_29079ChickenBridge.scm",(void*)f_29079},
{"f_29076ChickenBridge.scm",(void*)f_29076},
{"f_29058ChickenBridge.scm",(void*)f_29058},
{"f_29062ChickenBridge.scm",(void*)f_29062},
{"f_28953ChickenBridge.scm",(void*)f_28953},
{"f_28943ChickenBridge.scm",(void*)f_28943},
{"f_28931ChickenBridge.scm",(void*)f_28931},
{"f_28908ChickenBridge.scm",(void*)f_28908},
{"f_28899ChickenBridge.scm",(void*)f_28899},
{"f_28863ChickenBridge.scm",(void*)f_28863},
{"f_28842ChickenBridge.scm",(void*)f_28842},
{"f_28646ChickenBridge.scm",(void*)f_28646},
{"f_28650ChickenBridge.scm",(void*)f_28650},
{"f_28799ChickenBridge.scm",(void*)f_28799},
{"f_28825ChickenBridge.scm",(void*)f_28825},
{"f_28810ChickenBridge.scm",(void*)f_28810},
{"f_28656ChickenBridge.scm",(void*)f_28656},
{"f_28661ChickenBridge.scm",(void*)f_28661},
{"f_28665ChickenBridge.scm",(void*)f_28665},
{"f_28668ChickenBridge.scm",(void*)f_28668},
{"f_28671ChickenBridge.scm",(void*)f_28671},
{"f_28674ChickenBridge.scm",(void*)f_28674},
{"f_28677ChickenBridge.scm",(void*)f_28677},
{"f_28680ChickenBridge.scm",(void*)f_28680},
{"f_28685ChickenBridge.scm",(void*)f_28685},
{"f_28779ChickenBridge.scm",(void*)f_28779},
{"f_28786ChickenBridge.scm",(void*)f_28786},
{"f_28695ChickenBridge.scm",(void*)f_28695},
{"f_28716ChickenBridge.scm",(void*)f_28716},
{"f_28720ChickenBridge.scm",(void*)f_28720},
{"f_28724ChickenBridge.scm",(void*)f_28724},
{"f_28726ChickenBridge.scm",(void*)f_28726},
{"f_28736ChickenBridge.scm",(void*)f_28736},
{"f_28698ChickenBridge.scm",(void*)f_28698},
{"f_28701ChickenBridge.scm",(void*)f_28701},
{"f_28520ChickenBridge.scm",(void*)f_28520},
{"f_28526ChickenBridge.scm",(void*)f_28526},
{"f_28530ChickenBridge.scm",(void*)f_28530},
{"f_28548ChickenBridge.scm",(void*)f_28548},
{"f_28551ChickenBridge.scm",(void*)f_28551},
{"f_28555ChickenBridge.scm",(void*)f_28555},
{"f_28558ChickenBridge.scm",(void*)f_28558},
{"f_28610ChickenBridge.scm",(void*)f_28610},
{"f_28621ChickenBridge.scm",(void*)f_28621},
{"f_28561ChickenBridge.scm",(void*)f_28561},
{"f_28571ChickenBridge.scm",(void*)f_28571},
{"f_28573ChickenBridge.scm",(void*)f_28573},
{"f_28417ChickenBridge.scm",(void*)f_28417},
{"f_28441ChickenBridge.scm",(void*)f_28441},
{"f_28445ChickenBridge.scm",(void*)f_28445},
{"f_28471ChickenBridge.scm",(void*)f_28471},
{"f_28481ChickenBridge.scm",(void*)f_28481},
{"f_28518ChickenBridge.scm",(void*)f_28518},
{"f_28510ChickenBridge.scm",(void*)f_28510},
{"f_28448ChickenBridge.scm",(void*)f_28448},
{"f_28418ChickenBridge.scm",(void*)f_28418},
{"f_28422ChickenBridge.scm",(void*)f_28422},
{"f_28425ChickenBridge.scm",(void*)f_28425},
{"f_28587ChickenBridge.scm",(void*)f_28587},
{"f_28590ChickenBridge.scm",(void*)f_28590},
{"f_28597ChickenBridge.scm",(void*)f_28597},
{"f_28531ChickenBridge.scm",(void*)f_28531},
{"f_28535ChickenBridge.scm",(void*)f_28535},
{"f_28538ChickenBridge.scm",(void*)f_28538},
{"f_28007ChickenBridge.scm",(void*)f_28007},
{"f_28386ChickenBridge.scm",(void*)f_28386},
{"f_28380ChickenBridge.scm",(void*)f_28380},
{"f_28011ChickenBridge.scm",(void*)f_28011},
{"f_28364ChickenBridge.scm",(void*)f_28364},
{"f_28014ChickenBridge.scm",(void*)f_28014},
{"f_28350ChickenBridge.scm",(void*)f_28350},
{"f_28346ChickenBridge.scm",(void*)f_28346},
{"f_28017ChickenBridge.scm",(void*)f_28017},
{"f_28339ChickenBridge.scm",(void*)f_28339},
{"f_28335ChickenBridge.scm",(void*)f_28335},
{"f_28020ChickenBridge.scm",(void*)f_28020},
{"f_28023ChickenBridge.scm",(void*)f_28023},
{"f_8668ChickenBridge.scm",(void*)f_8668},
{"f_8691ChickenBridge.scm",(void*)f_8691},
{"f_8681ChickenBridge.scm",(void*)f_8681},
{"f_28323ChickenBridge.scm",(void*)f_28323},
{"f_28315ChickenBridge.scm",(void*)f_28315},
{"f_28319ChickenBridge.scm",(void*)f_28319},
{"f_28307ChickenBridge.scm",(void*)f_28307},
{"f_28311ChickenBridge.scm",(void*)f_28311},
{"f_28181ChickenBridge.scm",(void*)f_28181},
{"f_28296ChickenBridge.scm",(void*)f_28296},
{"f_28300ChickenBridge.scm",(void*)f_28300},
{"f_28288ChickenBridge.scm",(void*)f_28288},
{"f_28292ChickenBridge.scm",(void*)f_28292},
{"f_28184ChickenBridge.scm",(void*)f_28184},
{"f_28188ChickenBridge.scm",(void*)f_28188},
{"f_28193ChickenBridge.scm",(void*)f_28193},
{"f_28203ChickenBridge.scm",(void*)f_28203},
{"f_28206ChickenBridge.scm",(void*)f_28206},
{"f_28087ChickenBridge.scm",(void*)f_28087},
{"f_28150ChickenBridge.scm",(void*)f_28150},
{"f_28171ChickenBridge.scm",(void*)f_28171},
{"f_28112ChickenBridge.scm",(void*)f_28112},
{"f_28141ChickenBridge.scm",(void*)f_28141},
{"f_28090ChickenBridge.scm",(void*)f_28090},
{"f_28107ChickenBridge.scm",(void*)f_28107},
{"f_28103ChickenBridge.scm",(void*)f_28103},
{"f_27553ChickenBridge.scm",(void*)f_27553},
{"f_27557ChickenBridge.scm",(void*)f_27557},
{"f_27545ChickenBridge.scm",(void*)f_27545},
{"f_27473ChickenBridge.scm",(void*)f_27473},
{"f_27531ChickenBridge.scm",(void*)f_27531},
{"f_27477ChickenBridge.scm",(void*)f_27477},
{"f_27485ChickenBridge.scm",(void*)f_27485},
{"f_27495ChickenBridge.scm",(void*)f_27495},
{"f_27498ChickenBridge.scm",(void*)f_27498},
{"f_28067ChickenBridge.scm",(void*)f_28067},
{"f_28037ChickenBridge.scm",(void*)f_28037},
{"f_28026ChickenBridge.scm",(void*)f_28026},
{"f_27950ChickenBridge.scm",(void*)f_27950},
{"f_27958ChickenBridge.scm",(void*)f_27958},
{"f_27962ChickenBridge.scm",(void*)f_27962},
{"f_27966ChickenBridge.scm",(void*)f_27966},
{"f_27972ChickenBridge.scm",(void*)f_27972},
{"f_27982ChickenBridge.scm",(void*)f_27982},
{"f_27738ChickenBridge.scm",(void*)f_27738},
{"f_27806ChickenBridge.scm",(void*)f_27806},
{"f_27809ChickenBridge.scm",(void*)f_27809},
{"f_27812ChickenBridge.scm",(void*)f_27812},
{"f_27815ChickenBridge.scm",(void*)f_27815},
{"f_27818ChickenBridge.scm",(void*)f_27818},
{"f_27916ChickenBridge.scm",(void*)f_27916},
{"f_27926ChickenBridge.scm",(void*)f_27926},
{"f_27884ChickenBridge.scm",(void*)f_27884},
{"f_27894ChickenBridge.scm",(void*)f_27894},
{"f_27835ChickenBridge.scm",(void*)f_27835},
{"f_27854ChickenBridge.scm",(void*)f_27854},
{"f_27864ChickenBridge.scm",(void*)f_27864},
{"f_27845ChickenBridge.scm",(void*)f_27845},
{"f_27821ChickenBridge.scm",(void*)f_27821},
{"f_27774ChickenBridge.scm",(void*)f_27774},
{"f_27784ChickenBridge.scm",(void*)f_27784},
{"f_27757ChickenBridge.scm",(void*)f_27757},
{"f_27764ChickenBridge.scm",(void*)f_27764},
{"f_27740ChickenBridge.scm",(void*)f_27740},
{"f_27747ChickenBridge.scm",(void*)f_27747},
{"f_27559ChickenBridge.scm",(void*)f_27559},
{"f_27567ChickenBridge.scm",(void*)f_27567},
{"f_27571ChickenBridge.scm",(void*)f_27571},
{"f_27573ChickenBridge.scm",(void*)f_27573},
{"f_27583ChickenBridge.scm",(void*)f_27583},
{"f_27714ChickenBridge.scm",(void*)f_27714},
{"f_27663ChickenBridge.scm",(void*)f_27663},
{"f_27666ChickenBridge.scm",(void*)f_27666},
{"f_27677ChickenBridge.scm",(void*)f_27677},
{"f_27629ChickenBridge.scm",(void*)f_27629},
{"f_27598ChickenBridge.scm",(void*)f_27598},
{"f_27601ChickenBridge.scm",(void*)f_27601},
{"f_27586ChickenBridge.scm",(void*)f_27586},
{"f_27153ChickenBridge.scm",(void*)f_27153},
{"f_27467ChickenBridge.scm",(void*)f_27467},
{"f_27396ChickenBridge.scm",(void*)f_27396},
{"f_27398ChickenBridge.scm",(void*)f_27398},
{"f_27420ChickenBridge.scm",(void*)f_27420},
{"f_27166ChickenBridge.scm",(void*)f_27166},
{"f_27239ChickenBridge.scm",(void*)f_27239},
{"f_27392ChickenBridge.scm",(void*)f_27392},
{"f_27376ChickenBridge.scm",(void*)f_27376},
{"f_27328ChickenBridge.scm",(void*)f_27328},
{"f_27342ChickenBridge.scm",(void*)f_27342},
{"f_27295ChickenBridge.scm",(void*)f_27295},
{"f_27270ChickenBridge.scm",(void*)f_27270},
{"f_27169ChickenBridge.scm",(void*)f_27169},
{"f_27177ChickenBridge.scm",(void*)f_27177},
{"f_25680ChickenBridge.scm",(void*)f_25680},
{"f_27130ChickenBridge.scm",(void*)f_27130},
{"f_27145ChickenBridge.scm",(void*)f_27145},
{"f_27137ChickenBridge.scm",(void*)f_27137},
{"f_27101ChickenBridge.scm",(void*)f_27101},
{"f_27105ChickenBridge.scm",(void*)f_27105},
{"f_27066ChickenBridge.scm",(void*)f_27066},
{"f_27070ChickenBridge.scm",(void*)f_27070},
{"f_27031ChickenBridge.scm",(void*)f_27031},
{"f_27035ChickenBridge.scm",(void*)f_27035},
{"f_26996ChickenBridge.scm",(void*)f_26996},
{"f_27000ChickenBridge.scm",(void*)f_27000},
{"f_26961ChickenBridge.scm",(void*)f_26961},
{"f_26965ChickenBridge.scm",(void*)f_26965},
{"f_26926ChickenBridge.scm",(void*)f_26926},
{"f_26930ChickenBridge.scm",(void*)f_26930},
{"f_25684ChickenBridge.scm",(void*)f_25684},
{"f_26890ChickenBridge.scm",(void*)f_26890},
{"f_26905ChickenBridge.scm",(void*)f_26905},
{"f_26897ChickenBridge.scm",(void*)f_26897},
{"f_26861ChickenBridge.scm",(void*)f_26861},
{"f_26865ChickenBridge.scm",(void*)f_26865},
{"f_26826ChickenBridge.scm",(void*)f_26826},
{"f_26830ChickenBridge.scm",(void*)f_26830},
{"f_26791ChickenBridge.scm",(void*)f_26791},
{"f_26795ChickenBridge.scm",(void*)f_26795},
{"f_26756ChickenBridge.scm",(void*)f_26756},
{"f_26760ChickenBridge.scm",(void*)f_26760},
{"f_26721ChickenBridge.scm",(void*)f_26721},
{"f_26725ChickenBridge.scm",(void*)f_26725},
{"f_26686ChickenBridge.scm",(void*)f_26686},
{"f_26690ChickenBridge.scm",(void*)f_26690},
{"f_25687ChickenBridge.scm",(void*)f_25687},
{"f_26650ChickenBridge.scm",(void*)f_26650},
{"f_26665ChickenBridge.scm",(void*)f_26665},
{"f_26657ChickenBridge.scm",(void*)f_26657},
{"f_26621ChickenBridge.scm",(void*)f_26621},
{"f_26625ChickenBridge.scm",(void*)f_26625},
{"f_26586ChickenBridge.scm",(void*)f_26586},
{"f_26590ChickenBridge.scm",(void*)f_26590},
{"f_26551ChickenBridge.scm",(void*)f_26551},
{"f_26555ChickenBridge.scm",(void*)f_26555},
{"f_26516ChickenBridge.scm",(void*)f_26516},
{"f_26520ChickenBridge.scm",(void*)f_26520},
{"f_26481ChickenBridge.scm",(void*)f_26481},
{"f_26485ChickenBridge.scm",(void*)f_26485},
{"f_26446ChickenBridge.scm",(void*)f_26446},
{"f_26450ChickenBridge.scm",(void*)f_26450},
{"f_25690ChickenBridge.scm",(void*)f_25690},
{"f_26410ChickenBridge.scm",(void*)f_26410},
{"f_26425ChickenBridge.scm",(void*)f_26425},
{"f_26417ChickenBridge.scm",(void*)f_26417},
{"f_26381ChickenBridge.scm",(void*)f_26381},
{"f_26385ChickenBridge.scm",(void*)f_26385},
{"f_26346ChickenBridge.scm",(void*)f_26346},
{"f_26350ChickenBridge.scm",(void*)f_26350},
{"f_26311ChickenBridge.scm",(void*)f_26311},
{"f_26315ChickenBridge.scm",(void*)f_26315},
{"f_26276ChickenBridge.scm",(void*)f_26276},
{"f_26280ChickenBridge.scm",(void*)f_26280},
{"f_26241ChickenBridge.scm",(void*)f_26241},
{"f_26245ChickenBridge.scm",(void*)f_26245},
{"f_26206ChickenBridge.scm",(void*)f_26206},
{"f_26210ChickenBridge.scm",(void*)f_26210},
{"f_25693ChickenBridge.scm",(void*)f_25693},
{"f_26170ChickenBridge.scm",(void*)f_26170},
{"f_26185ChickenBridge.scm",(void*)f_26185},
{"f_26177ChickenBridge.scm",(void*)f_26177},
{"f_26141ChickenBridge.scm",(void*)f_26141},
{"f_26145ChickenBridge.scm",(void*)f_26145},
{"f_26106ChickenBridge.scm",(void*)f_26106},
{"f_26110ChickenBridge.scm",(void*)f_26110},
{"f_26071ChickenBridge.scm",(void*)f_26071},
{"f_26075ChickenBridge.scm",(void*)f_26075},
{"f_26036ChickenBridge.scm",(void*)f_26036},
{"f_26040ChickenBridge.scm",(void*)f_26040},
{"f_26001ChickenBridge.scm",(void*)f_26001},
{"f_26005ChickenBridge.scm",(void*)f_26005},
{"f_25966ChickenBridge.scm",(void*)f_25966},
{"f_25970ChickenBridge.scm",(void*)f_25970},
{"f_25696ChickenBridge.scm",(void*)f_25696},
{"f_25930ChickenBridge.scm",(void*)f_25930},
{"f_25945ChickenBridge.scm",(void*)f_25945},
{"f_25937ChickenBridge.scm",(void*)f_25937},
{"f_25901ChickenBridge.scm",(void*)f_25901},
{"f_25905ChickenBridge.scm",(void*)f_25905},
{"f_25866ChickenBridge.scm",(void*)f_25866},
{"f_25870ChickenBridge.scm",(void*)f_25870},
{"f_25831ChickenBridge.scm",(void*)f_25831},
{"f_25835ChickenBridge.scm",(void*)f_25835},
{"f_25796ChickenBridge.scm",(void*)f_25796},
{"f_25800ChickenBridge.scm",(void*)f_25800},
{"f_25761ChickenBridge.scm",(void*)f_25761},
{"f_25765ChickenBridge.scm",(void*)f_25765},
{"f_25726ChickenBridge.scm",(void*)f_25726},
{"f_25730ChickenBridge.scm",(void*)f_25730},
{"f_25699ChickenBridge.scm",(void*)f_25699},
{"f_25702ChickenBridge.scm",(void*)f_25702},
{"f_25448ChickenBridge.scm",(void*)f_25448},
{"f_25454ChickenBridge.scm",(void*)f_25454},
{"f_25457ChickenBridge.scm",(void*)f_25457},
{"f_25661ChickenBridge.scm",(void*)f_25661},
{"f_25646ChickenBridge.scm",(void*)f_25646},
{"f_25581ChickenBridge.scm",(void*)f_25581},
{"f_8436ChickenBridge.scm",(void*)f_8436},
{"f_25557ChickenBridge.scm",(void*)f_25557},
{"f_25561ChickenBridge.scm",(void*)f_25561},
{"f_25547ChickenBridge.scm",(void*)f_25547},
{"f_25555ChickenBridge.scm",(void*)f_25555},
{"f_25533ChickenBridge.scm",(void*)f_25533},
{"f_25459ChickenBridge.scm",(void*)f_25459},
{"f_25528ChickenBridge.scm",(void*)f_25528},
{"f_25463ChickenBridge.scm",(void*)f_25463},
{"f_25500ChickenBridge.scm",(void*)f_25500},
{"f_25474ChickenBridge.scm",(void*)f_25474},
{"f_25419ChickenBridge.scm",(void*)f_25419},
{"f_25423ChickenBridge.scm",(void*)f_25423},
{"f_25434ChickenBridge.scm",(void*)f_25434},
{"f_25432ChickenBridge.scm",(void*)f_25432},
{"f_25388ChickenBridge.scm",(void*)f_25388},
{"f_25392ChickenBridge.scm",(void*)f_25392},
{"f_25403ChickenBridge.scm",(void*)f_25403},
{"f_25401ChickenBridge.scm",(void*)f_25401},
{"f_25370ChickenBridge.scm",(void*)f_25370},
{"f_25378ChickenBridge.scm",(void*)f_25378},
{"f_25386ChickenBridge.scm",(void*)f_25386},
{"f_25360ChickenBridge.scm",(void*)f_25360},
{"f_25368ChickenBridge.scm",(void*)f_25368},
{"f_25301ChickenBridge.scm",(void*)f_25301},
{"f_25308ChickenBridge.scm",(void*)f_25308},
{"f_25311ChickenBridge.scm",(void*)f_25311},
{"f_25314ChickenBridge.scm",(void*)f_25314},
{"f_25319ChickenBridge.scm",(void*)f_25319},
{"f_25263ChickenBridge.scm",(void*)f_25263},
{"f_25271ChickenBridge.scm",(void*)f_25271},
{"f_25275ChickenBridge.scm",(void*)f_25275},
{"f_25295ChickenBridge.scm",(void*)f_25295},
{"f_25279ChickenBridge.scm",(void*)f_25279},
{"f_25287ChickenBridge.scm",(void*)f_25287},
{"f_25283ChickenBridge.scm",(void*)f_25283},
{"f_25254ChickenBridge.scm",(void*)f_25254},
{"f_25245ChickenBridge.scm",(void*)f_25245},
{"f_25236ChickenBridge.scm",(void*)f_25236},
{"f_25227ChickenBridge.scm",(void*)f_25227},
{"f_25218ChickenBridge.scm",(void*)f_25218},
{"f_25209ChickenBridge.scm",(void*)f_25209},
{"f_25200ChickenBridge.scm",(void*)f_25200},
{"f_25185ChickenBridge.scm",(void*)f_25185},
{"f_25179ChickenBridge.scm",(void*)f_25179},
{"f_25134ChickenBridge.scm",(void*)f_25134},
{"f_7640ChickenBridge.scm",(void*)f_7640},
{"f_25092ChickenBridge.scm",(void*)f_25092},
{"f_25102ChickenBridge.scm",(void*)f_25102},
{"f_24244ChickenBridge.scm",(void*)f_24244},
{"f_7568ChickenBridge.scm",(void*)f_7568},
{"f_24238ChickenBridge.scm",(void*)f_24238},
{"f_24213ChickenBridge.scm",(void*)f_24213},
{"f_23897ChickenBridge.scm",(void*)f_23897},
{"f_23901ChickenBridge.scm",(void*)f_23901},
{"f_23958ChickenBridge.scm",(void*)f_23958},
{"f_23930ChickenBridge.scm",(void*)f_23930},
{"f_23995ChickenBridge.scm",(void*)f_23995},
{"f_24032ChickenBridge.scm",(void*)f_24032},
{"f_24035ChickenBridge.scm",(void*)f_24035},
{"f_24195ChickenBridge.scm",(void*)f_24195},
{"f_24042ChickenBridge.scm",(void*)f_24042},
{"f_24045ChickenBridge.scm",(void*)f_24045},
{"f_24047ChickenBridge.scm",(void*)f_24047},
{"f_24057ChickenBridge.scm",(void*)f_24057},
{"f_24060ChickenBridge.scm",(void*)f_24060},
{"f_24093ChickenBridge.scm",(void*)f_24093},
{"f_24181ChickenBridge.scm",(void*)f_24181},
{"f_24096ChickenBridge.scm",(void*)f_24096},
{"f_24167ChickenBridge.scm",(void*)f_24167},
{"f_24153ChickenBridge.scm",(void*)f_24153},
{"f_24133ChickenBridge.scm",(void*)f_24133},
{"f_24136ChickenBridge.scm",(void*)f_24136},
{"f_24113ChickenBridge.scm",(void*)f_24113},
{"f_24116ChickenBridge.scm",(void*)f_24116},
{"f_24099ChickenBridge.scm",(void*)f_24099},
{"f_23996ChickenBridge.scm",(void*)f_23996},
{"f_24002ChickenBridge.scm",(void*)f_24002},
{"f_24012ChickenBridge.scm",(void*)f_24012},
{"f_23881ChickenBridge.scm",(void*)f_23881},
{"f_23885ChickenBridge.scm",(void*)f_23885},
{"f_23892ChickenBridge.scm",(void*)f_23892},
{"f_23876ChickenBridge.scm",(void*)f_23876},
{"f_23729ChickenBridge.scm",(void*)f_23729},
{"f_23733ChickenBridge.scm",(void*)f_23733},
{"f_23802ChickenBridge.scm",(void*)f_23802},
{"f_23845ChickenBridge.scm",(void*)f_23845},
{"f_23849ChickenBridge.scm",(void*)f_23849},
{"f_23838ChickenBridge.scm",(void*)f_23838},
{"f_23825ChickenBridge.scm",(void*)f_23825},
{"f_23744ChickenBridge.scm",(void*)f_23744},
{"f_23787ChickenBridge.scm",(void*)f_23787},
{"f_23791ChickenBridge.scm",(void*)f_23791},
{"f_23780ChickenBridge.scm",(void*)f_23780},
{"f_23767ChickenBridge.scm",(void*)f_23767},
{"f_23563ChickenBridge.scm",(void*)f_23563},
{"f_23664ChickenBridge.scm",(void*)f_23664},
{"f_23713ChickenBridge.scm",(void*)f_23713},
{"f_23709ChickenBridge.scm",(void*)f_23709},
{"f_23681ChickenBridge.scm",(void*)f_23681},
{"f_23616ChickenBridge.scm",(void*)f_23616},
{"f_23625ChickenBridge.scm",(void*)f_23625},
{"f_23609ChickenBridge.scm",(void*)f_23609},
{"f_23428ChickenBridge.scm",(void*)f_23428},
{"f_23554ChickenBridge.scm",(void*)f_23554},
{"f_23550ChickenBridge.scm",(void*)f_23550},
{"f_23528ChickenBridge.scm",(void*)f_23528},
{"f_23458ChickenBridge.scm",(void*)f_23458},
{"f_23474ChickenBridge.scm",(void*)f_23474},
{"f_23383ChickenBridge.scm",(void*)f_23383},
{"f_23426ChickenBridge.scm",(void*)f_23426},
{"f_23415ChickenBridge.scm",(void*)f_23415},
{"f_23267ChickenBridge.scm",(void*)f_23267},
{"f_23381ChickenBridge.scm",(void*)f_23381},
{"f_23282ChickenBridge.scm",(void*)f_23282},
{"f_23312ChickenBridge.scm",(void*)f_23312},
{"f_23331ChickenBridge.scm",(void*)f_23331},
{"f_23316ChickenBridge.scm",(void*)f_23316},
{"f_23295ChickenBridge.scm",(void*)f_23295},
{"f_23145ChickenBridge.scm",(void*)f_23145},
{"f_23265ChickenBridge.scm",(void*)f_23265},
{"f_23160ChickenBridge.scm",(void*)f_23160},
{"f_23190ChickenBridge.scm",(void*)f_23190},
{"f_23209ChickenBridge.scm",(void*)f_23209},
{"f_23194ChickenBridge.scm",(void*)f_23194},
{"f_23173ChickenBridge.scm",(void*)f_23173},
{"f_23048ChickenBridge.scm",(void*)f_23048},
{"f_23143ChickenBridge.scm",(void*)f_23143},
{"f_23063ChickenBridge.scm",(void*)f_23063},
{"f_23109ChickenBridge.scm",(void*)f_23109},
{"f_23094ChickenBridge.scm",(void*)f_23094},
{"f_23076ChickenBridge.scm",(void*)f_23076},
{"f_22995ChickenBridge.scm",(void*)f_22995},
{"f_23033ChickenBridge.scm",(void*)f_23033},
{"f_23040ChickenBridge.scm",(void*)f_23040},
{"f_23018ChickenBridge.scm",(void*)f_23018},
{"f_22993ChickenBridge.scm",(void*)f_22993},
{"f_22974ChickenBridge.scm",(void*)f_22974},
{"f_22961ChickenBridge.scm",(void*)f_22961},
{"f_22943ChickenBridge.scm",(void*)f_22943},
{"f_22896ChickenBridge.scm",(void*)f_22896},
{"f_22900ChickenBridge.scm",(void*)f_22900},
{"f_22925ChickenBridge.scm",(void*)f_22925},
{"f_22912ChickenBridge.scm",(void*)f_22912},
{"f_22868ChickenBridge.scm",(void*)f_22868},
{"f_22849ChickenBridge.scm",(void*)f_22849},
{"f_22808ChickenBridge.scm",(void*)f_22808},
{"f_22789ChickenBridge.scm",(void*)f_22789},
{"f_22561ChickenBridge.scm",(void*)f_22561},
{"f_22766ChickenBridge.scm",(void*)f_22766},
{"f_22781ChickenBridge.scm",(void*)f_22781},
{"f_22773ChickenBridge.scm",(void*)f_22773},
{"f_22737ChickenBridge.scm",(void*)f_22737},
{"f_22741ChickenBridge.scm",(void*)f_22741},
{"f_22702ChickenBridge.scm",(void*)f_22702},
{"f_22706ChickenBridge.scm",(void*)f_22706},
{"f_22565ChickenBridge.scm",(void*)f_22565},
{"f_22666ChickenBridge.scm",(void*)f_22666},
{"f_22681ChickenBridge.scm",(void*)f_22681},
{"f_22673ChickenBridge.scm",(void*)f_22673},
{"f_22637ChickenBridge.scm",(void*)f_22637},
{"f_22641ChickenBridge.scm",(void*)f_22641},
{"f_22602ChickenBridge.scm",(void*)f_22602},
{"f_22606ChickenBridge.scm",(void*)f_22606},
{"f_22568ChickenBridge.scm",(void*)f_22568},
{"f_22571ChickenBridge.scm",(void*)f_22571},
{"f_22574ChickenBridge.scm",(void*)f_22574},
{"f_22519ChickenBridge.scm",(void*)f_22519},
{"f_22548ChickenBridge.scm",(void*)f_22548},
{"f_22533ChickenBridge.scm",(void*)f_22533},
{"f_22464ChickenBridge.scm",(void*)f_22464},
{"f_22475ChickenBridge.scm",(void*)f_22475},
{"f_22477ChickenBridge.scm",(void*)f_22477},
{"f_22505ChickenBridge.scm",(void*)f_22505},
{"f_22365ChickenBridge.scm",(void*)f_22365},
{"f_22369ChickenBridge.scm",(void*)f_22369},
{"f_22372ChickenBridge.scm",(void*)f_22372},
{"f_22437ChickenBridge.scm",(void*)f_22437},
{"f_22374ChickenBridge.scm",(void*)f_22374},
{"f_22390ChickenBridge.scm",(void*)f_22390},
{"f_22094ChickenBridge.scm",(void*)f_22094},
{"f_22127ChickenBridge.scm",(void*)f_22127},
{"f_22112ChickenBridge.scm",(void*)f_22112},
{"f_22073ChickenBridge.scm",(void*)f_22073},
{"f_22038ChickenBridge.scm",(void*)f_22038},
{"f_22042ChickenBridge.scm",(void*)f_22042},
{"f_21830ChickenBridge.scm",(void*)f_21830},
{"f_21843ChickenBridge.scm",(void*)f_21843},
{"f_21925ChickenBridge.scm",(void*)f_21925},
{"f_21928ChickenBridge.scm",(void*)f_21928},
{"f_21936ChickenBridge.scm",(void*)f_21936},
{"f_21948ChickenBridge.scm",(void*)f_21948},
{"f_21969ChickenBridge.scm",(void*)f_21969},
{"f_21977ChickenBridge.scm",(void*)f_21977},
{"f_21864ChickenBridge.scm",(void*)f_21864},
{"f_21869ChickenBridge.scm",(void*)f_21869},
{"f_21901ChickenBridge.scm",(void*)f_21901},
{"f_21723ChickenBridge.scm",(void*)f_21723},
{"f_21810ChickenBridge.scm",(void*)f_21810},
{"f_21730ChickenBridge.scm",(void*)f_21730},
{"f_21739ChickenBridge.scm",(void*)f_21739},
{"f_21786ChickenBridge.scm",(void*)f_21786},
{"f_21752ChickenBridge.scm",(void*)f_21752},
{"f_21778ChickenBridge.scm",(void*)f_21778},
{"f_21590ChickenBridge.scm",(void*)f_21590},
{"f_21594ChickenBridge.scm",(void*)f_21594},
{"f_21597ChickenBridge.scm",(void*)f_21597},
{"f_21701ChickenBridge.scm",(void*)f_21701},
{"f_21599ChickenBridge.scm",(void*)f_21599},
{"f_21606ChickenBridge.scm",(void*)f_21606},
{"f_21648ChickenBridge.scm",(void*)f_21648},
{"f_21655ChickenBridge.scm",(void*)f_21655},
{"f_21629ChickenBridge.scm",(void*)f_21629},
{"f_21523ChickenBridge.scm",(void*)f_21523},
{"f_21527ChickenBridge.scm",(void*)f_21527},
{"f_21573ChickenBridge.scm",(void*)f_21573},
{"f_21530ChickenBridge.scm",(void*)f_21530},
{"f_21566ChickenBridge.scm",(void*)f_21566},
{"f_21533ChickenBridge.scm",(void*)f_21533},
{"f_21546ChickenBridge.scm",(void*)f_21546},
{"f_21477ChickenBridge.scm",(void*)f_21477},
{"f_21481ChickenBridge.scm",(void*)f_21481},
{"f_21391ChickenBridge.scm",(void*)f_21391},
{"f_21395ChickenBridge.scm",(void*)f_21395},
{"f_21398ChickenBridge.scm",(void*)f_21398},
{"f_21407ChickenBridge.scm",(void*)f_21407},
{"f_21429ChickenBridge.scm",(void*)f_21429},
{"f_21376ChickenBridge.scm",(void*)f_21376},
{"f_21346ChickenBridge.scm",(void*)f_21346},
{"f_21110ChickenBridge.scm",(void*)f_21110},
{"f_21323ChickenBridge.scm",(void*)f_21323},
{"f_21338ChickenBridge.scm",(void*)f_21338},
{"f_21330ChickenBridge.scm",(void*)f_21330},
{"f_21294ChickenBridge.scm",(void*)f_21294},
{"f_21298ChickenBridge.scm",(void*)f_21298},
{"f_21259ChickenBridge.scm",(void*)f_21259},
{"f_21263ChickenBridge.scm",(void*)f_21263},
{"f_21114ChickenBridge.scm",(void*)f_21114},
{"f_21223ChickenBridge.scm",(void*)f_21223},
{"f_21238ChickenBridge.scm",(void*)f_21238},
{"f_21230ChickenBridge.scm",(void*)f_21230},
{"f_21194ChickenBridge.scm",(void*)f_21194},
{"f_21198ChickenBridge.scm",(void*)f_21198},
{"f_21159ChickenBridge.scm",(void*)f_21159},
{"f_21163ChickenBridge.scm",(void*)f_21163},
{"f_21117ChickenBridge.scm",(void*)f_21117},
{"f_21120ChickenBridge.scm",(void*)f_21120},
{"f_21131ChickenBridge.scm",(void*)f_21131},
{"f_21070ChickenBridge.scm",(void*)f_21070},
{"f_21074ChickenBridge.scm",(void*)f_21074},
{"f_21104ChickenBridge.scm",(void*)f_21104},
{"f_21085ChickenBridge.scm",(void*)f_21085},
{"f_21093ChickenBridge.scm",(void*)f_21093},
{"f_21049ChickenBridge.scm",(void*)f_21049},
{"f_21061ChickenBridge.scm",(void*)f_21061},
{"f_21006ChickenBridge.scm",(void*)f_21006},
{"f_21036ChickenBridge.scm",(void*)f_21036},
{"f_20963ChickenBridge.scm",(void*)f_20963},
{"f_20993ChickenBridge.scm",(void*)f_20993},
{"f_20894ChickenBridge.scm",(void*)f_20894},
{"f_20938ChickenBridge.scm",(void*)f_20938},
{"f_20825ChickenBridge.scm",(void*)f_20825},
{"f_20869ChickenBridge.scm",(void*)f_20869},
{"f_20819ChickenBridge.scm",(void*)f_20819},
{"f_20813ChickenBridge.scm",(void*)f_20813},
{"f_20792ChickenBridge.scm",(void*)f_20792},
{"f_20804ChickenBridge.scm",(void*)f_20804},
{"f_20777ChickenBridge.scm",(void*)f_20777},
{"f_20666ChickenBridge.scm",(void*)f_20666},
{"f_20741ChickenBridge.scm",(void*)f_20741},
{"f_20670ChickenBridge.scm",(void*)f_20670},
{"f_20710ChickenBridge.scm",(void*)f_20710},
{"f_20699ChickenBridge.scm",(void*)f_20699},
{"f_20684ChickenBridge.scm",(void*)f_20684},
{"f_20692ChickenBridge.scm",(void*)f_20692},
{"f_20632ChickenBridge.scm",(void*)f_20632},
{"f_20644ChickenBridge.scm",(void*)f_20644},
{"f_19585ChickenBridge.scm",(void*)f_19585},
{"f_20609ChickenBridge.scm",(void*)f_20609},
{"f_20624ChickenBridge.scm",(void*)f_20624},
{"f_20616ChickenBridge.scm",(void*)f_20616},
{"f_20580ChickenBridge.scm",(void*)f_20580},
{"f_20584ChickenBridge.scm",(void*)f_20584},
{"f_20545ChickenBridge.scm",(void*)f_20545},
{"f_20549ChickenBridge.scm",(void*)f_20549},
{"f_19595ChickenBridge.scm",(void*)f_19595},
{"f_20509ChickenBridge.scm",(void*)f_20509},
{"f_20524ChickenBridge.scm",(void*)f_20524},
{"f_20516ChickenBridge.scm",(void*)f_20516},
{"f_20480ChickenBridge.scm",(void*)f_20480},
{"f_20484ChickenBridge.scm",(void*)f_20484},
{"f_20445ChickenBridge.scm",(void*)f_20445},
{"f_20449ChickenBridge.scm",(void*)f_20449},
{"f_19598ChickenBridge.scm",(void*)f_19598},
{"f_19601ChickenBridge.scm",(void*)f_19601},
{"f_19606ChickenBridge.scm",(void*)f_19606},
{"f_20338ChickenBridge.scm",(void*)f_20338},
{"f_20361ChickenBridge.scm",(void*)f_20361},
{"f_20414ChickenBridge.scm",(void*)f_20414},
{"f_20396ChickenBridge.scm",(void*)f_20396},
{"f_20389ChickenBridge.scm",(void*)f_20389},
{"f_20371ChickenBridge.scm",(void*)f_20371},
{"f_20348ChickenBridge.scm",(void*)f_20348},
{"f_19800ChickenBridge.scm",(void*)f_19800},
{"f_20300ChickenBridge.scm",(void*)f_20300},
{"f_20322ChickenBridge.scm",(void*)f_20322},
{"f_20306ChickenBridge.scm",(void*)f_20306},
{"f_20314ChickenBridge.scm",(void*)f_20314},
{"f_20318ChickenBridge.scm",(void*)f_20318},
{"f_20304ChickenBridge.scm",(void*)f_20304},
{"f_20294ChickenBridge.scm",(void*)f_20294},
{"f_19803ChickenBridge.scm",(void*)f_19803},
{"f_20171ChickenBridge.scm",(void*)f_20171},
{"f_20195ChickenBridge.scm",(void*)f_20195},
{"f_20257ChickenBridge.scm",(void*)f_20257},
{"f_20198ChickenBridge.scm",(void*)f_20198},
{"f_20214ChickenBridge.scm",(void*)f_20214},
{"f_20239ChickenBridge.scm",(void*)f_20239},
{"f_20205ChickenBridge.scm",(void*)f_20205},
{"f_20182ChickenBridge.scm",(void*)f_20182},
{"f_19806ChickenBridge.scm",(void*)f_19806},
{"f_20157ChickenBridge.scm",(void*)f_20157},
{"f_19810ChickenBridge.scm",(void*)f_19810},
{"f_19854ChickenBridge.scm",(void*)f_19854},
{"f_19857ChickenBridge.scm",(void*)f_19857},
{"f_20138ChickenBridge.scm",(void*)f_20138},
{"f_20148ChickenBridge.scm",(void*)f_20148},
{"f_19860ChickenBridge.scm",(void*)f_19860},
{"f_20076ChickenBridge.scm",(void*)f_20076},
{"f_20086ChickenBridge.scm",(void*)f_20086},
{"f_20089ChickenBridge.scm",(void*)f_20089},
{"f_20109ChickenBridge.scm",(void*)f_20109},
{"f_20111ChickenBridge.scm",(void*)f_20111},
{"f_20121ChickenBridge.scm",(void*)f_20121},
{"f_20095ChickenBridge.scm",(void*)f_20095},
{"f_20098ChickenBridge.scm",(void*)f_20098},
{"f_19863ChickenBridge.scm",(void*)f_19863},
{"f_19871ChickenBridge.scm",(void*)f_19871},
{"f_19884ChickenBridge.scm",(void*)f_19884},
{"f_19758ChickenBridge.scm",(void*)f_19758},
{"f_19767ChickenBridge.scm",(void*)f_19767},
{"f_19789ChickenBridge.scm",(void*)f_19789},
{"f_19778ChickenBridge.scm",(void*)f_19778},
{"f_19887ChickenBridge.scm",(void*)f_19887},
{"f_20047ChickenBridge.scm",(void*)f_20047},
{"f_20049ChickenBridge.scm",(void*)f_20049},
{"f_20059ChickenBridge.scm",(void*)f_20059},
{"f_19893ChickenBridge.scm",(void*)f_19893},
{"f_20020ChickenBridge.scm",(void*)f_20020},
{"f_20022ChickenBridge.scm",(void*)f_20022},
{"f_20032ChickenBridge.scm",(void*)f_20032},
{"f_19896ChickenBridge.scm",(void*)f_19896},
{"f_19908ChickenBridge.scm",(void*)f_19908},
{"f_19934ChickenBridge.scm",(void*)f_19934},
{"f_19940ChickenBridge.scm",(void*)f_19940},
{"f_19946ChickenBridge.scm",(void*)f_19946},
{"f_19988ChickenBridge.scm",(void*)f_19988},
{"f_20000ChickenBridge.scm",(void*)f_20000},
{"f_19992ChickenBridge.scm",(void*)f_19992},
{"f_19949ChickenBridge.scm",(void*)f_19949},
{"f_19959ChickenBridge.scm",(void*)f_19959},
{"f_19961ChickenBridge.scm",(void*)f_19961},
{"f_19971ChickenBridge.scm",(void*)f_19971},
{"f_19952ChickenBridge.scm",(void*)f_19952},
{"f_19921ChickenBridge.scm",(void*)f_19921},
{"f_19899ChickenBridge.scm",(void*)f_19899},
{"f_19866ChickenBridge.scm",(void*)f_19866},
{"f_19813ChickenBridge.scm",(void*)f_19813},
{"f_19836ChickenBridge.scm",(void*)f_19836},
{"f_19825ChickenBridge.scm",(void*)f_19825},
{"f_19690ChickenBridge.scm",(void*)f_19690},
{"f_19738ChickenBridge.scm",(void*)f_19738},
{"f_19700ChickenBridge.scm",(void*)f_19700},
{"f_19728ChickenBridge.scm",(void*)f_19728},
{"f_19703ChickenBridge.scm",(void*)f_19703},
{"f_19608ChickenBridge.scm",(void*)f_19608},
{"f_8629ChickenBridge.scm",(void*)f_8629},
{"f_8649ChickenBridge.scm",(void*)f_8649},
{"f_8639ChickenBridge.scm",(void*)f_8639},
{"f_19680ChickenBridge.scm",(void*)f_19680},
{"f_19612ChickenBridge.scm",(void*)f_19612},
{"f_19630ChickenBridge.scm",(void*)f_19630},
{"f_19662ChickenBridge.scm",(void*)f_19662},
{"f_19491ChickenBridge.scm",(void*)f_19491},
{"f_19495ChickenBridge.scm",(void*)f_19495},
{"f_19524ChickenBridge.scm",(void*)f_19524},
{"f_19529ChickenBridge.scm",(void*)f_19529},
{"f_19554ChickenBridge.scm",(void*)f_19554},
{"f_19539ChickenBridge.scm",(void*)f_19539},
{"f_18973ChickenBridge.scm",(void*)f_18973},
{"f_19244ChickenBridge.scm",(void*)f_19244},
{"f_19248ChickenBridge.scm",(void*)f_19248},
{"f_19253ChickenBridge.scm",(void*)f_19253},
{"f_19459ChickenBridge.scm",(void*)f_19459},
{"f_19474ChickenBridge.scm",(void*)f_19474},
{"f_19466ChickenBridge.scm",(void*)f_19466},
{"f_19430ChickenBridge.scm",(void*)f_19430},
{"f_19434ChickenBridge.scm",(void*)f_19434},
{"f_19395ChickenBridge.scm",(void*)f_19395},
{"f_19399ChickenBridge.scm",(void*)f_19399},
{"f_19257ChickenBridge.scm",(void*)f_19257},
{"f_19359ChickenBridge.scm",(void*)f_19359},
{"f_19374ChickenBridge.scm",(void*)f_19374},
{"f_19366ChickenBridge.scm",(void*)f_19366},
{"f_19330ChickenBridge.scm",(void*)f_19330},
{"f_19334ChickenBridge.scm",(void*)f_19334},
{"f_19295ChickenBridge.scm",(void*)f_19295},
{"f_19299ChickenBridge.scm",(void*)f_19299},
{"f_19260ChickenBridge.scm",(void*)f_19260},
{"f_19263ChickenBridge.scm",(void*)f_19263},
{"f_19266ChickenBridge.scm",(void*)f_19266},
{"f_19235ChickenBridge.scm",(void*)f_19235},
{"f_18977ChickenBridge.scm",(void*)f_18977},
{"f_19204ChickenBridge.scm",(void*)f_19204},
{"f_19219ChickenBridge.scm",(void*)f_19219},
{"f_19211ChickenBridge.scm",(void*)f_19211},
{"f_19175ChickenBridge.scm",(void*)f_19175},
{"f_19179ChickenBridge.scm",(void*)f_19179},
{"f_19140ChickenBridge.scm",(void*)f_19140},
{"f_19144ChickenBridge.scm",(void*)f_19144},
{"f_18980ChickenBridge.scm",(void*)f_18980},
{"f_19104ChickenBridge.scm",(void*)f_19104},
{"f_19119ChickenBridge.scm",(void*)f_19119},
{"f_19111ChickenBridge.scm",(void*)f_19111},
{"f_19075ChickenBridge.scm",(void*)f_19075},
{"f_19079ChickenBridge.scm",(void*)f_19079},
{"f_19040ChickenBridge.scm",(void*)f_19040},
{"f_19044ChickenBridge.scm",(void*)f_19044},
{"f_18983ChickenBridge.scm",(void*)f_18983},
{"f_18986ChickenBridge.scm",(void*)f_18986},
{"f_18989ChickenBridge.scm",(void*)f_18989},
{"f_19001ChickenBridge.scm",(void*)f_19001},
{"f_19019ChickenBridge.scm",(void*)f_19019},
{"f_19007ChickenBridge.scm",(void*)f_19007},
{"f_18995ChickenBridge.scm",(void*)f_18995},
{"f_18910ChickenBridge.scm",(void*)f_18910},
{"f_18570ChickenBridge.scm",(void*)f_18570},
{"f_18752ChickenBridge.scm",(void*)f_18752},
{"f_18756ChickenBridge.scm",(void*)f_18756},
{"f_18758ChickenBridge.scm",(void*)f_18758},
{"f_18683ChickenBridge.scm",(void*)f_18683},
{"f_18693ChickenBridge.scm",(void*)f_18693},
{"f_18700ChickenBridge.scm",(void*)f_18700},
{"f_18768ChickenBridge.scm",(void*)f_18768},
{"f_18771ChickenBridge.scm",(void*)f_18771},
{"f_18775ChickenBridge.scm",(void*)f_18775},
{"f_18795ChickenBridge.scm",(void*)f_18795},
{"f_18811ChickenBridge.scm",(void*)f_18811},
{"f_18778ChickenBridge.scm",(void*)f_18778},
{"f_18573ChickenBridge.scm",(void*)f_18573},
{"f_18585ChickenBridge.scm",(void*)f_18585},
{"f_18621ChickenBridge.scm",(void*)f_18621},
{"f_18641ChickenBridge.scm",(void*)f_18641},
{"f_18646ChickenBridge.scm",(void*)f_18646},
{"f_18083ChickenBridge.scm",(void*)f_18083},
{"f_18010ChickenBridge.scm",(void*)f_18010},
{"f_17855ChickenBridge.scm",(void*)f_17855},
{"f_17861ChickenBridge.scm",(void*)f_17861},
{"f_17946ChickenBridge.scm",(void*)f_17946},
{"f_17873ChickenBridge.scm",(void*)f_17873},
{"f_17889ChickenBridge.scm",(void*)f_17889},
{"f_17893ChickenBridge.scm",(void*)f_17893},
{"f_17896ChickenBridge.scm",(void*)f_17896},
{"f_17876ChickenBridge.scm",(void*)f_17876},
{"f_17887ChickenBridge.scm",(void*)f_17887},
{"f_18027ChickenBridge.scm",(void*)f_18027},
{"f_18564ChickenBridge.scm",(void*)f_18564},
{"f_18087ChickenBridge.scm",(void*)f_18087},
{"f_18533ChickenBridge.scm",(void*)f_18533},
{"f_18548ChickenBridge.scm",(void*)f_18548},
{"f_18540ChickenBridge.scm",(void*)f_18540},
{"f_18504ChickenBridge.scm",(void*)f_18504},
{"f_18508ChickenBridge.scm",(void*)f_18508},
{"f_18469ChickenBridge.scm",(void*)f_18469},
{"f_18473ChickenBridge.scm",(void*)f_18473},
{"f_18434ChickenBridge.scm",(void*)f_18434},
{"f_18438ChickenBridge.scm",(void*)f_18438},
{"f_18090ChickenBridge.scm",(void*)f_18090},
{"f_18398ChickenBridge.scm",(void*)f_18398},
{"f_18413ChickenBridge.scm",(void*)f_18413},
{"f_18405ChickenBridge.scm",(void*)f_18405},
{"f_18369ChickenBridge.scm",(void*)f_18369},
{"f_18373ChickenBridge.scm",(void*)f_18373},
{"f_18334ChickenBridge.scm",(void*)f_18334},
{"f_18338ChickenBridge.scm",(void*)f_18338},
{"f_18299ChickenBridge.scm",(void*)f_18299},
{"f_18303ChickenBridge.scm",(void*)f_18303},
{"f_18093ChickenBridge.scm",(void*)f_18093},
{"f_18263ChickenBridge.scm",(void*)f_18263},
{"f_18278ChickenBridge.scm",(void*)f_18278},
{"f_18270ChickenBridge.scm",(void*)f_18270},
{"f_18234ChickenBridge.scm",(void*)f_18234},
{"f_18238ChickenBridge.scm",(void*)f_18238},
{"f_18199ChickenBridge.scm",(void*)f_18199},
{"f_18203ChickenBridge.scm",(void*)f_18203},
{"f_18164ChickenBridge.scm",(void*)f_18164},
{"f_18168ChickenBridge.scm",(void*)f_18168},
{"f_18096ChickenBridge.scm",(void*)f_18096},
{"f_18099ChickenBridge.scm",(void*)f_18099},
{"f_18102ChickenBridge.scm",(void*)f_18102},
{"f_18135ChickenBridge.scm",(void*)f_18135},
{"f_18143ChickenBridge.scm",(void*)f_18143},
{"f_18108ChickenBridge.scm",(void*)f_18108},
{"f_18121ChickenBridge.scm",(void*)f_18121},
{"f_18111ChickenBridge.scm",(void*)f_18111},
{"f_18114ChickenBridge.scm",(void*)f_18114},
{"f_17650ChickenBridge.scm",(void*)f_17650},
{"f_17654ChickenBridge.scm",(void*)f_17654},
{"f_17657ChickenBridge.scm",(void*)f_17657},
{"f_17660ChickenBridge.scm",(void*)f_17660},
{"f_17829ChickenBridge.scm",(void*)f_17829},
{"f_17842ChickenBridge.scm",(void*)f_17842},
{"f_17846ChickenBridge.scm",(void*)f_17846},
{"f_17666ChickenBridge.scm",(void*)f_17666},
{"f_17822ChickenBridge.scm",(void*)f_17822},
{"f_17803ChickenBridge.scm",(void*)f_17803},
{"f_17810ChickenBridge.scm",(void*)f_17810},
{"f_17814ChickenBridge.scm",(void*)f_17814},
{"f_17672ChickenBridge.scm",(void*)f_17672},
{"f_17678ChickenBridge.scm",(void*)f_17678},
{"f_17762ChickenBridge.scm",(void*)f_17762},
{"f_17764ChickenBridge.scm",(void*)f_17764},
{"f_17786ChickenBridge.scm",(void*)f_17786},
{"f_17793ChickenBridge.scm",(void*)f_17793},
{"f_17797ChickenBridge.scm",(void*)f_17797},
{"f_17783ChickenBridge.scm",(void*)f_17783},
{"f_17779ChickenBridge.scm",(void*)f_17779},
{"f_17720ChickenBridge.scm",(void*)f_17720},
{"f_17737ChickenBridge.scm",(void*)f_17737},
{"f_17747ChickenBridge.scm",(void*)f_17747},
{"f_17723ChickenBridge.scm",(void*)f_17723},
{"f_17682ChickenBridge.scm",(void*)f_17682},
{"f_17690ChickenBridge.scm",(void*)f_17690},
{"f_17692ChickenBridge.scm",(void*)f_17692},
{"f_17713ChickenBridge.scm",(void*)f_17713},
{"f_17550ChickenBridge.scm",(void*)f_17550},
{"f_17648ChickenBridge.scm",(void*)f_17648},
{"f_17607ChickenBridge.scm",(void*)f_17607},
{"f_17640ChickenBridge.scm",(void*)f_17640},
{"f_17636ChickenBridge.scm",(void*)f_17636},
{"f_17621ChickenBridge.scm",(void*)f_17621},
{"f_17557ChickenBridge.scm",(void*)f_17557},
{"f_17565ChickenBridge.scm",(void*)f_17565},
{"f_17598ChickenBridge.scm",(void*)f_17598},
{"f_17582ChickenBridge.scm",(void*)f_17582},
{"f_16783ChickenBridge.scm",(void*)f_16783},
{"f_17100ChickenBridge.scm",(void*)f_17100},
{"f_17107ChickenBridge.scm",(void*)f_17107},
{"f_17512ChickenBridge.scm",(void*)f_17512},
{"f_17527ChickenBridge.scm",(void*)f_17527},
{"f_17519ChickenBridge.scm",(void*)f_17519},
{"f_17483ChickenBridge.scm",(void*)f_17483},
{"f_17487ChickenBridge.scm",(void*)f_17487},
{"f_17448ChickenBridge.scm",(void*)f_17448},
{"f_17452ChickenBridge.scm",(void*)f_17452},
{"f_17413ChickenBridge.scm",(void*)f_17413},
{"f_17417ChickenBridge.scm",(void*)f_17417},
{"f_17110ChickenBridge.scm",(void*)f_17110},
{"f_17377ChickenBridge.scm",(void*)f_17377},
{"f_17392ChickenBridge.scm",(void*)f_17392},
{"f_17384ChickenBridge.scm",(void*)f_17384},
{"f_17348ChickenBridge.scm",(void*)f_17348},
{"f_17352ChickenBridge.scm",(void*)f_17352},
{"f_17313ChickenBridge.scm",(void*)f_17313},
{"f_17317ChickenBridge.scm",(void*)f_17317},
{"f_17278ChickenBridge.scm",(void*)f_17278},
{"f_17282ChickenBridge.scm",(void*)f_17282},
{"f_17113ChickenBridge.scm",(void*)f_17113},
{"f_17242ChickenBridge.scm",(void*)f_17242},
{"f_17257ChickenBridge.scm",(void*)f_17257},
{"f_17249ChickenBridge.scm",(void*)f_17249},
{"f_17213ChickenBridge.scm",(void*)f_17213},
{"f_17217ChickenBridge.scm",(void*)f_17217},
{"f_17178ChickenBridge.scm",(void*)f_17178},
{"f_17182ChickenBridge.scm",(void*)f_17182},
{"f_17143ChickenBridge.scm",(void*)f_17143},
{"f_17147ChickenBridge.scm",(void*)f_17147},
{"f_17116ChickenBridge.scm",(void*)f_17116},
{"f_17119ChickenBridge.scm",(void*)f_17119},
{"f_16787ChickenBridge.scm",(void*)f_16787},
{"f_16790ChickenBridge.scm",(void*)f_16790},
{"f_17064ChickenBridge.scm",(void*)f_17064},
{"f_17068ChickenBridge.scm",(void*)f_17068},
{"f_17071ChickenBridge.scm",(void*)f_17071},
{"f_17074ChickenBridge.scm",(void*)f_17074},
{"f_17077ChickenBridge.scm",(void*)f_17077},
{"f_17090ChickenBridge.scm",(void*)f_17090},
{"f_17080ChickenBridge.scm",(void*)f_17080},
{"f_16796ChickenBridge.scm",(void*)f_16796},
{"f_17059ChickenBridge.scm",(void*)f_17059},
{"f_16803ChickenBridge.scm",(void*)f_16803},
{"f_17034ChickenBridge.scm",(void*)f_17034},
{"f_17049ChickenBridge.scm",(void*)f_17049},
{"f_17041ChickenBridge.scm",(void*)f_17041},
{"f_17005ChickenBridge.scm",(void*)f_17005},
{"f_17009ChickenBridge.scm",(void*)f_17009},
{"f_16970ChickenBridge.scm",(void*)f_16970},
{"f_16974ChickenBridge.scm",(void*)f_16974},
{"f_16806ChickenBridge.scm",(void*)f_16806},
{"f_16934ChickenBridge.scm",(void*)f_16934},
{"f_16949ChickenBridge.scm",(void*)f_16949},
{"f_16941ChickenBridge.scm",(void*)f_16941},
{"f_16905ChickenBridge.scm",(void*)f_16905},
{"f_16909ChickenBridge.scm",(void*)f_16909},
{"f_16870ChickenBridge.scm",(void*)f_16870},
{"f_16874ChickenBridge.scm",(void*)f_16874},
{"f_16809ChickenBridge.scm",(void*)f_16809},
{"f_16812ChickenBridge.scm",(void*)f_16812},
{"f_16827ChickenBridge.scm",(void*)f_16827},
{"f_16849ChickenBridge.scm",(void*)f_16849},
{"f_16833ChickenBridge.scm",(void*)f_16833},
{"f_16841ChickenBridge.scm",(void*)f_16841},
{"f_16815ChickenBridge.scm",(void*)f_16815},
{"f_16818ChickenBridge.scm",(void*)f_16818},
{"f_16700ChickenBridge.scm",(void*)f_16700},
{"f_16691ChickenBridge.scm",(void*)f_16691},
{"f_16682ChickenBridge.scm",(void*)f_16682},
{"f_16664ChickenBridge.scm",(void*)f_16664},
{"f_16646ChickenBridge.scm",(void*)f_16646},
{"f_16628ChickenBridge.scm",(void*)f_16628},
{"f_16619ChickenBridge.scm",(void*)f_16619},
{"f_16610ChickenBridge.scm",(void*)f_16610},
{"f_16388ChickenBridge.scm",(void*)f_16388},
{"f_16438ChickenBridge.scm",(void*)f_16438},
{"f_16583ChickenBridge.scm",(void*)f_16583},
{"f_16464ChickenBridge.scm",(void*)f_16464},
{"f_16579ChickenBridge.scm",(void*)f_16579},
{"f_16564ChickenBridge.scm",(void*)f_16564},
{"f_16545ChickenBridge.scm",(void*)f_16545},
{"f_16518ChickenBridge.scm",(void*)f_16518},
{"f_16471ChickenBridge.scm",(void*)f_16471},
{"f_16441ChickenBridge.scm",(void*)f_16441},
{"f_16391ChickenBridge.scm",(void*)f_16391},
{"f_16397ChickenBridge.scm",(void*)f_16397},
{"f_16413ChickenBridge.scm",(void*)f_16413},
{"f_16416ChickenBridge.scm",(void*)f_16416},
{"f_15914ChickenBridge.scm",(void*)f_15914},
{"f_16378ChickenBridge.scm",(void*)f_16378},
{"f_15918ChickenBridge.scm",(void*)f_15918},
{"f_16350ChickenBridge.scm",(void*)f_16350},
{"f_16365ChickenBridge.scm",(void*)f_16365},
{"f_16357ChickenBridge.scm",(void*)f_16357},
{"f_16321ChickenBridge.scm",(void*)f_16321},
{"f_16325ChickenBridge.scm",(void*)f_16325},
{"f_16286ChickenBridge.scm",(void*)f_16286},
{"f_16290ChickenBridge.scm",(void*)f_16290},
{"f_16251ChickenBridge.scm",(void*)f_16251},
{"f_16255ChickenBridge.scm",(void*)f_16255},
{"f_15921ChickenBridge.scm",(void*)f_15921},
{"f_16215ChickenBridge.scm",(void*)f_16215},
{"f_16230ChickenBridge.scm",(void*)f_16230},
{"f_16222ChickenBridge.scm",(void*)f_16222},
{"f_16186ChickenBridge.scm",(void*)f_16186},
{"f_16190ChickenBridge.scm",(void*)f_16190},
{"f_16151ChickenBridge.scm",(void*)f_16151},
{"f_16155ChickenBridge.scm",(void*)f_16155},
{"f_16116ChickenBridge.scm",(void*)f_16116},
{"f_16120ChickenBridge.scm",(void*)f_16120},
{"f_15924ChickenBridge.scm",(void*)f_15924},
{"f_16080ChickenBridge.scm",(void*)f_16080},
{"f_16095ChickenBridge.scm",(void*)f_16095},
{"f_16087ChickenBridge.scm",(void*)f_16087},
{"f_16051ChickenBridge.scm",(void*)f_16051},
{"f_16055ChickenBridge.scm",(void*)f_16055},
{"f_16016ChickenBridge.scm",(void*)f_16016},
{"f_16020ChickenBridge.scm",(void*)f_16020},
{"f_15981ChickenBridge.scm",(void*)f_15981},
{"f_15985ChickenBridge.scm",(void*)f_15985},
{"f_15927ChickenBridge.scm",(void*)f_15927},
{"f_15930ChickenBridge.scm",(void*)f_15930},
{"f_15933ChickenBridge.scm",(void*)f_15933},
{"f_15948ChickenBridge.scm",(void*)f_15948},
{"f_15960ChickenBridge.scm",(void*)f_15960},
{"f_15939ChickenBridge.scm",(void*)f_15939},
{"f_15942ChickenBridge.scm",(void*)f_15942},
{"f_15838ChickenBridge.scm",(void*)f_15838},
{"f_15842ChickenBridge.scm",(void*)f_15842},
{"f_15861ChickenBridge.scm",(void*)f_15861},
{"f_15871ChickenBridge.scm",(void*)f_15871},
{"f_15873ChickenBridge.scm",(void*)f_15873},
{"f_15890ChickenBridge.scm",(void*)f_15890},
{"f_15893ChickenBridge.scm",(void*)f_15893},
{"f_15904ChickenBridge.scm",(void*)f_15904},
{"f_15845ChickenBridge.scm",(void*)f_15845},
{"f_15575ChickenBridge.scm",(void*)f_15575},
{"f_15828ChickenBridge.scm",(void*)f_15828},
{"f_15579ChickenBridge.scm",(void*)f_15579},
{"f_15800ChickenBridge.scm",(void*)f_15800},
{"f_15815ChickenBridge.scm",(void*)f_15815},
{"f_15807ChickenBridge.scm",(void*)f_15807},
{"f_15771ChickenBridge.scm",(void*)f_15771},
{"f_15775ChickenBridge.scm",(void*)f_15775},
{"f_15736ChickenBridge.scm",(void*)f_15736},
{"f_15740ChickenBridge.scm",(void*)f_15740},
{"f_15582ChickenBridge.scm",(void*)f_15582},
{"f_15700ChickenBridge.scm",(void*)f_15700},
{"f_15715ChickenBridge.scm",(void*)f_15715},
{"f_15707ChickenBridge.scm",(void*)f_15707},
{"f_15671ChickenBridge.scm",(void*)f_15671},
{"f_15675ChickenBridge.scm",(void*)f_15675},
{"f_15636ChickenBridge.scm",(void*)f_15636},
{"f_15640ChickenBridge.scm",(void*)f_15640},
{"f_15585ChickenBridge.scm",(void*)f_15585},
{"f_15588ChickenBridge.scm",(void*)f_15588},
{"f_15591ChickenBridge.scm",(void*)f_15591},
{"f_15603ChickenBridge.scm",(void*)f_15603},
{"f_15615ChickenBridge.scm",(void*)f_15615},
{"f_15597ChickenBridge.scm",(void*)f_15597},
{"f_15539ChickenBridge.scm",(void*)f_15539},
{"f_15543ChickenBridge.scm",(void*)f_15543},
{"f_15565ChickenBridge.scm",(void*)f_15565},
{"f_15559ChickenBridge.scm",(void*)f_15559},
{"f_15552ChickenBridge.scm",(void*)f_15552},
{"f_15292ChickenBridge.scm",(void*)f_15292},
{"f_15296ChickenBridge.scm",(void*)f_15296},
{"f_15509ChickenBridge.scm",(void*)f_15509},
{"f_15524ChickenBridge.scm",(void*)f_15524},
{"f_15516ChickenBridge.scm",(void*)f_15516},
{"f_15480ChickenBridge.scm",(void*)f_15480},
{"f_15484ChickenBridge.scm",(void*)f_15484},
{"f_15445ChickenBridge.scm",(void*)f_15445},
{"f_15449ChickenBridge.scm",(void*)f_15449},
{"f_15299ChickenBridge.scm",(void*)f_15299},
{"f_15409ChickenBridge.scm",(void*)f_15409},
{"f_15424ChickenBridge.scm",(void*)f_15424},
{"f_15416ChickenBridge.scm",(void*)f_15416},
{"f_15380ChickenBridge.scm",(void*)f_15380},
{"f_15384ChickenBridge.scm",(void*)f_15384},
{"f_15345ChickenBridge.scm",(void*)f_15345},
{"f_15349ChickenBridge.scm",(void*)f_15349},
{"f_15302ChickenBridge.scm",(void*)f_15302},
{"f_15305ChickenBridge.scm",(void*)f_15305},
{"f_15308ChickenBridge.scm",(void*)f_15308},
{"f_15316ChickenBridge.scm",(void*)f_15316},
{"f_15324ChickenBridge.scm",(void*)f_15324},
{"f_15314ChickenBridge.scm",(void*)f_15314},
{"f_15077ChickenBridge.scm",(void*)f_15077},
{"f_15081ChickenBridge.scm",(void*)f_15081},
{"f_15290ChickenBridge.scm",(void*)f_15290},
{"f_15243ChickenBridge.scm",(void*)f_15243},
{"f_15255ChickenBridge.scm",(void*)f_15255},
{"f_15111ChickenBridge.scm",(void*)f_15111},
{"f_15114ChickenBridge.scm",(void*)f_15114},
{"f_15120ChickenBridge.scm",(void*)f_15120},
{"f_15123ChickenBridge.scm",(void*)f_15123},
{"f_15211ChickenBridge.scm",(void*)f_15211},
{"f_15126ChickenBridge.scm",(void*)f_15126},
{"f_15205ChickenBridge.scm",(void*)f_15205},
{"f_15132ChickenBridge.scm",(void*)f_15132},
{"f_15135ChickenBridge.scm",(void*)f_15135},
{"f_15087ChickenBridge.scm",(void*)f_15087},
{"f_15090ChickenBridge.scm",(void*)f_15090},
{"f_15097ChickenBridge.scm",(void*)f_15097},
{"f_14607ChickenBridge.scm",(void*)f_14607},
{"f_14611ChickenBridge.scm",(void*)f_14611},
{"f_15047ChickenBridge.scm",(void*)f_15047},
{"f_15062ChickenBridge.scm",(void*)f_15062},
{"f_15054ChickenBridge.scm",(void*)f_15054},
{"f_15018ChickenBridge.scm",(void*)f_15018},
{"f_15022ChickenBridge.scm",(void*)f_15022},
{"f_14983ChickenBridge.scm",(void*)f_14983},
{"f_14987ChickenBridge.scm",(void*)f_14987},
{"f_14948ChickenBridge.scm",(void*)f_14948},
{"f_14952ChickenBridge.scm",(void*)f_14952},
{"f_14614ChickenBridge.scm",(void*)f_14614},
{"f_14912ChickenBridge.scm",(void*)f_14912},
{"f_14927ChickenBridge.scm",(void*)f_14927},
{"f_14919ChickenBridge.scm",(void*)f_14919},
{"f_14883ChickenBridge.scm",(void*)f_14883},
{"f_14887ChickenBridge.scm",(void*)f_14887},
{"f_14848ChickenBridge.scm",(void*)f_14848},
{"f_14852ChickenBridge.scm",(void*)f_14852},
{"f_14813ChickenBridge.scm",(void*)f_14813},
{"f_14817ChickenBridge.scm",(void*)f_14817},
{"f_14617ChickenBridge.scm",(void*)f_14617},
{"f_14777ChickenBridge.scm",(void*)f_14777},
{"f_14792ChickenBridge.scm",(void*)f_14792},
{"f_14784ChickenBridge.scm",(void*)f_14784},
{"f_14748ChickenBridge.scm",(void*)f_14748},
{"f_14752ChickenBridge.scm",(void*)f_14752},
{"f_14713ChickenBridge.scm",(void*)f_14713},
{"f_14717ChickenBridge.scm",(void*)f_14717},
{"f_14678ChickenBridge.scm",(void*)f_14678},
{"f_14682ChickenBridge.scm",(void*)f_14682},
{"f_14620ChickenBridge.scm",(void*)f_14620},
{"f_14623ChickenBridge.scm",(void*)f_14623},
{"f_14626ChickenBridge.scm",(void*)f_14626},
{"f_14649ChickenBridge.scm",(void*)f_14649},
{"f_14657ChickenBridge.scm",(void*)f_14657},
{"f_14632ChickenBridge.scm",(void*)f_14632},
{"f_14635ChickenBridge.scm",(void*)f_14635},
{"f_14527ChickenBridge.scm",(void*)f_14527},
{"f_14518ChickenBridge.scm",(void*)f_14518},
{"f_14446ChickenBridge.scm",(void*)f_14446},
{"f_14450ChickenBridge.scm",(void*)f_14450},
{"f_14453ChickenBridge.scm",(void*)f_14453},
{"f_14191ChickenBridge.scm",(void*)f_14191},
{"f_14195ChickenBridge.scm",(void*)f_14195},
{"f_14416ChickenBridge.scm",(void*)f_14416},
{"f_14431ChickenBridge.scm",(void*)f_14431},
{"f_14423ChickenBridge.scm",(void*)f_14423},
{"f_14387ChickenBridge.scm",(void*)f_14387},
{"f_14391ChickenBridge.scm",(void*)f_14391},
{"f_14352ChickenBridge.scm",(void*)f_14352},
{"f_14356ChickenBridge.scm",(void*)f_14356},
{"f_14198ChickenBridge.scm",(void*)f_14198},
{"f_14316ChickenBridge.scm",(void*)f_14316},
{"f_14331ChickenBridge.scm",(void*)f_14331},
{"f_14323ChickenBridge.scm",(void*)f_14323},
{"f_14287ChickenBridge.scm",(void*)f_14287},
{"f_14291ChickenBridge.scm",(void*)f_14291},
{"f_14252ChickenBridge.scm",(void*)f_14252},
{"f_14256ChickenBridge.scm",(void*)f_14256},
{"f_14201ChickenBridge.scm",(void*)f_14201},
{"f_14204ChickenBridge.scm",(void*)f_14204},
{"f_14207ChickenBridge.scm",(void*)f_14207},
{"f_14219ChickenBridge.scm",(void*)f_14219},
{"f_14231ChickenBridge.scm",(void*)f_14231},
{"f_14213ChickenBridge.scm",(void*)f_14213},
{"f_14076ChickenBridge.scm",(void*)f_14076},
{"f_14189ChickenBridge.scm",(void*)f_14189},
{"f_14086ChickenBridge.scm",(void*)f_14086},
{"f_14174ChickenBridge.scm",(void*)f_14174},
{"f_14185ChickenBridge.scm",(void*)f_14185},
{"f_14181ChickenBridge.scm",(void*)f_14181},
{"f_14089ChickenBridge.scm",(void*)f_14089},
{"f_14171ChickenBridge.scm",(void*)f_14171},
{"f_14097ChickenBridge.scm",(void*)f_14097},
{"f_14161ChickenBridge.scm",(void*)f_14161},
{"f_14106ChickenBridge.scm",(void*)f_14106},
{"f_14125ChickenBridge.scm",(void*)f_14125},
{"f_14154ChickenBridge.scm",(void*)f_14154},
{"f_14135ChickenBridge.scm",(void*)f_14135},
{"f_14150ChickenBridge.scm",(void*)f_14150},
{"f_14138ChickenBridge.scm",(void*)f_14138},
{"f_14109ChickenBridge.scm",(void*)f_14109},
{"f_14119ChickenBridge.scm",(void*)f_14119},
{"f_14100ChickenBridge.scm",(void*)f_14100},
{"f_14103ChickenBridge.scm",(void*)f_14103},
{"f_14030ChickenBridge.scm",(void*)f_14030},
{"f_14021ChickenBridge.scm",(void*)f_14021},
{"f_13729ChickenBridge.scm",(void*)f_13729},
{"f_13736ChickenBridge.scm",(void*)f_13736},
{"f_13739ChickenBridge.scm",(void*)f_13739},
{"f_14010ChickenBridge.scm",(void*)f_14010},
{"f_14002ChickenBridge.scm",(void*)f_14002},
{"f_13994ChickenBridge.scm",(void*)f_13994},
{"f_13997ChickenBridge.scm",(void*)f_13997},
{"f_13965ChickenBridge.scm",(void*)f_13965},
{"f_13988ChickenBridge.scm",(void*)f_13988},
{"f_13971ChickenBridge.scm",(void*)f_13971},
{"f_13975ChickenBridge.scm",(void*)f_13975},
{"f_13742ChickenBridge.scm",(void*)f_13742},
{"f_13748ChickenBridge.scm",(void*)f_13748},
{"f_13840ChickenBridge.scm",(void*)f_13840},
{"f_13952ChickenBridge.scm",(void*)f_13952},
{"f_13959ChickenBridge.scm",(void*)f_13959},
{"f_13863ChickenBridge.scm",(void*)f_13863},
{"f_13865ChickenBridge.scm",(void*)f_13865},
{"f_13914ChickenBridge.scm",(void*)f_13914},
{"f_13949ChickenBridge.scm",(void*)f_13949},
{"f_13938ChickenBridge.scm",(void*)f_13938},
{"f_14074ChickenBridge.scm",(void*)f_14074},
{"f_14049ChickenBridge.scm",(void*)f_14049},
{"f_14070ChickenBridge.scm",(void*)f_14070},
{"f_14066ChickenBridge.scm",(void*)f_14066},
{"f_14058ChickenBridge.scm",(void*)f_14058},
{"f_13931ChickenBridge.scm",(void*)f_13931},
{"f_13924ChickenBridge.scm",(void*)f_13924},
{"f_13872ChickenBridge.scm",(void*)f_13872},
{"f_13912ChickenBridge.scm",(void*)f_13912},
{"f_13876ChickenBridge.scm",(void*)f_13876},
{"f_13908ChickenBridge.scm",(void*)f_13908},
{"f_13895ChickenBridge.scm",(void*)f_13895},
{"f_13903ChickenBridge.scm",(void*)f_13903},
{"f_13899ChickenBridge.scm",(void*)f_13899},
{"f_13879ChickenBridge.scm",(void*)f_13879},
{"f_13882ChickenBridge.scm",(void*)f_13882},
{"f_13856ChickenBridge.scm",(void*)f_13856},
{"f_13843ChickenBridge.scm",(void*)f_13843},
{"f_13852ChickenBridge.scm",(void*)f_13852},
{"f_13847ChickenBridge.scm",(void*)f_13847},
{"f_13754ChickenBridge.scm",(void*)f_13754},
{"f_13834ChickenBridge.scm",(void*)f_13834},
{"f_13814ChickenBridge.scm",(void*)f_13814},
{"f_13820ChickenBridge.scm",(void*)f_13820},
{"f_13831ChickenBridge.scm",(void*)f_13831},
{"f_13811ChickenBridge.scm",(void*)f_13811},
{"f_13799ChickenBridge.scm",(void*)f_13799},
{"f_13802ChickenBridge.scm",(void*)f_13802},
{"f_13757ChickenBridge.scm",(void*)f_13757},
{"f_13793ChickenBridge.scm",(void*)f_13793},
{"f_13788ChickenBridge.scm",(void*)f_13788},
{"f_13760ChickenBridge.scm",(void*)f_13760},
{"f_13773ChickenBridge.scm",(void*)f_13773},
{"f_13763ChickenBridge.scm",(void*)f_13763},
{"f_13766ChickenBridge.scm",(void*)f_13766},
{"f_13769ChickenBridge.scm",(void*)f_13769},
{"f_13606ChickenBridge.scm",(void*)f_13606},
{"f_13665ChickenBridge.scm",(void*)f_13665},
{"f_13675ChickenBridge.scm",(void*)f_13675},
{"f_13677ChickenBridge.scm",(void*)f_13677},
{"f_13706ChickenBridge.scm",(void*)f_13706},
{"f_13711ChickenBridge.scm",(void*)f_13711},
{"f_13696ChickenBridge.scm",(void*)f_13696},
{"f_13627ChickenBridge.scm",(void*)f_13627},
{"f_13659ChickenBridge.scm",(void*)f_13659},
{"f_13587ChickenBridge.scm",(void*)f_13587},
{"f_13594ChickenBridge.scm",(void*)f_13594},
{"f_13601ChickenBridge.scm",(void*)f_13601},
{"f_13568ChickenBridge.scm",(void*)f_13568},
{"f_13575ChickenBridge.scm",(void*)f_13575},
{"f_13582ChickenBridge.scm",(void*)f_13582},
{"f_13388ChickenBridge.scm",(void*)f_13388},
{"f_13392ChickenBridge.scm",(void*)f_13392},
{"f_13395ChickenBridge.scm",(void*)f_13395},
{"f_13398ChickenBridge.scm",(void*)f_13398},
{"f_13401ChickenBridge.scm",(void*)f_13401},
{"f_13558ChickenBridge.scm",(void*)f_13558},
{"f_13565ChickenBridge.scm",(void*)f_13565},
{"f_13404ChickenBridge.scm",(void*)f_13404},
{"f_13556ChickenBridge.scm",(void*)f_13556},
{"f_13407ChickenBridge.scm",(void*)f_13407},
{"f_13549ChickenBridge.scm",(void*)f_13549},
{"f_13539ChickenBridge.scm",(void*)f_13539},
{"f_13413ChickenBridge.scm",(void*)f_13413},
{"f_13529ChickenBridge.scm",(void*)f_13529},
{"f_13519ChickenBridge.scm",(void*)f_13519},
{"f_13419ChickenBridge.scm",(void*)f_13419},
{"f_13482ChickenBridge.scm",(void*)f_13482},
{"f_13496ChickenBridge.scm",(void*)f_13496},
{"f_13512ChickenBridge.scm",(void*)f_13512},
{"f_13508ChickenBridge.scm",(void*)f_13508},
{"f_13504ChickenBridge.scm",(void*)f_13504},
{"f_13500ChickenBridge.scm",(void*)f_13500},
{"f_13490ChickenBridge.scm",(void*)f_13490},
{"f_13486ChickenBridge.scm",(void*)f_13486},
{"f_13422ChickenBridge.scm",(void*)f_13422},
{"f_13425ChickenBridge.scm",(void*)f_13425},
{"f_13466ChickenBridge.scm",(void*)f_13466},
{"f_13431ChickenBridge.scm",(void*)f_13431},
{"f_13444ChickenBridge.scm",(void*)f_13444},
{"f_13434ChickenBridge.scm",(void*)f_13434},
{"f_13437ChickenBridge.scm",(void*)f_13437},
{"f_13378ChickenBridge.scm",(void*)f_13378},
{"f_13319ChickenBridge.scm",(void*)f_13319},
{"f_13310ChickenBridge.scm",(void*)f_13310},
{"f_13193ChickenBridge.scm",(void*)f_13193},
{"f_13184ChickenBridge.scm",(void*)f_13184},
{"f_13175ChickenBridge.scm",(void*)f_13175},
{"f_13166ChickenBridge.scm",(void*)f_13166},
{"f_13157ChickenBridge.scm",(void*)f_13157},
{"f_13139ChickenBridge.scm",(void*)f_13139},
{"f_13130ChickenBridge.scm",(void*)f_13130},
{"f_13121ChickenBridge.scm",(void*)f_13121},
{"f_13103ChickenBridge.scm",(void*)f_13103},
{"f_13094ChickenBridge.scm",(void*)f_13094},
{"f_13085ChickenBridge.scm",(void*)f_13085},
{"f_13070ChickenBridge.scm",(void*)f_13070},
{"f_13025ChickenBridge.scm",(void*)f_13025},
{"f_13007ChickenBridge.scm",(void*)f_13007},
{"f_12998ChickenBridge.scm",(void*)f_12998},
{"f_12971ChickenBridge.scm",(void*)f_12971},
{"f_12953ChickenBridge.scm",(void*)f_12953},
{"f_12935ChickenBridge.scm",(void*)f_12935},
{"f_12926ChickenBridge.scm",(void*)f_12926},
{"f_12914ChickenBridge.scm",(void*)f_12914},
{"f_12576ChickenBridge.scm",(void*)f_12576},
{"f_12416ChickenBridge.scm",(void*)f_12416},
{"f_12451ChickenBridge.scm",(void*)f_12451},
{"f_12461ChickenBridge.scm",(void*)f_12461},
{"f_12465ChickenBridge.scm",(void*)f_12465},
{"f_12468ChickenBridge.scm",(void*)f_12468},
{"f_12529ChickenBridge.scm",(void*)f_12529},
{"f_12520ChickenBridge.scm",(void*)f_12520},
{"f_12471ChickenBridge.scm",(void*)f_12471},
{"f_12490ChickenBridge.scm",(void*)f_12490},
{"f_12497ChickenBridge.scm",(void*)f_12497},
{"f_12474ChickenBridge.scm",(void*)f_12474},
{"f_12480ChickenBridge.scm",(void*)f_12480},
{"f_12449ChickenBridge.scm",(void*)f_12449},
{"f_12424ChickenBridge.scm",(void*)f_12424},
{"f_12423ChickenBridge.scm",(void*)f_12423},
{"f_12584ChickenBridge.scm",(void*)f_12584},
{"f_12162ChickenBridge.scm",(void*)f_12162},
{"f_12184ChickenBridge.scm",(void*)f_12184},
{"f_12199ChickenBridge.scm",(void*)f_12199},
{"f_12202ChickenBridge.scm",(void*)f_12202},
{"f_12378ChickenBridge.scm",(void*)f_12378},
{"f_12372ChickenBridge.scm",(void*)f_12372},
{"f_12205ChickenBridge.scm",(void*)f_12205},
{"f_12354ChickenBridge.scm",(void*)f_12354},
{"f_12208ChickenBridge.scm",(void*)f_12208},
{"f_12211ChickenBridge.scm",(void*)f_12211},
{"f_12347ChickenBridge.scm",(void*)f_12347},
{"f_12335ChickenBridge.scm",(void*)f_12335},
{"f_12231ChickenBridge.scm",(void*)f_12231},
{"f_12238ChickenBridge.scm",(void*)f_12238},
{"f_12308ChickenBridge.scm",(void*)f_12308},
{"f_12294ChickenBridge.scm",(void*)f_12294},
{"f_12302ChickenBridge.scm",(void*)f_12302},
{"f_12241ChickenBridge.scm",(void*)f_12241},
{"f_12280ChickenBridge.scm",(void*)f_12280},
{"f_12244ChickenBridge.scm",(void*)f_12244},
{"f_12273ChickenBridge.scm",(void*)f_12273},
{"f_12250ChickenBridge.scm",(void*)f_12250},
{"f_12253ChickenBridge.scm",(void*)f_12253},
{"f_12257ChickenBridge.scm",(void*)f_12257},
{"f_12218ChickenBridge.scm",(void*)f_12218},
{"f_12221ChickenBridge.scm",(void*)f_12221},
{"f_12031ChickenBridge.scm",(void*)f_12031},
{"f_12040ChickenBridge.scm",(void*)f_12040},
{"f_11988ChickenBridge.scm",(void*)f_11988},
{"f_11994ChickenBridge.scm",(void*)f_11994},
{"f_12057ChickenBridge.scm",(void*)f_12057},
{"f_12143ChickenBridge.scm",(void*)f_12143},
{"f_12130ChickenBridge.scm",(void*)f_12130},
{"f_12138ChickenBridge.scm",(void*)f_12138},
{"f_12060ChickenBridge.scm",(void*)f_12060},
{"f_12064ChickenBridge.scm",(void*)f_12064},
{"f_12107ChickenBridge.scm",(void*)f_12107},
{"f_12069ChickenBridge.scm",(void*)f_12069},
{"f_12035ChickenBridge.scm",(void*)f_12035},
{"f_11930ChickenBridge.scm",(void*)f_11930},
{"f_11937ChickenBridge.scm",(void*)f_11937},
{"f_11968ChickenBridge.scm",(void*)f_11968},
{"f_11964ChickenBridge.scm",(void*)f_11964},
{"f_11956ChickenBridge.scm",(void*)f_11956},
{"f_11839ChickenBridge.scm",(void*)f_11839},
{"f_11846ChickenBridge.scm",(void*)f_11846},
{"f_11914ChickenBridge.scm",(void*)f_11914},
{"f_11857ChickenBridge.scm",(void*)f_11857},
{"f_11884ChickenBridge.scm",(void*)f_11884},
{"f_11868ChickenBridge.scm",(void*)f_11868},
{"f_11773ChickenBridge.scm",(void*)f_11773},
{"f_11784ChickenBridge.scm",(void*)f_11784},
{"f_11787ChickenBridge.scm",(void*)f_11787},
{"f_11794ChickenBridge.scm",(void*)f_11794},
{"f_11767ChickenBridge.scm",(void*)f_11767},
{"f_11221ChickenBridge.scm",(void*)f_11221},
{"f_11252ChickenBridge.scm",(void*)f_11252},
{"f_11716ChickenBridge.scm",(void*)f_11716},
{"f_11722ChickenBridge.scm",(void*)f_11722},
{"f_11263ChickenBridge.scm",(void*)f_11263},
{"f_11148ChickenBridge.scm",(void*)f_11148},
{"f_11173ChickenBridge.scm",(void*)f_11173},
{"f_11108ChickenBridge.scm",(void*)f_11108},
{"f_11121ChickenBridge.scm",(void*)f_11121},
{"f_11162ChickenBridge.scm",(void*)f_11162},
{"f_11267ChickenBridge.scm",(void*)f_11267},
{"f_11704ChickenBridge.scm",(void*)f_11704},
{"f_11700ChickenBridge.scm",(void*)f_11700},
{"f_11696ChickenBridge.scm",(void*)f_11696},
{"f_11270ChickenBridge.scm",(void*)f_11270},
{"f_11490ChickenBridge.scm",(void*)f_11490},
{"f_11599ChickenBridge.scm",(void*)f_11599},
{"f_11664ChickenBridge.scm",(void*)f_11664},
{"f_11606ChickenBridge.scm",(void*)f_11606},
{"f_11610ChickenBridge.scm",(void*)f_11610},
{"f_11614ChickenBridge.scm",(void*)f_11614},
{"f_11656ChickenBridge.scm",(void*)f_11656},
{"f_11652ChickenBridge.scm",(void*)f_11652},
{"f_11630ChickenBridge.scm",(void*)f_11630},
{"f_11493ChickenBridge.scm",(void*)f_11493},
{"f_11496ChickenBridge.scm",(void*)f_11496},
{"f_11395ChickenBridge.scm",(void*)f_11395},
{"f_11478ChickenBridge.scm",(void*)f_11478},
{"f_11445ChickenBridge.scm",(void*)f_11445},
{"f_11471ChickenBridge.scm",(void*)f_11471},
{"f_11453ChickenBridge.scm",(void*)f_11453},
{"f_11401ChickenBridge.scm",(void*)f_11401},
{"f_11441ChickenBridge.scm",(void*)f_11441},
{"f_11383ChickenBridge.scm",(void*)f_11383},
{"f_11354ChickenBridge.scm",(void*)f_11354},
{"f_11376ChickenBridge.scm",(void*)f_11376},
{"f_11362ChickenBridge.scm",(void*)f_11362},
{"f_11316ChickenBridge.scm",(void*)f_11316},
{"f_11273ChickenBridge.scm",(void*)f_11273},
{"f_11284ChickenBridge.scm",(void*)f_11284},
{"f_11288ChickenBridge.scm",(void*)f_11288},
{"f_11292ChickenBridge.scm",(void*)f_11292},
{"f_11296ChickenBridge.scm",(void*)f_11296},
{"f_11280ChickenBridge.scm",(void*)f_11280},
{"f_11240ChickenBridge.scm",(void*)f_11240},
{"f_11235ChickenBridge.scm",(void*)f_11235},
{"f_11230ChickenBridge.scm",(void*)f_11230},
{"f_11062ChickenBridge.scm",(void*)f_11062},
{"f_11073ChickenBridge.scm",(void*)f_11073},
{"f_11088ChickenBridge.scm",(void*)f_11088},
{"f_11024ChickenBridge.scm",(void*)f_11024},
{"f_11035ChickenBridge.scm",(void*)f_11035},
{"f_11050ChickenBridge.scm",(void*)f_11050},
{"f_10957ChickenBridge.scm",(void*)f_10957},
{"f_10977ChickenBridge.scm",(void*)f_10977},
{"f_10987ChickenBridge.scm",(void*)f_10987},
{"f_11000ChickenBridge.scm",(void*)f_11000},
{"f_10968ChickenBridge.scm",(void*)f_10968},
{"f_10975ChickenBridge.scm",(void*)f_10975},
{"f_10764ChickenBridge.scm",(void*)f_10764},
{"f_10824ChickenBridge.scm",(void*)f_10824},
{"f_10834ChickenBridge.scm",(void*)f_10834},
{"f_10948ChickenBridge.scm",(void*)f_10948},
{"f_10913ChickenBridge.scm",(void*)f_10913},
{"f_10905ChickenBridge.scm",(void*)f_10905},
{"f_10876ChickenBridge.scm",(void*)f_10876},
{"f_10854ChickenBridge.scm",(void*)f_10854},
{"f_10857ChickenBridge.scm",(void*)f_10857},
{"f_10845ChickenBridge.scm",(void*)f_10845},
{"f_10771ChickenBridge.scm",(void*)f_10771},
{"f_10822ChickenBridge.scm",(void*)f_10822},
{"f_10814ChickenBridge.scm",(void*)f_10814},
{"f_10774ChickenBridge.scm",(void*)f_10774},
{"f_10785ChickenBridge.scm",(void*)f_10785},
{"f_10789ChickenBridge.scm",(void*)f_10789},
{"f_10781ChickenBridge.scm",(void*)f_10781},
{"f_10622ChickenBridge.scm",(void*)f_10622},
{"f_10670ChickenBridge.scm",(void*)f_10670},
{"f_10680ChickenBridge.scm",(void*)f_10680},
{"f_10691ChickenBridge.scm",(void*)f_10691},
{"f_10728ChickenBridge.scm",(void*)f_10728},
{"f_10703ChickenBridge.scm",(void*)f_10703},
{"f_10694ChickenBridge.scm",(void*)f_10694},
{"f_10632ChickenBridge.scm",(void*)f_10632},
{"f_10668ChickenBridge.scm",(void*)f_10668},
{"f_10639ChickenBridge.scm",(void*)f_10639},
{"f_10271ChickenBridge.scm",(void*)f_10271},
{"f_10278ChickenBridge.scm",(void*)f_10278},
{"f_10512ChickenBridge.scm",(void*)f_10512},
{"f_10522ChickenBridge.scm",(void*)f_10522},
{"f_10533ChickenBridge.scm",(void*)f_10533},
{"f_10545ChickenBridge.scm",(void*)f_10545},
{"f_10548ChickenBridge.scm",(void*)f_10548},
{"f_10536ChickenBridge.scm",(void*)f_10536},
{"f_10284ChickenBridge.scm",(void*)f_10284},
{"f_10510ChickenBridge.scm",(void*)f_10510},
{"f_10506ChickenBridge.scm",(void*)f_10506},
{"f_10452ChickenBridge.scm",(void*)f_10452},
{"f_10417ChickenBridge.scm",(void*)f_10417},
{"f_10433ChickenBridge.scm",(void*)f_10433},
{"f_10388ChickenBridge.scm",(void*)f_10388},
{"f_10312ChickenBridge.scm",(void*)f_10312},
{"f_10315ChickenBridge.scm",(void*)f_10315},
{"f_10379ChickenBridge.scm",(void*)f_10379},
{"f_10375ChickenBridge.scm",(void*)f_10375},
{"f_10295ChickenBridge.scm",(void*)f_10295},
{"f_10306ChickenBridge.scm",(void*)f_10306},
{"f_10302ChickenBridge.scm",(void*)f_10302},
{"f_10224ChickenBridge.scm",(void*)f_10224},
{"f_10257ChickenBridge.scm",(void*)f_10257},
{"f_10239ChickenBridge.scm",(void*)f_10239},
{"f_10251ChickenBridge.scm",(void*)f_10251},
{"f_9842ChickenBridge.scm",(void*)f_9842},
{"f_10051ChickenBridge.scm",(void*)f_10051},
{"f_10061ChickenBridge.scm",(void*)f_10061},
{"f_10072ChickenBridge.scm",(void*)f_10072},
{"f_10192ChickenBridge.scm",(void*)f_10192},
{"f_10171ChickenBridge.scm",(void*)f_10171},
{"f_10150ChickenBridge.scm",(void*)f_10150},
{"f_10129ChickenBridge.scm",(void*)f_10129},
{"f_10108ChickenBridge.scm",(void*)f_10108},
{"f_10087ChickenBridge.scm",(void*)f_10087},
{"f_10075ChickenBridge.scm",(void*)f_10075},
{"f_9852ChickenBridge.scm",(void*)f_9852},
{"f_9855ChickenBridge.scm",(void*)f_9855},
{"f_10018ChickenBridge.scm",(void*)f_10018},
{"f_9858ChickenBridge.scm",(void*)f_9858},
{"f_10009ChickenBridge.scm",(void*)f_10009},
{"f_9989ChickenBridge.scm",(void*)f_9989},
{"f_9861ChickenBridge.scm",(void*)f_9861},
{"f_9954ChickenBridge.scm",(void*)f_9954},
{"f_9971ChickenBridge.scm",(void*)f_9971},
{"f_9864ChickenBridge.scm",(void*)f_9864},
{"f_9903ChickenBridge.scm",(void*)f_9903},
{"f_9937ChickenBridge.scm",(void*)f_9937},
{"f_9921ChickenBridge.scm",(void*)f_9921},
{"f_9906ChickenBridge.scm",(void*)f_9906},
{"f_9871ChickenBridge.scm",(void*)f_9871},
{"f_9882ChickenBridge.scm",(void*)f_9882},
{"f_9886ChickenBridge.scm",(void*)f_9886},
{"f_9878ChickenBridge.scm",(void*)f_9878},
{"f_9760ChickenBridge.scm",(void*)f_9760},
{"f_9764ChickenBridge.scm",(void*)f_9764},
{"f_9782ChickenBridge.scm",(void*)f_9782},
{"f_9600ChickenBridge.scm",(void*)f_9600},
{"f_9608ChickenBridge.scm",(void*)f_9608},
{"f_9618ChickenBridge.scm",(void*)f_9618},
{"f_9656ChickenBridge.scm",(void*)f_9656},
{"f_9659ChickenBridge.scm",(void*)f_9659},
{"f_9662ChickenBridge.scm",(void*)f_9662},
{"f_9737ChickenBridge.scm",(void*)f_9737},
{"f_9747ChickenBridge.scm",(void*)f_9747},
{"f_9665ChickenBridge.scm",(void*)f_9665},
{"f_9668ChickenBridge.scm",(void*)f_9668},
{"f_9671ChickenBridge.scm",(void*)f_9671},
{"f_9691ChickenBridge.scm",(void*)f_9691},
{"f_9701ChickenBridge.scm",(void*)f_9701},
{"f_9704ChickenBridge.scm",(void*)f_9704},
{"f_9707ChickenBridge.scm",(void*)f_9707},
{"f_9674ChickenBridge.scm",(void*)f_9674},
{"f_9677ChickenBridge.scm",(void*)f_9677},
{"f_9594ChickenBridge.scm",(void*)f_9594},
{"f_9588ChickenBridge.scm",(void*)f_9588},
{"f_9582ChickenBridge.scm",(void*)f_9582},
{"f_9511ChickenBridge.scm",(void*)f_9511},
{"f_9552ChickenBridge.scm",(void*)f_9552},
{"f_9556ChickenBridge.scm",(void*)f_9556},
{"f_9560ChickenBridge.scm",(void*)f_9560},
{"f_9564ChickenBridge.scm",(void*)f_9564},
{"f_9568ChickenBridge.scm",(void*)f_9568},
{"f_9572ChickenBridge.scm",(void*)f_9572},
{"f_9576ChickenBridge.scm",(void*)f_9576},
{"f_9580ChickenBridge.scm",(void*)f_9580},
{"f_9513ChickenBridge.scm",(void*)f_9513},
{"f_9519ChickenBridge.scm",(void*)f_9519},
{"f_9541ChickenBridge.scm",(void*)f_9541},
{"f_9530ChickenBridge.scm",(void*)f_9530},
{"f_9360ChickenBridge.scm",(void*)f_9360},
{"f_9375ChickenBridge.scm",(void*)f_9375},
{"f_9388ChickenBridge.scm",(void*)f_9388},
{"f_9348ChickenBridge.scm",(void*)f_9348},
{"f_9336ChickenBridge.scm",(void*)f_9336},
{"f_9324ChickenBridge.scm",(void*)f_9324},
{"f_9318ChickenBridge.scm",(void*)f_9318},
{"f_9312ChickenBridge.scm",(void*)f_9312},
{"f_9300ChickenBridge.scm",(void*)f_9300},
{"f_9288ChickenBridge.scm",(void*)f_9288},
{"f_9276ChickenBridge.scm",(void*)f_9276},
{"f_9264ChickenBridge.scm",(void*)f_9264},
{"f_9258ChickenBridge.scm",(void*)f_9258},
{"f_8949ChickenBridge.scm",(void*)f_8949},
{"f_9202ChickenBridge.scm",(void*)f_9202},
{"f_9235ChickenBridge.scm",(void*)f_9235},
{"f_9231ChickenBridge.scm",(void*)f_9231},
{"f_9220ChickenBridge.scm",(void*)f_9220},
{"f_9216ChickenBridge.scm",(void*)f_9216},
{"f_9110ChickenBridge.scm",(void*)f_9110},
{"f_9113ChickenBridge.scm",(void*)f_9113},
{"f_9116ChickenBridge.scm",(void*)f_9116},
{"f_9196ChickenBridge.scm",(void*)f_9196},
{"f_9021ChickenBridge.scm",(void*)f_9021},
{"f_8962ChickenBridge.scm",(void*)f_8962},
{"f_9119ChickenBridge.scm",(void*)f_9119},
{"f_9126ChickenBridge.scm",(void*)f_9126},
{"f_9186ChickenBridge.scm",(void*)f_9186},
{"f_9172ChickenBridge.scm",(void*)f_9172},
{"f_9138ChickenBridge.scm",(void*)f_9138},
{"f_9164ChickenBridge.scm",(void*)f_9164},
{"f_9099ChickenBridge.scm",(void*)f_9099},
{"f_9146ChickenBridge.scm",(void*)f_9146},
{"f_9142ChickenBridge.scm",(void*)f_9142},
{"f_8905ChickenBridge.scm",(void*)f_8905},
{"f_8939ChickenBridge.scm",(void*)f_8939},
{"f_8943ChickenBridge.scm",(void*)f_8943},
{"f_8947ChickenBridge.scm",(void*)f_8947},
{"f_8913ChickenBridge.scm",(void*)f_8913},
{"f_8931ChickenBridge.scm",(void*)f_8931},
{"f_8922ChickenBridge.scm",(void*)f_8922},
{"f_8930ChickenBridge.scm",(void*)f_8930},
{"f_8917ChickenBridge.scm",(void*)f_8917},
{"f_8861ChickenBridge.scm",(void*)f_8861},
{"f_8895ChickenBridge.scm",(void*)f_8895},
{"f_8899ChickenBridge.scm",(void*)f_8899},
{"f_8903ChickenBridge.scm",(void*)f_8903},
{"f_8869ChickenBridge.scm",(void*)f_8869},
{"f_8887ChickenBridge.scm",(void*)f_8887},
{"f_8878ChickenBridge.scm",(void*)f_8878},
{"f_8886ChickenBridge.scm",(void*)f_8886},
{"f_8873ChickenBridge.scm",(void*)f_8873},
{"f_8787ChickenBridge.scm",(void*)f_8787},
{"f_8791ChickenBridge.scm",(void*)f_8791},
{"f_8798ChickenBridge.scm",(void*)f_8798},
{"f_8800ChickenBridge.scm",(void*)f_8800},
{"f_8814ChickenBridge.scm",(void*)f_8814},
{"f_8827ChickenBridge.scm",(void*)f_8827},
{"f_8817ChickenBridge.scm",(void*)f_8817},
{"f_8701ChickenBridge.scm",(void*)f_8701},
{"f_8583ChickenBridge.scm",(void*)f_8583},
{"f_8589ChickenBridge.scm",(void*)f_8589},
{"f_8613ChickenBridge.scm",(void*)f_8613},
{"f_8599ChickenBridge.scm",(void*)f_8599},
{"f_8484ChickenBridge.scm",(void*)f_8484},
{"f_8488ChickenBridge.scm",(void*)f_8488},
{"f_8513ChickenBridge.scm",(void*)f_8513},
{"f_8530ChickenBridge.scm",(void*)f_8530},
{"f_8534ChickenBridge.scm",(void*)f_8534},
{"f_8490ChickenBridge.scm",(void*)f_8490},
{"f_8507ChickenBridge.scm",(void*)f_8507},
{"f_8322ChickenBridge.scm",(void*)f_8322},
{"f_8331ChickenBridge.scm",(void*)f_8331},
{"f_8369ChickenBridge.scm",(void*)f_8369},
{"f_8347ChickenBridge.scm",(void*)f_8347},
{"f_8232ChickenBridge.scm",(void*)f_8232},
{"f_8184ChickenBridge.scm",(void*)f_8184},
{"f_8218ChickenBridge.scm",(void*)f_8218},
{"f_8161ChickenBridge.scm",(void*)f_8161},
{"f_8155ChickenBridge.scm",(void*)f_8155},
{"f_8140ChickenBridge.scm",(void*)f_8140},
{"f_8126ChickenBridge.scm",(void*)f_8126},
{"f_8116ChickenBridge.scm",(void*)f_8116},
{"f_8106ChickenBridge.scm",(void*)f_8106},
{"f_8096ChickenBridge.scm",(void*)f_8096},
{"f_8086ChickenBridge.scm",(void*)f_8086},
{"f_8076ChickenBridge.scm",(void*)f_8076},
{"f_7184ChickenBridge.scm",(void*)f_7184},
{"f_8045ChickenBridge.scm",(void*)f_8045},
{"f_8055ChickenBridge.scm",(void*)f_8055},
{"f_8039ChickenBridge.scm",(void*)f_8039},
{"f_7142ChickenBridge.scm",(void*)f_7142},
{"f_8033ChickenBridge.scm",(void*)f_8033},
{"f_7780ChickenBridge.scm",(void*)f_7780},
{"f_7613ChickenBridge.scm",(void*)f_7613},
{"f_7622ChickenBridge.scm",(void*)f_7622},
{"f_7522ChickenBridge.scm",(void*)f_7522},
{"f_7502ChickenBridge.scm",(void*)f_7502},
{"f_7471ChickenBridge.scm",(void*)f_7471},
{"f_7468ChickenBridge.scm",(void*)f_7468},
{"f_7461ChickenBridge.scm",(void*)f_7461},
{"f_7458ChickenBridge.scm",(void*)f_7458},
{"f_7451ChickenBridge.scm",(void*)f_7451},
{"f_7433ChickenBridge.scm",(void*)f_7433},
{"f_7422ChickenBridge.scm",(void*)f_7422},
{"f_7419ChickenBridge.scm",(void*)f_7419},
{"f_7416ChickenBridge.scm",(void*)f_7416},
{"f_7413ChickenBridge.scm",(void*)f_7413},
{"f_7384ChickenBridge.scm",(void*)f_7384},
{"f_7377ChickenBridge.scm",(void*)f_7377},
{"f_7374ChickenBridge.scm",(void*)f_7374},
{"f_7353ChickenBridge.scm",(void*)f_7353},
{"f_7334ChickenBridge.scm",(void*)f_7334},
{"f_7315ChickenBridge.scm",(void*)f_7315},
{"f_7301ChickenBridge.scm",(void*)f_7301},
{"f_7294ChickenBridge.scm",(void*)f_7294},
{"f_7279ChickenBridge.scm",(void*)f_7279},
{"f_7268ChickenBridge.scm",(void*)f_7268},
{"f_7261ChickenBridge.scm",(void*)f_7261},
{"f_7207ChickenBridge.scm",(void*)f_7207},
{"f_7151ChickenBridge.scm",(void*)f_7151},
{"f_7156ChickenBridge.scm",(void*)f_7156},
{"f_7030ChickenBridge.scm",(void*)f_7030},
{"f_7024ChickenBridge.scm",(void*)f_7024},
{"f_7017ChickenBridge.scm",(void*)f_7017},
{"f_7011ChickenBridge.scm",(void*)f_7011},
{"f_7001ChickenBridge.scm",(void*)f_7001},
{"f_6981ChickenBridge.scm",(void*)f_6981},
{"f_6993ChickenBridge.scm",(void*)f_6993},
{"f_6975ChickenBridge.scm",(void*)f_6975},
{"f_6969ChickenBridge.scm",(void*)f_6969},
{"f_6963ChickenBridge.scm",(void*)f_6963},
{"f_6957ChickenBridge.scm",(void*)f_6957},
{"f_6951ChickenBridge.scm",(void*)f_6951},
{NULL,NULL}};
#endif

static C_PTABLE_ENTRY *create_ptable(void){
#ifdef C_ENABLE_PTABLES
return ptable;
#else
return NULL;
#endif
}
/* end of file */
